[package]
name = "sgx_tstd"
version = "1.0.8"
authors = ["Baidu"]
build = "build.rs"
repository = "https://github.com/baidu/rust-sgx-sdk"
license-file = "LICENSE"
documentation = "https://dingelish.github.io/"
description = "Rust SGX SDK provides the ability to write Intel SGX applications in Rust Programming Language."

include = [
    "LICENSE",
    "Readme.md",
    "libbacktrace/simple.c",
    "libbacktrace/filetype.awk",
    "libbacktrace/internal.h",
    "libbacktrace/ltmain.sh",
    "libbacktrace/backtrace_t.h",
    "libbacktrace/print.c",
    "libbacktrace/config.sub",
    "libbacktrace/posix.c",
    "libbacktrace/dwarf2.h",
    "libbacktrace/aclocal.m4",
    "libbacktrace/hashtab.h",
    "libbacktrace/pecoff.c",
    "libbacktrace/Makefile.in",
    "libbacktrace/unknown.c",
    "libbacktrace/mmap.c",
    "libbacktrace/install-sh",
    "libbacktrace/ChangeLog",
    "libbacktrace/README",
    "libbacktrace/ChangeLog.jit",
    "libbacktrace/Makefile.am",
    "libbacktrace/fileline.c",
    "libbacktrace/stest.c",
    "libbacktrace/backtrace.c",
    "libbacktrace/macho.c",
    "libbacktrace/configure.ac",
    "libbacktrace/nounwind.c",
    "libbacktrace/config.h.in",
    "libbacktrace/alloc.c",
    "libbacktrace/configure",
    "libbacktrace/state.c",
    "libbacktrace/mmapio.c",
    "libbacktrace/elf.c",
    "libbacktrace/dwarf2.def",
    "libbacktrace/btest.c",
    "libbacktrace/backtrace-supported.h.in",
    "libbacktrace/dwarf.c",
    "libbacktrace/read.c",
    "libbacktrace/ansidecl.h",
    "libbacktrace/sort.c",
    "libbacktrace/backtrace.h",
    "libbacktrace/filenames.h",
    "libbacktrace/atomic.c",
    "Cargo.toml",
    "src/panicking.rs",
    "src/sys_common/net.rs",
    "src/sys_common/mod.rs",
    "src/sys_common/poison.rs",
    "src/sys_common/gnu/mod.rs",
    "src/sys_common/gnu/libbacktrace.rs",
    "src/sys_common/bytestring.rs",
    "src/sys_common/at_exit_imp.rs",
    "src/sys_common/io.rs",
    "src/sys_common/backtrace.rs",
    "src/sys_common/memchr.rs",
    "src/sys_common/wtf8.rs",
    "src/sys_common/thread_info.rs",
    "src/panic.rs",
    "src/sgxfs.rs",
    "src/rand/reader.rs",
    "src/cpuid.rs",
    "src/collections/hash/mod.rs",
    "src/collections/hash/map.rs",
    "src/collections/hash/set.rs",
    "src/collections/hash/table.rs",
    "src/collections/mod.rs",
    "src/path.rs",
    "src/heap.rs",
    "src/sys/sgxfs.rs",
    "src/sys/net.rs",
    "src/sys/mod.rs",
    "src/sys/path.rs",
    "src/sys/pipe.rs",
    "src/sys/stdio.rs",
    "src/sys/time.rs",
    "src/sys/os.rs",
    "src/sys/os_str.rs",
    "src/sys/fs.rs",
    "src/sys/ext/net.rs",
    "src/sys/ext/mod.rs",
    "src/sys/ext/ffi.rs",
    "src/sys/ext/fs.rs",
    "src/sys/ext/io.rs",
    "src/sys/env.rs",
    "src/sys/memchr.rs",
    "src/sys/backtrace/tracing/mod.rs",
    "src/sys/backtrace/tracing/gcc_s.rs",
    "src/sys/backtrace/mod.rs",
    "src/sys/backtrace/printing/mod.rs",
    "src/sys/rand.rs",
    "src/sys/cmath.rs",
    "src/sys/fd.rs",
    "src/num.rs",
    "src/ascii.rs",
    "src/net/parser.rs",
    "src/net/mod.rs",
    "src/net/addr.rs",
    "src/net/ip.rs",
    "src/net/tcp.rs",
    "src/net/udp.rs",
    "src/rt.rs",
    "src/error.rs",
    "src/f64.rs",
    "src/fs.rs",
    "src/untrusted/mod.rs",
    "src/untrusted/path.rs",
    "src/untrusted/time.rs",
    "src/untrusted/fs.rs",
    "src/thread/mod.rs",
    "src/thread/local.rs",
    "src/time.rs",
    "src/backtrace.rs",
    "src/ffi/mod.rs",
    "src/ffi/c_str.rs",
    "src/ffi/os_str.rs",
    "src/macros.rs",
    "src/env.rs",
    "src/memchr.rs",
    "src/io/util.rs",
    "src/io/mod.rs",
    "src/io/impls.rs",
    "src/io/buffered.rs",
    "src/io/stdio.rs",
    "src/io/cursor.rs",
    "src/io/error.rs",
    "src/io/prelude.rs",
    "src/io/lazy.rs",
    "src/os/mod.rs",
    "src/os/raw.rs",
    "src/os/fs.rs",
    "src/lib.rs",
    "src/prelude/mod.rs",
    "src/prelude/v1.rs",
    "src/sync/condvar.rs",
    "src/sync/spinlock.rs",
    "src/sync/mod.rs",
    "src/sync/rwlock.rs",
    "src/sync/barrier.rs",
    "src/sync/once.rs",
    "src/sync/mutex.rs",
    "src/sync/remutex.rs",
    "src/enclave.rs",
    "src/f32.rs",
    "src/debug.rs",
    "build.rs",
]

[lib]
name = "sgx_tstd"
crate-type = ["rlib"]

[features]
default = ["stdio"]
backtrace = ["stdio"]
stdio = []
net = []
pipe = []
untrusted_fs = []
untrusted_time = []

[build-dependencies]
sgx_build_helper = { path = "../sgx_build_helper" }

[target.'cfg(not(target_env = "sgx"))'.dependencies]
sgx_types = { path = "../sgx_types" }
sgx_libc = { path = "../sgx_libc" }
sgx_trts = { path = "../sgx_trts" }
sgx_alloc = { path = "../sgx_alloc" }
sgx_tprotected_fs = { path = "../sgx_tprotected_fs" }
sgx_unwind = { path = "../sgx_unwind" }
