# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

---
- name: Azure DCAP Client | Include vars
  include_vars: "{{ ansible_os_family | lower }}.yml"

- name: Azure DCAP Client | Check for existing required folders
  win_stat:
    path: "{{ item }}"
  with_items: "{{ validation_directories }}"
  register: directory
  failed_when: directory.stat.isdir == False

- name: Azure DCAP Client | Check for existing required executables and files
  win_stat:
    path: "{{ item }}"
  with_items: "{{ validation_binaries }}"
  register: file
  failed_when: file.stat.isreg == False

- name: Azure DCAP Client | Check for the LC driver registry key
  win_reg_stat:
    path: '{{ lc_driver.reg_path }}'
    name: '{{ lc_driver.reg_key }}'
  register: reg_key
  failed_when: reg_key.value != 1
  when: dcap_testing_node is defined and dcap_testing_node == 'true'

- name: Azure DCAP Client | Download devcon.exe
  win_get_url:
    url: "{{ devcon_bin_url }}"
    dest: "{{ tmp_dir }}\\devcon.exe"
    timeout: 60
  retries: 3

- name: Azure DCAP Client | Check if Sgx* drivers are installed
  win_shell: "{{ tmp_dir }}\\devcon.exe find '{{ item }}'"
  register: result
  failed_when: result.stdout.find('1 matching device(s) found.') == -1
  with_items:
    - 'root\SgxLCDevice'
    - 'root\SgxLCDevice_DCAP'
  when: dcap_testing_node is defined and dcap_testing_node == 'true'

- name: Azure DCAP Client | Remove temp devcon.exe
  win_file:
    state: absent
    path: "{{ tmp_dir }}\\devcon.exe"

- name: Azure DCAP Client | Check if Intel SGX is installed
  win_shell: '(Get-CimInstance -ClassName Win32_Product -Filter "Name=''IntelÂ® Software Guard Extensions Platform Software''") -eq $null'
  register: result
  failed_when: result.stdout == "True\r\n"
