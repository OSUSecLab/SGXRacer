--- ./crypto/ts/ts_conf.c	2017-11-28 10:46:51.996404519 +0000
+++ ../talos/./crypto/ts/ts_conf.c	2017-07-17 11:08:32.257409376 +0100
@@ -94,6 +94,13 @@
 
 /* Function definitions for certificate and key loading. */
 
+#ifdef COMPILE_WITH_INTEL_SGX
+extern int my_fprintf(FILE *stream, const char *format, ...);
+#else
+#define my_fprintf(stream, format, ...) fprintf(stream, format, __VA_ARGS__)
+#endif
+
+
 X509 *
 TS_CONF_load_cert(const char *file)
 {
@@ -106,7 +113,7 @@
 
 end:
 	if (x == NULL)
-		fprintf(stderr, "unable to load certificate: %s\n", file);
+		my_fprintf(stderr, "unable to load certificate: %s\n", file);
 	BIO_free(cert);
 	return x;
 }
@@ -139,7 +146,7 @@
 
 end:
 	if (othercerts == NULL)
-		fprintf(stderr, "unable to load certificates: %s\n", file);
+		my_fprintf(stderr, "unable to load certificates: %s\n", file);
 	sk_X509_INFO_pop_free(allcerts, X509_INFO_free);
 	BIO_free(certs);
 	return othercerts;
@@ -157,7 +164,7 @@
 
 end:
 	if (pkey == NULL)
-		fprintf(stderr, "unable to load private key: %s\n", file);
+		my_fprintf(stderr, "unable to load private key: %s\n", file);
 	BIO_free(key);
 	return pkey;
 }
@@ -167,13 +174,13 @@
 static void
 TS_CONF_lookup_fail(const char *name, const char *tag)
 {
-	fprintf(stderr, "variable lookup failed for %s::%s\n", name, tag);
+	my_fprintf(stderr, "variable lookup failed for %s::%s\n", name, tag);
 }
 
 static void
 TS_CONF_invalid(const char *name, const char *tag)
 {
-	fprintf(stderr, "invalid variable value for %s::%s\n", name, tag);
+	my_fprintf(stderr, "invalid variable value for %s::%s\n", name, tag);
 }
 
 const char *
