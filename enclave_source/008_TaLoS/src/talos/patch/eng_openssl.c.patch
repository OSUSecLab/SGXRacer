--- ./crypto/engine/eng_openssl.c	2017-11-28 10:46:51.996404519 +0000
+++ ../talos/./crypto/engine/eng_openssl.c	2017-07-17 11:08:32.229409910 +0100
@@ -237,13 +237,19 @@
 	RC4_KEY ks;
 } TEST_RC4_KEY;
 
+#ifdef COMPILE_WITH_INTEL_SGX
+extern int my_fprintf(FILE *stream, const char *format, ...);
+#else
+#define my_fprintf(stream, format, ...) fprintf(stream, format, ##__VA_ARGS__)
+#endif
+
 #define test(ctx) ((TEST_RC4_KEY *)(ctx)->cipher_data)
 static int
 test_rc4_init_key(EVP_CIPHER_CTX *ctx, const unsigned char *key,
     const unsigned char *iv, int enc)
 {
 #ifdef TEST_ENG_OPENSSL_RC4_P_INIT
-	fprintf(stderr, "(TEST_ENG_OPENSSL_RC4) test_init_key() called\n");
+	my_fprintf(stderr, "(TEST_ENG_OPENSSL_RC4) test_init_key() called\n");
 #endif
 	memcpy(&test(ctx)->key[0], key, EVP_CIPHER_CTX_key_length(ctx));
 	RC4_set_key(&test(ctx)->ks, EVP_CIPHER_CTX_key_length(ctx),
@@ -256,7 +262,7 @@
     const unsigned char *in, size_t inl)
 {
 #ifdef TEST_ENG_OPENSSL_RC4_P_CIPHER
-	fprintf(stderr, "(TEST_ENG_OPENSSL_RC4) test_cipher() called\n");
+	my_fprintf(stderr, "(TEST_ENG_OPENSSL_RC4) test_cipher() called\n");
 #endif
 	RC4(&test(ctx)->ks, inl, in, out);
 	return 1;
@@ -305,7 +311,7 @@
 		*cipher = &test_r4_40_cipher;
 	else {
 #ifdef TEST_ENG_OPENSSL_RC4_OTHERS
-		fprintf(stderr, "(TEST_ENG_OPENSSL_RC4) returning NULL for "
+		my_fprintf(stderr, "(TEST_ENG_OPENSSL_RC4) returning NULL for "
 		    "nid %d\n", nid);
 #endif
 		*cipher = NULL;
@@ -325,7 +331,7 @@
 test_sha1_init(EVP_MD_CTX *ctx)
 {
 #ifdef TEST_ENG_OPENSSL_SHA_P_INIT
-	fprintf(stderr, "(TEST_ENG_OPENSSL_SHA) test_sha1_init() called\n");
+	my_fprintf(stderr, "(TEST_ENG_OPENSSL_SHA) test_sha1_init() called\n");
 #endif
 	return SHA1_Init(ctx->md_data);
 }
@@ -334,7 +340,7 @@
 test_sha1_update(EVP_MD_CTX *ctx, const void *data, size_t count)
 {
 #ifdef TEST_ENG_OPENSSL_SHA_P_UPDATE
-	fprintf(stderr, "(TEST_ENG_OPENSSL_SHA) test_sha1_update() called\n");
+	my_fprintf(stderr, "(TEST_ENG_OPENSSL_SHA) test_sha1_update() called\n");
 #endif
 	return SHA1_Update(ctx->md_data, data, count);
 }
@@ -343,7 +349,7 @@
 test_sha1_final(EVP_MD_CTX *ctx, unsigned char *md)
 {
 #ifdef TEST_ENG_OPENSSL_SHA_P_FINAL
-	fprintf(stderr, "(TEST_ENG_OPENSSL_SHA) test_sha1_final() called\n");
+	my_fprintf(stderr, "(TEST_ENG_OPENSSL_SHA) test_sha1_final() called\n");
 #endif
 	return SHA1_Final(md, ctx->md_data);
 }
@@ -376,7 +382,7 @@
 		*digest = &test_sha_md;
 	else {
 #ifdef TEST_ENG_OPENSSL_SHA_OTHERS
-		fprintf(stderr, "(TEST_ENG_OPENSSL_SHA) returning NULL for "
+		my_fprintf(stderr, "(TEST_ENG_OPENSSL_SHA) returning NULL for "
 		    "nid %d\n", nid);
 #endif
 		*digest = NULL;
@@ -394,7 +400,7 @@
 	BIO *in;
 	EVP_PKEY *key;
 
-	fprintf(stderr, "(TEST_ENG_OPENSSL_PKEY)Loading Private key %s\n",
+	my_fprintf(stderr, "(TEST_ENG_OPENSSL_PKEY)Loading Private key %s\n",
 	    key_id);
 	in = BIO_new_file(key_id, "r");
 	if (!in)
