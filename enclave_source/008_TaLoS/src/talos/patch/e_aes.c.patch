--- ./crypto/evp/e_aes.c	2019-09-04 14:50:24.046778140 +0900
+++ ../talos/./crypto/evp/e_aes.c	2019-09-04 14:49:11.954300288 +0900
@@ -62,6 +62,10 @@
 #include "evp_locl.h"
 #include "modes_lcl.h"
 
+#ifdef COMPILE_WITH_INTEL_SGX
+#include "enclaveshim_config.h"
+#endif
+
 typedef struct {
 	AES_KEY ks;
 	block128_f block;
@@ -161,7 +165,12 @@
 /*
  * AES-NI section
  */
+#ifdef SQUID_WORKAROUND
+//force the activation of AES-NI with Squid
+#define	AESNI_CAPABLE	(1)
+#else
 #define	AESNI_CAPABLE	(OPENSSL_ia32cap_P[1]&(1<<(57-32)))
+#endif
 
 int aesni_set_encrypt_key(const unsigned char *userKey, int bits,
     AES_KEY *key);
@@ -690,7 +699,7 @@
 
 	if (gctx->iv != c->iv)
 		free(gctx->iv);
-	explicit_bzero(gctx, sizeof(*gctx));
+	bzero(gctx, sizeof(*gctx));
 	return 1;
 }
 
@@ -972,7 +981,7 @@
 
 		/* If tag mismatch wipe buffer */
 		if (memcmp(ctx->buf, in + len, EVP_GCM_TLS_TAG_LEN)) {
-			explicit_bzero(out, len);
+			bzero(out, len);
 			goto err;
 		}
 		rv = len;
@@ -1339,7 +1348,7 @@
 			}
 		}
 		if (rv == -1)
-			explicit_bzero(out, len);
+			bzero(out, len);
 		cctx->iv_set = 0;
 		cctx->tag_set = 0;
 		cctx->len_set = 0;
@@ -1417,7 +1426,7 @@
 {
 	struct aead_aes_gcm_ctx *gcm_ctx = ctx->aead_state;
 
-	explicit_bzero(gcm_ctx, sizeof(*gcm_ctx));
+	bzero(gcm_ctx, sizeof(*gcm_ctx));
 	free(gcm_ctx);
 }
 
