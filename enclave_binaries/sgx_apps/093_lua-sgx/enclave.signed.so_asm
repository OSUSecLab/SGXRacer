
/home/sanchuan/pg/f/sgxrace/enclave_binaries/sgx_apps/093_lua-sgx/enclave.signed.so:     file format elf64-x86-64


Disassembly of section .plt:

00000000000006b0 <.plt>:
 6b0:	ff 35 52 19 22 00    	pushq  0x221952(%rip)        # 222008 <_GLOBAL_OFFSET_TABLE_+0x8>
 6b6:	ff 25 54 19 22 00    	jmpq   *0x221954(%rip)        # 222010 <_GLOBAL_OFFSET_TABLE_+0x10>
 6bc:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

00000000000006c0 <.plt.got>:
 6c0:	ff 25 2a 19 22 00    	jmpq   *0x22192a(%rip)        # 221ff0 <_DYNAMIC+0x1a0>
 6c6:	66 90                	xchg   %ax,%ax
 6c8:	ff 25 2a 19 22 00    	jmpq   *0x22192a(%rip)        # 221ff8 <_DYNAMIC+0x1a8>
 6ce:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000700 <sgx_ecall_main_entry>:
     700:	55                   	push   %rbp
     701:	48 89 e5             	mov    %rsp,%rbp
     704:	48 83 ec 20          	sub    $0x20,%rsp
     708:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
     70c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
     711:	74 15                	je     728 <sgx_ecall_main_entry+0x28>
     713:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     717:	be 04 00 00 00       	mov    $0x4,%esi
     71c:	48 89 c7             	mov    %rax,%rdi
     71f:	e8 ed 02 00 00       	callq  a11 <sgx_is_outside_enclave>
     724:	85 c0                	test   %eax,%eax
     726:	75 07                	jne    72f <sgx_ecall_main_entry+0x2f>
     728:	b8 02 00 00 00       	mov    $0x2,%eax
     72d:	eb 22                	jmp    751 <sgx_ecall_main_entry+0x51>
     72f:	0f ae e8             	lfence 
     732:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     736:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     73a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
     741:	e8 0d 00 00 00       	callq  753 <ecall_main_entry>
     746:	89 c2                	mov    %eax,%edx
     748:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     74c:	89 10                	mov    %edx,(%rax)
     74e:	8b 45 f4             	mov    -0xc(%rbp),%eax
     751:	c9                   	leaveq 
     752:	c3                   	retq   

0000000000000753 <ecall_main_entry>:
     753:	55                   	push   %rbp
     754:	48 89 e5             	mov    %rsp,%rbp
     757:	90                   	nop
     758:	5d                   	pop    %rbp
     759:	c3                   	retq   

000000000000075a <rand>:
     75a:	55                   	push   %rbp
     75b:	48 89 e5             	mov    %rsp,%rbp
     75e:	48 83 ec 10          	sub    $0x10,%rsp
     762:	48 8d 45 fc          	lea    -0x4(%rbp),%rax
     766:	be 04 00 00 00       	mov    $0x4,%esi
     76b:	48 89 c7             	mov    %rax,%rdi
     76e:	e8 d4 04 00 00       	callq  c47 <sgx_read_rand>
     773:	8b 45 fc             	mov    -0x4(%rbp),%eax
     776:	c9                   	leaveq 
     777:	c3                   	retq   

0000000000000778 <srand>:
     778:	55                   	push   %rbp
     779:	48 89 e5             	mov    %rsp,%rbp
     77c:	89 7d fc             	mov    %edi,-0x4(%rbp)
     77f:	90                   	nop
     780:	5d                   	pop    %rbp
     781:	c3                   	retq   

0000000000000782 <_ZL28set_global_feature_indicatormm>:
     782:	55                   	push   %rbp
     783:	48 89 e5             	mov    %rsp,%rbp
     786:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
     78a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
     78e:	48 b8 00 00 00 00 00 	movabs $0xff00000000000000,%rax
     795:	00 00 ff 
     798:	48 23 45 f8          	and    -0x8(%rbp),%rax
     79c:	48 85 c0             	test   %rax,%rax
     79f:	74 0e                	je     7af <_ZL28set_global_feature_indicatormm+0x2d>
     7a1:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffff,%rax
     7a8:	ff ff 00 
     7ab:	48 21 45 f8          	and    %rax,-0x8(%rbp)
     7af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     7b3:	48 25 00 fe ff ff    	and    $0xfffffffffffffe00,%rax
     7b9:	48 85 c0             	test   %rax,%rax
     7bc:	75 0a                	jne    7c8 <_ZL28set_global_feature_indicatormm+0x46>
     7be:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
     7c3:	e9 02 01 00 00       	jmpq   8ca <_ZL28set_global_feature_indicatormm+0x148>
     7c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     7cc:	83 e0 20             	and    $0x20,%eax
     7cf:	48 85 c0             	test   %rax,%rax
     7d2:	74 11                	je     7e5 <_ZL28set_global_feature_indicatormm+0x63>
     7d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     7d8:	83 e0 1f             	and    $0x1f,%eax
     7db:	48 83 f8 1f          	cmp    $0x1f,%rax
     7df:	0f 85 8f 00 00 00    	jne    874 <_ZL28set_global_feature_indicatormm+0xf2>
     7e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     7e9:	83 e0 40             	and    $0x40,%eax
     7ec:	48 85 c0             	test   %rax,%rax
     7ef:	74 0d                	je     7fe <_ZL28set_global_feature_indicatormm+0x7c>
     7f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     7f5:	83 e0 3f             	and    $0x3f,%eax
     7f8:	48 83 f8 3f          	cmp    $0x3f,%rax
     7fc:	75 76                	jne    874 <_ZL28set_global_feature_indicatormm+0xf2>
     7fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     802:	25 80 00 00 00       	and    $0x80,%eax
     807:	48 85 c0             	test   %rax,%rax
     80a:	74 0d                	je     819 <_ZL28set_global_feature_indicatormm+0x97>
     80c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     810:	83 e0 7f             	and    $0x7f,%eax
     813:	48 83 f8 7f          	cmp    $0x7f,%rax
     817:	75 5b                	jne    874 <_ZL28set_global_feature_indicatormm+0xf2>
     819:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     81d:	25 00 01 00 00       	and    $0x100,%eax
     822:	48 85 c0             	test   %rax,%rax
     825:	74 0f                	je     836 <_ZL28set_global_feature_indicatormm+0xb4>
     827:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     82b:	0f b6 c0             	movzbl %al,%eax
     82e:	48 3d ff 00 00 00    	cmp    $0xff,%rax
     834:	75 3e                	jne    874 <_ZL28set_global_feature_indicatormm+0xf2>
     836:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     83a:	25 00 02 00 00       	and    $0x200,%eax
     83f:	48 85 c0             	test   %rax,%rax
     842:	74 11                	je     855 <_ZL28set_global_feature_indicatormm+0xd3>
     844:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     848:	25 ff 01 00 00       	and    $0x1ff,%eax
     84d:	48 3d ff 01 00 00    	cmp    $0x1ff,%rax
     853:	75 1f                	jne    874 <_ZL28set_global_feature_indicatormm+0xf2>
     855:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     859:	25 00 04 00 00       	and    $0x400,%eax
     85e:	48 85 c0             	test   %rax,%rax
     861:	74 18                	je     87b <_ZL28set_global_feature_indicatormm+0xf9>
     863:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     867:	25 ff 03 00 00       	and    $0x3ff,%eax
     86c:	48 3d ff 03 00 00    	cmp    $0x3ff,%rax
     872:	74 07                	je     87b <_ZL28set_global_feature_indicatormm+0xf9>
     874:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
     879:	eb 4f                	jmp    8ca <_ZL28set_global_feature_indicatormm+0x148>
     87b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     87f:	83 e0 06             	and    $0x6,%eax
     882:	48 83 f8 06          	cmp    $0x6,%rax
     886:	74 10                	je     898 <_ZL28set_global_feature_indicatormm+0x116>
     888:	48 b8 ff 7f 12 86 08 	movabs $0xfffe200886127fff,%rax
     88f:	20 fe ff 
     892:	48 21 45 f8          	and    %rax,-0x8(%rbp)
     896:	eb 1f                	jmp    8b7 <_ZL28set_global_feature_indicatormm+0x135>
     898:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     89c:	25 e0 00 00 00       	and    $0xe0,%eax
     8a1:	48 3d e0 00 00 00    	cmp    $0xe0,%rax
     8a7:	74 0e                	je     8b7 <_ZL28set_global_feature_indicatormm+0x135>
     8a9:	48 b8 ff ff ff b6 18 	movabs $0xfffee018b6ffffff,%rax
     8b0:	e0 fe ff 
     8b3:	48 21 45 f8          	and    %rax,-0x8(%rbp)
     8b7:	48 8d 05 5a 15 22 00 	lea    0x22155a(%rip),%rax        # 221e18 <g_cpu_feature_indicator>
     8be:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
     8c2:	48 89 10             	mov    %rdx,(%rax)
     8c5:	b8 00 00 00 00       	mov    $0x0,%eax
     8ca:	5d                   	pop    %rbp
     8cb:	c3                   	retq   

00000000000008cc <init_optimized_libs>:
     8cc:	55                   	push   %rbp
     8cd:	48 89 e5             	mov    %rsp,%rbp
     8d0:	48 83 ec 20          	sub    $0x20,%rsp
     8d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
     8d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
     8dc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
     8e0:	48 8d 05 1d 20 22 00 	lea    0x22201d(%rip),%rax        # 222904 <g_enclave_state>
     8e7:	8b 00                	mov    (%rax),%eax
     8e9:	83 f8 01             	cmp    $0x1,%eax
     8ec:	74 07                	je     8f5 <init_optimized_libs+0x29>
     8ee:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
     8f3:	eb 73                	jmp    968 <init_optimized_libs+0x9c>
     8f5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
     8f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     8fd:	48 89 d6             	mov    %rdx,%rsi
     900:	48 89 c7             	mov    %rax,%rdi
     903:	e8 7a fe ff ff       	callq  782 <_ZL28set_global_feature_indicatormm>
     908:	85 c0                	test   %eax,%eax
     90a:	0f 95 c0             	setne  %al
     90d:	84 c0                	test   %al,%al
     90f:	74 07                	je     918 <init_optimized_libs+0x4c>
     911:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
     916:	eb 50                	jmp    968 <init_optimized_libs+0x9c>
     918:	48 8d 05 f9 14 22 00 	lea    0x2214f9(%rip),%rax        # 221e18 <g_cpu_feature_indicator>
     91f:	48 8b 00             	mov    (%rax),%rax
     922:	48 89 c7             	mov    %rax,%rdi
     925:	e8 89 e1 00 00       	callq  eab3 <sgx_init_string_lib>
     92a:	85 c0                	test   %eax,%eax
     92c:	0f 95 c0             	setne  %al
     92f:	84 c0                	test   %al,%al
     931:	74 07                	je     93a <init_optimized_libs+0x6e>
     933:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
     938:	eb 2e                	jmp    968 <init_optimized_libs+0x9c>
     93a:	48 8d 05 d7 14 22 00 	lea    0x2214d7(%rip),%rax        # 221e18 <g_cpu_feature_indicator>
     941:	48 8b 00             	mov    (%rax),%rax
     944:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
     948:	48 89 d6             	mov    %rdx,%rsi
     94b:	48 89 c7             	mov    %rax,%rdi
     94e:	e8 21 cc 01 00       	callq  1d574 <sgx_init_crypto_lib>
     953:	85 c0                	test   %eax,%eax
     955:	0f 95 c0             	setne  %al
     958:	84 c0                	test   %al,%al
     95a:	74 07                	je     963 <init_optimized_libs+0x97>
     95c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
     961:	eb 05                	jmp    968 <init_optimized_libs+0x9c>
     963:	b8 00 00 00 00       	mov    $0x0,%eax
     968:	c9                   	leaveq 
     969:	c3                   	retq   

000000000000096a <trts_access_version_dummy1>:
     96a:	55                   	push   %rbp
     96b:	48 89 e5             	mov    %rsp,%rbp
     96e:	48 8d 05 bb 16 22 00 	lea    0x2216bb(%rip),%rax        # 222030 <sgx_trts_version>
     975:	c6 00 73             	movb   $0x73,(%rax)
     978:	48 8d 05 b1 16 22 00 	lea    0x2216b1(%rip),%rax        # 222030 <sgx_trts_version>
     97f:	5d                   	pop    %rbp
     980:	c3                   	retq   

0000000000000981 <sgx_is_within_enclave>:
     981:	55                   	push   %rbp
     982:	48 89 e5             	mov    %rsp,%rbp
     985:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
     989:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
     98d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     991:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
     995:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
     99c:	00 
     99d:	48 8b 05 3c 16 22 00 	mov    0x22163c(%rip),%rax        # 221fe0 <_DYNAMIC+0x190>
     9a4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     9a8:	48 8d 05 d1 e3 01 00 	lea    0x1e3d1(%rip),%rax        # 1ed80 <g_global_data>
     9af:	48 8b 10             	mov    (%rax),%rdx
     9b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     9b6:	48 01 d0             	add    %rdx,%rax
     9b9:	48 83 e8 01          	sub    $0x1,%rax
     9bd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     9c1:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
     9c6:	74 15                	je     9dd <sgx_is_within_enclave+0x5c>
     9c8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
     9cc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     9d0:	48 01 d0             	add    %rdx,%rax
     9d3:	48 83 e8 01          	sub    $0x1,%rax
     9d7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
     9db:	eb 08                	jmp    9e5 <sgx_is_within_enclave+0x64>
     9dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     9e1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
     9e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     9e9:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
     9ed:	77 1b                	ja     a0a <sgx_is_within_enclave+0x89>
     9ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     9f3:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
     9f7:	72 11                	jb     a0a <sgx_is_within_enclave+0x89>
     9f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     9fd:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
     a01:	77 07                	ja     a0a <sgx_is_within_enclave+0x89>
     a03:	b8 01 00 00 00       	mov    $0x1,%eax
     a08:	eb 05                	jmp    a0f <sgx_is_within_enclave+0x8e>
     a0a:	b8 00 00 00 00       	mov    $0x0,%eax
     a0f:	5d                   	pop    %rbp
     a10:	c3                   	retq   

0000000000000a11 <sgx_is_outside_enclave>:
     a11:	55                   	push   %rbp
     a12:	48 89 e5             	mov    %rsp,%rbp
     a15:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
     a19:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
     a1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     a21:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
     a25:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
     a2c:	00 
     a2d:	48 8b 05 ac 15 22 00 	mov    0x2215ac(%rip),%rax        # 221fe0 <_DYNAMIC+0x190>
     a34:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     a38:	48 8d 05 41 e3 01 00 	lea    0x1e341(%rip),%rax        # 1ed80 <g_global_data>
     a3f:	48 8b 10             	mov    (%rax),%rdx
     a42:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     a46:	48 01 d0             	add    %rdx,%rax
     a49:	48 83 e8 01          	sub    $0x1,%rax
     a4d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     a51:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
     a56:	74 15                	je     a6d <sgx_is_outside_enclave+0x5c>
     a58:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
     a5c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     a60:	48 01 d0             	add    %rdx,%rax
     a63:	48 83 e8 01          	sub    $0x1,%rax
     a67:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
     a6b:	eb 08                	jmp    a75 <sgx_is_outside_enclave+0x64>
     a6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     a71:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
     a75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     a79:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
     a7d:	77 1b                	ja     a9a <sgx_is_outside_enclave+0x89>
     a7f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     a83:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
     a87:	72 0a                	jb     a93 <sgx_is_outside_enclave+0x82>
     a89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     a8d:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
     a91:	76 07                	jbe    a9a <sgx_is_outside_enclave+0x89>
     a93:	b8 01 00 00 00       	mov    $0x1,%eax
     a98:	eb 05                	jmp    a9f <sgx_is_outside_enclave+0x8e>
     a9a:	b8 00 00 00 00       	mov    $0x0,%eax
     a9f:	5d                   	pop    %rbp
     aa0:	c3                   	retq   

0000000000000aa1 <sgx_ocalloc>:
     aa1:	55                   	push   %rbp
     aa2:	48 89 e5             	mov    %rsp,%rbp
     aa5:	48 83 ec 40          	sub    $0x40,%rsp
     aa9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
     aad:	e8 1b d7 01 00       	callq  1e1cd <get_thread_data>
     ab2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     ab6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     aba:	48 8b 40 20          	mov    0x20(%rax),%rax
     abe:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
     ac2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     ac6:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
     acd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
     ad1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     ad5:	be 08 00 00 00       	mov    $0x8,%esi
     ada:	48 89 c7             	mov    %rax,%rdi
     add:	e8 2f ff ff ff       	callq  a11 <sgx_is_outside_enclave>
     ae2:	85 c0                	test   %eax,%eax
     ae4:	0f 94 c0             	sete   %al
     ae7:	84 c0                	test   %al,%al
     ae9:	74 05                	je     af0 <sgx_ocalloc+0x4f>
     aeb:	e8 d9 d9 01 00       	callq  1e4c9 <abort>
     af0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     af4:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
     af8:	73 05                	jae    aff <sgx_ocalloc+0x5e>
     afa:	e8 ca d9 01 00       	callq  1e4c9 <abort>
     aff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     b03:	48 29 45 e8          	sub    %rax,-0x18(%rbp)
     b07:	48 83 65 e8 f0       	andq   $0xfffffffffffffff0,-0x18(%rbp)
     b0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     b10:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
     b14:	48 89 d6             	mov    %rdx,%rsi
     b17:	48 89 c7             	mov    %rax,%rdi
     b1a:	e8 f2 fe ff ff       	callq  a11 <sgx_is_outside_enclave>
     b1f:	85 c0                	test   %eax,%eax
     b21:	0f 94 c0             	sete   %al
     b24:	84 c0                	test   %al,%al
     b26:	74 05                	je     b2d <sgx_ocalloc+0x8c>
     b28:	e8 9c d9 01 00       	callq  1e4c9 <abort>
     b2d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     b31:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
     b38:	48 83 e8 01          	sub    $0x1,%rax
     b3c:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
     b42:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     b46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     b4a:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
     b50:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     b54:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
     b59:	75 05                	jne    b60 <sgx_ocalloc+0xbf>
     b5b:	e8 69 d9 01 00       	callq  1e4c9 <abort>
     b60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     b64:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     b68:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     b6c:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
     b70:	0f 93 c0             	setae  %al
     b73:	84 c0                	test   %al,%al
     b75:	74 26                	je     b9d <sgx_ocalloc+0xfc>
     b77:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
     b7b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     b7f:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
     b86:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     b8a:	c6 00 00             	movb   $0x0,(%rax)
     b8d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     b91:	48 2d 00 10 00 00    	sub    $0x1000,%rax
     b97:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     b9b:	eb cb                	jmp    b68 <sgx_ocalloc+0xc7>
     b9d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     ba1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
     ba5:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
     bac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     bb0:	c9                   	leaveq 
     bb1:	c3                   	retq   

0000000000000bb2 <sgx_ocfree>:
     bb2:	55                   	push   %rbp
     bb3:	48 89 e5             	mov    %rsp,%rbp
     bb6:	48 83 ec 20          	sub    $0x20,%rsp
     bba:	e8 0e d6 01 00       	callq  1e1cd <get_thread_data>
     bbf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
     bc3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     bc7:	48 8b 40 20          	mov    0x20(%rax),%rax
     bcb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
     bcf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     bd3:	48 8b 40 08          	mov    0x8(%rax),%rax
     bd7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     bdb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     bdf:	48 8b 40 e8          	mov    -0x18(%rax),%rax
     be3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     be7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     beb:	be 08 00 00 00       	mov    $0x8,%esi
     bf0:	48 89 c7             	mov    %rax,%rdi
     bf3:	e8 19 fe ff ff       	callq  a11 <sgx_is_outside_enclave>
     bf8:	85 c0                	test   %eax,%eax
     bfa:	0f 94 c0             	sete   %al
     bfd:	84 c0                	test   %al,%al
     bff:	74 05                	je     c06 <sgx_ocfree+0x54>
     c01:	e8 c3 d8 01 00       	callq  1e4c9 <abort>
     c06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     c0a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
     c0e:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
     c15:	90                   	nop
     c16:	c9                   	leaveq 
     c17:	c3                   	retq   

0000000000000c18 <_ZL15__do_get_rand32Pj>:
     c18:	55                   	push   %rbp
     c19:	48 89 e5             	mov    %rsp,%rbp
     c1c:	48 83 ec 10          	sub    $0x10,%rsp
     c20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
     c24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     c28:	48 89 c7             	mov    %rax,%rdi
     c2b:	e8 7a d8 01 00       	callq  1e4aa <do_rdrand>
     c30:	85 c0                	test   %eax,%eax
     c32:	0f 94 c0             	sete   %al
     c35:	84 c0                	test   %al,%al
     c37:	74 07                	je     c40 <_ZL15__do_get_rand32Pj+0x28>
     c39:	b8 01 00 00 00       	mov    $0x1,%eax
     c3e:	eb 05                	jmp    c45 <_ZL15__do_get_rand32Pj+0x2d>
     c40:	b8 00 00 00 00       	mov    $0x0,%eax
     c45:	c9                   	leaveq 
     c46:	c3                   	retq   

0000000000000c47 <sgx_read_rand>:
     c47:	55                   	push   %rbp
     c48:	48 89 e5             	mov    %rsp,%rbp
     c4b:	48 83 ec 30          	sub    $0x30,%rsp
     c4f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
     c53:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
     c57:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
     c5e:	00 00 
     c60:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     c64:	31 c0                	xor    %eax,%eax
     c66:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
     c6b:	74 07                	je     c74 <sgx_read_rand+0x2d>
     c6d:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
     c72:	75 0a                	jne    c7e <sgx_read_rand+0x37>
     c74:	b8 02 00 00 00       	mov    $0x2,%eax
     c79:	e9 cf 00 00 00       	jmpq   d4d <sgx_read_rand+0x106>
     c7e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
     c82:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     c86:	48 89 d6             	mov    %rdx,%rsi
     c89:	48 89 c7             	mov    %rax,%rdi
     c8c:	e8 f0 fc ff ff       	callq  981 <sgx_is_within_enclave>
     c91:	85 c0                	test   %eax,%eax
     c93:	75 1e                	jne    cb3 <sgx_read_rand+0x6c>
     c95:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
     c99:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     c9d:	48 89 d6             	mov    %rdx,%rsi
     ca0:	48 89 c7             	mov    %rax,%rdi
     ca3:	e8 69 fd ff ff       	callq  a11 <sgx_is_outside_enclave>
     ca8:	85 c0                	test   %eax,%eax
     caa:	75 07                	jne    cb3 <sgx_read_rand+0x6c>
     cac:	b8 01 00 00 00       	mov    $0x1,%eax
     cb1:	eb 05                	jmp    cb8 <sgx_read_rand+0x71>
     cb3:	b8 00 00 00 00       	mov    $0x0,%eax
     cb8:	84 c0                	test   %al,%al
     cba:	74 0a                	je     cc6 <sgx_read_rand+0x7f>
     cbc:	b8 02 00 00 00       	mov    $0x2,%eax
     cc1:	e9 87 00 00 00       	jmpq   d4d <sgx_read_rand+0x106>
     cc6:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
     ccd:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
     cd2:	74 59                	je     d2d <sgx_read_rand+0xe6>
     cd4:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
     cd8:	48 89 c7             	mov    %rax,%rdi
     cdb:	e8 38 ff ff ff       	callq  c18 <_ZL15__do_get_rand32Pj>
     ce0:	89 45 ec             	mov    %eax,-0x14(%rbp)
     ce3:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
     ce7:	74 05                	je     cee <sgx_read_rand+0xa7>
     ce9:	8b 45 ec             	mov    -0x14(%rbp),%eax
     cec:	eb 5f                	jmp    d4d <sgx_read_rand+0x106>
     cee:	48 83 7d d0 04       	cmpq   $0x4,-0x30(%rbp)
     cf3:	72 07                	jb     cfc <sgx_read_rand+0xb5>
     cf5:	b8 04 00 00 00       	mov    $0x4,%eax
     cfa:	eb 04                	jmp    d00 <sgx_read_rand+0xb9>
     cfc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     d00:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     d04:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
     d08:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
     d0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     d10:	48 89 ce             	mov    %rcx,%rsi
     d13:	48 89 c7             	mov    %rax,%rdi
     d16:	e8 26 d7 00 00       	callq  e441 <memcpy>
     d1b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     d1f:	48 01 45 d8          	add    %rax,-0x28(%rbp)
     d23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     d27:	48 29 45 d0          	sub    %rax,-0x30(%rbp)
     d2b:	eb a0                	jmp    ccd <sgx_read_rand+0x86>
     d2d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
     d31:	b9 04 00 00 00       	mov    $0x4,%ecx
     d36:	ba 00 00 00 00       	mov    $0x0,%edx
     d3b:	be 04 00 00 00       	mov    $0x4,%esi
     d40:	48 89 c7             	mov    %rax,%rdi
     d43:	e8 97 d7 00 00       	callq  e4df <memset_s>
     d48:	b8 00 00 00 00       	mov    $0x0,%eax
     d4d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
     d51:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
     d58:	00 00 
     d5a:	74 05                	je     d61 <sgx_read_rand+0x11a>
     d5c:	e8 cf 3e 00 00       	callq  4c30 <__stack_chk_fail>
     d61:	c9                   	leaveq 
     d62:	c3                   	retq   

0000000000000d63 <check_static_stack_canary>:
     d63:	55                   	push   %rbp
     d64:	48 89 e5             	mov    %rsp,%rbp
     d67:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
     d6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     d6f:	48 83 c0 08          	add    $0x8,%rax
     d73:	48 2d b0 02 01 00    	sub    $0x102b0,%rax
     d79:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     d7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     d81:	48 8b 10             	mov    (%rax),%rdx
     d84:	48 8d 05 9d 10 22 00 	lea    0x22109d(%rip),%rax        # 221e28 <__intel_security_cookie>
     d8b:	48 8b 00             	mov    (%rax),%rax
     d8e:	48 39 c2             	cmp    %rax,%rdx
     d91:	74 07                	je     d9a <check_static_stack_canary+0x37>
     d93:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
     d98:	eb 05                	jmp    d9f <check_static_stack_canary+0x3c>
     d9a:	b8 00 00 00 00       	mov    $0x0,%eax
     d9f:	5d                   	pop    %rbp
     da0:	c3                   	retq   

0000000000000da1 <random_stack_notify_gdb>:
     da1:	55                   	push   %rbp
     da2:	48 89 e5             	mov    %rsp,%rbp
     da5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
     da9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
     dad:	90                   	nop
     dae:	5d                   	pop    %rbp
     daf:	c3                   	retq   

0000000000000db0 <memcpy_s>:
     db0:	55                   	push   %rbp
     db1:	48 89 e5             	mov    %rsp,%rbp
     db4:	48 83 ec 20          	sub    $0x20,%rsp
     db8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
     dbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
     dc0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
     dc4:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
     dc8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     dcc:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
     dd0:	73 07                	jae    dd9 <memcpy_s+0x29>
     dd2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
     dd7:	eb 1c                	jmp    df5 <memcpy_s+0x45>
     dd9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
     ddd:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
     de1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     de5:	48 89 ce             	mov    %rcx,%rsi
     de8:	48 89 c7             	mov    %rax,%rdi
     deb:	e8 51 d6 00 00       	callq  e441 <memcpy>
     df0:	b8 00 00 00 00       	mov    $0x0,%eax
     df5:	c9                   	leaveq 
     df6:	c3                   	retq   

0000000000000df7 <_ZL19sgx_accept_backwardmmm>:
     df7:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
     dfc:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
     e00:	41 ff 72 f8          	pushq  -0x8(%r10)
     e04:	55                   	push   %rbp
     e05:	48 89 e5             	mov    %rsp,%rbp
     e08:	41 52                	push   %r10
     e0a:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
     e11:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
     e18:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
     e1f:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
     e26:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
     e2d:	00 00 
     e2f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
     e33:	31 c0                	xor    %eax,%eax
     e35:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
     e3c:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
     e43:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
     e4a:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
     e51:	66 c7 85 42 ff ff ff 	movw   $0x0,-0xbe(%rbp)
     e58:	00 00 
     e5a:	0f b7 85 42 ff ff ff 	movzwl -0xbe(%rbp),%eax
     e61:	ba 07 00 00 00       	mov    $0x7,%edx
     e66:	48 39 d0             	cmp    %rdx,%rax
     e69:	73 28                	jae    e93 <_ZL19sgx_accept_backwardmmm+0x9c>
     e6b:	0f b7 85 42 ff ff ff 	movzwl -0xbe(%rbp),%eax
     e72:	48 98                	cltq   
     e74:	48 c7 84 c5 58 ff ff 	movq   $0x0,-0xa8(%rbp,%rax,8)
     e7b:	ff 00 00 00 00 
     e80:	0f b7 85 42 ff ff ff 	movzwl -0xbe(%rbp),%eax
     e87:	83 c0 01             	add    $0x1,%eax
     e8a:	66 89 85 42 ff ff ff 	mov    %ax,-0xbe(%rbp)
     e91:	eb c7                	jmp    e5a <_ZL19sgx_accept_backwardmmm+0x63>
     e93:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
     e9a:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
     ea1:	73 38                	jae    edb <_ZL19sgx_accept_backwardmmm+0xe4>
     ea3:	48 81 ad 48 ff ff ff 	subq   $0x1000,-0xb8(%rbp)
     eaa:	00 10 00 00 
     eae:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
     eb5:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
     ebc:	48 89 d6             	mov    %rdx,%rsi
     ebf:	48 89 c7             	mov    %rax,%rdi
     ec2:	e8 b4 d5 01 00       	callq  1e47b <do_eaccept>
     ec7:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
     ecd:	83 bd 44 ff ff ff 00 	cmpl   $0x0,-0xbc(%rbp)
     ed4:	74 bd                	je     e93 <_ZL19sgx_accept_backwardmmm+0x9c>
     ed6:	e8 ee d5 01 00       	callq  1e4c9 <abort>
     edb:	b8 00 00 00 00       	mov    $0x0,%eax
     ee0:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
     ee4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
     eeb:	00 00 
     eed:	74 05                	je     ef4 <_ZL19sgx_accept_backwardmmm+0xfd>
     eef:	e8 3c 3d 00 00       	callq  4c30 <__stack_chk_fail>
     ef4:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
     efb:	41 5a                	pop    %r10
     efd:	5d                   	pop    %rbp
     efe:	49 8d 62 f8          	lea    -0x8(%r10),%rsp
     f02:	c3                   	retq   

0000000000000f03 <_ZL35sgx_accept_forward_within_exceptionmm>:
     f03:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
     f08:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
     f0c:	41 ff 72 f8          	pushq  -0x8(%r10)
     f10:	55                   	push   %rbp
     f11:	48 89 e5             	mov    %rsp,%rbp
     f14:	41 52                	push   %r10
     f16:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
     f1d:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
     f24:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
     f2b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
     f32:	00 00 
     f34:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
     f38:	31 c0                	xor    %eax,%eax
     f3a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
     f41:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
     f48:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)
     f4f:	00 00 00 
     f52:	89 e0                	mov    %esp,%eax
     f54:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
     f5a:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
     f60:	25 ff 0f 00 00       	and    $0xfff,%eax
     f65:	3d 50 0d 00 00       	cmp    $0xd50,%eax
     f6a:	77 0a                	ja     f76 <_ZL35sgx_accept_forward_within_exceptionmm+0x73>
     f6c:	b8 01 00 00 00       	mov    $0x1,%eax
     f71:	e9 9c 00 00 00       	jmpq   1012 <_ZL35sgx_accept_forward_within_exceptionmm+0x10f>
     f76:	48 c7 85 50 ff ff ff 	movq   $0x20b,-0xb0(%rbp)
     f7d:	0b 02 00 00 
     f81:	66 c7 85 3e ff ff ff 	movw   $0x0,-0xc2(%rbp)
     f88:	00 00 
     f8a:	0f b7 85 3e ff ff ff 	movzwl -0xc2(%rbp),%eax
     f91:	ba 07 00 00 00       	mov    $0x7,%edx
     f96:	48 39 d0             	cmp    %rdx,%rax
     f99:	73 28                	jae    fc3 <_ZL35sgx_accept_forward_within_exceptionmm+0xc0>
     f9b:	0f b7 85 3e ff ff ff 	movzwl -0xc2(%rbp),%eax
     fa2:	48 98                	cltq   
     fa4:	48 c7 84 c5 58 ff ff 	movq   $0x0,-0xa8(%rbp,%rax,8)
     fab:	ff 00 00 00 00 
     fb0:	0f b7 85 3e ff ff ff 	movzwl -0xc2(%rbp),%eax
     fb7:	83 c0 01             	add    $0x1,%eax
     fba:	66 89 85 3e ff ff ff 	mov    %ax,-0xc2(%rbp)
     fc1:	eb c7                	jmp    f8a <_ZL35sgx_accept_forward_within_exceptionmm+0x87>
     fc3:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
     fca:	48 3b 85 20 ff ff ff 	cmp    -0xe0(%rbp),%rax
     fd1:	73 3a                	jae    100d <_ZL35sgx_accept_forward_within_exceptionmm+0x10a>
     fd3:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
     fda:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
     fe1:	48 89 d6             	mov    %rdx,%rsi
     fe4:	48 89 c7             	mov    %rax,%rdi
     fe7:	e8 8f d4 01 00       	callq  1e47b <do_eaccept>
     fec:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
     ff2:	83 bd 44 ff ff ff 00 	cmpl   $0x0,-0xbc(%rbp)
     ff9:	74 05                	je     1000 <_ZL35sgx_accept_forward_within_exceptionmm+0xfd>
     ffb:	e8 c9 d4 01 00       	callq  1e4c9 <abort>
    1000:	48 81 85 48 ff ff ff 	addq   $0x1000,-0xb8(%rbp)
    1007:	00 10 00 00 
    100b:	eb b6                	jmp    fc3 <_ZL35sgx_accept_forward_within_exceptionmm+0xc0>
    100d:	b8 00 00 00 00       	mov    $0x0,%eax
    1012:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    1016:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    101d:	00 00 
    101f:	74 05                	je     1026 <_ZL35sgx_accept_forward_within_exceptionmm+0x123>
    1021:	e8 0a 3c 00 00       	callq  4c30 <__stack_chk_fail>
    1026:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
    102d:	41 5a                	pop    %r10
    102f:	5d                   	pop    %rbp
    1030:	49 8d 62 f8          	lea    -0x8(%r10),%rsp
    1034:	c3                   	retq   

0000000000001035 <_Z24get_dynamic_layout_by_idt>:
    1035:	55                   	push   %rbp
    1036:	48 89 e5             	mov    %rsp,%rbp
    1039:	89 f8                	mov    %edi,%eax
    103b:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
    103f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1046:	48 8d 05 33 dd 01 00 	lea    0x1dd33(%rip),%rax        # 1ed80 <g_global_data>
    104d:	8b 80 18 01 00 00    	mov    0x118(%rax),%eax
    1053:	3b 45 fc             	cmp    -0x4(%rbp),%eax
    1056:	0f 97 c0             	seta   %al
    1059:	84 c0                	test   %al,%al
    105b:	74 43                	je     10a0 <_Z24get_dynamic_layout_by_idt+0x6b>
    105d:	48 8d 05 1c dd 01 00 	lea    0x1dd1c(%rip),%rax        # 1ed80 <g_global_data>
    1064:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1067:	48 83 c2 09          	add    $0x9,%rdx
    106b:	48 c1 e2 05          	shl    $0x5,%rdx
    106f:	48 01 d0             	add    %rdx,%rax
    1072:	0f b7 00             	movzwl (%rax),%eax
    1075:	66 3b 45 ec          	cmp    -0x14(%rbp),%ax
    1079:	0f 94 c0             	sete   %al
    107c:	84 c0                	test   %al,%al
    107e:	74 1a                	je     109a <_Z24get_dynamic_layout_by_idt+0x65>
    1080:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1083:	48 83 c0 09          	add    $0x9,%rax
    1087:	48 c1 e0 05          	shl    $0x5,%rax
    108b:	48 89 c2             	mov    %rax,%rdx
    108e:	48 8d 05 eb dc 01 00 	lea    0x1dceb(%rip),%rax        # 1ed80 <g_global_data>
    1095:	48 01 d0             	add    %rdx,%rax
    1098:	eb 0b                	jmp    10a5 <_Z24get_dynamic_layout_by_idt+0x70>
    109a:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    109e:	eb a6                	jmp    1046 <_Z24get_dynamic_layout_by_idt+0x11>
    10a0:	b8 00 00 00 00       	mov    $0x0,%eax
    10a5:	5d                   	pop    %rbp
    10a6:	c3                   	retq   

00000000000010a7 <_Z18accept_post_removePVK9_layout_tS1_m>:
    10a7:	55                   	push   %rbp
    10a8:	48 89 e5             	mov    %rsp,%rbp
    10ab:	53                   	push   %rbx
    10ac:	48 83 ec 58          	sub    $0x58,%rsp
    10b0:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    10b4:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    10b8:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    10bc:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%rbp)
    10c3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    10c7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    10cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    10cf:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    10d3:	0f 83 2f 01 00 00    	jae    1208 <_Z18accept_post_removePVK9_layout_tS1_m+0x161>
    10d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    10dd:	0f b7 00             	movzwl (%rax),%eax
    10e0:	0f b7 c0             	movzwl %ax,%eax
    10e3:	25 00 10 00 00       	and    $0x1000,%eax
    10e8:	85 c0                	test   %eax,%eax
    10ea:	75 19                	jne    1105 <_Z18accept_post_removePVK9_layout_tS1_m+0x5e>
    10ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    10f0:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    10f4:	0f b7 c0             	movzwl %ax,%eax
    10f7:	83 e0 10             	and    $0x10,%eax
    10fa:	85 c0                	test   %eax,%eax
    10fc:	74 07                	je     1105 <_Z18accept_post_removePVK9_layout_tS1_m+0x5e>
    10fe:	b8 01 00 00 00       	mov    $0x1,%eax
    1103:	eb 05                	jmp    110a <_Z18accept_post_removePVK9_layout_tS1_m+0x63>
    1105:	b8 00 00 00 00       	mov    $0x0,%eax
    110a:	84 c0                	test   %al,%al
    110c:	74 62                	je     1170 <_Z18accept_post_removePVK9_layout_tS1_m+0xc9>
    110e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1112:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1116:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    111a:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
    111e:	e8 6f d0 01 00       	callq  1e192 <get_enclave_base>
    1123:	48 01 d8             	add    %rbx,%rax
    1126:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    112a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    112e:	8b 40 04             	mov    0x4(%rax),%eax
    1131:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    1134:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    1137:	48 c1 e0 0c          	shl    $0xc,%rax
    113b:	48 89 c2             	mov    %rax,%rdx
    113e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1142:	48 01 c2             	add    %rax,%rdx
    1145:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1149:	48 89 c6             	mov    %rax,%rsi
    114c:	bf 10 04 00 00       	mov    $0x410,%edi
    1151:	e8 22 05 00 00       	callq  1678 <sgx_accept_forward>
    1156:	89 45 d0             	mov    %eax,-0x30(%rbp)
    1159:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
    115d:	0f 95 c0             	setne  %al
    1160:	84 c0                	test   %al,%al
    1162:	0f 84 96 00 00 00    	je     11fe <_Z18accept_post_removePVK9_layout_tS1_m+0x157>
    1168:	8b 45 d0             	mov    -0x30(%rbp),%eax
    116b:	e9 9d 00 00 00       	jmpq   120d <_Z18accept_post_removePVK9_layout_tS1_m+0x166>
    1170:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1174:	0f b7 00             	movzwl (%rax),%eax
    1177:	0f b7 c0             	movzwl %ax,%eax
    117a:	25 00 10 00 00       	and    $0x1000,%eax
    117f:	85 c0                	test   %eax,%eax
    1181:	0f 95 c0             	setne  %al
    1184:	84 c0                	test   %al,%al
    1186:	74 76                	je     11fe <_Z18accept_post_removePVK9_layout_tS1_m+0x157>
    1188:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    118f:	00 
    1190:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    1197:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    119b:	8b 40 04             	mov    0x4(%rax),%eax
    119e:	3b 45 cc             	cmp    -0x34(%rbp),%eax
    11a1:	0f 97 c0             	seta   %al
    11a4:	84 c0                	test   %al,%al
    11a6:	74 56                	je     11fe <_Z18accept_post_removePVK9_layout_tS1_m+0x157>
    11a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    11ac:	48 8b 40 08          	mov    0x8(%rax),%rax
    11b0:	48 01 45 e0          	add    %rax,-0x20(%rbp)
    11b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    11b8:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    11bc:	0f b7 c0             	movzwl %ax,%eax
    11bf:	f7 d8                	neg    %eax
    11c1:	48 98                	cltq   
    11c3:	48 c1 e0 05          	shl    $0x5,%rax
    11c7:	48 89 c2             	mov    %rax,%rdx
    11ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    11ce:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    11d2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    11d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    11da:	48 89 c6             	mov    %rax,%rsi
    11dd:	48 89 cf             	mov    %rcx,%rdi
    11e0:	e8 c2 fe ff ff       	callq  10a7 <_Z18accept_post_removePVK9_layout_tS1_m>
    11e5:	89 45 d0             	mov    %eax,-0x30(%rbp)
    11e8:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
    11ec:	0f 95 c0             	setne  %al
    11ef:	84 c0                	test   %al,%al
    11f1:	74 05                	je     11f8 <_Z18accept_post_removePVK9_layout_tS1_m+0x151>
    11f3:	8b 45 d0             	mov    -0x30(%rbp),%eax
    11f6:	eb 15                	jmp    120d <_Z18accept_post_removePVK9_layout_tS1_m+0x166>
    11f8:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
    11fc:	eb 99                	jmp    1197 <_Z18accept_post_removePVK9_layout_tS1_m+0xf0>
    11fe:	48 83 45 d8 20       	addq   $0x20,-0x28(%rbp)
    1203:	e9 c3 fe ff ff       	jmpq   10cb <_Z18accept_post_removePVK9_layout_tS1_m+0x24>
    1208:	b8 00 00 00 00       	mov    $0x0,%eax
    120d:	48 83 c4 58          	add    $0x58,%rsp
    1211:	5b                   	pop    %rbx
    1212:	5d                   	pop    %rbp
    1213:	c3                   	retq   

0000000000001214 <_ZL20check_heap_dyn_rangePvmP24dynamic_flags_attributes>:
    1214:	55                   	push   %rbp
    1215:	48 89 e5             	mov    %rsp,%rbp
    1218:	53                   	push   %rbx
    1219:	48 83 ec 38          	sub    $0x38,%rsp
    121d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1221:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    1225:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    1229:	e8 df 1c 00 00       	callq  2f0d <get_heap_base>
    122e:	48 89 c3             	mov    %rax,%rbx
    1231:	e8 84 1d 00 00       	callq  2fba <get_heap_min_size>
    1236:	48 01 d8             	add    %rbx,%rax
    1239:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    123d:	e8 e6 1c 00 00       	callq  2f28 <get_heap_size>
    1242:	48 89 c3             	mov    %rax,%rbx
    1245:	e8 70 1d 00 00       	callq  2fba <get_heap_min_size>
    124a:	48 29 c3             	sub    %rax,%rbx
    124d:	48 89 d8             	mov    %rbx,%rax
    1250:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1254:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1258:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    125c:	72 46                	jb     12a4 <_ZL20check_heap_dyn_rangePvmP24dynamic_flags_attributes+0x90>
    125e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1262:	48 c1 e0 0c          	shl    $0xc,%rax
    1266:	48 89 c2             	mov    %rax,%rdx
    1269:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    126d:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    1271:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    1275:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1279:	48 01 d0             	add    %rdx,%rax
    127c:	48 39 c1             	cmp    %rax,%rcx
    127f:	77 23                	ja     12a4 <_ZL20check_heap_dyn_rangePvmP24dynamic_flags_attributes+0x90>
    1281:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    1286:	74 15                	je     129d <_ZL20check_heap_dyn_rangePvmP24dynamic_flags_attributes+0x89>
    1288:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    128c:	48 c7 00 03 02 00 00 	movq   $0x203,(%rax)
    1293:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1297:	66 c7 40 08 08 00    	movw   $0x8,0x8(%rax)
    129d:	b8 00 00 00 00       	mov    $0x0,%eax
    12a2:	eb 05                	jmp    12a9 <_ZL20check_heap_dyn_rangePvmP24dynamic_flags_attributes+0x95>
    12a4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    12a9:	48 83 c4 38          	add    $0x38,%rsp
    12ad:	5b                   	pop    %rbx
    12ae:	5d                   	pop    %rbp
    12af:	c3                   	retq   

00000000000012b0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes>:
    12b0:	55                   	push   %rbp
    12b1:	48 89 e5             	mov    %rsp,%rbp
    12b4:	48 83 ec 50          	sub    $0x50,%rsp
    12b8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    12bc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    12c0:	89 d0                	mov    %edx,%eax
    12c2:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    12c6:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    12ca:	66 89 45 cc          	mov    %ax,-0x34(%rbp)
    12ce:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    12d5:	00 
    12d6:	66 83 7d cc 00       	cmpw   $0x0,-0x34(%rbp)
    12db:	74 1d                	je     12fa <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0x4a>
    12dd:	66 83 7d cc 12       	cmpw   $0x12,-0x34(%rbp)
    12e2:	77 16                	ja     12fa <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0x4a>
    12e4:	0f b7 45 cc          	movzwl -0x34(%rbp),%eax
    12e8:	89 c7                	mov    %eax,%edi
    12ea:	e8 46 fd ff ff       	callq  1035 <_Z24get_dynamic_layout_by_idt>
    12ef:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    12f3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    12f8:	75 07                	jne    1301 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0x51>
    12fa:	b8 01 00 00 00       	mov    $0x1,%eax
    12ff:	eb 05                	jmp    1306 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0x56>
    1301:	b8 00 00 00 00       	mov    $0x0,%eax
    1306:	84 c0                	test   %al,%al
    1308:	74 0a                	je     1314 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0x64>
    130a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    130f:	e9 8c 00 00 00       	jmpq   13a0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xf0>
    1314:	e8 79 ce 01 00       	callq  1e192 <get_enclave_base>
    1319:	48 89 c2             	mov    %rax,%rdx
    131c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1320:	48 8b 40 08          	mov    0x8(%rax),%rax
    1324:	48 01 c2             	add    %rax,%rdx
    1327:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    132b:	48 01 d0             	add    %rdx,%rax
    132e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1332:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1336:	8b 40 04             	mov    0x4(%rax),%eax
    1339:	89 45 ec             	mov    %eax,-0x14(%rbp)
    133c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1340:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    1344:	72 55                	jb     139b <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xeb>
    1346:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    134a:	48 c1 e0 0c          	shl    $0xc,%rax
    134e:	48 89 c2             	mov    %rax,%rdx
    1351:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1355:	48 01 c2             	add    %rax,%rdx
    1358:	8b 45 ec             	mov    -0x14(%rbp),%eax
    135b:	48 c1 e0 0c          	shl    $0xc,%rax
    135f:	48 89 c1             	mov    %rax,%rcx
    1362:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1366:	48 01 c8             	add    %rcx,%rax
    1369:	48 39 c2             	cmp    %rax,%rdx
    136c:	77 2d                	ja     139b <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xeb>
    136e:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    1373:	74 1f                	je     1394 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xe4>
    1375:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1379:	48 8b 50 18          	mov    0x18(%rax),%rdx
    137d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1381:	48 89 10             	mov    %rdx,(%rax)
    1384:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1388:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    138c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1390:	66 89 50 08          	mov    %dx,0x8(%rax)
    1394:	b8 00 00 00 00       	mov    $0x0,%eax
    1399:	eb 05                	jmp    13a0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xf0>
    139b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    13a0:	c9                   	leaveq 
    13a1:	c3                   	retq   

00000000000013a2 <_ZL34check_utility_thread_dynamic_stackPvmP24dynamic_flags_attributes>:
    13a2:	55                   	push   %rbp
    13a3:	48 89 e5             	mov    %rsp,%rbp
    13a6:	48 83 ec 20          	sub    $0x20,%rsp
    13aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    13ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    13b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    13b6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    13ba:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    13be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    13c2:	49 89 d0             	mov    %rdx,%r8
    13c5:	b9 00 00 00 00       	mov    $0x0,%ecx
    13ca:	ba 07 00 00 00       	mov    $0x7,%edx
    13cf:	48 89 c7             	mov    %rax,%rdi
    13d2:	e8 d9 fe ff ff       	callq  12b0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes>
    13d7:	c9                   	leaveq 
    13d8:	c3                   	retq   

00000000000013d9 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>:
    13d9:	55                   	push   %rbp
    13da:	48 89 e5             	mov    %rsp,%rbp
    13dd:	48 83 ec 30          	sub    $0x30,%rsp
    13e1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    13e5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    13e9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    13ed:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    13f1:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    13f8:	00 
    13f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    13fd:	48 c1 e0 0c          	shl    $0xc,%rax
    1401:	48 f7 d0             	not    %rax
    1404:	48 89 c2             	mov    %rax,%rdx
    1407:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    140b:	48 39 c2             	cmp    %rax,%rdx
    140e:	73 0a                	jae    141a <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x41>
    1410:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1415:	e9 6f 01 00 00       	jmpq   1589 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1b0>
    141a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    141e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    1422:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1426:	48 89 ce             	mov    %rcx,%rsi
    1429:	48 89 c7             	mov    %rax,%rdi
    142c:	e8 e3 fd ff ff       	callq  1214 <_ZL20check_heap_dyn_rangePvmP24dynamic_flags_attributes>
    1431:	85 c0                	test   %eax,%eax
    1433:	0f 94 c0             	sete   %al
    1436:	84 c0                	test   %al,%al
    1438:	74 0a                	je     1444 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x6b>
    143a:	b8 00 00 00 00       	mov    $0x0,%eax
    143f:	e9 45 01 00 00       	jmpq   1589 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1b0>
    1444:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    1448:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    144c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1450:	48 89 ce             	mov    %rcx,%rsi
    1453:	48 89 c7             	mov    %rax,%rdi
    1456:	e8 47 ff ff ff       	callq  13a2 <_ZL34check_utility_thread_dynamic_stackPvmP24dynamic_flags_attributes>
    145b:	85 c0                	test   %eax,%eax
    145d:	0f 94 c0             	sete   %al
    1460:	84 c0                	test   %al,%al
    1462:	74 0a                	je     146e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x95>
    1464:	b8 00 00 00 00       	mov    $0x0,%eax
    1469:	e9 1b 01 00 00       	jmpq   1589 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1b0>
    146e:	bf 13 10 00 00       	mov    $0x1013,%edi
    1473:	e8 bd fb ff ff       	callq  1035 <_Z24get_dynamic_layout_by_idt>
    1478:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    147c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    1481:	0f 95 c0             	setne  %al
    1484:	84 c0                	test   %al,%al
    1486:	0f 84 9c 00 00 00    	je     1528 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x14f>
    148c:	66 c7 45 f0 0e 00    	movw   $0xe,-0x10(%rbp)
    1492:	66 83 7d f0 12       	cmpw   $0x12,-0x10(%rbp)
    1497:	0f 87 e7 00 00 00    	ja     1584 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1ab>
    149d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    14a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    14a8:	8b 40 04             	mov    0x4(%rax),%eax
    14ab:	83 c0 01             	add    $0x1,%eax
    14ae:	3b 45 f4             	cmp    -0xc(%rbp),%eax
    14b1:	0f 97 c0             	seta   %al
    14b4:	84 c0                	test   %al,%al
    14b6:	74 60                	je     1518 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x13f>
    14b8:	8b 55 f4             	mov    -0xc(%rbp),%edx
    14bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    14bf:	48 8b 40 08          	mov    0x8(%rax),%rax
    14c3:	48 89 d1             	mov    %rdx,%rcx
    14c6:	48 0f af c8          	imul   %rax,%rcx
    14ca:	0f b7 55 f0          	movzwl -0x10(%rbp),%edx
    14ce:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
    14d2:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    14d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    14da:	49 89 f8             	mov    %rdi,%r8
    14dd:	48 89 c7             	mov    %rax,%rdi
    14e0:	e8 cb fd ff ff       	callq  12b0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes>
    14e5:	85 c0                	test   %eax,%eax
    14e7:	0f 94 c0             	sete   %al
    14ea:	84 c0                	test   %al,%al
    14ec:	74 24                	je     1512 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x139>
    14ee:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    14f3:	74 16                	je     150b <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x132>
    14f5:	8b 55 f4             	mov    -0xc(%rbp),%edx
    14f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    14fc:	48 8b 40 08          	mov    0x8(%rax),%rax
    1500:	48 0f af d0          	imul   %rax,%rdx
    1504:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1508:	48 89 10             	mov    %rdx,(%rax)
    150b:	b8 00 00 00 00       	mov    $0x0,%eax
    1510:	eb 77                	jmp    1589 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1b0>
    1512:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1516:	eb 8c                	jmp    14a4 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0xcb>
    1518:	0f b7 45 f0          	movzwl -0x10(%rbp),%eax
    151c:	83 c0 01             	add    $0x1,%eax
    151f:	66 89 45 f0          	mov    %ax,-0x10(%rbp)
    1523:	e9 6a ff ff ff       	jmpq   1492 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0xb9>
    1528:	66 c7 45 f2 0e 00    	movw   $0xe,-0xe(%rbp)
    152e:	66 83 7d f2 12       	cmpw   $0x12,-0xe(%rbp)
    1533:	77 4f                	ja     1584 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1ab>
    1535:	0f b7 55 f2          	movzwl -0xe(%rbp),%edx
    1539:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    153d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    1541:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1545:	49 89 c8             	mov    %rcx,%r8
    1548:	b9 00 00 00 00       	mov    $0x0,%ecx
    154d:	48 89 c7             	mov    %rax,%rdi
    1550:	e8 5b fd ff ff       	callq  12b0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes>
    1555:	85 c0                	test   %eax,%eax
    1557:	0f 94 c0             	sete   %al
    155a:	84 c0                	test   %al,%al
    155c:	74 19                	je     1577 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x19e>
    155e:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    1563:	74 0b                	je     1570 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x197>
    1565:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1569:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    1570:	b8 00 00 00 00       	mov    $0x0,%eax
    1575:	eb 12                	jmp    1589 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1b0>
    1577:	0f b7 45 f2          	movzwl -0xe(%rbp),%eax
    157b:	83 c0 01             	add    $0x1,%eax
    157e:	66 89 45 f2          	mov    %ax,-0xe(%rbp)
    1582:	eb aa                	jmp    152e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x155>
    1584:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1589:	c9                   	leaveq 
    158a:	c3                   	retq   

000000000000158b <is_dynamic_thread>:
    158b:	55                   	push   %rbp
    158c:	48 89 e5             	mov    %rsp,%rbp
    158f:	48 83 ec 30          	sub    $0x30,%rsp
    1593:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1597:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    159e:	00 00 
    15a0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    15a4:	31 c0                	xor    %eax,%eax
    15a6:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    15ab:	74 34                	je     15e1 <is_dynamic_thread+0x56>
    15ad:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    15b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    15b5:	48 89 d1             	mov    %rdx,%rcx
    15b8:	ba 00 00 00 00       	mov    $0x0,%edx
    15bd:	be 01 00 00 00       	mov    $0x1,%esi
    15c2:	48 89 c7             	mov    %rax,%rdi
    15c5:	e8 0f fe ff ff       	callq  13d9 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    15ca:	85 c0                	test   %eax,%eax
    15cc:	75 13                	jne    15e1 <is_dynamic_thread+0x56>
    15ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    15d2:	48 3d 00 01 00 00    	cmp    $0x100,%rax
    15d8:	75 07                	jne    15e1 <is_dynamic_thread+0x56>
    15da:	b8 01 00 00 00       	mov    $0x1,%eax
    15df:	eb 05                	jmp    15e6 <is_dynamic_thread+0x5b>
    15e1:	b8 00 00 00 00       	mov    $0x0,%eax
    15e6:	84 c0                	test   %al,%al
    15e8:	74 07                	je     15f1 <is_dynamic_thread+0x66>
    15ea:	b8 01 00 00 00       	mov    $0x1,%eax
    15ef:	eb 05                	jmp    15f6 <is_dynamic_thread+0x6b>
    15f1:	b8 00 00 00 00       	mov    $0x0,%eax
    15f6:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    15fa:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    1601:	00 00 
    1603:	74 05                	je     160a <is_dynamic_thread+0x7f>
    1605:	e8 26 36 00 00       	callq  4c30 <__stack_chk_fail>
    160a:	c9                   	leaveq 
    160b:	c3                   	retq   

000000000000160c <is_dynamic_thread_exist>:
    160c:	55                   	push   %rbp
    160d:	48 89 e5             	mov    %rsp,%rbp
    1610:	48 83 ec 10          	sub    $0x10,%rsp
    1614:	48 8d 05 05 08 22 00 	lea    0x220805(%rip),%rax        # 221e20 <EDMM_supported>
    161b:	8b 00                	mov    (%rax),%eax
    161d:	85 c0                	test   %eax,%eax
    161f:	75 07                	jne    1628 <is_dynamic_thread_exist+0x1c>
    1621:	b8 00 00 00 00       	mov    $0x0,%eax
    1626:	eb 21                	jmp    1649 <is_dynamic_thread_exist+0x3d>
    1628:	bf 12 00 00 00       	mov    $0x12,%edi
    162d:	e8 03 fa ff ff       	callq  1035 <_Z24get_dynamic_layout_by_idt>
    1632:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1636:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    163b:	75 07                	jne    1644 <is_dynamic_thread_exist+0x38>
    163d:	b8 00 00 00 00       	mov    $0x0,%eax
    1642:	eb 05                	jmp    1649 <is_dynamic_thread_exist+0x3d>
    1644:	b8 01 00 00 00       	mov    $0x1,%eax
    1649:	c9                   	leaveq 
    164a:	c3                   	retq   

000000000000164b <get_dynamic_stack_max_page>:
    164b:	55                   	push   %rbp
    164c:	48 89 e5             	mov    %rsp,%rbp
    164f:	48 83 ec 10          	sub    $0x10,%rsp
    1653:	bf 07 00 00 00       	mov    $0x7,%edi
    1658:	e8 d8 f9 ff ff       	callq  1035 <_Z24get_dynamic_layout_by_idt>
    165d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1661:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    1666:	75 07                	jne    166f <get_dynamic_stack_max_page+0x24>
    1668:	b8 00 00 00 00       	mov    $0x0,%eax
    166d:	eb 07                	jmp    1676 <get_dynamic_stack_max_page+0x2b>
    166f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1673:	8b 40 04             	mov    0x4(%rax),%eax
    1676:	c9                   	leaveq 
    1677:	c3                   	retq   

0000000000001678 <sgx_accept_forward>:
    1678:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
    167d:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    1681:	41 ff 72 f8          	pushq  -0x8(%r10)
    1685:	55                   	push   %rbp
    1686:	48 89 e5             	mov    %rsp,%rbp
    1689:	41 52                	push   %r10
    168b:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
    1692:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
    1699:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
    16a0:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    16a7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    16ae:	00 00 
    16b0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    16b4:	31 c0                	xor    %eax,%eax
    16b6:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    16bd:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    16c4:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    16cb:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    16d2:	66 c7 85 42 ff ff ff 	movw   $0x0,-0xbe(%rbp)
    16d9:	00 00 
    16db:	0f b7 85 42 ff ff ff 	movzwl -0xbe(%rbp),%eax
    16e2:	ba 07 00 00 00       	mov    $0x7,%edx
    16e7:	48 39 d0             	cmp    %rdx,%rax
    16ea:	73 28                	jae    1714 <sgx_accept_forward+0x9c>
    16ec:	0f b7 85 42 ff ff ff 	movzwl -0xbe(%rbp),%eax
    16f3:	48 98                	cltq   
    16f5:	48 c7 84 c5 58 ff ff 	movq   $0x0,-0xa8(%rbp,%rax,8)
    16fc:	ff 00 00 00 00 
    1701:	0f b7 85 42 ff ff ff 	movzwl -0xbe(%rbp),%eax
    1708:	83 c0 01             	add    $0x1,%eax
    170b:	66 89 85 42 ff ff ff 	mov    %ax,-0xbe(%rbp)
    1712:	eb c7                	jmp    16db <sgx_accept_forward+0x63>
    1714:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    171b:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
    1722:	73 3a                	jae    175e <sgx_accept_forward+0xe6>
    1724:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    172b:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    1732:	48 89 d6             	mov    %rdx,%rsi
    1735:	48 89 c7             	mov    %rax,%rdi
    1738:	e8 3e cd 01 00       	callq  1e47b <do_eaccept>
    173d:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    1743:	83 bd 44 ff ff ff 00 	cmpl   $0x0,-0xbc(%rbp)
    174a:	74 05                	je     1751 <sgx_accept_forward+0xd9>
    174c:	e8 78 cd 01 00       	callq  1e4c9 <abort>
    1751:	48 81 85 48 ff ff ff 	addq   $0x1000,-0xb8(%rbp)
    1758:	00 10 00 00 
    175c:	eb b6                	jmp    1714 <sgx_accept_forward+0x9c>
    175e:	b8 00 00 00 00       	mov    $0x0,%eax
    1763:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    1767:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    176e:	00 00 
    1770:	74 05                	je     1777 <sgx_accept_forward+0xff>
    1772:	e8 b9 34 00 00       	callq  4c30 <__stack_chk_fail>
    1777:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
    177e:	41 5a                	pop    %r10
    1780:	5d                   	pop    %rbp
    1781:	49 8d 62 f8          	lea    -0x8(%r10),%rsp
    1785:	c3                   	retq   

0000000000001786 <apply_pages_within_exception>:
    1786:	55                   	push   %rbp
    1787:	48 89 e5             	mov    %rsp,%rbp
    178a:	48 83 ec 30          	sub    $0x30,%rsp
    178e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1792:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    1796:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    179b:	75 07                	jne    17a4 <apply_pages_within_exception+0x1e>
    179d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    17a2:	eb 61                	jmp    1805 <apply_pages_within_exception+0x7f>
    17a4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    17a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    17ac:	b9 00 00 00 00       	mov    $0x0,%ecx
    17b1:	ba 00 00 00 00       	mov    $0x0,%edx
    17b6:	48 89 c7             	mov    %rax,%rdi
    17b9:	e8 1b fc ff ff       	callq  13d9 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    17be:	85 c0                	test   %eax,%eax
    17c0:	0f 95 c0             	setne  %al
    17c3:	84 c0                	test   %al,%al
    17c5:	74 07                	je     17ce <apply_pages_within_exception+0x48>
    17c7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    17cc:	eb 37                	jmp    1805 <apply_pages_within_exception+0x7f>
    17ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    17d2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    17d6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    17da:	48 c1 e0 0c          	shl    $0xc,%rax
    17de:	48 89 c2             	mov    %rax,%rdx
    17e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    17e5:	48 01 d0             	add    %rdx,%rax
    17e8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    17ec:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    17f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    17f4:	48 89 d6             	mov    %rdx,%rsi
    17f7:	48 89 c7             	mov    %rax,%rdi
    17fa:	e8 04 f7 ff ff       	callq  f03 <_ZL35sgx_accept_forward_within_exceptionmm>
    17ff:	89 45 ec             	mov    %eax,-0x14(%rbp)
    1802:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1805:	c9                   	leaveq 
    1806:	c3                   	retq   

0000000000001807 <apply_EPC_pages>:
    1807:	55                   	push   %rbp
    1808:	48 89 e5             	mov    %rsp,%rbp
    180b:	48 83 ec 50          	sub    $0x50,%rsp
    180f:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    1813:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    1817:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    181e:	00 00 
    1820:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1824:	31 c0                	xor    %eax,%eax
    1826:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    182b:	75 0a                	jne    1837 <apply_EPC_pages+0x30>
    182d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1832:	e9 8d 00 00 00       	jmpq   18c4 <apply_EPC_pages+0xbd>
    1837:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    183b:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
    183f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1843:	48 89 d1             	mov    %rdx,%rcx
    1846:	ba 00 00 00 00       	mov    $0x0,%edx
    184b:	48 89 c7             	mov    %rax,%rdi
    184e:	e8 86 fb ff ff       	callq  13d9 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    1853:	85 c0                	test   %eax,%eax
    1855:	0f 95 c0             	setne  %al
    1858:	84 c0                	test   %al,%al
    185a:	74 07                	je     1863 <apply_EPC_pages+0x5c>
    185c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1861:	eb 61                	jmp    18c4 <apply_EPC_pages+0xbd>
    1863:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1867:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    186b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    186f:	48 c1 e0 0c          	shl    $0xc,%rax
    1873:	48 89 c2             	mov    %rax,%rdx
    1876:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    187a:	48 01 d0             	add    %rdx,%rax
    187d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1881:	0f b7 45 e8          	movzwl -0x18(%rbp),%eax
    1885:	0f b7 c0             	movzwl %ax,%eax
    1888:	83 e0 40             	and    $0x40,%eax
    188b:	85 c0                	test   %eax,%eax
    188d:	74 1a                	je     18a9 <apply_EPC_pages+0xa2>
    188f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1893:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1897:	48 89 c6             	mov    %rax,%rsi
    189a:	bf 0b 02 00 00       	mov    $0x20b,%edi
    189f:	e8 d4 fd ff ff       	callq  1678 <sgx_accept_forward>
    18a4:	89 45 cc             	mov    %eax,-0x34(%rbp)
    18a7:	eb 18                	jmp    18c1 <apply_EPC_pages+0xba>
    18a9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    18ad:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    18b1:	48 89 c6             	mov    %rax,%rsi
    18b4:	bf 0b 02 00 00       	mov    $0x20b,%edi
    18b9:	e8 39 f5 ff ff       	callq  df7 <_ZL19sgx_accept_backwardmmm>
    18be:	89 45 cc             	mov    %eax,-0x34(%rbp)
    18c1:	8b 45 cc             	mov    -0x34(%rbp),%eax
    18c4:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    18c8:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    18cf:	00 00 
    18d1:	74 05                	je     18d8 <apply_EPC_pages+0xd1>
    18d3:	e8 58 33 00 00       	callq  4c30 <__stack_chk_fail>
    18d8:	c9                   	leaveq 
    18d9:	c3                   	retq   

00000000000018da <trim_EPC_pages>:
    18da:	55                   	push   %rbp
    18db:	48 89 e5             	mov    %rsp,%rbp
    18de:	48 83 ec 30          	sub    $0x30,%rsp
    18e2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    18e6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    18ea:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    18ef:	75 0a                	jne    18fb <trim_EPC_pages+0x21>
    18f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    18f6:	e9 16 01 00 00       	jmpq   1a11 <trim_EPC_pages+0x137>
    18fb:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    18ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1903:	b9 00 00 00 00       	mov    $0x0,%ecx
    1908:	ba 00 00 00 00       	mov    $0x0,%edx
    190d:	48 89 c7             	mov    %rax,%rdi
    1910:	e8 c4 fa ff ff       	callq  13d9 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    1915:	85 c0                	test   %eax,%eax
    1917:	0f 95 c0             	setne  %al
    191a:	84 c0                	test   %al,%al
    191c:	74 0a                	je     1928 <trim_EPC_pages+0x4e>
    191e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1923:	e9 e9 00 00 00       	jmpq   1a11 <trim_EPC_pages+0x137>
    1928:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    192c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1930:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1934:	48 c1 e0 0c          	shl    $0xc,%rax
    1938:	48 89 c2             	mov    %rax,%rdx
    193b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    193f:	48 01 d0             	add    %rdx,%rax
    1942:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1946:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    194a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    194e:	48 89 d6             	mov    %rdx,%rsi
    1951:	48 89 c7             	mov    %rax,%rdi
    1954:	e8 ab 14 00 00       	callq  2e04 <trim_range_ocall>
    1959:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    195c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    1960:	74 1f                	je     1981 <trim_EPC_pages+0xa7>
    1962:	48 8d 0d df cb 01 00 	lea    0x1cbdf(%rip),%rcx        # 1e548 <g_dyn_entry_table+0x8>
    1969:	48 8d 15 f8 cb 01 00 	lea    0x1cbf8(%rip),%rdx        # 1e568 <_ZZ14trim_EPC_pagesE8__func__>
    1970:	be 7f 01 00 00       	mov    $0x17f,%esi
    1975:	48 8d 3d d4 cb 01 00 	lea    0x1cbd4(%rip),%rdi        # 1e550 <g_dyn_entry_table+0x10>
    197c:	e8 e2 32 00 00       	callq  4c63 <__assert>
    1981:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1985:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1989:	48 89 c6             	mov    %rax,%rsi
    198c:	bf 10 04 00 00       	mov    $0x410,%edi
    1991:	e8 e2 fc ff ff       	callq  1678 <sgx_accept_forward>
    1996:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    1999:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    199d:	74 1f                	je     19be <trim_EPC_pages+0xe4>
    199f:	48 8d 0d a2 cb 01 00 	lea    0x1cba2(%rip),%rcx        # 1e548 <g_dyn_entry_table+0x8>
    19a6:	48 8d 15 bb cb 01 00 	lea    0x1cbbb(%rip),%rdx        # 1e568 <_ZZ14trim_EPC_pagesE8__func__>
    19ad:	be 82 01 00 00       	mov    $0x182,%esi
    19b2:	48 8d 3d 97 cb 01 00 	lea    0x1cb97(%rip),%rdi        # 1e550 <g_dyn_entry_table+0x10>
    19b9:	e8 a5 32 00 00       	callq  4c63 <__assert>
    19be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19c2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    19c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    19ca:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    19ce:	73 3e                	jae    1a0e <trim_EPC_pages+0x134>
    19d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    19d4:	48 89 c7             	mov    %rax,%rdi
    19d7:	e8 9d 14 00 00       	callq  2e79 <trim_range_commit_ocall>
    19dc:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    19df:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    19e3:	74 1f                	je     1a04 <trim_EPC_pages+0x12a>
    19e5:	48 8d 0d 5c cb 01 00 	lea    0x1cb5c(%rip),%rcx        # 1e548 <g_dyn_entry_table+0x8>
    19ec:	48 8d 15 75 cb 01 00 	lea    0x1cb75(%rip),%rdx        # 1e568 <_ZZ14trim_EPC_pagesE8__func__>
    19f3:	be 89 01 00 00       	mov    $0x189,%esi
    19f8:	48 8d 3d 51 cb 01 00 	lea    0x1cb51(%rip),%rdi        # 1e550 <g_dyn_entry_table+0x10>
    19ff:	e8 5f 32 00 00       	callq  4c63 <__assert>
    1a04:	48 81 45 e8 00 10 00 	addq   $0x1000,-0x18(%rbp)
    1a0b:	00 
    1a0c:	eb b8                	jmp    19c6 <trim_EPC_pages+0xec>
    1a0e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    1a11:	c9                   	leaveq 
    1a12:	c3                   	retq   

0000000000001a13 <do_add_thread>:
    1a13:	55                   	push   %rbp
    1a14:	48 89 e5             	mov    %rsp,%rbp
    1a17:	48 83 ec 50          	sub    $0x50,%rsp
    1a1b:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    1a1f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1a26:	00 00 
    1a28:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1a2c:	31 c0                	xor    %eax,%eax
    1a2e:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%rbp)
    1a35:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1a39:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1a3d:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    1a44:	00 
    1a45:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    1a4c:	00 
    1a4d:	e8 40 c7 01 00       	callq  1e192 <get_enclave_base>
    1a52:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1a56:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    1a5a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1a5e:	b9 00 00 00 00       	mov    $0x0,%ecx
    1a63:	be 01 00 00 00       	mov    $0x1,%esi
    1a68:	48 89 c7             	mov    %rax,%rdi
    1a6b:	e8 69 f9 ff ff       	callq  13d9 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    1a70:	85 c0                	test   %eax,%eax
    1a72:	0f 95 c0             	setne  %al
    1a75:	84 c0                	test   %al,%al
    1a77:	74 0a                	je     1a83 <do_add_thread+0x70>
    1a79:	b8 01 00 00 00       	mov    $0x1,%eax
    1a7e:	e9 bb 01 00 00       	jmpq   1c3e <do_add_thread+0x22b>
    1a83:	bf 0e 00 00 00       	mov    $0xe,%edi
    1a88:	e8 a8 f5 ff ff       	callq  1035 <_Z24get_dynamic_layout_by_idt>
    1a8d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1a91:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    1a96:	75 0a                	jne    1aa2 <do_add_thread+0x8f>
    1a98:	b8 01 00 00 00       	mov    $0x1,%eax
    1a9d:	e9 9c 01 00 00       	jmpq   1c3e <do_add_thread+0x22b>
    1aa2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1aa6:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1aaa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1aae:	48 01 c2             	add    %rax,%rdx
    1ab1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1ab5:	48 01 c2             	add    %rax,%rdx
    1ab8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1abc:	48 39 c2             	cmp    %rax,%rdx
    1abf:	0f 95 c0             	setne  %al
    1ac2:	84 c0                	test   %al,%al
    1ac4:	74 0a                	je     1ad0 <do_add_thread+0xbd>
    1ac6:	b8 01 00 00 00       	mov    $0x1,%eax
    1acb:	e9 6e 01 00 00       	jmpq   1c3e <do_add_thread+0x22b>
    1ad0:	66 c7 45 c2 0e 00    	movw   $0xe,-0x3e(%rbp)
    1ad6:	66 83 7d c2 12       	cmpw   $0x12,-0x3e(%rbp)
    1adb:	0f 87 85 00 00 00    	ja     1b66 <do_add_thread+0x153>
    1ae1:	0f b7 45 c2          	movzwl -0x3e(%rbp),%eax
    1ae5:	89 c7                	mov    %eax,%edi
    1ae7:	e8 49 f5 ff ff       	callq  1035 <_Z24get_dynamic_layout_by_idt>
    1aec:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1af0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    1af5:	74 19                	je     1b10 <do_add_thread+0xfd>
    1af7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1afb:	0f b7 40 02          	movzwl 0x2(%rax),%eax
    1aff:	0f b7 c0             	movzwl %ax,%eax
    1b02:	83 e0 20             	and    $0x20,%eax
    1b05:	85 c0                	test   %eax,%eax
    1b07:	74 07                	je     1b10 <do_add_thread+0xfd>
    1b09:	b8 01 00 00 00       	mov    $0x1,%eax
    1b0e:	eb 05                	jmp    1b15 <do_add_thread+0x102>
    1b10:	b8 00 00 00 00       	mov    $0x0,%eax
    1b15:	84 c0                	test   %al,%al
    1b17:	74 3d                	je     1b56 <do_add_thread+0x143>
    1b19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b1d:	8b 40 04             	mov    0x4(%rax),%eax
    1b20:	89 c1                	mov    %eax,%ecx
    1b22:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b26:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1b2a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1b2e:	48 01 c2             	add    %rax,%rdx
    1b31:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1b35:	48 01 d0             	add    %rdx,%rax
    1b38:	48 89 ce             	mov    %rcx,%rsi
    1b3b:	48 89 c7             	mov    %rax,%rdi
    1b3e:	e8 c4 fc ff ff       	callq  1807 <apply_EPC_pages>
    1b43:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    1b46:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
    1b4a:	74 0a                	je     1b56 <do_add_thread+0x143>
    1b4c:	b8 01 00 00 00       	mov    $0x1,%eax
    1b51:	e9 e8 00 00 00       	jmpq   1c3e <do_add_thread+0x22b>
    1b56:	0f b7 45 c2          	movzwl -0x3e(%rbp),%eax
    1b5a:	83 c0 01             	add    $0x1,%eax
    1b5d:	66 89 45 c2          	mov    %ax,-0x3e(%rbp)
    1b61:	e9 70 ff ff ff       	jmpq   1ad6 <do_add_thread+0xc3>
    1b66:	48 8d 05 13 d2 01 00 	lea    0x1d213(%rip),%rax        # 1ed80 <g_global_data>
    1b6d:	48 8d 80 d0 00 00 00 	lea    0xd0(%rax),%rax
    1b74:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1b78:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1b7c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1b80:	b9 48 00 00 00       	mov    $0x48,%ecx
    1b85:	be 00 10 00 00       	mov    $0x1000,%esi
    1b8a:	48 89 c7             	mov    %rax,%rdi
    1b8d:	e8 1e f2 ff ff       	callq  db0 <memcpy_s>
    1b92:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1b96:	48 8b 50 10          	mov    0x10(%rax),%rdx
    1b9a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1b9e:	48 01 d0             	add    %rdx,%rax
    1ba1:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    1ba5:	48 89 c2             	mov    %rax,%rdx
    1ba8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1bac:	48 89 50 10          	mov    %rdx,0x10(%rax)
    1bb0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1bb4:	48 8b 50 30          	mov    0x30(%rax),%rdx
    1bb8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1bbc:	48 01 d0             	add    %rdx,%rax
    1bbf:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    1bc3:	48 89 c2             	mov    %rax,%rdx
    1bc6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1bca:	48 89 50 30          	mov    %rdx,0x30(%rax)
    1bce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1bd2:	48 8b 50 38          	mov    0x38(%rax),%rdx
    1bd6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1bda:	48 01 d0             	add    %rdx,%rax
    1bdd:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    1be1:	48 89 c2             	mov    %rax,%rdx
    1be4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1be8:	48 89 50 38          	mov    %rdx,0x38(%rax)
    1bec:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1bf0:	48 89 c6             	mov    %rax,%rsi
    1bf3:	bf 00 00 00 00       	mov    $0x0,%edi
    1bf8:	e8 09 10 00 00       	callq  2c06 <sgx_ocall>
    1bfd:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    1c00:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
    1c04:	74 07                	je     1c0d <do_add_thread+0x1fa>
    1c06:	b8 01 00 00 00       	mov    $0x1,%eax
    1c0b:	eb 31                	jmp    1c3e <do_add_thread+0x22b>
    1c0d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1c11:	48 8d 90 00 10 00 00 	lea    0x1000(%rax),%rdx
    1c18:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1c1c:	48 89 c6             	mov    %rax,%rsi
    1c1f:	bf 10 01 00 00       	mov    $0x110,%edi
    1c24:	e8 ce f1 ff ff       	callq  df7 <_ZL19sgx_accept_backwardmmm>
    1c29:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    1c2c:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
    1c30:	74 07                	je     1c39 <do_add_thread+0x226>
    1c32:	b8 01 00 00 00       	mov    $0x1,%eax
    1c37:	eb 05                	jmp    1c3e <do_add_thread+0x22b>
    1c39:	b8 00 00 00 00       	mov    $0x0,%eax
    1c3e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    1c42:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    1c49:	00 00 
    1c4b:	74 05                	je     1c52 <do_add_thread+0x23f>
    1c4d:	e8 de 2f 00 00       	callq  4c30 <__stack_chk_fail>
    1c52:	c9                   	leaveq 
    1c53:	c3                   	retq   

0000000000001c54 <memcpy_s>:
    1c54:	55                   	push   %rbp
    1c55:	48 89 e5             	mov    %rsp,%rbp
    1c58:	48 83 ec 20          	sub    $0x20,%rsp
    1c5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1c60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1c64:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    1c68:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    1c6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1c70:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    1c74:	73 07                	jae    1c7d <memcpy_s+0x29>
    1c76:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1c7b:	eb 1c                	jmp    1c99 <memcpy_s+0x45>
    1c7d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    1c81:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    1c85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1c89:	48 89 ce             	mov    %rcx,%rsi
    1c8c:	48 89 c7             	mov    %rax,%rdi
    1c8f:	e8 ad c7 00 00       	callq  e441 <memcpy>
    1c94:	b8 00 00 00 00       	mov    $0x0,%eax
    1c99:	c9                   	leaveq 
    1c9a:	c3                   	retq   

0000000000001c9b <_ZL16is_ecall_allowedj>:
    1c9b:	55                   	push   %rbp
    1c9c:	48 89 e5             	mov    %rsp,%rbp
    1c9f:	48 83 ec 30          	sub    $0x30,%rsp
    1ca3:	89 7d dc             	mov    %edi,-0x24(%rbp)
    1ca6:	8b 55 dc             	mov    -0x24(%rbp),%edx
    1ca9:	48 8d 05 50 01 22 00 	lea    0x220150(%rip),%rax        # 221e00 <g_ecall_table>
    1cb0:	48 8b 00             	mov    (%rax),%rax
    1cb3:	48 39 c2             	cmp    %rax,%rdx
    1cb6:	72 0a                	jb     1cc2 <_ZL16is_ecall_allowedj+0x27>
    1cb8:	b8 01 10 00 00       	mov    $0x1001,%eax
    1cbd:	e9 c3 00 00 00       	jmpq   1d85 <_ZL16is_ecall_allowedj+0xea>
    1cc2:	e8 06 c5 01 00       	callq  1e1cd <get_thread_data>
    1cc7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1ccb:	0f ae e8             	lfence 
    1cce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1cd2:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1cd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1cda:	48 8b 40 10          	mov    0x10(%rax),%rax
    1cde:	48 39 c2             	cmp    %rax,%rdx
    1ce1:	75 2a                	jne    1d0d <_ZL16is_ecall_allowedj+0x72>
    1ce3:	48 8d 05 16 01 22 00 	lea    0x220116(%rip),%rax        # 221e00 <g_ecall_table>
    1cea:	8b 55 dc             	mov    -0x24(%rbp),%edx
    1ced:	48 c1 e2 04          	shl    $0x4,%rdx
    1cf1:	48 01 d0             	add    %rdx,%rax
    1cf4:	48 83 c0 10          	add    $0x10,%rax
    1cf8:	0f b6 00             	movzbl (%rax),%eax
    1cfb:	84 c0                	test   %al,%al
    1cfd:	74 07                	je     1d06 <_ZL16is_ecall_allowedj+0x6b>
    1cff:	b8 07 10 00 00       	mov    $0x1007,%eax
    1d04:	eb 7f                	jmp    1d85 <_ZL16is_ecall_allowedj+0xea>
    1d06:	b8 00 00 00 00       	mov    $0x0,%eax
    1d0b:	eb 78                	jmp    1d85 <_ZL16is_ecall_allowedj+0xea>
    1d0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1d11:	48 8b 40 08          	mov    0x8(%rax),%rax
    1d15:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1d19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1d1d:	48 8b 40 20          	mov    0x20(%rax),%rax
    1d21:	48 3d 44 49 43 4f    	cmp    $0x4f434944,%rax
    1d27:	74 05                	je     1d2e <_ZL16is_ecall_allowedj+0x93>
    1d29:	e8 9b c7 01 00       	callq  1e4c9 <abort>
    1d2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1d32:	48 8b 40 28          	mov    0x28(%rax),%rax
    1d36:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1d3a:	48 8d 05 ff c7 01 00 	lea    0x1c7ff(%rip),%rax        # 1e540 <g_dyn_entry_table>
    1d41:	48 8b 00             	mov    (%rax),%rax
    1d44:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    1d48:	77 07                	ja     1d51 <_ZL16is_ecall_allowedj+0xb6>
    1d4a:	b8 01 10 00 00       	mov    $0x1001,%eax
    1d4f:	eb 34                	jmp    1d85 <_ZL16is_ecall_allowedj+0xea>
    1d51:	48 8d 05 a8 00 22 00 	lea    0x2200a8(%rip),%rax        # 221e00 <g_ecall_table>
    1d58:	48 8b 00             	mov    (%rax),%rax
    1d5b:	48 0f af 45 f8       	imul   -0x8(%rbp),%rax
    1d60:	48 89 c2             	mov    %rax,%rdx
    1d63:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1d66:	48 01 c2             	add    %rax,%rdx
    1d69:	48 8d 05 d0 c7 01 00 	lea    0x1c7d0(%rip),%rax        # 1e540 <g_dyn_entry_table>
    1d70:	0f b6 44 10 08       	movzbl 0x8(%rax,%rdx,1),%eax
    1d75:	84 c0                	test   %al,%al
    1d77:	74 07                	je     1d80 <_ZL16is_ecall_allowedj+0xe5>
    1d79:	b8 00 00 00 00       	mov    $0x0,%eax
    1d7e:	eb 05                	jmp    1d85 <_ZL16is_ecall_allowedj+0xea>
    1d80:	b8 07 10 00 00       	mov    $0x1007,%eax
    1d85:	c9                   	leaveq 
    1d86:	c3                   	retq   

0000000000001d87 <_ZL13get_func_addrjPPv>:
    1d87:	55                   	push   %rbp
    1d88:	48 89 e5             	mov    %rsp,%rbp
    1d8b:	48 83 ec 20          	sub    $0x20,%rsp
    1d8f:	89 7d ec             	mov    %edi,-0x14(%rbp)
    1d92:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1d96:	83 7d ec fa          	cmpl   $0xfffffffa,-0x14(%rbp)
    1d9a:	0f 94 c0             	sete   %al
    1d9d:	0f b6 c0             	movzbl %al,%eax
    1da0:	48 85 c0             	test   %rax,%rax
    1da3:	75 0f                	jne    1db4 <_ZL13get_func_addrjPPv+0x2d>
    1da5:	83 7d ec f9          	cmpl   $0xfffffff9,-0x14(%rbp)
    1da9:	0f 94 c0             	sete   %al
    1dac:	0f b6 c0             	movzbl %al,%eax
    1daf:	48 85 c0             	test   %rax,%rax
    1db2:	74 5e                	je     1e12 <_ZL13get_func_addrjPPv+0x8b>
    1db4:	e8 14 c4 01 00       	callq  1e1cd <get_thread_data>
    1db9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1dbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1dc1:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1dc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1dc9:	48 8b 40 10          	mov    0x10(%rax),%rax
    1dcd:	48 39 c2             	cmp    %rax,%rdx
    1dd0:	74 0a                	je     1ddc <_ZL13get_func_addrjPPv+0x55>
    1dd2:	b8 01 00 00 00       	mov    $0x1,%eax
    1dd7:	e9 96 00 00 00       	jmpq   1e72 <_ZL13get_func_addrjPPv+0xeb>
    1ddc:	83 7d ec fa          	cmpl   $0xfffffffa,-0x14(%rbp)
    1de0:	75 15                	jne    1df7 <_ZL13get_func_addrjPPv+0x70>
    1de2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1de6:	48 8d 15 f9 0f 00 00 	lea    0xff9(%rip),%rdx        # 2de6 <do_init_switchless>
    1ded:	48 89 10             	mov    %rdx,(%rax)
    1df0:	b8 00 00 00 00       	mov    $0x0,%eax
    1df5:	eb 7b                	jmp    1e72 <_ZL13get_func_addrjPPv+0xeb>
    1df7:	83 7d ec f9          	cmpl   $0xfffffff9,-0x14(%rbp)
    1dfb:	75 15                	jne    1e12 <_ZL13get_func_addrjPPv+0x8b>
    1dfd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e01:	48 8d 15 ed 0f 00 00 	lea    0xfed(%rip),%rdx        # 2df5 <do_run_switchless_tworker>
    1e08:	48 89 10             	mov    %rdx,(%rax)
    1e0b:	b8 00 00 00 00       	mov    $0x0,%eax
    1e10:	eb 60                	jmp    1e72 <_ZL13get_func_addrjPPv+0xeb>
    1e12:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1e15:	89 c7                	mov    %eax,%edi
    1e17:	e8 7f fe ff ff       	callq  1c9b <_ZL16is_ecall_allowedj>
    1e1c:	89 45 f4             	mov    %eax,-0xc(%rbp)
    1e1f:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    1e23:	74 05                	je     1e2a <_ZL13get_func_addrjPPv+0xa3>
    1e25:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1e28:	eb 48                	jmp    1e72 <_ZL13get_func_addrjPPv+0xeb>
    1e2a:	48 8d 05 cf ff 21 00 	lea    0x21ffcf(%rip),%rax        # 221e00 <g_ecall_table>
    1e31:	8b 55 ec             	mov    -0x14(%rbp),%edx
    1e34:	48 c1 e2 04          	shl    $0x4,%rdx
    1e38:	48 01 d0             	add    %rdx,%rax
    1e3b:	48 83 c0 08          	add    $0x8,%rax
    1e3f:	48 8b 10             	mov    (%rax),%rdx
    1e42:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e46:	48 89 10             	mov    %rdx,(%rax)
    1e49:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e4d:	48 8b 00             	mov    (%rax),%rax
    1e50:	be 00 00 00 00       	mov    $0x0,%esi
    1e55:	48 89 c7             	mov    %rax,%rdi
    1e58:	e8 24 eb ff ff       	callq  981 <sgx_is_within_enclave>
    1e5d:	85 c0                	test   %eax,%eax
    1e5f:	0f 94 c0             	sete   %al
    1e62:	84 c0                	test   %al,%al
    1e64:	74 07                	je     1e6d <_ZL13get_func_addrjPPv+0xe6>
    1e66:	b8 01 00 00 00       	mov    $0x1,%eax
    1e6b:	eb 05                	jmp    1e72 <_ZL13get_func_addrjPPv+0xeb>
    1e6d:	b8 00 00 00 00       	mov    $0x0,%eax
    1e72:	c9                   	leaveq 
    1e73:	c3                   	retq   

0000000000001e74 <_ZL17is_utility_threadv>:
    1e74:	55                   	push   %rbp
    1e75:	48 89 e5             	mov    %rsp,%rbp
    1e78:	48 83 ec 10          	sub    $0x10,%rsp
    1e7c:	e8 4c c3 01 00       	callq  1e1cd <get_thread_data>
    1e81:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1e85:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    1e8a:	74 17                	je     1ea3 <_ZL17is_utility_threadv+0x2f>
    1e8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1e90:	48 8b 40 30          	mov    0x30(%rax),%rax
    1e94:	83 e0 01             	and    $0x1,%eax
    1e97:	48 85 c0             	test   %rax,%rax
    1e9a:	74 07                	je     1ea3 <_ZL17is_utility_threadv+0x2f>
    1e9c:	b8 01 00 00 00       	mov    $0x1,%eax
    1ea1:	eb 05                	jmp    1ea8 <_ZL17is_utility_threadv+0x34>
    1ea3:	b8 00 00 00 00       	mov    $0x0,%eax
    1ea8:	c9                   	leaveq 
    1ea9:	c3                   	retq   

0000000000001eaa <_ZL11do_save_tcsPv>:
    1eaa:	55                   	push   %rbp
    1eab:	48 89 e5             	mov    %rsp,%rbp
    1eae:	48 83 ec 30          	sub    $0x30,%rsp
    1eb2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1eb6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1ebd:	00 00 
    1ebf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1ec3:	31 c0                	xor    %eax,%eax
    1ec5:	e8 aa ff ff ff       	callq  1e74 <_ZL17is_utility_threadv>
    1eca:	83 f0 01             	xor    $0x1,%eax
    1ecd:	84 c0                	test   %al,%al
    1ecf:	74 0a                	je     1edb <_ZL11do_save_tcsPv+0x31>
    1ed1:	b8 01 00 00 00       	mov    $0x1,%eax
    1ed6:	e9 b0 00 00 00       	jmpq   1f8b <_ZL11do_save_tcsPv+0xe1>
    1edb:	48 8b 05 46 0a 22 00 	mov    0x220a46(%rip),%rax        # 222928 <_ZL12g_tcs_cookie>
    1ee2:	48 85 c0             	test   %rax,%rax
    1ee5:	0f 94 c0             	sete   %al
    1ee8:	0f b6 c0             	movzbl %al,%eax
    1eeb:	48 85 c0             	test   %rax,%rax
    1eee:	74 4b                	je     1f3b <_ZL11do_save_tcsPv+0x91>
    1ef0:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    1ef7:	00 
    1ef8:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    1efc:	be 08 00 00 00       	mov    $0x8,%esi
    1f01:	48 89 c7             	mov    %rax,%rdi
    1f04:	e8 3e ed ff ff       	callq  c47 <sgx_read_rand>
    1f09:	85 c0                	test   %eax,%eax
    1f0b:	0f 95 c0             	setne  %al
    1f0e:	84 c0                	test   %al,%al
    1f10:	74 07                	je     1f19 <_ZL11do_save_tcsPv+0x6f>
    1f12:	b8 01 00 00 00       	mov    $0x1,%eax
    1f17:	eb 72                	jmp    1f8b <_ZL11do_save_tcsPv+0xe1>
    1f19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1f1d:	48 85 c0             	test   %rax,%rax
    1f20:	75 02                	jne    1f24 <_ZL11do_save_tcsPv+0x7a>
    1f22:	eb d4                	jmp    1ef8 <_ZL11do_save_tcsPv+0x4e>
    1f24:	48 8b 05 fd 09 22 00 	mov    0x2209fd(%rip),%rax        # 222928 <_ZL12g_tcs_cookie>
    1f2b:	48 85 c0             	test   %rax,%rax
    1f2e:	75 0b                	jne    1f3b <_ZL11do_save_tcsPv+0x91>
    1f30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1f34:	48 89 05 ed 09 22 00 	mov    %rax,0x2209ed(%rip)        # 222928 <_ZL12g_tcs_cookie>
    1f3b:	bf 10 00 00 00       	mov    $0x10,%edi
    1f40:	e8 79 8e 00 00       	callq  adbe <dlmalloc>
    1f45:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1f49:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    1f4e:	75 07                	jne    1f57 <_ZL11do_save_tcsPv+0xad>
    1f50:	b8 01 00 00 00       	mov    $0x1,%eax
    1f55:	eb 34                	jmp    1f8b <_ZL11do_save_tcsPv+0xe1>
    1f57:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1f5b:	48 8b 05 c6 09 22 00 	mov    0x2209c6(%rip),%rax        # 222928 <_ZL12g_tcs_cookie>
    1f62:	48 31 c2             	xor    %rax,%rdx
    1f65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1f69:	48 89 10             	mov    %rdx,(%rax)
    1f6c:	48 8b 15 ad 09 22 00 	mov    0x2209ad(%rip),%rdx        # 222920 <_ZL10g_tcs_node>
    1f73:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1f77:	48 89 50 08          	mov    %rdx,0x8(%rax)
    1f7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1f7f:	48 89 05 9a 09 22 00 	mov    %rax,0x22099a(%rip)        # 222920 <_ZL10g_tcs_node>
    1f86:	b8 00 00 00 00       	mov    $0x0,%eax
    1f8b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    1f8f:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    1f96:	00 00 
    1f98:	74 05                	je     1f9f <_ZL11do_save_tcsPv+0xf5>
    1f9a:	e8 91 2c 00 00       	callq  4c30 <__stack_chk_fail>
    1f9f:	c9                   	leaveq 
    1fa0:	c3                   	retq   

0000000000001fa1 <_ZL10do_del_tcsPv>:
    1fa1:	55                   	push   %rbp
    1fa2:	48 89 e5             	mov    %rsp,%rbp
    1fa5:	48 83 ec 30          	sub    $0x30,%rsp
    1fa9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1fad:	e8 c2 fe ff ff       	callq  1e74 <_ZL17is_utility_threadv>
    1fb2:	83 f0 01             	xor    $0x1,%eax
    1fb5:	84 c0                	test   %al,%al
    1fb7:	0f 85 c1 00 00 00    	jne    207e <_ZL10do_del_tcsPv+0xdd>
    1fbd:	48 8b 05 5c 09 22 00 	mov    0x22095c(%rip),%rax        # 222920 <_ZL10g_tcs_node>
    1fc4:	48 85 c0             	test   %rax,%rax
    1fc7:	0f 84 b2 00 00 00    	je     207f <_ZL10do_del_tcsPv+0xde>
    1fcd:	48 8b 05 4c 09 22 00 	mov    0x22094c(%rip),%rax        # 222920 <_ZL10g_tcs_node>
    1fd4:	48 8b 10             	mov    (%rax),%rdx
    1fd7:	48 8b 05 4a 09 22 00 	mov    0x22094a(%rip),%rax        # 222928 <_ZL12g_tcs_cookie>
    1fde:	48 31 d0             	xor    %rdx,%rax
    1fe1:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    1fe5:	75 2b                	jne    2012 <_ZL10do_del_tcsPv+0x71>
    1fe7:	48 8b 05 32 09 22 00 	mov    0x220932(%rip),%rax        # 222920 <_ZL10g_tcs_node>
    1fee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1ff2:	48 8b 05 27 09 22 00 	mov    0x220927(%rip),%rax        # 222920 <_ZL10g_tcs_node>
    1ff9:	48 8b 40 08          	mov    0x8(%rax),%rax
    1ffd:	48 89 05 1c 09 22 00 	mov    %rax,0x22091c(%rip)        # 222920 <_ZL10g_tcs_node>
    2004:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2008:	48 89 c7             	mov    %rax,%rdi
    200b:	e8 9e 98 00 00       	callq  b8ae <dlfree>
    2010:	eb 6d                	jmp    207f <_ZL10do_del_tcsPv+0xde>
    2012:	48 8b 05 07 09 22 00 	mov    0x220907(%rip),%rax        # 222920 <_ZL10g_tcs_node>
    2019:	48 8b 40 08          	mov    0x8(%rax),%rax
    201d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2021:	48 8b 05 f8 08 22 00 	mov    0x2208f8(%rip),%rax        # 222920 <_ZL10g_tcs_node>
    2028:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    202c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2031:	74 4c                	je     207f <_ZL10do_del_tcsPv+0xde>
    2033:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2037:	48 8b 10             	mov    (%rax),%rdx
    203a:	48 8b 05 e7 08 22 00 	mov    0x2208e7(%rip),%rax        # 222928 <_ZL12g_tcs_cookie>
    2041:	48 31 d0             	xor    %rdx,%rax
    2044:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    2048:	75 1e                	jne    2068 <_ZL10do_del_tcsPv+0xc7>
    204a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    204e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    2052:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2056:	48 89 50 08          	mov    %rdx,0x8(%rax)
    205a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    205e:	48 89 c7             	mov    %rax,%rdi
    2061:	e8 48 98 00 00       	callq  b8ae <dlfree>
    2066:	eb 17                	jmp    207f <_ZL10do_del_tcsPv+0xde>
    2068:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    206c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2070:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2074:	48 8b 40 08          	mov    0x8(%rax),%rax
    2078:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    207c:	eb ae                	jmp    202c <_ZL10do_del_tcsPv+0x8b>
    207e:	90                   	nop
    207f:	c9                   	leaveq 
    2080:	c3                   	retq   

0000000000002081 <_ZL10trts_ecalljPv>:
    2081:	55                   	push   %rbp
    2082:	48 89 e5             	mov    %rsp,%rbp
    2085:	48 83 ec 40          	sub    $0x40,%rsp
    2089:	89 7d cc             	mov    %edi,-0x34(%rbp)
    208c:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    2090:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2097:	00 00 
    2099:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    209d:	31 c0                	xor    %eax,%eax
    209f:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
    20a6:	0f b6 05 73 ff 21 00 	movzbl 0x21ff73(%rip),%eax        # 222020 <_ZL16g_is_first_ecall>
    20ad:	0f b6 c0             	movzbl %al,%eax
    20b0:	48 85 c0             	test   %rax,%rax
    20b3:	0f 95 c0             	setne  %al
    20b6:	84 c0                	test   %al,%al
    20b8:	0f 84 9a 00 00 00    	je     2158 <_ZL10trts_ecalljPv+0xd7>
    20be:	e8 0a c1 01 00       	callq  1e1cd <get_thread_data>
    20c3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    20c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    20cb:	48 8b 50 08          	mov    0x8(%rax),%rdx
    20cf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    20d3:	48 8b 40 10          	mov    0x10(%rax),%rax
    20d7:	48 39 c2             	cmp    %rax,%rdx
    20da:	74 0a                	je     20e6 <_ZL10trts_ecalljPv+0x65>
    20dc:	b8 07 10 00 00       	mov    $0x1007,%eax
    20e1:	e9 b2 00 00 00       	jmpq   2198 <_ZL10trts_ecalljPv+0x117>
    20e6:	48 8d 3d 43 08 22 00 	lea    0x220843(%rip),%rdi        # 222930 <_ZL10g_ife_lock>
    20ed:	e8 1f ca 00 00       	callq  eb11 <sgx_spin_lock>
    20f2:	0f b6 05 27 ff 21 00 	movzbl 0x21ff27(%rip),%eax        # 222020 <_ZL16g_is_first_ecall>
    20f9:	84 c0                	test   %al,%al
    20fb:	74 4f                	je     214c <_ZL10trts_ecalljPv+0xcb>
    20fd:	48 8d 05 1c fd 21 00 	lea    0x21fd1c(%rip),%rax        # 221e20 <EDMM_supported>
    2104:	8b 00                	mov    (%rax),%eax
    2106:	85 c0                	test   %eax,%eax
    2108:	74 36                	je     2140 <_ZL10trts_ecalljPv+0xbf>
    210a:	48 8b 05 cf fe 21 00 	mov    0x21fecf(%rip),%rax        # 221fe0 <_DYNAMIC+0x190>
    2111:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2115:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2119:	48 89 c7             	mov    %rax,%rdi
    211c:	e8 55 25 00 00       	callq  4676 <change_protection>
    2121:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    2124:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    2128:	0f 95 c0             	setne  %al
    212b:	84 c0                	test   %al,%al
    212d:	74 11                	je     2140 <_ZL10trts_ecalljPv+0xbf>
    212f:	48 8d 3d fa 07 22 00 	lea    0x2207fa(%rip),%rdi        # 222930 <_ZL10g_ife_lock>
    2136:	e8 3d ca 00 00       	callq  eb78 <sgx_spin_unlock>
    213b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    213e:	eb 58                	jmp    2198 <_ZL10trts_ecalljPv+0x117>
    2140:	e8 a4 2a 00 00       	callq  4be9 <init_global_object>
    2145:	c6 05 d4 fe 21 00 00 	movb   $0x0,0x21fed4(%rip)        # 222020 <_ZL16g_is_first_ecall>
    214c:	48 8d 3d dd 07 22 00 	lea    0x2207dd(%rip),%rdi        # 222930 <_ZL10g_ife_lock>
    2153:	e8 20 ca 00 00       	callq  eb78 <sgx_spin_unlock>
    2158:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    215f:	00 
    2160:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    2164:	8b 45 cc             	mov    -0x34(%rbp),%eax
    2167:	48 89 d6             	mov    %rdx,%rsi
    216a:	89 c7                	mov    %eax,%edi
    216c:	e8 16 fc ff ff       	callq  1d87 <_ZL13get_func_addrjPPv>
    2171:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    2174:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    2178:	75 1b                	jne    2195 <_ZL10trts_ecalljPv+0x114>
    217a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    217e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2182:	0f ae e8             	lfence 
    2185:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    2189:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    218d:	48 89 d7             	mov    %rdx,%rdi
    2190:	ff d0                	callq  *%rax
    2192:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    2195:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    2198:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    219c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    21a3:	00 00 
    21a5:	74 05                	je     21ac <_ZL10trts_ecalljPv+0x12b>
    21a7:	e8 84 2a 00 00       	callq  4c30 <__stack_chk_fail>
    21ac:	c9                   	leaveq 
    21ad:	c3                   	retq   

00000000000021ae <_ZL24init_static_stack_canaryPv>:
    21ae:	55                   	push   %rbp
    21af:	48 89 e5             	mov    %rsp,%rbp
    21b2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    21b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    21ba:	48 83 c0 08          	add    $0x8,%rax
    21be:	48 2d b0 02 01 00    	sub    $0x102b0,%rax
    21c4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    21c8:	48 8d 05 59 fc 21 00 	lea    0x21fc59(%rip),%rax        # 221e28 <__intel_security_cookie>
    21cf:	48 8b 10             	mov    (%rax),%rdx
    21d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    21d6:	48 89 10             	mov    %rdx,(%rax)
    21d9:	90                   	nop
    21da:	5d                   	pop    %rbp
    21db:	c3                   	retq   

00000000000021dc <do_init_thread>:
    21dc:	55                   	push   %rbp
    21dd:	48 89 e5             	mov    %rsp,%rbp
    21e0:	48 83 ec 50          	sub    $0x50,%rsp
    21e4:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    21e8:	89 f0                	mov    %esi,%eax
    21ea:	88 45 b4             	mov    %al,-0x4c(%rbp)
    21ed:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    21f4:	00 00 
    21f6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    21fa:	31 c0                	xor    %eax,%eax
    21fc:	48 8d 05 7d cb 01 00 	lea    0x1cb7d(%rip),%rax        # 1ed80 <g_global_data>
    2203:	48 8b 50 30          	mov    0x30(%rax),%rdx
    2207:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    220b:	48 01 d0             	add    %rdx,%rax
    220e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2212:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2216:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    221d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2221:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    2226:	0f 94 c0             	sete   %al
    2229:	88 45 c3             	mov    %al,-0x3d(%rbp)
    222c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2230:	48 8b 40 28          	mov    0x28(%rax),%rax
    2234:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2238:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    223c:	48 8b 40 30          	mov    0x30(%rax),%rax
    2240:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2244:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2248:	b9 a0 00 00 00       	mov    $0xa0,%ecx
    224d:	48 8d 15 2c cb 01 00 	lea    0x1cb2c(%rip),%rdx        # 1ed80 <g_global_data>
    2254:	48 8d 52 30          	lea    0x30(%rdx),%rdx
    2258:	be 00 10 00 00       	mov    $0x1000,%esi
    225d:	48 89 c7             	mov    %rax,%rdi
    2260:	e8 ef f9 ff ff       	callq  1c54 <memcpy_s>
    2265:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2269:	48 8b 50 08          	mov    0x8(%rax),%rdx
    226d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2271:	48 01 c2             	add    %rax,%rdx
    2274:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2278:	48 89 50 08          	mov    %rdx,0x8(%rax)
    227c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2280:	48 8b 10             	mov    (%rax),%rdx
    2283:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2287:	48 01 c2             	add    %rax,%rdx
    228a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    228e:	48 89 10             	mov    %rdx,(%rax)
    2291:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2295:	48 8b 50 10          	mov    0x10(%rax),%rdx
    2299:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    229d:	48 01 c2             	add    %rax,%rdx
    22a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    22a4:	48 89 50 10          	mov    %rdx,0x10(%rax)
    22a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    22ac:	48 8b 50 18          	mov    0x18(%rax),%rdx
    22b0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    22b4:	48 01 c2             	add    %rax,%rdx
    22b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    22bb:	48 89 50 18          	mov    %rdx,0x18(%rax)
    22bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    22c3:	48 8b 50 18          	mov    0x18(%rax),%rdx
    22c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    22cb:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
    22d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    22d6:	48 8b 50 20          	mov    0x20(%rax),%rdx
    22da:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    22de:	48 01 c2             	add    %rax,%rdx
    22e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    22e5:	48 89 50 20          	mov    %rdx,0x20(%rax)
    22e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    22ed:	48 8b 50 58          	mov    0x58(%rax),%rdx
    22f1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    22f5:	48 01 c2             	add    %rax,%rdx
    22f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    22fc:	48 89 50 58          	mov    %rdx,0x58(%rax)
    2300:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2304:	48 8b 50 50          	mov    0x50(%rax),%rdx
    2308:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    230c:	48 01 c2             	add    %rax,%rdx
    230f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2313:	48 89 50 50          	mov    %rdx,0x50(%rax)
    2317:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    231b:	48 8b 40 08          	mov    0x8(%rax),%rax
    231f:	48 8d 90 50 fd ff ff 	lea    -0x2b0(%rax),%rdx
    2326:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    232a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    232e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2332:	48 8b 40 10          	mov    0x10(%rax),%rax
    2336:	48 8d 90 50 fd ff ff 	lea    -0x2b0(%rax),%rdx
    233d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2341:	48 89 50 10          	mov    %rdx,0x10(%rax)
    2345:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2349:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    234d:	48 89 50 28          	mov    %rdx,0x28(%rax)
    2351:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2355:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2359:	48 89 50 30          	mov    %rdx,0x30(%rax)
    235d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2361:	48 89 c7             	mov    %rax,%rdi
    2364:	e8 45 fe ff ff       	callq  21ae <_ZL24init_static_stack_canaryPv>
    2369:	80 7d b4 00          	cmpb   $0x0,-0x4c(%rbp)
    236d:	74 0c                	je     237b <do_init_thread+0x19f>
    236f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2373:	48 c7 40 30 01 00 00 	movq   $0x1,0x30(%rax)
    237a:	00 
    237b:	80 7d c3 00          	cmpb   $0x0,-0x3d(%rbp)
    237f:	74 5d                	je     23de <do_init_thread+0x202>
    2381:	48 8d 05 98 fa 21 00 	lea    0x21fa98(%rip),%rax        # 221e20 <EDMM_supported>
    2388:	8b 00                	mov    (%rax),%eax
    238a:	85 c0                	test   %eax,%eax
    238c:	74 1d                	je     23ab <do_init_thread+0x1cf>
    238e:	80 7d b4 00          	cmpb   $0x0,-0x4c(%rbp)
    2392:	75 10                	jne    23a4 <do_init_thread+0x1c8>
    2394:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2398:	48 89 c7             	mov    %rax,%rdi
    239b:	e8 eb f1 ff ff       	callq  158b <is_dynamic_thread>
    23a0:	85 c0                	test   %eax,%eax
    23a2:	74 07                	je     23ab <do_init_thread+0x1cf>
    23a4:	b8 01 00 00 00       	mov    $0x1,%eax
    23a9:	eb 05                	jmp    23b0 <do_init_thread+0x1d4>
    23ab:	b8 00 00 00 00       	mov    $0x0,%eax
    23b0:	84 c0                	test   %al,%al
    23b2:	74 39                	je     23ed <do_init_thread+0x211>
    23b4:	e8 92 f2 ff ff       	callq  164b <get_dynamic_stack_max_page>
    23b9:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    23bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    23c0:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    23c7:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    23ca:	48 c1 e2 0c          	shl    $0xc,%rdx
    23ce:	48 01 c2             	add    %rax,%rdx
    23d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    23d5:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
    23dc:	eb 0f                	jmp    23ed <do_init_thread+0x211>
    23de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    23e2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    23e6:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
    23ed:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    23f4:	00 
    23f5:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    23fc:	00 
    23fd:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    2401:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    2405:	48 89 c6             	mov    %rax,%rsi
    2408:	48 8b 05 d1 fb 21 00 	mov    0x21fbd1(%rip),%rax        # 221fe0 <_DYNAMIC+0x190>
    240f:	48 89 c7             	mov    %rax,%rdi
    2412:	e8 cb 1d 00 00       	callq  41e2 <elf_tls_info>
    2417:	85 c0                	test   %eax,%eax
    2419:	0f 95 c0             	setne  %al
    241c:	84 c0                	test   %al,%al
    241e:	74 0a                	je     242a <do_init_thread+0x24e>
    2420:	b8 01 00 00 00       	mov    $0x1,%eax
    2425:	e9 83 00 00 00       	jmpq   24ad <do_init_thread+0x2d1>
    242a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    242e:	48 85 c0             	test   %rax,%rax
    2431:	74 75                	je     24a8 <do_init_thread+0x2cc>
    2433:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2437:	48 8b 10             	mov    (%rax),%rdx
    243a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    243e:	48 8b 40 50          	mov    0x50(%rax),%rax
    2442:	48 29 c2             	sub    %rax,%rdx
    2445:	48 89 d0             	mov    %rdx,%rax
    2448:	48 05 ff 0f 00 00    	add    $0xfff,%rax
    244e:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    2454:	48 89 c2             	mov    %rax,%rdx
    2457:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    245b:	48 8b 40 50          	mov    0x50(%rax),%rax
    245f:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    2465:	be 00 00 00 00       	mov    $0x0,%esi
    246a:	48 89 c7             	mov    %rax,%rdi
    246d:	e8 3d c0 00 00       	callq  e4af <memset>
    2472:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2476:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    247a:	49 89 d0             	mov    %rdx,%r8
    247d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2481:	48 8b 0a             	mov    (%rdx),%rcx
    2484:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2488:	48 8b 52 50          	mov    0x50(%rdx),%rdx
    248c:	48 29 d1             	sub    %rdx,%rcx
    248f:	48 89 ce             	mov    %rcx,%rsi
    2492:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2496:	48 8b 52 50          	mov    0x50(%rdx),%rdx
    249a:	48 89 d7             	mov    %rdx,%rdi
    249d:	48 89 c1             	mov    %rax,%rcx
    24a0:	4c 89 c2             	mov    %r8,%rdx
    24a3:	e8 ac f7 ff ff       	callq  1c54 <memcpy_s>
    24a8:	b8 00 00 00 00       	mov    $0x0,%eax
    24ad:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    24b1:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    24b8:	00 00 
    24ba:	74 05                	je     24c1 <do_init_thread+0x2e5>
    24bc:	e8 6f 27 00 00       	callq  4c30 <__stack_chk_fail>
    24c1:	c9                   	leaveq 
    24c2:	c3                   	retq   

00000000000024c3 <do_ecall>:
    24c3:	55                   	push   %rbp
    24c4:	48 89 e5             	mov    %rsp,%rbp
    24c7:	48 83 ec 30          	sub    $0x30,%rsp
    24cb:	89 7d ec             	mov    %edi,-0x14(%rbp)
    24ce:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    24d2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    24d6:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    24dd:	e8 b8 bc 01 00       	callq  1e19a <get_enclave_state>
    24e2:	83 f8 02             	cmp    $0x2,%eax
    24e5:	0f 95 c0             	setne  %al
    24e8:	84 c0                	test   %al,%al
    24ea:	74 08                	je     24f4 <do_ecall+0x31>
    24ec:	8b 45 f4             	mov    -0xc(%rbp),%eax
    24ef:	e9 b2 00 00 00       	jmpq   25a6 <do_ecall+0xe3>
    24f4:	e8 d4 bc 01 00       	callq  1e1cd <get_thread_data>
    24f9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    24fd:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2502:	74 25                	je     2529 <do_ecall+0x66>
    2504:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2508:	48 8b 50 10          	mov    0x10(%rax),%rdx
    250c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2510:	48 8b 40 08          	mov    0x8(%rax),%rax
    2514:	48 39 c2             	cmp    %rax,%rdx
    2517:	75 17                	jne    2530 <do_ecall+0x6d>
    2519:	48 8d 05 60 c8 01 00 	lea    0x1c860(%rip),%rax        # 1ed80 <g_global_data>
    2520:	48 8b 40 28          	mov    0x28(%rax),%rax
    2524:	48 85 c0             	test   %rax,%rax
    2527:	74 07                	je     2530 <do_ecall+0x6d>
    2529:	b8 01 00 00 00       	mov    $0x1,%eax
    252e:	eb 05                	jmp    2535 <do_ecall+0x72>
    2530:	b8 00 00 00 00       	mov    $0x0,%eax
    2535:	84 c0                	test   %al,%al
    2537:	74 1f                	je     2558 <do_ecall+0x95>
    2539:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    253d:	be 00 00 00 00       	mov    $0x0,%esi
    2542:	48 89 c7             	mov    %rax,%rdi
    2545:	e8 92 fc ff ff       	callq  21dc <do_init_thread>
    254a:	89 45 f4             	mov    %eax,-0xc(%rbp)
    254d:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    2551:	74 05                	je     2558 <do_ecall+0x95>
    2553:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2556:	eb 4e                	jmp    25a6 <do_ecall+0xe3>
    2558:	e8 70 bc 01 00       	callq  1e1cd <get_thread_data>
    255d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2561:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2565:	48 8b 50 10          	mov    0x10(%rax),%rdx
    2569:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    256d:	48 8b 40 08          	mov    0x8(%rax),%rax
    2571:	48 39 c2             	cmp    %rax,%rdx
    2574:	75 19                	jne    258f <do_ecall+0xcc>
    2576:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    257a:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
    257e:	48 89 c6             	mov    %rax,%rsi
    2581:	48 8d 3d f9 fa ff ff 	lea    -0x507(%rip),%rdi        # 2081 <_ZL10trts_ecalljPv>
    2588:	e8 d8 03 00 00       	callq  2965 <_Z20random_stack_advanceILj2048E9_status_tIjPvEIRiRS1_EET0_PFS4_DpT1_EDpOT2_>
    258d:	eb 11                	jmp    25a0 <do_ecall+0xdd>
    258f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2593:	8b 55 ec             	mov    -0x14(%rbp),%edx
    2596:	48 89 c6             	mov    %rax,%rsi
    2599:	89 d7                	mov    %edx,%edi
    259b:	e8 e1 fa ff ff       	callq  2081 <_ZL10trts_ecalljPv>
    25a0:	89 45 f4             	mov    %eax,-0xc(%rbp)
    25a3:	8b 45 f4             	mov    -0xc(%rbp),%eax
    25a6:	c9                   	leaveq 
    25a7:	c3                   	retq   

00000000000025a8 <do_ecall_add_thread>:
    25a8:	55                   	push   %rbp
    25a9:	48 89 e5             	mov    %rsp,%rbp
    25ac:	48 83 ec 40          	sub    $0x40,%rsp
    25b0:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    25b4:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
    25bb:	e8 b4 f8 ff ff       	callq  1e74 <_ZL17is_utility_threadv>
    25c0:	83 f0 01             	xor    $0x1,%eax
    25c3:	84 c0                	test   %al,%al
    25c5:	74 08                	je     25cf <do_ecall_add_thread+0x27>
    25c7:	8b 45 dc             	mov    -0x24(%rbp),%eax
    25ca:	e9 9b 00 00 00       	jmpq   266a <do_ecall_add_thread+0xc2>
    25cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    25d3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    25d7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    25dc:	75 08                	jne    25e6 <do_ecall_add_thread+0x3e>
    25de:	8b 45 dc             	mov    -0x24(%rbp),%eax
    25e1:	e9 84 00 00 00       	jmpq   266a <do_ecall_add_thread+0xc2>
    25e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    25ea:	be 08 00 00 00       	mov    $0x8,%esi
    25ef:	48 89 c7             	mov    %rax,%rdi
    25f2:	e8 1a e4 ff ff       	callq  a11 <sgx_is_outside_enclave>
    25f7:	85 c0                	test   %eax,%eax
    25f9:	0f 94 c0             	sete   %al
    25fc:	84 c0                	test   %al,%al
    25fe:	74 05                	je     2605 <do_ecall_add_thread+0x5d>
    2600:	8b 45 dc             	mov    -0x24(%rbp),%eax
    2603:	eb 65                	jmp    266a <do_ecall_add_thread+0xc2>
    2605:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2609:	48 8b 00             	mov    (%rax),%rax
    260c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2610:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2614:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2618:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    261d:	75 05                	jne    2624 <do_ecall_add_thread+0x7c>
    261f:	8b 45 dc             	mov    -0x24(%rbp),%eax
    2622:	eb 46                	jmp    266a <do_ecall_add_thread+0xc2>
    2624:	0f ae e8             	lfence 
    2627:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    262b:	48 89 c7             	mov    %rax,%rdi
    262e:	e8 77 f8 ff ff       	callq  1eaa <_ZL11do_save_tcsPv>
    2633:	89 45 dc             	mov    %eax,-0x24(%rbp)
    2636:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
    263a:	74 05                	je     2641 <do_ecall_add_thread+0x99>
    263c:	8b 45 dc             	mov    -0x24(%rbp),%eax
    263f:	eb 29                	jmp    266a <do_ecall_add_thread+0xc2>
    2641:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2645:	48 89 c7             	mov    %rax,%rdi
    2648:	e8 c6 f3 ff ff       	callq  1a13 <do_add_thread>
    264d:	89 45 dc             	mov    %eax,-0x24(%rbp)
    2650:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
    2654:	74 11                	je     2667 <do_ecall_add_thread+0xbf>
    2656:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    265a:	48 89 c7             	mov    %rax,%rdi
    265d:	e8 3f f9 ff ff       	callq  1fa1 <_ZL10do_del_tcsPv>
    2662:	8b 45 dc             	mov    -0x24(%rbp),%eax
    2665:	eb 03                	jmp    266a <do_ecall_add_thread+0xc2>
    2667:	8b 45 dc             	mov    -0x24(%rbp),%eax
    266a:	c9                   	leaveq 
    266b:	c3                   	retq   

000000000000266c <do_uninit_enclave>:
    266c:	55                   	push   %rbp
    266d:	48 89 e5             	mov    %rsp,%rbp
    2670:	48 83 ec 40          	sub    $0x40,%rsp
    2674:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    2678:	48 8d 05 a1 f7 21 00 	lea    0x21f7a1(%rip),%rax        # 221e20 <EDMM_supported>
    267f:	8b 00                	mov    (%rax),%eax
    2681:	85 c0                	test   %eax,%eax
    2683:	74 13                	je     2698 <do_uninit_enclave+0x2c>
    2685:	e8 ea f7 ff ff       	callq  1e74 <_ZL17is_utility_threadv>
    268a:	83 f0 01             	xor    $0x1,%eax
    268d:	84 c0                	test   %al,%al
    268f:	74 07                	je     2698 <do_uninit_enclave+0x2c>
    2691:	b8 01 00 00 00       	mov    $0x1,%eax
    2696:	eb 05                	jmp    269d <do_uninit_enclave+0x31>
    2698:	b8 00 00 00 00       	mov    $0x0,%eax
    269d:	84 c0                	test   %al,%al
    269f:	74 0a                	je     26ab <do_uninit_enclave+0x3f>
    26a1:	b8 01 00 00 00       	mov    $0x1,%eax
    26a6:	e9 01 01 00 00       	jmpq   27ac <do_uninit_enclave+0x140>
    26ab:	48 8b 05 6e 02 22 00 	mov    0x22026e(%rip),%rax        # 222920 <_ZL10g_tcs_node>
    26b2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    26b6:	48 c7 05 5f 02 22 00 	movq   $0x0,0x22025f(%rip)        # 222920 <_ZL10g_tcs_node>
    26bd:	00 00 00 00 
    26c1:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    26c6:	0f 84 a6 00 00 00    	je     2772 <do_uninit_enclave+0x106>
    26cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    26d0:	48 8b 10             	mov    (%rax),%rdx
    26d3:	48 8b 05 4e 02 22 00 	mov    0x22024e(%rip),%rax        # 222928 <_ZL12g_tcs_cookie>
    26da:	48 31 d0             	xor    %rdx,%rax
    26dd:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    26e1:	75 22                	jne    2705 <do_uninit_enclave+0x99>
    26e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    26e7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    26eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    26ef:	48 8b 40 08          	mov    0x8(%rax),%rax
    26f3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    26f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    26fb:	48 89 c7             	mov    %rax,%rdi
    26fe:	e8 ab 91 00 00       	callq  b8ae <dlfree>
    2703:	eb 68                	jmp    276d <do_uninit_enclave+0x101>
    2705:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2709:	48 8b 10             	mov    (%rax),%rdx
    270c:	48 8b 05 15 02 22 00 	mov    0x220215(%rip),%rax        # 222928 <_ZL12g_tcs_cookie>
    2713:	48 31 d0             	xor    %rdx,%rax
    2716:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    271a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    271e:	48 05 00 10 00 00    	add    $0x1000,%rax
    2724:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2728:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    272c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2730:	48 89 c6             	mov    %rax,%rsi
    2733:	bf 10 04 00 00       	mov    $0x410,%edi
    2738:	e8 3b ef ff ff       	callq  1678 <sgx_accept_forward>
    273d:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    2740:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    2744:	74 07                	je     274d <do_uninit_enclave+0xe1>
    2746:	b8 01 00 00 00       	mov    $0x1,%eax
    274b:	eb 5f                	jmp    27ac <do_uninit_enclave+0x140>
    274d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2751:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2755:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2759:	48 8b 40 08          	mov    0x8(%rax),%rax
    275d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2761:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2765:	48 89 c7             	mov    %rax,%rdi
    2768:	e8 41 91 00 00       	callq  b8ae <dlfree>
    276d:	e9 4f ff ff ff       	jmpq   26c1 <do_uninit_enclave+0x55>
    2772:	48 8d 3d b7 01 22 00 	lea    0x2201b7(%rip),%rdi        # 222930 <_ZL10g_ife_lock>
    2779:	e8 93 c3 00 00       	callq  eb11 <sgx_spin_lock>
    277e:	0f b6 05 9b f8 21 00 	movzbl 0x21f89b(%rip),%eax        # 222020 <_ZL16g_is_first_ecall>
    2785:	83 f0 01             	xor    $0x1,%eax
    2788:	84 c0                	test   %al,%al
    278a:	74 05                	je     2791 <do_uninit_enclave+0x125>
    278c:	e8 64 24 00 00       	callq  4bf5 <uninit_global_object>
    2791:	48 8d 3d 98 01 22 00 	lea    0x220198(%rip),%rdi        # 222930 <_ZL10g_ife_lock>
    2798:	e8 db c3 00 00       	callq  eb78 <sgx_spin_unlock>
    279d:	bf 03 00 00 00       	mov    $0x3,%edi
    27a2:	e8 00 ba 01 00       	callq  1e1a7 <set_enclave_state>
    27a7:	b8 00 00 00 00       	mov    $0x0,%eax
    27ac:	c9                   	leaveq 
    27ad:	c3                   	retq   

00000000000027ae <trts_mprotect>:
    27ae:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
    27b3:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    27b7:	41 ff 72 f8          	pushq  -0x8(%r10)
    27bb:	55                   	push   %rbp
    27bc:	48 89 e5             	mov    %rsp,%rbp
    27bf:	41 52                	push   %r10
    27c1:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
    27c8:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
    27cf:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
    27d6:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    27dd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    27e4:	00 00 
    27e6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    27ea:	31 c0                	xor    %eax,%eax
    27ec:	c7 85 40 ff ff ff ff 	movl   $0xffffffff,-0xc0(%rbp)
    27f3:	ff ff ff 
    27f6:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)
    27fd:	00 00 00 
    2800:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    2807:	25 ff 0f 00 00       	and    $0xfff,%eax
    280c:	48 85 c0             	test   %rax,%rax
    280f:	75 1b                	jne    282c <trts_mprotect+0x7e>
    2811:	48 83 bd 30 ff ff ff 	cmpq   $0x0,-0xd0(%rbp)
    2818:	00 
    2819:	74 11                	je     282c <trts_mprotect+0x7e>
    281b:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    2822:	25 ff 0f 00 00       	and    $0xfff,%eax
    2827:	48 85 c0             	test   %rax,%rax
    282a:	74 0a                	je     2836 <trts_mprotect+0x88>
    282c:	b8 02 00 00 00       	mov    $0x2,%eax
    2831:	e9 0c 01 00 00       	jmpq   2942 <trts_mprotect+0x194>
    2836:	48 8d 05 e7 f5 21 00 	lea    0x21f5e7(%rip),%rax        # 221e24 <g_sdk_version>
    283d:	8b 00                	mov    (%rax),%eax
    283f:	83 f8 01             	cmp    $0x1,%eax
    2842:	75 3a                	jne    287e <trts_mprotect+0xd0>
    2844:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    284b:	48 8b 8d 30 ff ff ff 	mov    -0xd0(%rbp),%rcx
    2852:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    2859:	48 89 ce             	mov    %rcx,%rsi
    285c:	48 89 c7             	mov    %rax,%rdi
    285f:	e8 58 02 00 00       	callq  2abc <change_permissions_ocall>
    2864:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    286a:	83 bd 44 ff ff ff 00 	cmpl   $0x0,-0xbc(%rbp)
    2871:	74 0b                	je     287e <trts_mprotect+0xd0>
    2873:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    2879:	e9 c4 00 00 00       	jmpq   2942 <trts_mprotect+0x194>
    287e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    2885:	48 0d 20 02 00 00    	or     $0x220,%rax
    288b:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    2892:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    2899:	48 83 c0 08          	add    $0x8,%rax
    289d:	ba 38 00 00 00       	mov    $0x38,%edx
    28a2:	be 00 00 00 00       	mov    $0x0,%esi
    28a7:	48 89 c7             	mov    %rax,%rdi
    28aa:	e8 00 bc 00 00       	callq  e4af <memset>
    28af:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    28b6:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    28bd:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    28c4:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    28cb:	48 01 d0             	add    %rdx,%rax
    28ce:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
    28d5:	76 66                	jbe    293d <trts_mprotect+0x18f>
    28d7:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    28de:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    28e5:	48 89 d6             	mov    %rdx,%rsi
    28e8:	48 89 c7             	mov    %rax,%rdi
    28eb:	e8 a5 bb 01 00       	callq  1e495 <do_emodpe>
    28f0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    28f7:	83 e0 06             	and    $0x6,%eax
    28fa:	48 83 f8 06          	cmp    $0x6,%rax
    28fe:	74 30                	je     2930 <trts_mprotect+0x182>
    2900:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    2907:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    290e:	48 89 d6             	mov    %rdx,%rsi
    2911:	48 89 c7             	mov    %rax,%rdi
    2914:	e8 62 bb 01 00       	callq  1e47b <do_eaccept>
    2919:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
    291f:	83 bd 40 ff ff ff 00 	cmpl   $0x0,-0xc0(%rbp)
    2926:	74 08                	je     2930 <trts_mprotect+0x182>
    2928:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
    292e:	eb 12                	jmp    2942 <trts_mprotect+0x194>
    2930:	48 81 85 48 ff ff ff 	addq   $0x1000,-0xb8(%rbp)
    2937:	00 10 00 00 
    293b:	eb 80                	jmp    28bd <trts_mprotect+0x10f>
    293d:	b8 00 00 00 00       	mov    $0x0,%eax
    2942:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    2946:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    294d:	00 00 
    294f:	74 05                	je     2956 <trts_mprotect+0x1a8>
    2951:	e8 da 22 00 00       	callq  4c30 <__stack_chk_fail>
    2956:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
    295d:	41 5a                	pop    %r10
    295f:	5d                   	pop    %rbp
    2960:	49 8d 62 f8          	lea    -0x8(%r10),%rsp
    2964:	c3                   	retq   

0000000000002965 <_Z20random_stack_advanceILj2048E9_status_tIjPvEIRiRS1_EET0_PFS4_DpT1_EDpOT2_>:
    2965:	55                   	push   %rbp
    2966:	48 89 e5             	mov    %rsp,%rbp
    2969:	41 57                	push   %r15
    296b:	41 56                	push   %r14
    296d:	41 55                	push   %r13
    296f:	41 54                	push   %r12
    2971:	53                   	push   %rbx
    2972:	48 83 ec 58          	sub    $0x58,%rsp
    2976:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    297a:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    297e:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    2982:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2989:	00 00 
    298b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    298f:	31 c0                	xor    %eax,%eax
    2991:	48 89 e0             	mov    %rsp,%rax
    2994:	48 89 c3             	mov    %rax,%rbx
    2997:	e8 d1 00 00 00       	callq  2a6d <_Z6rdrandIjET_v>
    299c:	25 ff 07 00 00       	and    $0x7ff,%eax
    29a1:	83 c0 01             	add    $0x1,%eax
    29a4:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    29a7:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    29aa:	48 83 e8 01          	sub    $0x1,%rax
    29ae:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    29b2:	48 89 c2             	mov    %rax,%rdx
    29b5:	48 83 c2 01          	add    $0x1,%rdx
    29b9:	49 89 d6             	mov    %rdx,%r14
    29bc:	41 bf 00 00 00 00    	mov    $0x0,%r15d
    29c2:	48 89 c2             	mov    %rax,%rdx
    29c5:	48 83 c2 01          	add    $0x1,%rdx
    29c9:	49 89 d4             	mov    %rdx,%r12
    29cc:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    29d2:	48 8d 50 01          	lea    0x1(%rax),%rdx
    29d6:	b8 10 00 00 00       	mov    $0x10,%eax
    29db:	48 83 e8 01          	sub    $0x1,%rax
    29df:	48 01 d0             	add    %rdx,%rax
    29e2:	b9 10 00 00 00       	mov    $0x10,%ecx
    29e7:	ba 00 00 00 00       	mov    $0x0,%edx
    29ec:	48 f7 f1             	div    %rcx
    29ef:	48 6b c0 10          	imul   $0x10,%rax,%rax
    29f3:	48 29 c4             	sub    %rax,%rsp
    29f6:	48 89 e0             	mov    %rsp,%rax
    29f9:	48 83 c0 00          	add    $0x0,%rax
    29fd:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    2a01:	48 8d 05 18 f4 21 00 	lea    0x21f418(%rip),%rax        # 221e20 <EDMM_supported>
    2a08:	8b 00                	mov    (%rax),%eax
    2a0a:	85 c0                	test   %eax,%eax
    2a0c:	75 12                	jne    2a20 <_Z20random_stack_advanceILj2048E9_status_tIjPvEIRiRS1_EET0_PFS4_DpT1_EDpOT2_+0xbb>
    2a0e:	8b 55 a4             	mov    -0x5c(%rbp),%edx
    2a11:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    2a15:	48 89 d6             	mov    %rdx,%rsi
    2a18:	48 89 c7             	mov    %rax,%rdi
    2a1b:	e8 81 e3 ff ff       	callq  da1 <random_stack_notify_gdb>
    2a20:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    2a24:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    2a28:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    2a2c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    2a30:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    2a34:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    2a38:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    2a3c:	48 89 ce             	mov    %rcx,%rsi
    2a3f:	48 89 c7             	mov    %rax,%rdi
    2a42:	e8 35 00 00 00       	callq  2a7c <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_>
    2a47:	48 89 dc             	mov    %rbx,%rsp
    2a4a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    2a4e:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2a55:	00 00 
    2a57:	74 05                	je     2a5e <_Z20random_stack_advanceILj2048E9_status_tIjPvEIRiRS1_EET0_PFS4_DpT1_EDpOT2_+0xf9>
    2a59:	e8 d2 21 00 00       	callq  4c30 <__stack_chk_fail>
    2a5e:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    2a62:	5b                   	pop    %rbx
    2a63:	41 5c                	pop    %r12
    2a65:	41 5d                	pop    %r13
    2a67:	41 5e                	pop    %r14
    2a69:	41 5f                	pop    %r15
    2a6b:	5d                   	pop    %rbp
    2a6c:	c3                   	retq   

0000000000002a6d <_Z6rdrandIjET_v>:
    2a6d:	55                   	push   %rbp
    2a6e:	48 89 e5             	mov    %rsp,%rbp
    2a71:	0f c7 f0             	rdrand %eax
    2a74:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2a77:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2a7a:	5d                   	pop    %rbp
    2a7b:	c3                   	retq   

0000000000002a7c <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_>:
    2a7c:	55                   	push   %rbp
    2a7d:	48 89 e5             	mov    %rsp,%rbp
    2a80:	48 83 ec 30          	sub    $0x30,%rsp
    2a84:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2a88:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2a8c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    2a90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2a94:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2a98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2a9c:	48 8b 10             	mov    (%rax),%rdx
    2a9f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2aa3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2aa7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2aab:	8b 00                	mov    (%rax),%eax
    2aad:	89 c1                	mov    %eax,%ecx
    2aaf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2ab3:	48 89 d6             	mov    %rdx,%rsi
    2ab6:	89 cf                	mov    %ecx,%edi
    2ab8:	ff d0                	callq  *%rax
    2aba:	c9                   	leaveq 
    2abb:	c3                   	retq   

0000000000002abc <change_permissions_ocall>:
    2abc:	55                   	push   %rbp
    2abd:	48 89 e5             	mov    %rsp,%rbp
    2ac0:	48 83 ec 40          	sub    $0x40,%rsp
    2ac4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2ac8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    2acc:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    2ad0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    2ad7:	bf 18 00 00 00       	mov    $0x18,%edi
    2adc:	e8 c0 df ff ff       	callq  aa1 <sgx_ocalloc>
    2ae1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2ae5:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    2aea:	75 0c                	jne    2af8 <change_permissions_ocall+0x3c>
    2aec:	e8 c1 e0 ff ff       	callq  bb2 <sgx_ocfree>
    2af1:	b8 01 00 00 00       	mov    $0x1,%eax
    2af6:	eb 47                	jmp    2b3f <change_permissions_ocall+0x83>
    2af8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2afc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2b00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2b04:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2b08:	48 89 10             	mov    %rdx,(%rax)
    2b0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2b0f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    2b13:	48 89 50 08          	mov    %rdx,0x8(%rax)
    2b17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2b1b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    2b1f:	48 89 50 10          	mov    %rdx,0x10(%rax)
    2b23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2b27:	48 89 c6             	mov    %rax,%rsi
    2b2a:	bf fc ff ff ff       	mov    $0xfffffffc,%edi
    2b2f:	e8 d2 00 00 00       	callq  2c06 <sgx_ocall>
    2b34:	89 45 ec             	mov    %eax,-0x14(%rbp)
    2b37:	e8 76 e0 ff ff       	callq  bb2 <sgx_ocfree>
    2b3c:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2b3f:	c9                   	leaveq 
    2b40:	c3                   	retq   

0000000000002b41 <_ZL16init_stack_guardPv>:
    2b41:	55                   	push   %rbp
    2b42:	48 89 e5             	mov    %rsp,%rbp
    2b45:	48 83 ec 20          	sub    $0x20,%rsp
    2b49:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2b4d:	e8 7b b6 01 00       	callq  1e1cd <get_thread_data>
    2b52:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2b56:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2b5b:	74 25                	je     2b82 <_ZL16init_stack_guardPv+0x41>
    2b5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2b61:	48 8b 50 10          	mov    0x10(%rax),%rdx
    2b65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2b69:	48 8b 40 08          	mov    0x8(%rax),%rax
    2b6d:	48 39 c2             	cmp    %rax,%rdx
    2b70:	75 17                	jne    2b89 <_ZL16init_stack_guardPv+0x48>
    2b72:	48 8d 05 07 c2 01 00 	lea    0x1c207(%rip),%rax        # 1ed80 <g_global_data>
    2b79:	48 8b 40 28          	mov    0x28(%rax),%rax
    2b7d:	48 85 c0             	test   %rax,%rax
    2b80:	74 07                	je     2b89 <_ZL16init_stack_guardPv+0x48>
    2b82:	b8 01 00 00 00       	mov    $0x1,%eax
    2b87:	eb 05                	jmp    2b8e <_ZL16init_stack_guardPv+0x4d>
    2b89:	b8 00 00 00 00       	mov    $0x0,%eax
    2b8e:	84 c0                	test   %al,%al
    2b90:	74 71                	je     2c03 <_ZL16init_stack_guardPv+0xc2>
    2b92:	48 8d 05 e7 c1 01 00 	lea    0x1c1e7(%rip),%rax        # 1ed80 <g_global_data>
    2b99:	48 8b 50 30          	mov    0x30(%rax),%rdx
    2b9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2ba1:	48 01 d0             	add    %rdx,%rax
    2ba4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2ba8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2bad:	75 1f                	jne    2bce <_ZL16init_stack_guardPv+0x8d>
    2baf:	48 8d 0d c2 b9 01 00 	lea    0x1b9c2(%rip),%rcx        # 1e578 <_ZNSt3__1L19piecewise_constructE+0x1>
    2bb6:	48 8d 15 e3 b9 01 00 	lea    0x1b9e3(%rip),%rdx        # 1e5a0 <_ZZL16init_stack_guardPvE8__func__>
    2bbd:	be 3f 00 00 00       	mov    $0x3f,%esi
    2bc2:	48 8d 3d c3 b9 01 00 	lea    0x1b9c3(%rip),%rdi        # 1e58c <_ZNSt3__1L19piecewise_constructE+0x15>
    2bc9:	e8 95 20 00 00       	callq  4c63 <__assert>
    2bce:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    2bd5:	00 
    2bd6:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    2bda:	be 08 00 00 00       	mov    $0x8,%esi
    2bdf:	48 89 c7             	mov    %rax,%rdi
    2be2:	e8 60 e0 ff ff       	callq  c47 <sgx_read_rand>
    2be7:	85 c0                	test   %eax,%eax
    2be9:	0f 95 c0             	setne  %al
    2bec:	84 c0                	test   %al,%al
    2bee:	74 05                	je     2bf5 <_ZL16init_stack_guardPv+0xb4>
    2bf0:	e8 d4 b8 01 00       	callq  1e4c9 <abort>
    2bf5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2bf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2bfd:	48 89 50 28          	mov    %rdx,0x28(%rax)
    2c01:	eb 01                	jmp    2c04 <_ZL16init_stack_guardPv+0xc3>
    2c03:	90                   	nop
    2c04:	c9                   	leaveq 
    2c05:	c3                   	retq   

0000000000002c06 <sgx_ocall>:
    2c06:	55                   	push   %rbp
    2c07:	48 89 e5             	mov    %rsp,%rbp
    2c0a:	48 83 ec 20          	sub    $0x20,%rsp
    2c0e:	89 7d ec             	mov    %edi,-0x14(%rbp)
    2c11:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2c15:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    2c19:	74 29                	je     2c44 <sgx_ocall+0x3e>
    2c1b:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2c1e:	83 f8 fb             	cmp    $0xfffffffb,%eax
    2c21:	7c 08                	jl     2c2b <sgx_ocall+0x25>
    2c23:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2c26:	83 f8 ff             	cmp    $0xffffffff,%eax
    2c29:	7c 19                	jl     2c44 <sgx_ocall+0x3e>
    2c2b:	8b 55 ec             	mov    -0x14(%rbp),%edx
    2c2e:	48 8d 05 0b b9 01 00 	lea    0x1b90b(%rip),%rax        # 1e540 <g_dyn_entry_table>
    2c35:	48 8b 00             	mov    (%rax),%rax
    2c38:	48 39 c2             	cmp    %rax,%rdx
    2c3b:	72 07                	jb     2c44 <sgx_ocall+0x3e>
    2c3d:	b8 01 10 00 00       	mov    $0x1001,%eax
    2c42:	eb 17                	jmp    2c5b <sgx_ocall+0x55>
    2c44:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2c48:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2c4b:	48 89 d6             	mov    %rdx,%rsi
    2c4e:	89 c7                	mov    %eax,%edi
    2c50:	e8 79 b7 01 00       	callq  1e3ce <__morestack>
    2c55:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2c58:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2c5b:	c9                   	leaveq 
    2c5c:	c3                   	retq   

0000000000002c5d <update_ocall_lastsp>:
    2c5d:	55                   	push   %rbp
    2c5e:	48 89 e5             	mov    %rsp,%rbp
    2c61:	48 83 ec 30          	sub    $0x30,%rsp
    2c65:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2c69:	e8 5f b5 01 00       	callq  1e1cd <get_thread_data>
    2c6e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2c72:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    2c79:	00 
    2c7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2c7e:	48 8b 40 08          	mov    0x8(%rax),%rax
    2c82:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2c86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2c8a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2c8e:	48 89 50 30          	mov    %rdx,0x30(%rax)
    2c92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2c96:	48 8b 50 30          	mov    0x30(%rax),%rdx
    2c9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2c9e:	48 8b 40 10          	mov    0x10(%rax),%rax
    2ca2:	48 39 c2             	cmp    %rax,%rdx
    2ca5:	75 11                	jne    2cb8 <update_ocall_lastsp+0x5b>
    2ca7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2cab:	48 c7 80 90 00 00 00 	movq   $0x1,0x90(%rax)
    2cb2:	01 00 00 00 
    2cb6:	eb 26                	jmp    2cde <update_ocall_lastsp+0x81>
    2cb8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2cbc:	48 8b 40 30          	mov    0x30(%rax),%rax
    2cc0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2cc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2cc8:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
    2ccf:	48 8d 50 01          	lea    0x1(%rax),%rdx
    2cd3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2cd7:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
    2cde:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2ce2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2ce6:	48 89 50 08          	mov    %rdx,0x8(%rax)
    2cea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2cee:	c9                   	leaveq 
    2cef:	c3                   	retq   

0000000000002cf0 <do_oret>:
    2cf0:	55                   	push   %rbp
    2cf1:	48 89 e5             	mov    %rsp,%rbp
    2cf4:	48 83 ec 30          	sub    $0x30,%rsp
    2cf8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2cfc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2d03:	00 00 
    2d05:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2d09:	31 c0                	xor    %eax,%eax
    2d0b:	e8 bd b4 01 00       	callq  1e1cd <get_thread_data>
    2d10:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2d14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2d18:	48 8b 40 08          	mov    0x8(%rax),%rax
    2d1c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2d20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2d24:	48 8b 40 08          	mov    0x8(%rax),%rax
    2d28:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2d2c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    2d31:	74 0a                	je     2d3d <do_oret+0x4d>
    2d33:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    2d37:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    2d3b:	72 0a                	jb     2d47 <do_oret+0x57>
    2d3d:	b8 01 00 00 00       	mov    $0x1,%eax
    2d42:	e9 89 00 00 00       	jmpq   2dd0 <do_oret+0xe0>
    2d47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2d4b:	48 8b 40 10          	mov    0x10(%rax),%rax
    2d4f:	ba f0 00 00 00       	mov    $0xf0,%edx
    2d54:	48 29 d0             	sub    %rdx,%rax
    2d57:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    2d5b:	73 07                	jae    2d64 <do_oret+0x74>
    2d5d:	b8 01 00 00 00       	mov    $0x1,%eax
    2d62:	eb 6c                	jmp    2dd0 <do_oret+0xe0>
    2d64:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2d68:	48 8b 40 20          	mov    0x20(%rax),%rax
    2d6c:	48 3d 44 49 43 4f    	cmp    $0x4f434944,%rax
    2d72:	74 07                	je     2d7b <do_oret+0x8b>
    2d74:	b8 01 00 00 00       	mov    $0x1,%eax
    2d79:	eb 55                	jmp    2dd0 <do_oret+0xe0>
    2d7b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2d7f:	48 8b 50 30          	mov    0x30(%rax),%rdx
    2d83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2d87:	48 8b 40 10          	mov    0x10(%rax),%rax
    2d8b:	48 39 c2             	cmp    %rax,%rdx
    2d8e:	77 11                	ja     2da1 <do_oret+0xb1>
    2d90:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2d94:	48 8b 40 30          	mov    0x30(%rax),%rax
    2d98:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2d9c:	48 39 d0             	cmp    %rdx,%rax
    2d9f:	77 07                	ja     2da8 <do_oret+0xb8>
    2da1:	b8 01 00 00 00       	mov    $0x1,%eax
    2da6:	eb 28                	jmp    2dd0 <do_oret+0xe0>
    2da8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2dac:	48 8b 50 30          	mov    0x30(%rax),%rdx
    2db0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2db4:	48 89 50 08          	mov    %rdx,0x8(%rax)
    2db8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2dbc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2dc0:	48 89 d6             	mov    %rdx,%rsi
    2dc3:	48 89 c7             	mov    %rax,%rdi
    2dc6:	e8 12 b6 01 00       	callq  1e3dd <asm_oret>
    2dcb:	b8 01 00 00 00       	mov    $0x1,%eax
    2dd0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    2dd4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2ddb:	00 00 
    2ddd:	74 05                	je     2de4 <do_oret+0xf4>
    2ddf:	e8 4c 1e 00 00       	callq  4c30 <__stack_chk_fail>
    2de4:	c9                   	leaveq 
    2de5:	c3                   	retq   

0000000000002de6 <do_init_switchless>:
    2de6:	55                   	push   %rbp
    2de7:	48 89 e5             	mov    %rsp,%rbp
    2dea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2dee:	b8 01 00 00 00       	mov    $0x1,%eax
    2df3:	5d                   	pop    %rbp
    2df4:	c3                   	retq   

0000000000002df5 <do_run_switchless_tworker>:
    2df5:	55                   	push   %rbp
    2df6:	48 89 e5             	mov    %rsp,%rbp
    2df9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2dfd:	b8 01 00 00 00       	mov    $0x1,%eax
    2e02:	5d                   	pop    %rbp
    2e03:	c3                   	retq   

0000000000002e04 <trim_range_ocall>:
    2e04:	55                   	push   %rbp
    2e05:	48 89 e5             	mov    %rsp,%rbp
    2e08:	48 83 ec 30          	sub    $0x30,%rsp
    2e0c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2e10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    2e14:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    2e1b:	bf 10 00 00 00       	mov    $0x10,%edi
    2e20:	e8 7c dc ff ff       	callq  aa1 <sgx_ocalloc>
    2e25:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2e29:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    2e2e:	75 0c                	jne    2e3c <trim_range_ocall+0x38>
    2e30:	e8 7d dd ff ff       	callq  bb2 <sgx_ocfree>
    2e35:	b8 01 00 00 00       	mov    $0x1,%eax
    2e3a:	eb 3b                	jmp    2e77 <trim_range_ocall+0x73>
    2e3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2e40:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2e44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2e48:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2e4c:	48 89 10             	mov    %rdx,(%rax)
    2e4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2e53:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    2e57:	48 89 50 08          	mov    %rdx,0x8(%rax)
    2e5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2e5f:	48 89 c6             	mov    %rax,%rsi
    2e62:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
    2e67:	e8 9a fd ff ff       	callq  2c06 <sgx_ocall>
    2e6c:	89 45 ec             	mov    %eax,-0x14(%rbp)
    2e6f:	e8 3e dd ff ff       	callq  bb2 <sgx_ocfree>
    2e74:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2e77:	c9                   	leaveq 
    2e78:	c3                   	retq   

0000000000002e79 <trim_range_commit_ocall>:
    2e79:	55                   	push   %rbp
    2e7a:	48 89 e5             	mov    %rsp,%rbp
    2e7d:	48 83 ec 30          	sub    $0x30,%rsp
    2e81:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2e85:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    2e8c:	bf 08 00 00 00       	mov    $0x8,%edi
    2e91:	e8 0b dc ff ff       	callq  aa1 <sgx_ocalloc>
    2e96:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2e9a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    2e9f:	75 0c                	jne    2ead <trim_range_commit_ocall+0x34>
    2ea1:	e8 0c dd ff ff       	callq  bb2 <sgx_ocfree>
    2ea6:	b8 01 00 00 00       	mov    $0x1,%eax
    2eab:	eb 2f                	jmp    2edc <trim_range_commit_ocall+0x63>
    2ead:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2eb1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2eb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2eb9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2ebd:	48 89 10             	mov    %rdx,(%rax)
    2ec0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ec4:	48 89 c6             	mov    %rax,%rsi
    2ec7:	bf fd ff ff ff       	mov    $0xfffffffd,%edi
    2ecc:	e8 35 fd ff ff       	callq  2c06 <sgx_ocall>
    2ed1:	89 45 ec             	mov    %eax,-0x14(%rbp)
    2ed4:	e8 d9 dc ff ff       	callq  bb2 <sgx_ocfree>
    2ed9:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2edc:	c9                   	leaveq 
    2edd:	c3                   	retq   

0000000000002ede <get_enclave_size>:
    2ede:	55                   	push   %rbp
    2edf:	48 89 e5             	mov    %rsp,%rbp
    2ee2:	48 8d 05 97 be 01 00 	lea    0x1be97(%rip),%rax        # 1ed80 <g_global_data>
    2ee9:	48 8b 00             	mov    (%rax),%rax
    2eec:	5d                   	pop    %rbp
    2eed:	c3                   	retq   

0000000000002eee <get_enclave_end>:
    2eee:	55                   	push   %rbp
    2eef:	48 89 e5             	mov    %rsp,%rbp
    2ef2:	e8 9b b2 01 00       	callq  1e192 <get_enclave_base>
    2ef7:	48 89 c2             	mov    %rax,%rdx
    2efa:	48 8d 05 7f be 01 00 	lea    0x1be7f(%rip),%rax        # 1ed80 <g_global_data>
    2f01:	48 8b 00             	mov    (%rax),%rax
    2f04:	48 01 d0             	add    %rdx,%rax
    2f07:	48 83 e8 01          	sub    $0x1,%rax
    2f0b:	5d                   	pop    %rbp
    2f0c:	c3                   	retq   

0000000000002f0d <get_heap_base>:
    2f0d:	55                   	push   %rbp
    2f0e:	48 89 e5             	mov    %rsp,%rbp
    2f11:	48 8d 05 68 be 01 00 	lea    0x1be68(%rip),%rax        # 1ed80 <g_global_data>
    2f18:	48 8b 40 08          	mov    0x8(%rax),%rax
    2f1c:	48 8b 15 bd f0 21 00 	mov    0x21f0bd(%rip),%rdx        # 221fe0 <_DYNAMIC+0x190>
    2f23:	48 01 d0             	add    %rdx,%rax
    2f26:	5d                   	pop    %rbp
    2f27:	c3                   	retq   

0000000000002f28 <get_heap_size>:
    2f28:	55                   	push   %rbp
    2f29:	48 89 e5             	mov    %rsp,%rbp
    2f2c:	48 8d 05 4d be 01 00 	lea    0x1be4d(%rip),%rax        # 1ed80 <g_global_data>
    2f33:	48 8b 40 10          	mov    0x10(%rax),%rax
    2f37:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2f3b:	48 8d 05 de ee 21 00 	lea    0x21eede(%rip),%rax        # 221e20 <EDMM_supported>
    2f42:	8b 00                	mov    (%rax),%eax
    2f44:	85 c0                	test   %eax,%eax
    2f46:	74 6c                	je     2fb4 <get_heap_size+0x8c>
    2f48:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2f4f:	48 8d 05 2a be 01 00 	lea    0x1be2a(%rip),%rax        # 1ed80 <g_global_data>
    2f56:	8b 80 18 01 00 00    	mov    0x118(%rax),%eax
    2f5c:	3b 45 f4             	cmp    -0xc(%rbp),%eax
    2f5f:	0f 97 c0             	seta   %al
    2f62:	84 c0                	test   %al,%al
    2f64:	74 4e                	je     2fb4 <get_heap_size+0x8c>
    2f66:	48 8d 05 13 be 01 00 	lea    0x1be13(%rip),%rax        # 1ed80 <g_global_data>
    2f6d:	8b 55 f4             	mov    -0xc(%rbp),%edx
    2f70:	48 83 c2 09          	add    $0x9,%rdx
    2f74:	48 c1 e2 05          	shl    $0x5,%rdx
    2f78:	48 01 d0             	add    %rdx,%rax
    2f7b:	0f b7 00             	movzwl (%rax),%eax
    2f7e:	66 83 f8 03          	cmp    $0x3,%ax
    2f82:	0f 94 c0             	sete   %al
    2f85:	84 c0                	test   %al,%al
    2f87:	74 25                	je     2fae <get_heap_size+0x86>
    2f89:	48 8d 05 f0 bd 01 00 	lea    0x1bdf0(%rip),%rax        # 1ed80 <g_global_data>
    2f90:	8b 55 f4             	mov    -0xc(%rbp),%edx
    2f93:	48 83 c2 09          	add    $0x9,%rdx
    2f97:	48 c1 e2 05          	shl    $0x5,%rdx
    2f9b:	48 01 d0             	add    %rdx,%rax
    2f9e:	48 83 c0 04          	add    $0x4,%rax
    2fa2:	8b 00                	mov    (%rax),%eax
    2fa4:	89 c0                	mov    %eax,%eax
    2fa6:	48 c1 e0 0c          	shl    $0xc,%rax
    2faa:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    2fae:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2fb2:	eb 9b                	jmp    2f4f <get_heap_size+0x27>
    2fb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2fb8:	5d                   	pop    %rbp
    2fb9:	c3                   	retq   

0000000000002fba <get_heap_min_size>:
    2fba:	55                   	push   %rbp
    2fbb:	48 89 e5             	mov    %rsp,%rbp
    2fbe:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    2fc5:	00 
    2fc6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2fcd:	48 8d 05 ac bd 01 00 	lea    0x1bdac(%rip),%rax        # 1ed80 <g_global_data>
    2fd4:	8b 80 18 01 00 00    	mov    0x118(%rax),%eax
    2fda:	3b 45 f4             	cmp    -0xc(%rbp),%eax
    2fdd:	0f 97 c0             	seta   %al
    2fe0:	84 c0                	test   %al,%al
    2fe2:	74 50                	je     3034 <get_heap_min_size+0x7a>
    2fe4:	48 8d 05 95 bd 01 00 	lea    0x1bd95(%rip),%rax        # 1ed80 <g_global_data>
    2feb:	8b 55 f4             	mov    -0xc(%rbp),%edx
    2fee:	48 83 c2 09          	add    $0x9,%rdx
    2ff2:	48 c1 e2 05          	shl    $0x5,%rdx
    2ff6:	48 01 d0             	add    %rdx,%rax
    2ff9:	0f b7 00             	movzwl (%rax),%eax
    2ffc:	66 83 f8 01          	cmp    $0x1,%ax
    3000:	0f 94 c0             	sete   %al
    3003:	84 c0                	test   %al,%al
    3005:	74 27                	je     302e <get_heap_min_size+0x74>
    3007:	48 8d 05 72 bd 01 00 	lea    0x1bd72(%rip),%rax        # 1ed80 <g_global_data>
    300e:	8b 55 f4             	mov    -0xc(%rbp),%edx
    3011:	48 83 c2 09          	add    $0x9,%rdx
    3015:	48 c1 e2 05          	shl    $0x5,%rdx
    3019:	48 01 d0             	add    %rdx,%rax
    301c:	48 83 c0 04          	add    $0x4,%rax
    3020:	8b 00                	mov    (%rax),%eax
    3022:	89 c0                	mov    %eax,%eax
    3024:	48 c1 e0 0c          	shl    $0xc,%rax
    3028:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    302c:	eb 06                	jmp    3034 <get_heap_min_size+0x7a>
    302e:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3032:	eb 99                	jmp    2fcd <get_heap_min_size+0x13>
    3034:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3038:	5d                   	pop    %rbp
    3039:	c3                   	retq   

000000000000303a <get_rsrv_base>:
    303a:	55                   	push   %rbp
    303b:	48 89 e5             	mov    %rsp,%rbp
    303e:	48 8d 05 3b bd 01 00 	lea    0x1bd3b(%rip),%rax        # 1ed80 <g_global_data>
    3045:	48 8b 40 18          	mov    0x18(%rax),%rax
    3049:	48 8b 15 90 ef 21 00 	mov    0x21ef90(%rip),%rdx        # 221fe0 <_DYNAMIC+0x190>
    3050:	48 01 d0             	add    %rdx,%rax
    3053:	5d                   	pop    %rbp
    3054:	c3                   	retq   

0000000000003055 <get_rsrv_end>:
    3055:	55                   	push   %rbp
    3056:	48 89 e5             	mov    %rsp,%rbp
    3059:	53                   	push   %rbx
    305a:	48 83 ec 08          	sub    $0x8,%rsp
    305e:	e8 d7 ff ff ff       	callq  303a <get_rsrv_base>
    3063:	48 89 c3             	mov    %rax,%rbx
    3066:	e8 0e 00 00 00       	callq  3079 <get_rsrv_size>
    306b:	48 01 d8             	add    %rbx,%rax
    306e:	48 83 e8 01          	sub    $0x1,%rax
    3072:	48 83 c4 08          	add    $0x8,%rsp
    3076:	5b                   	pop    %rbx
    3077:	5d                   	pop    %rbp
    3078:	c3                   	retq   

0000000000003079 <get_rsrv_size>:
    3079:	55                   	push   %rbp
    307a:	48 89 e5             	mov    %rsp,%rbp
    307d:	48 8d 05 fc bc 01 00 	lea    0x1bcfc(%rip),%rax        # 1ed80 <g_global_data>
    3084:	48 8b 40 20          	mov    0x20(%rax),%rax
    3088:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    308c:	48 8d 05 8d ed 21 00 	lea    0x21ed8d(%rip),%rax        # 221e20 <EDMM_supported>
    3093:	8b 00                	mov    (%rax),%eax
    3095:	85 c0                	test   %eax,%eax
    3097:	74 6c                	je     3105 <get_rsrv_size+0x8c>
    3099:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    30a0:	48 8d 05 d9 bc 01 00 	lea    0x1bcd9(%rip),%rax        # 1ed80 <g_global_data>
    30a7:	8b 80 18 01 00 00    	mov    0x118(%rax),%eax
    30ad:	3b 45 f4             	cmp    -0xc(%rbp),%eax
    30b0:	0f 97 c0             	seta   %al
    30b3:	84 c0                	test   %al,%al
    30b5:	74 4e                	je     3105 <get_rsrv_size+0x8c>
    30b7:	48 8d 05 c2 bc 01 00 	lea    0x1bcc2(%rip),%rax        # 1ed80 <g_global_data>
    30be:	8b 55 f4             	mov    -0xc(%rbp),%edx
    30c1:	48 83 c2 09          	add    $0x9,%rdx
    30c5:	48 c1 e2 05          	shl    $0x5,%rdx
    30c9:	48 01 d0             	add    %rdx,%rax
    30cc:	0f b7 00             	movzwl (%rax),%eax
    30cf:	66 83 f8 16          	cmp    $0x16,%ax
    30d3:	0f 94 c0             	sete   %al
    30d6:	84 c0                	test   %al,%al
    30d8:	74 25                	je     30ff <get_rsrv_size+0x86>
    30da:	48 8d 05 9f bc 01 00 	lea    0x1bc9f(%rip),%rax        # 1ed80 <g_global_data>
    30e1:	8b 55 f4             	mov    -0xc(%rbp),%edx
    30e4:	48 83 c2 09          	add    $0x9,%rdx
    30e8:	48 c1 e2 05          	shl    $0x5,%rdx
    30ec:	48 01 d0             	add    %rdx,%rax
    30ef:	48 83 c0 04          	add    $0x4,%rax
    30f3:	8b 00                	mov    (%rax),%eax
    30f5:	89 c0                	mov    %eax,%eax
    30f7:	48 c1 e0 0c          	shl    $0xc,%rax
    30fb:	48 01 45 f8          	add    %rax,-0x8(%rbp)
    30ff:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3103:	eb 9b                	jmp    30a0 <get_rsrv_size+0x27>
    3105:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3109:	5d                   	pop    %rbp
    310a:	c3                   	retq   

000000000000310b <get_rsrv_min_size>:
    310b:	55                   	push   %rbp
    310c:	48 89 e5             	mov    %rsp,%rbp
    310f:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    3116:	00 
    3117:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    311e:	48 8d 05 5b bc 01 00 	lea    0x1bc5b(%rip),%rax        # 1ed80 <g_global_data>
    3125:	8b 80 18 01 00 00    	mov    0x118(%rax),%eax
    312b:	3b 45 f4             	cmp    -0xc(%rbp),%eax
    312e:	0f 97 c0             	seta   %al
    3131:	84 c0                	test   %al,%al
    3133:	74 50                	je     3185 <get_rsrv_min_size+0x7a>
    3135:	48 8d 05 44 bc 01 00 	lea    0x1bc44(%rip),%rax        # 1ed80 <g_global_data>
    313c:	8b 55 f4             	mov    -0xc(%rbp),%edx
    313f:	48 83 c2 09          	add    $0x9,%rdx
    3143:	48 c1 e2 05          	shl    $0x5,%rdx
    3147:	48 01 d0             	add    %rdx,%rax
    314a:	0f b7 00             	movzwl (%rax),%eax
    314d:	66 83 f8 14          	cmp    $0x14,%ax
    3151:	0f 94 c0             	sete   %al
    3154:	84 c0                	test   %al,%al
    3156:	74 27                	je     317f <get_rsrv_min_size+0x74>
    3158:	48 8d 05 21 bc 01 00 	lea    0x1bc21(%rip),%rax        # 1ed80 <g_global_data>
    315f:	8b 55 f4             	mov    -0xc(%rbp),%edx
    3162:	48 83 c2 09          	add    $0x9,%rdx
    3166:	48 c1 e2 05          	shl    $0x5,%rdx
    316a:	48 01 d0             	add    %rdx,%rax
    316d:	48 83 c0 04          	add    $0x4,%rax
    3171:	8b 00                	mov    (%rax),%eax
    3173:	89 c0                	mov    %eax,%eax
    3175:	48 c1 e0 0c          	shl    $0xc,%rax
    3179:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    317d:	eb 06                	jmp    3185 <get_rsrv_min_size+0x7a>
    317f:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3183:	eb 99                	jmp    311e <get_rsrv_min_size+0x13>
    3185:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3189:	5d                   	pop    %rbp
    318a:	c3                   	retq   

000000000000318b <get_errno_addr>:
    318b:	55                   	push   %rbp
    318c:	48 89 e5             	mov    %rsp,%rbp
    318f:	48 83 ec 10          	sub    $0x10,%rsp
    3193:	e8 35 b0 01 00       	callq  1e1cd <get_thread_data>
    3198:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    319c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31a0:	48 83 c0 40          	add    $0x40,%rax
    31a4:	c9                   	leaveq 
    31a5:	c3                   	retq   

00000000000031a6 <feature_supported>:
    31a6:	55                   	push   %rbp
    31a7:	48 89 e5             	mov    %rsp,%rbp
    31aa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    31ae:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    31b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    31b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    31b9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    31c0:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    31c7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    31cc:	75 07                	jne    31d5 <feature_supported+0x2f>
    31ce:	b8 00 00 00 00       	mov    $0x0,%eax
    31d3:	eb 79                	jmp    324e <feature_supported+0xa8>
    31d5:	8b 45 f0             	mov    -0x10(%rbp),%eax
    31d8:	83 c0 01             	add    $0x1,%eax
    31db:	c1 e0 06             	shl    $0x6,%eax
    31de:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    31e1:	77 27                	ja     320a <feature_supported+0x64>
    31e3:	8b 45 f0             	mov    -0x10(%rbp),%eax
    31e6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    31ed:	00 
    31ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31f2:	48 01 d0             	add    %rdx,%rax
    31f5:	48 8b 00             	mov    (%rax),%rax
    31f8:	48 85 c0             	test   %rax,%rax
    31fb:	79 07                	jns    3204 <feature_supported+0x5e>
    31fd:	b8 00 00 00 00       	mov    $0x0,%eax
    3202:	eb 4a                	jmp    324e <feature_supported+0xa8>
    3204:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    3208:	eb cb                	jmp    31d5 <feature_supported+0x2f>
    320a:	8b 45 f0             	mov    -0x10(%rbp),%eax
    320d:	c1 e0 06             	shl    $0x6,%eax
    3210:	89 c2                	mov    %eax,%edx
    3212:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    3215:	29 d0                	sub    %edx,%eax
    3217:	89 45 f4             	mov    %eax,-0xc(%rbp)
    321a:	8b 45 f0             	mov    -0x10(%rbp),%eax
    321d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    3224:	00 
    3225:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3229:	48 01 d0             	add    %rdx,%rax
    322c:	48 8b 10             	mov    (%rax),%rdx
    322f:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3232:	89 c1                	mov    %eax,%ecx
    3234:	48 d3 ea             	shr    %cl,%rdx
    3237:	48 89 d0             	mov    %rdx,%rax
    323a:	83 e0 01             	and    $0x1,%eax
    323d:	48 85 c0             	test   %rax,%rax
    3240:	74 07                	je     3249 <feature_supported+0xa3>
    3242:	b8 01 00 00 00       	mov    $0x1,%eax
    3247:	eb 05                	jmp    324e <feature_supported+0xa8>
    3249:	b8 00 00 00 00       	mov    $0x0,%eax
    324e:	5d                   	pop    %rbp
    324f:	c3                   	retq   

0000000000003250 <is_stack_addr>:
    3250:	55                   	push   %rbp
    3251:	48 89 e5             	mov    %rsp,%rbp
    3254:	48 83 ec 30          	sub    $0x30,%rsp
    3258:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    325c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3260:	e8 68 af 01 00       	callq  1e1cd <get_thread_data>
    3265:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3269:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    326d:	48 8b 40 10          	mov    0x10(%rax),%rax
    3271:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3275:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3279:	48 8b 40 18          	mov    0x18(%rax),%rax
    327d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3281:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3285:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3289:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    328d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3291:	48 01 d0             	add    %rdx,%rax
    3294:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    3298:	72 22                	jb     32bc <is_stack_addr+0x6c>
    329a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    329e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    32a2:	48 01 d0             	add    %rdx,%rax
    32a5:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    32a9:	77 11                	ja     32bc <is_stack_addr+0x6c>
    32ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    32af:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    32b3:	77 07                	ja     32bc <is_stack_addr+0x6c>
    32b5:	b8 01 00 00 00       	mov    $0x1,%eax
    32ba:	eb 05                	jmp    32c1 <is_stack_addr+0x71>
    32bc:	b8 00 00 00 00       	mov    $0x0,%eax
    32c1:	c9                   	leaveq 
    32c2:	c3                   	retq   

00000000000032c3 <is_valid_sp>:
    32c3:	55                   	push   %rbp
    32c4:	48 89 e5             	mov    %rsp,%rbp
    32c7:	48 83 ec 10          	sub    $0x10,%rsp
    32cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    32cf:	b8 07 00 00 00       	mov    $0x7,%eax
    32d4:	48 23 45 f8          	and    -0x8(%rbp),%rax
    32d8:	48 85 c0             	test   %rax,%rax
    32db:	75 1c                	jne    32f9 <is_valid_sp+0x36>
    32dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    32e1:	be 00 00 00 00       	mov    $0x0,%esi
    32e6:	48 89 c7             	mov    %rax,%rdi
    32e9:	e8 62 ff ff ff       	callq  3250 <is_stack_addr>
    32ee:	84 c0                	test   %al,%al
    32f0:	74 07                	je     32f9 <is_valid_sp+0x36>
    32f2:	b8 01 00 00 00       	mov    $0x1,%eax
    32f7:	eb 05                	jmp    32fe <is_valid_sp+0x3b>
    32f9:	b8 00 00 00 00       	mov    $0x0,%eax
    32fe:	c9                   	leaveq 
    32ff:	c3                   	retq   

0000000000003300 <sgx_register_exception_handler>:
    3300:	55                   	push   %rbp
    3301:	48 89 e5             	mov    %rsp,%rbp
    3304:	48 83 ec 30          	sub    $0x30,%rsp
    3308:	89 7d dc             	mov    %edi,-0x24(%rbp)
    330b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    330f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3316:	00 00 
    3318:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    331c:	31 c0                	xor    %eax,%eax
    331e:	48 8b 05 23 f6 21 00 	mov    0x21f623(%rip),%rax        # 222948 <_ZL12g_veh_cookie>
    3325:	48 85 c0             	test   %rax,%rax
    3328:	0f 94 c0             	sete   %al
    332b:	0f b6 c0             	movzbl %al,%eax
    332e:	48 85 c0             	test   %rax,%rax
    3331:	74 66                	je     3399 <sgx_register_exception_handler+0x99>
    3333:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    333a:	00 
    333b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    333f:	be 08 00 00 00       	mov    $0x8,%esi
    3344:	48 89 c7             	mov    %rax,%rdi
    3347:	e8 fb d8 ff ff       	callq  c47 <sgx_read_rand>
    334c:	85 c0                	test   %eax,%eax
    334e:	0f 95 c0             	setne  %al
    3351:	84 c0                	test   %al,%al
    3353:	74 0a                	je     335f <sgx_register_exception_handler+0x5f>
    3355:	b8 00 00 00 00       	mov    $0x0,%eax
    335a:	e9 1a 01 00 00       	jmpq   3479 <sgx_register_exception_handler+0x179>
    335f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3363:	48 85 c0             	test   %rax,%rax
    3366:	75 02                	jne    336a <sgx_register_exception_handler+0x6a>
    3368:	eb d1                	jmp    333b <sgx_register_exception_handler+0x3b>
    336a:	48 8d 3d cf f5 21 00 	lea    0x21f5cf(%rip),%rdi        # 222940 <_ZL14g_handler_lock>
    3371:	e8 9b b7 00 00       	callq  eb11 <sgx_spin_lock>
    3376:	48 8b 05 cb f5 21 00 	mov    0x21f5cb(%rip),%rax        # 222948 <_ZL12g_veh_cookie>
    337d:	48 85 c0             	test   %rax,%rax
    3380:	75 0b                	jne    338d <sgx_register_exception_handler+0x8d>
    3382:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3386:	48 89 05 bb f5 21 00 	mov    %rax,0x21f5bb(%rip)        # 222948 <_ZL12g_veh_cookie>
    338d:	48 8d 3d ac f5 21 00 	lea    0x21f5ac(%rip),%rdi        # 222940 <_ZL14g_handler_lock>
    3394:	e8 df b7 00 00       	callq  eb78 <sgx_spin_unlock>
    3399:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    339d:	be 00 00 00 00       	mov    $0x0,%esi
    33a2:	48 89 c7             	mov    %rax,%rdi
    33a5:	e8 d7 d5 ff ff       	callq  981 <sgx_is_within_enclave>
    33aa:	85 c0                	test   %eax,%eax
    33ac:	0f 94 c0             	sete   %al
    33af:	84 c0                	test   %al,%al
    33b1:	74 0a                	je     33bd <sgx_register_exception_handler+0xbd>
    33b3:	b8 00 00 00 00       	mov    $0x0,%eax
    33b8:	e9 bc 00 00 00       	jmpq   3479 <sgx_register_exception_handler+0x179>
    33bd:	bf 10 00 00 00       	mov    $0x10,%edi
    33c2:	e8 f7 79 00 00       	callq  adbe <dlmalloc>
    33c7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    33cb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    33d0:	75 0a                	jne    33dc <sgx_register_exception_handler+0xdc>
    33d2:	b8 00 00 00 00       	mov    $0x0,%eax
    33d7:	e9 9d 00 00 00       	jmpq   3479 <sgx_register_exception_handler+0x179>
    33dc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    33e0:	48 8b 05 61 f5 21 00 	mov    0x21f561(%rip),%rax        # 222948 <_ZL12g_veh_cookie>
    33e7:	48 31 c2             	xor    %rax,%rdx
    33ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    33ee:	48 89 10             	mov    %rdx,(%rax)
    33f1:	48 8d 3d 48 f5 21 00 	lea    0x21f548(%rip),%rdi        # 222940 <_ZL14g_handler_lock>
    33f8:	e8 14 b7 00 00       	callq  eb11 <sgx_spin_lock>
    33fd:	48 8b 05 34 f5 21 00 	mov    0x21f534(%rip),%rax        # 222938 <_ZL12g_first_node>
    3404:	48 85 c0             	test   %rax,%rax
    3407:	74 06                	je     340f <sgx_register_exception_handler+0x10f>
    3409:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
    340d:	74 1c                	je     342b <sgx_register_exception_handler+0x12b>
    340f:	48 8b 15 22 f5 21 00 	mov    0x21f522(%rip),%rdx        # 222938 <_ZL12g_first_node>
    3416:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    341a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    341e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3422:	48 89 05 0f f5 21 00 	mov    %rax,0x21f50f(%rip)        # 222938 <_ZL12g_first_node>
    3429:	eb 3e                	jmp    3469 <sgx_register_exception_handler+0x169>
    342b:	48 8b 05 06 f5 21 00 	mov    0x21f506(%rip),%rax        # 222938 <_ZL12g_first_node>
    3432:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3436:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    343a:	48 8b 40 08          	mov    0x8(%rax),%rax
    343e:	48 85 c0             	test   %rax,%rax
    3441:	74 0e                	je     3451 <sgx_register_exception_handler+0x151>
    3443:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3447:	48 8b 40 08          	mov    0x8(%rax),%rax
    344b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    344f:	eb e5                	jmp    3436 <sgx_register_exception_handler+0x136>
    3451:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3455:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    345c:	00 
    345d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3461:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3465:	48 89 50 08          	mov    %rdx,0x8(%rax)
    3469:	48 8d 3d d0 f4 21 00 	lea    0x21f4d0(%rip),%rdi        # 222940 <_ZL14g_handler_lock>
    3470:	e8 03 b7 00 00       	callq  eb78 <sgx_spin_unlock>
    3475:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3479:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    347d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3484:	00 00 
    3486:	74 05                	je     348d <sgx_register_exception_handler+0x18d>
    3488:	e8 a3 17 00 00       	callq  4c30 <__stack_chk_fail>
    348d:	c9                   	leaveq 
    348e:	c3                   	retq   

000000000000348f <sgx_unregister_exception_handler>:
    348f:	55                   	push   %rbp
    3490:	48 89 e5             	mov    %rsp,%rbp
    3493:	48 83 ec 20          	sub    $0x20,%rsp
    3497:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    349b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    34a0:	75 0a                	jne    34ac <sgx_unregister_exception_handler+0x1d>
    34a2:	b8 00 00 00 00       	mov    $0x0,%eax
    34a7:	e9 b3 00 00 00       	jmpq   355f <sgx_unregister_exception_handler+0xd0>
    34ac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    34b3:	48 8d 3d 86 f4 21 00 	lea    0x21f486(%rip),%rdi        # 222940 <_ZL14g_handler_lock>
    34ba:	e8 52 b6 00 00       	callq  eb11 <sgx_spin_lock>
    34bf:	48 8b 05 72 f4 21 00 	mov    0x21f472(%rip),%rax        # 222938 <_ZL12g_first_node>
    34c6:	48 85 c0             	test   %rax,%rax
    34c9:	74 73                	je     353e <sgx_unregister_exception_handler+0xaf>
    34cb:	48 8b 05 66 f4 21 00 	mov    0x21f466(%rip),%rax        # 222938 <_ZL12g_first_node>
    34d2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    34d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34da:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    34de:	75 18                	jne    34f8 <sgx_unregister_exception_handler+0x69>
    34e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34e4:	48 8b 40 08          	mov    0x8(%rax),%rax
    34e8:	48 89 05 49 f4 21 00 	mov    %rax,0x21f449(%rip)        # 222938 <_ZL12g_first_node>
    34ef:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    34f6:	eb 46                	jmp    353e <sgx_unregister_exception_handler+0xaf>
    34f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    34fc:	48 8b 40 08          	mov    0x8(%rax),%rax
    3500:	48 85 c0             	test   %rax,%rax
    3503:	74 39                	je     353e <sgx_unregister_exception_handler+0xaf>
    3505:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3509:	48 8b 40 08          	mov    0x8(%rax),%rax
    350d:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    3511:	75 1d                	jne    3530 <sgx_unregister_exception_handler+0xa1>
    3513:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3517:	48 8b 40 08          	mov    0x8(%rax),%rax
    351b:	48 8b 50 08          	mov    0x8(%rax),%rdx
    351f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3523:	48 89 50 08          	mov    %rdx,0x8(%rax)
    3527:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    352e:	eb 0e                	jmp    353e <sgx_unregister_exception_handler+0xaf>
    3530:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3534:	48 8b 40 08          	mov    0x8(%rax),%rax
    3538:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    353c:	eb ba                	jmp    34f8 <sgx_unregister_exception_handler+0x69>
    353e:	48 8d 3d fb f3 21 00 	lea    0x21f3fb(%rip),%rdi        # 222940 <_ZL14g_handler_lock>
    3545:	e8 2e b6 00 00       	callq  eb78 <sgx_spin_unlock>
    354a:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    354e:	74 0c                	je     355c <sgx_unregister_exception_handler+0xcd>
    3550:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3554:	48 89 c7             	mov    %rax,%rdi
    3557:	e8 52 83 00 00       	callq  b8ae <dlfree>
    355c:	8b 45 f4             	mov    -0xc(%rbp),%eax
    355f:	c9                   	leaveq 
    3560:	c3                   	retq   

0000000000003561 <internal_handle_exception>:
    3561:	55                   	push   %rbp
    3562:	48 89 e5             	mov    %rsp,%rbp
    3565:	48 83 ec 50          	sub    $0x50,%rsp
    3569:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    356d:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
    3574:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    357b:	00 
    357c:	e8 4c ac 01 00       	callq  1e1cd <get_thread_data>
    3581:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3585:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    358c:	00 
    358d:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    3594:	00 
    3595:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    359c:	00 
    359d:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    35a4:	00 
    35a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    35a9:	48 8b 40 60          	mov    0x60(%rax),%rax
    35ad:	48 85 c0             	test   %rax,%rax
    35b0:	0f 88 8c 01 00 00    	js     3742 <internal_handle_exception+0x1e1>
    35b6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    35ba:	48 8b 40 60          	mov    0x60(%rax),%rax
    35be:	48 8d 50 01          	lea    0x1(%rax),%rdx
    35c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    35c6:	48 89 50 60          	mov    %rdx,0x60(%rax)
    35ca:	48 8d 3d 6f f3 21 00 	lea    0x21f36f(%rip),%rdi        # 222940 <_ZL14g_handler_lock>
    35d1:	e8 3b b5 00 00       	callq  eb11 <sgx_spin_lock>
    35d6:	48 8b 05 5b f3 21 00 	mov    0x21f35b(%rip),%rax        # 222938 <_ZL12g_first_node>
    35dd:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    35e1:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    35e6:	74 13                	je     35fb <internal_handle_exception+0x9a>
    35e8:	48 83 45 d0 08       	addq   $0x8,-0x30(%rbp)
    35ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    35f1:	48 8b 40 08          	mov    0x8(%rax),%rax
    35f5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    35f9:	eb e6                	jmp    35e1 <internal_handle_exception+0x80>
    35fb:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    3600:	75 24                	jne    3626 <internal_handle_exception+0xc5>
    3602:	48 8d 3d 37 f3 21 00 	lea    0x21f337(%rip),%rdi        # 222940 <_ZL14g_handler_lock>
    3609:	e8 6a b5 00 00       	callq  eb78 <sgx_spin_unlock>
    360e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3612:	48 c7 40 60 ff ff ff 	movq   $0xffffffffffffffff,0x60(%rax)
    3619:	ff 
    361a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    361e:	48 89 c7             	mov    %rax,%rdi
    3621:	e8 b2 ae 01 00       	callq  1e4d8 <continue_execution>
    3626:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    362a:	48 89 c7             	mov    %rax,%rdi
    362d:	e8 8c 77 00 00       	callq  adbe <dlmalloc>
    3632:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3636:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    363b:	0f 94 c0             	sete   %al
    363e:	84 c0                	test   %al,%al
    3640:	74 11                	je     3653 <internal_handle_exception+0xf2>
    3642:	48 8d 3d f7 f2 21 00 	lea    0x21f2f7(%rip),%rdi        # 222940 <_ZL14g_handler_lock>
    3649:	e8 2a b5 00 00       	callq  eb78 <sgx_spin_unlock>
    364e:	e9 f3 00 00 00       	jmpq   3746 <internal_handle_exception+0x1e5>
    3653:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3657:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    365b:	48 8b 05 d6 f2 21 00 	mov    0x21f2d6(%rip),%rax        # 222938 <_ZL12g_first_node>
    3662:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    3666:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    366b:	74 21                	je     368e <internal_handle_exception+0x12d>
    366d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3671:	48 8b 10             	mov    (%rax),%rdx
    3674:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3678:	48 89 10             	mov    %rdx,(%rax)
    367b:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
    3680:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3684:	48 8b 40 08          	mov    0x8(%rax),%rax
    3688:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    368c:	eb d8                	jmp    3666 <internal_handle_exception+0x105>
    368e:	48 8d 3d ab f2 21 00 	lea    0x21f2ab(%rip),%rdi        # 222940 <_ZL14g_handler_lock>
    3695:	e8 de b4 00 00       	callq  eb78 <sgx_spin_unlock>
    369a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    369e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    36a2:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    36a7:	74 38                	je     36e1 <internal_handle_exception+0x180>
    36a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    36ad:	48 8b 10             	mov    (%rax),%rdx
    36b0:	48 8b 05 91 f2 21 00 	mov    0x21f291(%rip),%rax        # 222948 <_ZL12g_veh_cookie>
    36b7:	48 31 d0             	xor    %rdx,%rax
    36ba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    36be:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    36c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    36c6:	48 89 d7             	mov    %rdx,%rdi
    36c9:	ff d0                	callq  *%rax
    36cb:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    36ce:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
    36d2:	74 0c                	je     36e0 <internal_handle_exception+0x17f>
    36d4:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
    36d9:	48 83 6d d0 08       	subq   $0x8,-0x30(%rbp)
    36de:	eb c2                	jmp    36a2 <internal_handle_exception+0x141>
    36e0:	90                   	nop
    36e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    36e5:	48 89 c7             	mov    %rax,%rdi
    36e8:	e8 c1 81 00 00       	callq  b8ae <dlfree>
    36ed:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    36f1:	48 8b 40 20          	mov    0x20(%rax),%rax
    36f5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    36f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    36fd:	48 89 c7             	mov    %rax,%rdi
    3700:	e8 be fb ff ff       	callq  32c3 <is_valid_sp>
    3705:	83 f0 01             	xor    $0x1,%eax
    3708:	84 c0                	test   %al,%al
    370a:	75 39                	jne    3745 <internal_handle_exception+0x1e4>
    370c:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
    3710:	75 16                	jne    3728 <internal_handle_exception+0x1c7>
    3712:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3716:	48 8b 40 60          	mov    0x60(%rax),%rax
    371a:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    371e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3722:	48 89 50 60          	mov    %rdx,0x60(%rax)
    3726:	eb 0c                	jmp    3734 <internal_handle_exception+0x1d3>
    3728:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    372c:	48 c7 40 60 ff ff ff 	movq   $0xffffffffffffffff,0x60(%rax)
    3733:	ff 
    3734:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    3738:	48 89 c7             	mov    %rax,%rdi
    373b:	e8 98 ad 01 00       	callq  1e4d8 <continue_execution>
    3740:	eb 04                	jmp    3746 <internal_handle_exception+0x1e5>
    3742:	90                   	nop
    3743:	eb 01                	jmp    3746 <internal_handle_exception+0x1e5>
    3745:	90                   	nop
    3746:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    374a:	48 c7 40 60 ff ff ff 	movq   $0xffffffffffffffff,0x60(%rax)
    3751:	ff 
    3752:	e8 72 ad 01 00       	callq  1e4c9 <abort>

0000000000003757 <_ZL21expand_stack_by_pagesPvm>:
    3757:	55                   	push   %rbp
    3758:	48 89 e5             	mov    %rsp,%rbp
    375b:	48 83 ec 20          	sub    $0x20,%rsp
    375f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3763:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3767:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
    376e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    3773:	74 07                	je     377c <_ZL21expand_stack_by_pagesPvm+0x25>
    3775:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    377a:	75 07                	jne    3783 <_ZL21expand_stack_by_pagesPvm+0x2c>
    377c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3781:	eb 19                	jmp    379c <_ZL21expand_stack_by_pagesPvm+0x45>
    3783:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3787:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    378b:	48 89 d6             	mov    %rdx,%rsi
    378e:	48 89 c7             	mov    %rax,%rdi
    3791:	e8 f0 df ff ff       	callq  1786 <apply_pages_within_exception>
    3796:	89 45 fc             	mov    %eax,-0x4(%rbp)
    3799:	8b 45 fc             	mov    -0x4(%rbp),%eax
    379c:	c9                   	leaveq 
    379d:	c3                   	retq   

000000000000379e <trts_handle_exception>:
    379e:	55                   	push   %rbp
    379f:	48 89 e5             	mov    %rsp,%rbp
    37a2:	48 83 ec 50          	sub    $0x50,%rsp
    37a6:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    37aa:	e8 1e aa 01 00       	callq  1e1cd <get_thread_data>
    37af:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    37b3:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    37ba:	00 
    37bb:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    37c2:	00 
    37c3:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    37ca:	00 
    37cb:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    37d2:	00 
    37d3:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    37d8:	0f 84 90 04 00 00    	je     3c6e <trts_handle_exception+0x4d0>
    37de:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    37e3:	0f 84 85 04 00 00    	je     3c6e <trts_handle_exception+0x4d0>
    37e9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    37ed:	48 89 c7             	mov    %rax,%rdi
    37f0:	e8 6e d5 ff ff       	callq  d63 <check_static_stack_canary>
    37f5:	85 c0                	test   %eax,%eax
    37f7:	0f 95 c0             	setne  %al
    37fa:	84 c0                	test   %al,%al
    37fc:	0f 85 62 04 00 00    	jne    3c64 <trts_handle_exception+0x4c6>
    3802:	e8 93 a9 01 00       	callq  1e19a <get_enclave_state>
    3807:	83 f8 02             	cmp    $0x2,%eax
    380a:	0f 95 c0             	setne  %al
    380d:	84 c0                	test   %al,%al
    380f:	0f 85 52 04 00 00    	jne    3c67 <trts_handle_exception+0x4c9>
    3815:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3819:	48 8b 40 60          	mov    0x60(%rax),%rax
    381d:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    3821:	0f 84 43 04 00 00    	je     3c6a <trts_handle_exception+0x4cc>
    3827:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    382b:	48 8b 40 10          	mov    0x10(%rax),%rax
    382f:	48 05 b0 02 01 00    	add    $0x102b0,%rax
    3835:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
    3839:	0f 85 2f 04 00 00    	jne    3c6e <trts_handle_exception+0x4d0>
    383f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3843:	48 8b 40 20          	mov    0x20(%rax),%rax
    3847:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    384d:	48 8d 90 00 f0 ff ff 	lea    -0x1000(%rax),%rdx
    3854:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    3858:	48 39 c2             	cmp    %rax,%rdx
    385b:	0f 85 0d 04 00 00    	jne    3c6e <trts_handle_exception+0x4d0>
    3861:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3865:	48 8b 40 20          	mov    0x20(%rax),%rax
    3869:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    386d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3871:	48 8b 40 20          	mov    0x20(%rax),%rax
    3875:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3879:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    387d:	be 00 00 00 00       	mov    $0x0,%esi
    3882:	48 89 c7             	mov    %rax,%rdi
    3885:	e8 c6 f9 ff ff       	callq  3250 <is_stack_addr>
    388a:	83 f0 01             	xor    $0x1,%eax
    388d:	84 c0                	test   %al,%al
    388f:	74 17                	je     38a8 <trts_handle_exception+0x10a>
    3891:	48 8d 05 6c f0 21 00 	lea    0x21f06c(%rip),%rax        # 222904 <g_enclave_state>
    3898:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
    389e:	b8 09 10 00 00       	mov    $0x1009,%eax
    38a3:	e9 d8 03 00 00       	jmpq   3c80 <trts_handle_exception+0x4e2>
    38a8:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    38af:	00 
    38b0:	48 83 6d e8 80       	subq   $0xffffffffffffff80,-0x18(%rbp)
    38b5:	48 81 45 e8 98 00 00 	addq   $0x98,-0x18(%rbp)
    38bc:	00 
    38bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38c1:	48 29 45 f0          	sub    %rax,-0x10(%rbp)
    38c5:	48 83 65 f0 f0       	andq   $0xfffffffffffffff0,-0x10(%rbp)
    38ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    38ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    38d2:	48 89 d6             	mov    %rdx,%rsi
    38d5:	48 89 c7             	mov    %rax,%rdi
    38d8:	e8 73 f9 ff ff       	callq  3250 <is_stack_addr>
    38dd:	83 f0 01             	xor    $0x1,%eax
    38e0:	84 c0                	test   %al,%al
    38e2:	74 17                	je     38fb <trts_handle_exception+0x15d>
    38e4:	48 8d 05 19 f0 21 00 	lea    0x21f019(%rip),%rax        # 222904 <g_enclave_state>
    38eb:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
    38f1:	b8 09 10 00 00       	mov    $0x1009,%eax
    38f6:	e9 85 03 00 00       	jmpq   3c80 <trts_handle_exception+0x4e2>
    38fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    38ff:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3903:	48 c7 45 e8 08 00 00 	movq   $0x8,-0x18(%rbp)
    390a:	00 
    390b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    390f:	48 29 45 f0          	sub    %rax,-0x10(%rbp)
    3913:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3917:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    391b:	48 89 d6             	mov    %rdx,%rsi
    391e:	48 89 c7             	mov    %rax,%rdi
    3921:	e8 2a f9 ff ff       	callq  3250 <is_stack_addr>
    3926:	83 f0 01             	xor    $0x1,%eax
    3929:	84 c0                	test   %al,%al
    392b:	74 17                	je     3944 <trts_handle_exception+0x1a6>
    392d:	48 8d 05 d0 ef 21 00 	lea    0x21efd0(%rip),%rax        # 222904 <g_enclave_state>
    3934:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
    393a:	b8 09 10 00 00       	mov    $0x1009,%eax
    393f:	e9 3c 03 00 00       	jmpq   3c80 <trts_handle_exception+0x4e2>
    3944:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3948:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    394f:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    3953:	0f 86 ca 00 00 00    	jbe    3a23 <trts_handle_exception+0x285>
    3959:	c7 45 c4 ff ff ff ff 	movl   $0xffffffff,-0x3c(%rbp)
    3960:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    3967:	00 
    3968:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    396c:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    3973:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    3977:	48 05 ff 0f 00 00    	add    $0xfff,%rax
    397d:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    3983:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3987:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    398b:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    3992:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    3996:	76 47                	jbe    39df <trts_handle_exception+0x241>
    3998:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    399c:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    39a3:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    39a7:	48 89 c2             	mov    %rax,%rdx
    39aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    39ae:	48 8b 40 18          	mov    0x18(%rax),%rax
    39b2:	48 39 c2             	cmp    %rax,%rdx
    39b5:	72 28                	jb     39df <trts_handle_exception+0x241>
    39b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39bb:	48 c1 e8 0c          	shr    $0xc,%rax
    39bf:	48 89 c2             	mov    %rax,%rdx
    39c2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    39c6:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    39cd:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    39d1:	48 89 d6             	mov    %rdx,%rsi
    39d4:	48 89 c7             	mov    %rax,%rdi
    39d7:	e8 7b fd ff ff       	callq  3757 <_ZL21expand_stack_by_pagesPvm>
    39dc:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    39df:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
    39e3:	75 27                	jne    3a0c <trts_handle_exception+0x26e>
    39e5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    39e9:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    39f0:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    39f4:	48 89 c2             	mov    %rax,%rdx
    39f7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    39fb:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
    3a02:	b8 00 00 00 00       	mov    $0x0,%eax
    3a07:	e9 74 02 00 00       	jmpq   3c80 <trts_handle_exception+0x4e2>
    3a0c:	48 8d 05 f1 ee 21 00 	lea    0x21eef1(%rip),%rax        # 222904 <g_enclave_state>
    3a13:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
    3a19:	b8 09 10 00 00       	mov    $0x1009,%eax
    3a1e:	e9 5d 02 00 00       	jmpq   3c80 <trts_handle_exception+0x4e2>
    3a23:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3a27:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    3a2e:	48 8d 15 3c aa 01 00 	lea    0x1aa3c(%rip),%rdx        # 1e471 <Lereport_inst>
    3a35:	48 39 d0             	cmp    %rdx,%rax
    3a38:	75 4d                	jne    3a87 <trts_handle_exception+0x2e9>
    3a3a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3a3e:	48 8b 00             	mov    (%rax),%rax
    3a41:	48 85 c0             	test   %rax,%rax
    3a44:	75 41                	jne    3a87 <trts_handle_exception+0x2e9>
    3a46:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3a4a:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    3a51:	48 8d 50 03          	lea    0x3(%rax),%rdx
    3a55:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3a59:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
    3a60:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3a64:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    3a6b:	48 83 c8 01          	or     $0x1,%rax
    3a6f:	48 89 c2             	mov    %rax,%rdx
    3a72:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3a76:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
    3a7d:	b8 00 00 00 00       	mov    $0x0,%eax
    3a82:	e9 f9 01 00 00       	jmpq   3c80 <trts_handle_exception+0x4e2>
    3a87:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3a8b:	0f b6 80 a3 00 00 00 	movzbl 0xa3(%rax),%eax
    3a92:	83 e0 80             	and    $0xffffff80,%eax
    3a95:	84 c0                	test   %al,%al
    3a97:	0f 84 d0 01 00 00    	je     3c6d <trts_handle_exception+0x4cf>
    3a9d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3aa1:	0f b6 80 a0 00 00 00 	movzbl 0xa0(%rax),%eax
    3aa8:	0f b6 d0             	movzbl %al,%edx
    3aab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3aaf:	89 90 90 00 00 00    	mov    %edx,0x90(%rax)
    3ab5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3ab9:	0f b6 80 a1 00 00 00 	movzbl 0xa1(%rax),%eax
    3ac0:	83 e0 07             	and    $0x7,%eax
    3ac3:	0f b6 d0             	movzbl %al,%edx
    3ac6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3aca:	89 90 94 00 00 00    	mov    %edx,0x94(%rax)
    3ad0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3ad4:	48 8b 10             	mov    (%rax),%rdx
    3ad7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3adb:	48 89 10             	mov    %rdx,(%rax)
    3ade:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3ae2:	48 8b 50 08          	mov    0x8(%rax),%rdx
    3ae6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3aea:	48 89 50 08          	mov    %rdx,0x8(%rax)
    3aee:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3af2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3af6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3afa:	48 89 50 10          	mov    %rdx,0x10(%rax)
    3afe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3b02:	48 8b 50 18          	mov    0x18(%rax),%rdx
    3b06:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b0a:	48 89 50 18          	mov    %rdx,0x18(%rax)
    3b0e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3b12:	48 8b 50 20          	mov    0x20(%rax),%rdx
    3b16:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b1a:	48 89 50 20          	mov    %rdx,0x20(%rax)
    3b1e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3b22:	48 8b 50 28          	mov    0x28(%rax),%rdx
    3b26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b2a:	48 89 50 28          	mov    %rdx,0x28(%rax)
    3b2e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3b32:	48 8b 50 30          	mov    0x30(%rax),%rdx
    3b36:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b3a:	48 89 50 30          	mov    %rdx,0x30(%rax)
    3b3e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3b42:	48 8b 50 38          	mov    0x38(%rax),%rdx
    3b46:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b4a:	48 89 50 38          	mov    %rdx,0x38(%rax)
    3b4e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3b52:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
    3b59:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b5d:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
    3b64:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3b68:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
    3b6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b73:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
    3b7a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3b7e:	48 8b 50 40          	mov    0x40(%rax),%rdx
    3b82:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b86:	48 89 50 40          	mov    %rdx,0x40(%rax)
    3b8a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3b8e:	48 8b 50 48          	mov    0x48(%rax),%rdx
    3b92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b96:	48 89 50 48          	mov    %rdx,0x48(%rax)
    3b9a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3b9e:	48 8b 50 50          	mov    0x50(%rax),%rdx
    3ba2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ba6:	48 89 50 50          	mov    %rdx,0x50(%rax)
    3baa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3bae:	48 8b 50 58          	mov    0x58(%rax),%rdx
    3bb2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3bb6:	48 89 50 58          	mov    %rdx,0x58(%rax)
    3bba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3bbe:	48 8b 50 60          	mov    0x60(%rax),%rdx
    3bc2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3bc6:	48 89 50 60          	mov    %rdx,0x60(%rax)
    3bca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3bce:	48 8b 50 68          	mov    0x68(%rax),%rdx
    3bd2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3bd6:	48 89 50 68          	mov    %rdx,0x68(%rax)
    3bda:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3bde:	48 8b 50 70          	mov    0x70(%rax),%rdx
    3be2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3be6:	48 89 50 70          	mov    %rdx,0x70(%rax)
    3bea:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3bee:	48 8b 50 78          	mov    0x78(%rax),%rdx
    3bf2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3bf6:	48 89 50 78          	mov    %rdx,0x78(%rax)
    3bfa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3bfe:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3c02:	48 8d 15 58 f9 ff ff 	lea    -0x6a8(%rip),%rdx        # 3561 <internal_handle_exception>
    3c09:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3c0d:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
    3c14:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3c18:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3c1c:	48 89 50 20          	mov    %rdx,0x20(%rax)
    3c20:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3c24:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3c28:	48 89 10             	mov    %rdx,(%rax)
    3c2b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3c2f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3c33:	48 89 50 38          	mov    %rdx,0x38(%rax)
    3c37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c3b:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
    3c42:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3c46:	48 89 10             	mov    %rdx,(%rax)
    3c49:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3c4d:	0f b6 90 a3 00 00 00 	movzbl 0xa3(%rax),%edx
    3c54:	83 e2 7f             	and    $0x7f,%edx
    3c57:	88 90 a3 00 00 00    	mov    %dl,0xa3(%rax)
    3c5d:	b8 00 00 00 00       	mov    $0x0,%eax
    3c62:	eb 1c                	jmp    3c80 <trts_handle_exception+0x4e2>
    3c64:	90                   	nop
    3c65:	eb 07                	jmp    3c6e <trts_handle_exception+0x4d0>
    3c67:	90                   	nop
    3c68:	eb 04                	jmp    3c6e <trts_handle_exception+0x4d0>
    3c6a:	90                   	nop
    3c6b:	eb 01                	jmp    3c6e <trts_handle_exception+0x4d0>
    3c6d:	90                   	nop
    3c6e:	48 8d 05 8f ec 21 00 	lea    0x21ec8f(%rip),%rax        # 222904 <g_enclave_state>
    3c75:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
    3c7b:	b8 06 10 00 00       	mov    $0x1006,%eax
    3c80:	c9                   	leaveq 
    3c81:	c3                   	retq   

0000000000003c82 <get_xfeature_state>:
    3c82:	55                   	push   %rbp
    3c83:	48 89 e5             	mov    %rsp,%rbp
    3c86:	48 83 ec 10          	sub    $0x10,%rsp
    3c8a:	e8 36 9e 01 00       	callq  1dac5 <sgx_self_report>
    3c8f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3c93:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3c97:	48 8b 40 38          	mov    0x38(%rax),%rax
    3c9b:	48 83 f8 03          	cmp    $0x3,%rax
    3c9f:	0f 95 c0             	setne  %al
    3ca2:	0f b6 c0             	movzbl %al,%eax
    3ca5:	89 05 5d ec 21 00    	mov    %eax,0x21ec5d(%rip)        # 222908 <g_xsave_enabled>
    3cab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3caf:	48 8b 40 38          	mov    0x38(%rax),%rax
    3cb3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3cb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cbb:	c9                   	leaveq 
    3cbc:	c3                   	retq   

0000000000003cbd <get_phdr>:
    3cbd:	55                   	push   %rbp
    3cbe:	48 89 e5             	mov    %rsp,%rbp
    3cc1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3cc5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    3cca:	75 07                	jne    3cd3 <get_phdr+0x16>
    3ccc:	b8 00 00 00 00       	mov    $0x0,%eax
    3cd1:	eb 5a                	jmp    3d2d <get_phdr+0x70>
    3cd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cd7:	0f b6 00             	movzbl (%rax),%eax
    3cda:	3c 7f                	cmp    $0x7f,%al
    3cdc:	75 24                	jne    3d02 <get_phdr+0x45>
    3cde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ce2:	0f b6 40 01          	movzbl 0x1(%rax),%eax
    3ce6:	3c 45                	cmp    $0x45,%al
    3ce8:	75 18                	jne    3d02 <get_phdr+0x45>
    3cea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cee:	0f b6 40 02          	movzbl 0x2(%rax),%eax
    3cf2:	3c 4c                	cmp    $0x4c,%al
    3cf4:	75 0c                	jne    3d02 <get_phdr+0x45>
    3cf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cfa:	0f b6 40 03          	movzbl 0x3(%rax),%eax
    3cfe:	3c 46                	cmp    $0x46,%al
    3d00:	74 07                	je     3d09 <get_phdr+0x4c>
    3d02:	b8 00 00 00 00       	mov    $0x0,%eax
    3d07:	eb 24                	jmp    3d2d <get_phdr+0x70>
    3d09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d0d:	0f b7 40 10          	movzwl 0x10(%rax),%eax
    3d11:	66 83 f8 03          	cmp    $0x3,%ax
    3d15:	74 07                	je     3d1e <get_phdr+0x61>
    3d17:	b8 00 00 00 00       	mov    $0x0,%eax
    3d1c:	eb 0f                	jmp    3d2d <get_phdr+0x70>
    3d1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d22:	48 8b 50 20          	mov    0x20(%rax),%rdx
    3d26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d2a:	48 01 d0             	add    %rdx,%rax
    3d2d:	5d                   	pop    %rbp
    3d2e:	c3                   	retq   

0000000000003d2f <get_sym>:
    3d2f:	55                   	push   %rbp
    3d30:	48 89 e5             	mov    %rsp,%rbp
    3d33:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d37:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3d3b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3d3f:	48 89 d0             	mov    %rdx,%rax
    3d42:	48 01 c0             	add    %rax,%rax
    3d45:	48 01 d0             	add    %rdx,%rax
    3d48:	48 c1 e0 03          	shl    $0x3,%rax
    3d4c:	48 89 c2             	mov    %rax,%rdx
    3d4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d53:	48 01 d0             	add    %rdx,%rax
    3d56:	0f b6 40 04          	movzbl 0x4(%rax),%eax
    3d5a:	c0 e8 04             	shr    $0x4,%al
    3d5d:	3c 02                	cmp    $0x2,%al
    3d5f:	75 2b                	jne    3d8c <get_sym+0x5d>
    3d61:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3d65:	48 89 d0             	mov    %rdx,%rax
    3d68:	48 01 c0             	add    %rax,%rax
    3d6b:	48 01 d0             	add    %rdx,%rax
    3d6e:	48 c1 e0 03          	shl    $0x3,%rax
    3d72:	48 89 c2             	mov    %rax,%rdx
    3d75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d79:	48 01 d0             	add    %rdx,%rax
    3d7c:	48 8b 40 08          	mov    0x8(%rax),%rax
    3d80:	48 85 c0             	test   %rax,%rax
    3d83:	75 07                	jne    3d8c <get_sym+0x5d>
    3d85:	b8 00 00 00 00       	mov    $0x0,%eax
    3d8a:	eb 1b                	jmp    3da7 <get_sym+0x78>
    3d8c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3d90:	48 89 d0             	mov    %rdx,%rax
    3d93:	48 01 c0             	add    %rax,%rax
    3d96:	48 01 d0             	add    %rdx,%rax
    3d99:	48 c1 e0 03          	shl    $0x3,%rax
    3d9d:	48 89 c2             	mov    %rax,%rdx
    3da0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3da4:	48 01 d0             	add    %rdx,%rax
    3da7:	5d                   	pop    %rbp
    3da8:	c3                   	retq   

0000000000003da9 <do_relocs>:
    3da9:	55                   	push   %rbp
    3daa:	48 89 e5             	mov    %rsp,%rbp
    3dad:	48 83 ec 60          	sub    $0x60,%rsp
    3db1:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    3db5:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    3db9:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    3dbd:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    3dc1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3dc8:	00 00 
    3dca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3dce:	31 c0                	xor    %eax,%eax
    3dd0:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    3dd4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    3dd8:	48 01 d0             	add    %rdx,%rax
    3ddb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3ddf:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    3de3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3de7:	48 01 d0             	add    %rdx,%rax
    3dea:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3dee:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    3df5:	00 
    3df6:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    3dfd:	00 
    3dfe:	e9 a2 01 00 00       	jmpq   3fa5 <do_relocs+0x1fc>
    3e03:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3e07:	48 8b 10             	mov    (%rax),%rdx
    3e0a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    3e0e:	48 01 d0             	add    %rdx,%rax
    3e11:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3e15:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3e19:	48 8b 40 08          	mov    0x8(%rax),%rax
    3e1d:	89 c0                	mov    %eax,%eax
    3e1f:	48 83 f8 12          	cmp    $0x12,%rax
    3e23:	0f 87 61 01 00 00    	ja     3f8a <do_relocs+0x1e1>
    3e29:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    3e30:	00 
    3e31:	48 8d 05 7c a7 01 00 	lea    0x1a77c(%rip),%rax        # 1e5b4 <_ZZL16init_stack_guardPvE8__func__+0x14>
    3e38:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    3e3b:	48 63 d0             	movslq %eax,%rdx
    3e3e:	48 8d 05 6f a7 01 00 	lea    0x1a76f(%rip),%rax        # 1e5b4 <_ZZL16init_stack_guardPvE8__func__+0x14>
    3e45:	48 01 d0             	add    %rdx,%rax
    3e48:	ff e0                	jmpq   *%rax
    3e4a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3e4e:	48 8b 40 10          	mov    0x10(%rax),%rax
    3e52:	48 89 c2             	mov    %rax,%rdx
    3e55:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    3e59:	48 01 c2             	add    %rax,%rdx
    3e5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3e60:	48 89 10             	mov    %rdx,(%rax)
    3e63:	e9 33 01 00 00       	jmpq   3f9b <do_relocs+0x1f2>
    3e68:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3e6c:	48 8b 40 08          	mov    0x8(%rax),%rax
    3e70:	48 c1 e8 20          	shr    $0x20,%rax
    3e74:	48 89 c2             	mov    %rax,%rdx
    3e77:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3e7b:	48 89 d6             	mov    %rdx,%rsi
    3e7e:	48 89 c7             	mov    %rax,%rdi
    3e81:	e8 a9 fe ff ff       	callq  3d2f <get_sym>
    3e86:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3e8a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3e8f:	0f 84 ff 00 00 00    	je     3f94 <do_relocs+0x1eb>
    3e95:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3e99:	48 8b 50 08          	mov    0x8(%rax),%rdx
    3e9d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    3ea1:	48 01 c2             	add    %rax,%rdx
    3ea4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3ea8:	48 8b 40 10          	mov    0x10(%rax),%rax
    3eac:	48 01 c2             	add    %rax,%rdx
    3eaf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3eb3:	48 89 10             	mov    %rdx,(%rax)
    3eb6:	e9 e0 00 00 00       	jmpq   3f9b <do_relocs+0x1f2>
    3ebb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ebf:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
    3ec6:	e9 d0 00 00 00       	jmpq   3f9b <do_relocs+0x1f2>
    3ecb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3ecf:	48 8b 40 08          	mov    0x8(%rax),%rax
    3ed3:	48 c1 e8 20          	shr    $0x20,%rax
    3ed7:	48 89 c2             	mov    %rax,%rdx
    3eda:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3ede:	48 89 d6             	mov    %rdx,%rsi
    3ee1:	48 89 c7             	mov    %rax,%rdi
    3ee4:	e8 46 fe ff ff       	callq  3d2f <get_sym>
    3ee9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3eed:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3ef2:	0f 84 9f 00 00 00    	je     3f97 <do_relocs+0x1ee>
    3ef8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3efc:	48 8b 50 08          	mov    0x8(%rax),%rdx
    3f00:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3f04:	48 8b 40 10          	mov    0x10(%rax),%rax
    3f08:	48 01 c2             	add    %rax,%rdx
    3f0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f0f:	48 89 10             	mov    %rdx,(%rax)
    3f12:	e9 84 00 00 00       	jmpq   3f9b <do_relocs+0x1f2>
    3f17:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3f1b:	48 8b 40 08          	mov    0x8(%rax),%rax
    3f1f:	48 c1 e8 20          	shr    $0x20,%rax
    3f23:	48 89 c2             	mov    %rax,%rdx
    3f26:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3f2a:	48 89 d6             	mov    %rdx,%rsi
    3f2d:	48 89 c7             	mov    %rax,%rdi
    3f30:	e8 fa fd ff ff       	callq  3d2f <get_sym>
    3f35:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3f39:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3f3e:	74 5a                	je     3f9a <do_relocs+0x1f1>
    3f40:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    3f44:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    3f48:	48 89 d6             	mov    %rdx,%rsi
    3f4b:	48 89 c7             	mov    %rax,%rdi
    3f4e:	e8 4f 03 00 00       	callq  42a2 <elf_tls_aligned_virtual_size>
    3f53:	85 c0                	test   %eax,%eax
    3f55:	75 2c                	jne    3f83 <do_relocs+0x1da>
    3f57:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3f5b:	48 85 c0             	test   %rax,%rax
    3f5e:	74 23                	je     3f83 <do_relocs+0x1da>
    3f60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3f64:	48 8b 50 08          	mov    0x8(%rax),%rdx
    3f68:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3f6c:	48 8b 40 10          	mov    0x10(%rax),%rax
    3f70:	48 01 c2             	add    %rax,%rdx
    3f73:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3f77:	48 29 c2             	sub    %rax,%rdx
    3f7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f7e:	48 89 10             	mov    %rdx,(%rax)
    3f81:	eb 18                	jmp    3f9b <do_relocs+0x1f2>
    3f83:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3f88:	eb 2e                	jmp    3fb8 <do_relocs+0x20f>
    3f8a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3f8f:	eb 27                	jmp    3fb8 <do_relocs+0x20f>
    3f91:	90                   	nop
    3f92:	eb 07                	jmp    3f9b <do_relocs+0x1f2>
    3f94:	90                   	nop
    3f95:	eb 04                	jmp    3f9b <do_relocs+0x1f2>
    3f97:	90                   	nop
    3f98:	eb 01                	jmp    3f9b <do_relocs+0x1f2>
    3f9a:	90                   	nop
    3f9b:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
    3fa0:	48 83 45 d0 18       	addq   $0x18,-0x30(%rbp)
    3fa5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3fa9:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
    3fad:	0f 82 50 fe ff ff    	jb     3e03 <do_relocs+0x5a>
    3fb3:	b8 00 00 00 00       	mov    $0x0,%eax
    3fb8:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    3fbc:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3fc3:	00 00 
    3fc5:	74 05                	je     3fcc <do_relocs+0x223>
    3fc7:	e8 64 0c 00 00       	callq  4c30 <__stack_chk_fail>
    3fcc:	c9                   	leaveq 
    3fcd:	c3                   	retq   

0000000000003fce <relocate_enclave>:
    3fce:	55                   	push   %rbp
    3fcf:	48 89 e5             	mov    %rsp,%rbp
    3fd2:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    3fd6:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    3fda:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%rbp)
    3fe1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    3fe5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3fe9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3fed:	48 89 c7             	mov    %rax,%rdi
    3ff0:	e8 c8 fc ff ff       	callq  3cbd <get_phdr>
    3ff5:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    3ff9:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
    3ffe:	0f 85 c3 01 00 00    	jne    41c7 <relocate_enclave+0x1f9>
    4004:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4009:	e9 d2 01 00 00       	jmpq   41e0 <relocate_enclave+0x212>
    400e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4012:	8b 00                	mov    (%rax),%eax
    4014:	83 f8 02             	cmp    $0x2,%eax
    4017:	0f 85 a1 01 00 00    	jne    41be <relocate_enclave+0x1f0>
    401d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4021:	48 8b 40 20          	mov    0x20(%rax),%rax
    4025:	48 c1 e8 04          	shr    $0x4,%rax
    4029:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    402d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4031:	48 8b 50 18          	mov    0x18(%rax),%rdx
    4035:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4039:	48 01 d0             	add    %rdx,%rax
    403c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4040:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
    4047:	00 
    4048:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    404f:	00 
    4050:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    4057:	00 
    4058:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    405f:	00 
    4060:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    4067:	00 
    4068:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    406f:	00 
    4070:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    4077:	00 
    4078:	e9 9b 00 00 00       	jmpq   4118 <relocate_enclave+0x14a>
    407d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4081:	48 8b 00             	mov    (%rax),%rax
    4084:	48 85 c0             	test   %rax,%rax
    4087:	0f 84 9b 00 00 00    	je     4128 <relocate_enclave+0x15a>
    408d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4091:	48 8b 00             	mov    (%rax),%rax
    4094:	48 83 f8 17          	cmp    $0x17,%rax
    4098:	77 74                	ja     410e <relocate_enclave+0x140>
    409a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    40a1:	00 
    40a2:	48 8d 05 57 a5 01 00 	lea    0x1a557(%rip),%rax        # 1e600 <_ZZL16init_stack_guardPvE8__func__+0x60>
    40a9:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    40ac:	48 63 d0             	movslq %eax,%rdx
    40af:	48 8d 05 4a a5 01 00 	lea    0x1a54a(%rip),%rax        # 1e600 <_ZZL16init_stack_guardPvE8__func__+0x60>
    40b6:	48 01 d0             	add    %rdx,%rax
    40b9:	ff e0                	jmpq   *%rax
    40bb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    40bf:	48 8b 40 08          	mov    0x8(%rax),%rax
    40c3:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    40c7:	eb 45                	jmp    410e <relocate_enclave+0x140>
    40c9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    40cd:	48 8b 40 08          	mov    0x8(%rax),%rax
    40d1:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    40d5:	eb 37                	jmp    410e <relocate_enclave+0x140>
    40d7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    40db:	48 8b 40 08          	mov    0x8(%rax),%rax
    40df:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    40e3:	eb 29                	jmp    410e <relocate_enclave+0x140>
    40e5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    40e9:	48 8b 40 08          	mov    0x8(%rax),%rax
    40ed:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    40f1:	eb 1b                	jmp    410e <relocate_enclave+0x140>
    40f3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    40f7:	48 8b 40 08          	mov    0x8(%rax),%rax
    40fb:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    40ff:	eb 0d                	jmp    410e <relocate_enclave+0x140>
    4101:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4105:	48 8b 40 08          	mov    0x8(%rax),%rax
    4109:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    410d:	90                   	nop
    410e:	48 83 45 a0 01       	addq   $0x1,-0x60(%rbp)
    4113:	48 83 45 a8 10       	addq   $0x10,-0x58(%rbp)
    4118:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    411c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    4120:	0f 82 57 ff ff ff    	jb     407d <relocate_enclave+0xaf>
    4126:	eb 01                	jmp    4129 <relocate_enclave+0x15b>
    4128:	90                   	nop
    4129:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    412e:	74 45                	je     4175 <relocate_enclave+0x1a7>
    4130:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    4135:	75 0a                	jne    4141 <relocate_enclave+0x173>
    4137:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    413c:	e9 9f 00 00 00       	jmpq   41e0 <relocate_enclave+0x212>
    4141:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4145:	ba 00 00 00 00       	mov    $0x0,%edx
    414a:	48 f7 75 d0          	divq   -0x30(%rbp)
    414e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4152:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    4156:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    415a:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    415e:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    4162:	48 89 c7             	mov    %rax,%rdi
    4165:	e8 3f fc ff ff       	callq  3da9 <do_relocs>
    416a:	85 c0                	test   %eax,%eax
    416c:	74 07                	je     4175 <relocate_enclave+0x1a7>
    416e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4173:	eb 6b                	jmp    41e0 <relocate_enclave+0x212>
    4175:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    417a:	74 42                	je     41be <relocate_enclave+0x1f0>
    417c:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    4181:	75 07                	jne    418a <relocate_enclave+0x1bc>
    4183:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4188:	eb 56                	jmp    41e0 <relocate_enclave+0x212>
    418a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    418e:	ba 00 00 00 00       	mov    $0x0,%edx
    4193:	48 f7 75 d0          	divq   -0x30(%rbp)
    4197:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    419b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    419f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    41a3:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    41a7:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    41ab:	48 89 c7             	mov    %rax,%rdi
    41ae:	e8 f6 fb ff ff       	callq  3da9 <do_relocs>
    41b3:	85 c0                	test   %eax,%eax
    41b5:	74 07                	je     41be <relocate_enclave+0x1f0>
    41b7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    41bc:	eb 22                	jmp    41e0 <relocate_enclave+0x212>
    41be:	83 45 94 01          	addl   $0x1,-0x6c(%rbp)
    41c2:	48 83 45 98 38       	addq   $0x38,-0x68(%rbp)
    41c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    41cb:	0f b7 40 38          	movzwl 0x38(%rax),%eax
    41cf:	0f b7 c0             	movzwl %ax,%eax
    41d2:	3b 45 94             	cmp    -0x6c(%rbp),%eax
    41d5:	0f 87 33 fe ff ff    	ja     400e <relocate_enclave+0x40>
    41db:	b8 00 00 00 00       	mov    $0x0,%eax
    41e0:	c9                   	leaveq 
    41e1:	c3                   	retq   

00000000000041e2 <elf_tls_info>:
    41e2:	55                   	push   %rbp
    41e3:	48 89 e5             	mov    %rsp,%rbp
    41e6:	48 83 ec 38          	sub    $0x38,%rsp
    41ea:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    41ee:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    41f2:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    41f6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    41fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4201:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4205:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4209:	48 89 c7             	mov    %rax,%rdi
    420c:	e8 ac fa ff ff       	callq  3cbd <get_phdr>
    4211:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4215:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    421a:	74 07                	je     4223 <elf_tls_info+0x41>
    421c:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    4221:	75 07                	jne    422a <elf_tls_info+0x48>
    4223:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4228:	eb 76                	jmp    42a0 <elf_tls_info+0xbe>
    422a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    422f:	75 07                	jne    4238 <elf_tls_info+0x56>
    4231:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4236:	eb 68                	jmp    42a0 <elf_tls_info+0xbe>
    4238:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    423c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4243:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4247:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    424e:	eb 3b                	jmp    428b <elf_tls_info+0xa9>
    4250:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4254:	8b 00                	mov    (%rax),%eax
    4256:	83 f8 07             	cmp    $0x7,%eax
    4259:	75 27                	jne    4282 <elf_tls_info+0xa0>
    425b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    425f:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4263:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4267:	48 01 c2             	add    %rax,%rdx
    426a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    426e:	48 89 10             	mov    %rdx,(%rax)
    4271:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4275:	48 8b 50 20          	mov    0x20(%rax),%rdx
    4279:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    427d:	48 89 10             	mov    %rdx,(%rax)
    4280:	eb 19                	jmp    429b <elf_tls_info+0xb9>
    4282:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    4286:	48 83 45 f0 38       	addq   $0x38,-0x10(%rbp)
    428b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    428f:	0f b7 40 38          	movzwl 0x38(%rax),%eax
    4293:	0f b7 c0             	movzwl %ax,%eax
    4296:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    4299:	77 b5                	ja     4250 <elf_tls_info+0x6e>
    429b:	b8 00 00 00 00       	mov    $0x0,%eax
    42a0:	c9                   	leaveq 
    42a1:	c3                   	retq   

00000000000042a2 <elf_tls_aligned_virtual_size>:
    42a2:	55                   	push   %rbp
    42a3:	48 89 e5             	mov    %rsp,%rbp
    42a6:	48 83 ec 40          	sub    $0x40,%rsp
    42aa:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    42ae:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    42b2:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    42b9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    42bd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    42c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    42c5:	48 89 c7             	mov    %rax,%rdi
    42c8:	e8 f0 f9 ff ff       	callq  3cbd <get_phdr>
    42cd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    42d1:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    42d8:	00 
    42d9:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    42e0:	00 
    42e1:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    42e6:	75 0a                	jne    42f2 <elf_tls_aligned_virtual_size+0x50>
    42e8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    42ed:	e9 9c 00 00 00       	jmpq   438e <elf_tls_aligned_virtual_size+0xec>
    42f2:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    42f7:	75 0a                	jne    4303 <elf_tls_aligned_virtual_size+0x61>
    42f9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    42fe:	e9 8b 00 00 00       	jmpq   438e <elf_tls_aligned_virtual_size+0xec>
    4303:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    4307:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    430e:	eb 69                	jmp    4379 <elf_tls_aligned_virtual_size+0xd7>
    4310:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4314:	8b 00                	mov    (%rax),%eax
    4316:	83 f8 07             	cmp    $0x7,%eax
    4319:	75 55                	jne    4370 <elf_tls_aligned_virtual_size+0xce>
    431b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    431f:	48 8b 40 28          	mov    0x28(%rax),%rax
    4323:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4327:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    432b:	48 8b 40 30          	mov    0x30(%rax),%rax
    432f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4333:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    4338:	74 07                	je     4341 <elf_tls_aligned_virtual_size+0x9f>
    433a:	48 83 7d f8 01       	cmpq   $0x1,-0x8(%rbp)
    433f:	75 0d                	jne    434e <elf_tls_aligned_virtual_size+0xac>
    4341:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    4345:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4349:	48 89 10             	mov    %rdx,(%rax)
    434c:	eb 3b                	jmp    4389 <elf_tls_aligned_virtual_size+0xe7>
    434e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4352:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4356:	48 01 d0             	add    %rdx,%rax
    4359:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    435d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4361:	48 f7 d8             	neg    %rax
    4364:	48 21 c2             	and    %rax,%rdx
    4367:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    436b:	48 89 10             	mov    %rdx,(%rax)
    436e:	eb 19                	jmp    4389 <elf_tls_aligned_virtual_size+0xe7>
    4370:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
    4374:	48 83 45 e0 38       	addq   $0x38,-0x20(%rbp)
    4379:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    437d:	0f b7 40 38          	movzwl 0x38(%rax),%eax
    4381:	0f b7 c0             	movzwl %ax,%eax
    4384:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    4387:	77 87                	ja     4310 <elf_tls_aligned_virtual_size+0x6e>
    4389:	b8 00 00 00 00       	mov    $0x0,%eax
    438e:	c9                   	leaveq 
    438f:	c3                   	retq   

0000000000004390 <elf_get_init_array>:
    4390:	55                   	push   %rbp
    4391:	48 89 e5             	mov    %rsp,%rbp
    4394:	48 83 ec 48          	sub    $0x48,%rsp
    4398:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    439c:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    43a0:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    43a4:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    43ab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    43af:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    43b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    43b7:	48 89 c7             	mov    %rax,%rdi
    43ba:	e8 fe f8 ff ff       	callq  3cbd <get_phdr>
    43bf:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    43c3:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    43c8:	74 07                	je     43d1 <elf_get_init_array+0x41>
    43ca:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    43cf:	75 0a                	jne    43db <elf_get_init_array+0x4b>
    43d1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    43d6:	e9 d0 00 00 00       	jmpq   44ab <elf_get_init_array+0x11b>
    43db:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    43e0:	75 0a                	jne    43ec <elf_get_init_array+0x5c>
    43e2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    43e7:	e9 bf 00 00 00       	jmpq   44ab <elf_get_init_array+0x11b>
    43ec:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    43f0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    43f7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    43fb:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4402:	e9 8b 00 00 00       	jmpq   4492 <elf_get_init_array+0x102>
    4407:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    440b:	8b 00                	mov    (%rax),%eax
    440d:	83 f8 02             	cmp    $0x2,%eax
    4410:	75 77                	jne    4489 <elf_get_init_array+0xf9>
    4412:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4416:	48 8b 40 20          	mov    0x20(%rax),%rax
    441a:	48 c1 e8 04          	shr    $0x4,%rax
    441e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4422:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4426:	48 8b 50 18          	mov    0x18(%rax),%rdx
    442a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    442e:	48 01 d0             	add    %rdx,%rax
    4431:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4435:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    443c:	00 
    443d:	eb 40                	jmp    447f <elf_get_init_array+0xef>
    443f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4443:	48 8b 00             	mov    (%rax),%rax
    4446:	48 83 f8 19          	cmp    $0x19,%rax
    444a:	74 08                	je     4454 <elf_get_init_array+0xc4>
    444c:	48 83 f8 1b          	cmp    $0x1b,%rax
    4450:	74 13                	je     4465 <elf_get_init_array+0xd5>
    4452:	eb 21                	jmp    4475 <elf_get_init_array+0xe5>
    4454:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4458:	48 8b 50 08          	mov    0x8(%rax),%rdx
    445c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    4460:	48 89 10             	mov    %rdx,(%rax)
    4463:	eb 10                	jmp    4475 <elf_get_init_array+0xe5>
    4465:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4469:	48 8b 50 08          	mov    0x8(%rax),%rdx
    446d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4471:	48 89 10             	mov    %rdx,(%rax)
    4474:	90                   	nop
    4475:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
    447a:	48 83 45 e8 10       	addq   $0x10,-0x18(%rbp)
    447f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4483:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    4487:	72 b6                	jb     443f <elf_get_init_array+0xaf>
    4489:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
    448d:	48 83 45 d8 38       	addq   $0x38,-0x28(%rbp)
    4492:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4496:	0f b7 40 38          	movzwl 0x38(%rax),%eax
    449a:	0f b7 c0             	movzwl %ax,%eax
    449d:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
    44a0:	0f 87 61 ff ff ff    	ja     4407 <elf_get_init_array+0x77>
    44a6:	b8 00 00 00 00       	mov    $0x0,%eax
    44ab:	c9                   	leaveq 
    44ac:	c3                   	retq   

00000000000044ad <elf_get_uninit_array>:
    44ad:	55                   	push   %rbp
    44ae:	48 89 e5             	mov    %rsp,%rbp
    44b1:	48 83 ec 48          	sub    $0x48,%rsp
    44b5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    44b9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    44bd:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    44c1:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    44c8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    44cc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    44d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    44d4:	48 89 c7             	mov    %rax,%rdi
    44d7:	e8 e1 f7 ff ff       	callq  3cbd <get_phdr>
    44dc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    44e0:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    44e5:	74 07                	je     44ee <elf_get_uninit_array+0x41>
    44e7:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    44ec:	75 0a                	jne    44f8 <elf_get_uninit_array+0x4b>
    44ee:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    44f3:	e9 d0 00 00 00       	jmpq   45c8 <elf_get_uninit_array+0x11b>
    44f8:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    44fd:	75 0a                	jne    4509 <elf_get_uninit_array+0x5c>
    44ff:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4504:	e9 bf 00 00 00       	jmpq   45c8 <elf_get_uninit_array+0x11b>
    4509:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    450d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4514:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4518:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    451f:	e9 8b 00 00 00       	jmpq   45af <elf_get_uninit_array+0x102>
    4524:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4528:	8b 00                	mov    (%rax),%eax
    452a:	83 f8 02             	cmp    $0x2,%eax
    452d:	75 77                	jne    45a6 <elf_get_uninit_array+0xf9>
    452f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4533:	48 8b 40 20          	mov    0x20(%rax),%rax
    4537:	48 c1 e8 04          	shr    $0x4,%rax
    453b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    453f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4543:	48 8b 50 18          	mov    0x18(%rax),%rdx
    4547:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    454b:	48 01 d0             	add    %rdx,%rax
    454e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4552:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    4559:	00 
    455a:	eb 40                	jmp    459c <elf_get_uninit_array+0xef>
    455c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4560:	48 8b 00             	mov    (%rax),%rax
    4563:	48 83 f8 1a          	cmp    $0x1a,%rax
    4567:	74 08                	je     4571 <elf_get_uninit_array+0xc4>
    4569:	48 83 f8 1c          	cmp    $0x1c,%rax
    456d:	74 13                	je     4582 <elf_get_uninit_array+0xd5>
    456f:	eb 21                	jmp    4592 <elf_get_uninit_array+0xe5>
    4571:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4575:	48 8b 50 08          	mov    0x8(%rax),%rdx
    4579:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    457d:	48 89 10             	mov    %rdx,(%rax)
    4580:	eb 10                	jmp    4592 <elf_get_uninit_array+0xe5>
    4582:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4586:	48 8b 50 08          	mov    0x8(%rax),%rdx
    458a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    458e:	48 89 10             	mov    %rdx,(%rax)
    4591:	90                   	nop
    4592:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
    4597:	48 83 45 e8 10       	addq   $0x10,-0x18(%rbp)
    459c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    45a0:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    45a4:	72 b6                	jb     455c <elf_get_uninit_array+0xaf>
    45a6:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
    45aa:	48 83 45 d8 38       	addq   $0x38,-0x28(%rbp)
    45af:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    45b3:	0f b7 40 38          	movzwl 0x38(%rax),%eax
    45b7:	0f b7 c0             	movzwl %ax,%eax
    45ba:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
    45bd:	0f 87 61 ff ff ff    	ja     4524 <elf_get_uninit_array+0x77>
    45c3:	b8 00 00 00 00       	mov    $0x0,%eax
    45c8:	c9                   	leaveq 
    45c9:	c3                   	retq   

00000000000045ca <has_text_relo>:
    45ca:	55                   	push   %rbp
    45cb:	48 89 e5             	mov    %rsp,%rbp
    45ce:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    45d2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    45d6:	89 55 cc             	mov    %edx,-0x34(%rbp)
    45d9:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
    45e0:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    45e7:	eb 7c                	jmp    4665 <has_text_relo+0x9b>
    45e9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    45ed:	8b 00                	mov    (%rax),%eax
    45ef:	83 f8 02             	cmp    $0x2,%eax
    45f2:	75 68                	jne    465c <has_text_relo+0x92>
    45f4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    45f8:	48 8b 40 20          	mov    0x20(%rax),%rax
    45fc:	48 c1 e8 04          	shr    $0x4,%rax
    4600:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4604:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4608:	48 8b 50 18          	mov    0x18(%rax),%rdx
    460c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4610:	48 01 d0             	add    %rdx,%rax
    4613:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4617:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    461e:	00 
    461f:	eb 2c                	jmp    464d <has_text_relo+0x83>
    4621:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4625:	48 8b 00             	mov    (%rax),%rax
    4628:	48 85 c0             	test   %rax,%rax
    462b:	74 2c                	je     4659 <has_text_relo+0x8f>
    462d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4631:	48 8b 00             	mov    (%rax),%rax
    4634:	48 83 f8 16          	cmp    $0x16,%rax
    4638:	75 09                	jne    4643 <has_text_relo+0x79>
    463a:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
    4641:	eb 17                	jmp    465a <has_text_relo+0x90>
    4643:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    4648:	48 83 45 f0 10       	addq   $0x10,-0x10(%rbp)
    464d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4651:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    4655:	72 ca                	jb     4621 <has_text_relo+0x57>
    4657:	eb 18                	jmp    4671 <has_text_relo+0xa7>
    4659:	90                   	nop
    465a:	eb 15                	jmp    4671 <has_text_relo+0xa7>
    465c:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
    4660:	48 83 45 d0 38       	addq   $0x38,-0x30(%rbp)
    4665:	8b 45 e0             	mov    -0x20(%rbp),%eax
    4668:	3b 45 cc             	cmp    -0x34(%rbp),%eax
    466b:	0f 82 78 ff ff ff    	jb     45e9 <has_text_relo+0x1f>
    4671:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    4674:	5d                   	pop    %rbp
    4675:	c3                   	retq   

0000000000004676 <change_protection>:
    4676:	55                   	push   %rbp
    4677:	48 89 e5             	mov    %rsp,%rbp
    467a:	48 83 ec 60          	sub    $0x60,%rsp
    467e:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    4682:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
    4689:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    468d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4691:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4695:	48 89 c7             	mov    %rax,%rdi
    4698:	e8 20 f6 ff ff       	callq  3cbd <get_phdr>
    469d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    46a1:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
    46a8:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    46ad:	75 08                	jne    46b7 <change_protection+0x41>
    46af:	8b 45 c0             	mov    -0x40(%rbp),%eax
    46b2:	e9 aa 01 00 00       	jmpq   4861 <change_protection+0x1eb>
    46b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    46bb:	0f b7 40 38          	movzwl 0x38(%rax),%eax
    46bf:	0f b7 d0             	movzwl %ax,%edx
    46c2:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    46c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    46ca:	48 89 ce             	mov    %rcx,%rsi
    46cd:	48 89 c7             	mov    %rax,%rdi
    46d0:	e8 f5 fe ff ff       	callq  45ca <has_text_relo>
    46d5:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    46d8:	e9 6b 01 00 00       	jmpq   4848 <change_protection+0x1d2>
    46dd:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
    46e1:	0f 84 c7 00 00 00    	je     47ae <change_protection+0x138>
    46e7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    46eb:	8b 00                	mov    (%rax),%eax
    46ed:	83 f8 01             	cmp    $0x1,%eax
    46f0:	0f 85 b8 00 00 00    	jne    47ae <change_protection+0x138>
    46f6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    46fa:	8b 40 04             	mov    0x4(%rax),%eax
    46fd:	83 e0 02             	and    $0x2,%eax
    4700:	85 c0                	test   %eax,%eax
    4702:	0f 85 a6 00 00 00    	jne    47ae <change_protection+0x138>
    4708:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    470f:	00 
    4710:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4714:	48 8b 40 10          	mov    0x10(%rax),%rax
    4718:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    471e:	48 89 c2             	mov    %rax,%rdx
    4721:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4725:	48 01 d0             	add    %rdx,%rax
    4728:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    472c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4730:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4734:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4738:	48 8b 40 28          	mov    0x28(%rax),%rax
    473c:	48 01 d0             	add    %rdx,%rax
    473f:	48 05 ff 0f 00 00    	add    $0xfff,%rax
    4745:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    474b:	48 89 c2             	mov    %rax,%rdx
    474e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4752:	48 01 d0             	add    %rdx,%rax
    4755:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4759:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    475d:	8b 40 04             	mov    0x4(%rax),%eax
    4760:	83 e0 04             	and    $0x4,%eax
    4763:	85 c0                	test   %eax,%eax
    4765:	74 05                	je     476c <change_protection+0xf6>
    4767:	48 83 4d d0 01       	orq    $0x1,-0x30(%rbp)
    476c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4770:	8b 40 04             	mov    0x4(%rax),%eax
    4773:	83 e0 01             	and    $0x1,%eax
    4776:	85 c0                	test   %eax,%eax
    4778:	74 05                	je     477f <change_protection+0x109>
    477a:	48 83 4d d0 04       	orq    $0x4,-0x30(%rbp)
    477f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4783:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    4787:	48 89 c1             	mov    %rax,%rcx
    478a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    478e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4792:	48 89 ce             	mov    %rcx,%rsi
    4795:	48 89 c7             	mov    %rax,%rdi
    4798:	e8 11 e0 ff ff       	callq  27ae <trts_mprotect>
    479d:	89 45 c0             	mov    %eax,-0x40(%rbp)
    47a0:	83 7d c0 00          	cmpl   $0x0,-0x40(%rbp)
    47a4:	74 08                	je     47ae <change_protection+0x138>
    47a6:	8b 45 c0             	mov    -0x40(%rbp),%eax
    47a9:	e9 b3 00 00 00       	jmpq   4861 <change_protection+0x1eb>
    47ae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    47b2:	8b 00                	mov    (%rax),%eax
    47b4:	3d 52 e5 74 64       	cmp    $0x6474e552,%eax
    47b9:	0f 85 80 00 00 00    	jne    483f <change_protection+0x1c9>
    47bf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    47c3:	48 8b 40 10          	mov    0x10(%rax),%rax
    47c7:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    47cd:	48 89 c2             	mov    %rax,%rdx
    47d0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    47d4:	48 01 d0             	add    %rdx,%rax
    47d7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    47db:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    47df:	48 8b 50 10          	mov    0x10(%rax),%rdx
    47e3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    47e7:	48 8b 40 28          	mov    0x28(%rax),%rax
    47eb:	48 01 d0             	add    %rdx,%rax
    47ee:	48 05 ff 0f 00 00    	add    $0xfff,%rax
    47f4:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    47fa:	48 89 c2             	mov    %rax,%rdx
    47fd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4801:	48 01 d0             	add    %rdx,%rax
    4804:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4808:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    480c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    4810:	74 2d                	je     483f <change_protection+0x1c9>
    4812:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4816:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    481a:	48 89 c1             	mov    %rax,%rcx
    481d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4821:	ba 01 00 00 00       	mov    $0x1,%edx
    4826:	48 89 ce             	mov    %rcx,%rsi
    4829:	48 89 c7             	mov    %rax,%rdi
    482c:	e8 7d df ff ff       	callq  27ae <trts_mprotect>
    4831:	89 45 c0             	mov    %eax,-0x40(%rbp)
    4834:	83 7d c0 00          	cmpl   $0x0,-0x40(%rbp)
    4838:	74 05                	je     483f <change_protection+0x1c9>
    483a:	8b 45 c0             	mov    -0x40(%rbp),%eax
    483d:	eb 22                	jmp    4861 <change_protection+0x1eb>
    483f:	83 45 bc 01          	addl   $0x1,-0x44(%rbp)
    4843:	48 83 45 c8 38       	addq   $0x38,-0x38(%rbp)
    4848:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    484c:	0f b7 40 38          	movzwl 0x38(%rax),%eax
    4850:	0f b7 c0             	movzwl %ax,%eax
    4853:	3b 45 bc             	cmp    -0x44(%rbp),%eax
    4856:	0f 87 81 fe ff ff    	ja     46dd <change_protection+0x67>
    485c:	b8 00 00 00 00       	mov    $0x0,%eax
    4861:	c9                   	leaveq 
    4862:	c3                   	retq   

0000000000004863 <__cxa_atexit>:
    4863:	55                   	push   %rbp
    4864:	48 89 e5             	mov    %rsp,%rbp
    4867:	48 83 ec 40          	sub    $0x40,%rsp
    486b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    486f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4873:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    4877:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    487e:	00 00 
    4880:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4884:	31 c0                	xor    %eax,%eax
    4886:	48 8b 05 d3 e0 21 00 	mov    0x21e0d3(%rip),%rax        # 222960 <g_exit_function_cookie>
    488d:	48 85 c0             	test   %rax,%rax
    4890:	0f 94 c0             	sete   %al
    4893:	0f b6 c0             	movzbl %al,%eax
    4896:	48 85 c0             	test   %rax,%rax
    4899:	74 5f                	je     48fa <__cxa_atexit+0x97>
    489b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    48a2:	00 
    48a3:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    48a7:	be 08 00 00 00       	mov    $0x8,%esi
    48ac:	48 89 c7             	mov    %rax,%rdi
    48af:	e8 93 c3 ff ff       	callq  c47 <sgx_read_rand>
    48b4:	85 c0                	test   %eax,%eax
    48b6:	74 0a                	je     48c2 <__cxa_atexit+0x5f>
    48b8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    48bd:	e9 e1 00 00 00       	jmpq   49a3 <__cxa_atexit+0x140>
    48c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    48c6:	48 85 c0             	test   %rax,%rax
    48c9:	74 d8                	je     48a3 <__cxa_atexit+0x40>
    48cb:	48 8d 3d 86 e0 21 00 	lea    0x21e086(%rip),%rdi        # 222958 <g_exit_function_lock>
    48d2:	e8 3a a2 00 00       	callq  eb11 <sgx_spin_lock>
    48d7:	48 8b 05 82 e0 21 00 	mov    0x21e082(%rip),%rax        # 222960 <g_exit_function_cookie>
    48de:	48 85 c0             	test   %rax,%rax
    48e1:	75 0b                	jne    48ee <__cxa_atexit+0x8b>
    48e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    48e7:	48 89 05 72 e0 21 00 	mov    %rax,0x21e072(%rip)        # 222960 <g_exit_function_cookie>
    48ee:	48 8d 3d 63 e0 21 00 	lea    0x21e063(%rip),%rdi        # 222958 <g_exit_function_lock>
    48f5:	e8 7e a2 00 00       	callq  eb78 <sgx_spin_unlock>
    48fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    48fe:	be 00 00 00 00       	mov    $0x0,%esi
    4903:	48 89 c7             	mov    %rax,%rdi
    4906:	e8 76 c0 ff ff       	callq  981 <sgx_is_within_enclave>
    490b:	85 c0                	test   %eax,%eax
    490d:	75 0a                	jne    4919 <__cxa_atexit+0xb6>
    490f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4914:	e9 8a 00 00 00       	jmpq   49a3 <__cxa_atexit+0x140>
    4919:	bf 20 00 00 00       	mov    $0x20,%edi
    491e:	e8 9b 64 00 00       	callq  adbe <dlmalloc>
    4923:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4927:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    492c:	75 07                	jne    4935 <__cxa_atexit+0xd2>
    492e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4933:	eb 6e                	jmp    49a3 <__cxa_atexit+0x140>
    4935:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4939:	48 8b 05 20 e0 21 00 	mov    0x21e020(%rip),%rax        # 222960 <g_exit_function_cookie>
    4940:	48 31 c2             	xor    %rax,%rdx
    4943:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4947:	48 89 10             	mov    %rdx,(%rax)
    494a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    494e:	48 8b 05 0b e0 21 00 	mov    0x21e00b(%rip),%rax        # 222960 <g_exit_function_cookie>
    4955:	48 31 c2             	xor    %rax,%rdx
    4958:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    495c:	48 89 50 08          	mov    %rdx,0x8(%rax)
    4960:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4964:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4968:	48 89 50 10          	mov    %rdx,0x10(%rax)
    496c:	48 8d 3d e5 df 21 00 	lea    0x21dfe5(%rip),%rdi        # 222958 <g_exit_function_lock>
    4973:	e8 99 a1 00 00       	callq  eb11 <sgx_spin_lock>
    4978:	48 8b 15 d1 df 21 00 	mov    0x21dfd1(%rip),%rdx        # 222950 <g_exit_function>
    497f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4983:	48 89 50 18          	mov    %rdx,0x18(%rax)
    4987:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    498b:	48 89 05 be df 21 00 	mov    %rax,0x21dfbe(%rip)        # 222950 <g_exit_function>
    4992:	48 8d 3d bf df 21 00 	lea    0x21dfbf(%rip),%rdi        # 222958 <g_exit_function_lock>
    4999:	e8 da a1 00 00       	callq  eb78 <sgx_spin_unlock>
    499e:	b8 00 00 00 00       	mov    $0x0,%eax
    49a3:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    49a7:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    49ae:	00 00 
    49b0:	74 05                	je     49b7 <__cxa_atexit+0x154>
    49b2:	e8 79 02 00 00       	callq  4c30 <__stack_chk_fail>
    49b7:	c9                   	leaveq 
    49b8:	c3                   	retq   

00000000000049b9 <atexit>:
    49b9:	55                   	push   %rbp
    49ba:	48 89 e5             	mov    %rsp,%rbp
    49bd:	48 83 ec 10          	sub    $0x10,%rsp
    49c1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    49c5:	48 8b 15 84 d6 21 00 	mov    0x21d684(%rip),%rdx        # 222050 <__dso_handle>
    49cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49d0:	be 00 00 00 00       	mov    $0x0,%esi
    49d5:	48 89 c7             	mov    %rax,%rdi
    49d8:	e8 86 fe ff ff       	callq  4863 <__cxa_atexit>
    49dd:	c9                   	leaveq 
    49de:	c3                   	retq   

00000000000049df <do_atexit_aux>:
    49df:	55                   	push   %rbp
    49e0:	48 89 e5             	mov    %rsp,%rbp
    49e3:	48 83 ec 20          	sub    $0x20,%rsp
    49e7:	48 8b 05 62 df 21 00 	mov    0x21df62(%rip),%rax        # 222950 <g_exit_function>
    49ee:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    49f2:	48 c7 05 53 df 21 00 	movq   $0x0,0x21df53(%rip)        # 222950 <g_exit_function>
    49f9:	00 00 00 00 
    49fd:	eb 58                	jmp    4a57 <do_atexit_aux+0x78>
    49ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4a03:	48 8b 10             	mov    (%rax),%rdx
    4a06:	48 8b 05 53 df 21 00 	mov    0x21df53(%rip),%rax        # 222960 <g_exit_function_cookie>
    4a0d:	48 31 d0             	xor    %rdx,%rax
    4a10:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4a14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4a18:	48 8b 50 08          	mov    0x8(%rax),%rdx
    4a1c:	48 8b 05 3d df 21 00 	mov    0x21df3d(%rip),%rax        # 222960 <g_exit_function_cookie>
    4a23:	48 31 d0             	xor    %rdx,%rax
    4a26:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4a2a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4a2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4a32:	48 89 d7             	mov    %rdx,%rdi
    4a35:	ff d0                	callq  *%rax
    4a37:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4a3b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4a3f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4a43:	48 8b 40 18          	mov    0x18(%rax),%rax
    4a47:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4a4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a4f:	48 89 c7             	mov    %rax,%rdi
    4a52:	e8 57 6e 00 00       	callq  b8ae <dlfree>
    4a57:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    4a5c:	75 a1                	jne    49ff <do_atexit_aux+0x20>
    4a5e:	90                   	nop
    4a5f:	c9                   	leaveq 
    4a60:	c3                   	retq   

0000000000004a61 <do_ctors_aux>:
    4a61:	55                   	push   %rbp
    4a62:	48 89 e5             	mov    %rsp,%rbp
    4a65:	48 83 ec 40          	sub    $0x40,%rsp
    4a69:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4a70:	00 00 
    4a72:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4a76:	31 c0                	xor    %eax,%eax
    4a78:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    4a7f:	00 
    4a80:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    4a87:	00 
    4a88:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    4a8f:	00 
    4a90:	48 8d 05 69 b5 ff ff 	lea    -0x4a97(%rip),%rax        # 0 <enclave.so>
    4a97:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4a9b:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    4a9f:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
    4aa3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4aa7:	48 89 ce             	mov    %rcx,%rsi
    4aaa:	48 89 c7             	mov    %rax,%rdi
    4aad:	e8 de f8 ff ff       	callq  4390 <elf_get_init_array>
    4ab2:	85 c0                	test   %eax,%eax
    4ab4:	75 60                	jne    4b16 <do_ctors_aux+0xb5>
    4ab6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4aba:	48 85 c0             	test   %rax,%rax
    4abd:	74 57                	je     4b16 <do_ctors_aux+0xb5>
    4abf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4ac3:	48 85 c0             	test   %rax,%rax
    4ac6:	74 4e                	je     4b16 <do_ctors_aux+0xb5>
    4ac8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4acc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4ad0:	48 01 d0             	add    %rdx,%rax
    4ad3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4ad7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4adb:	48 c1 e8 03          	shr    $0x3,%rax
    4adf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4ae6:	00 
    4ae7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4aeb:	48 01 d0             	add    %rdx,%rax
    4aee:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4af2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4af6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4afa:	eb 0e                	jmp    4b0a <do_ctors_aux+0xa9>
    4afc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b00:	48 8b 00             	mov    (%rax),%rax
    4b03:	ff d0                	callq  *%rax
    4b05:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
    4b0a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b0e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4b12:	72 e8                	jb     4afc <do_ctors_aux+0x9b>
    4b14:	eb 01                	jmp    4b17 <do_ctors_aux+0xb6>
    4b16:	90                   	nop
    4b17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b1b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    4b22:	00 00 
    4b24:	74 05                	je     4b2b <do_ctors_aux+0xca>
    4b26:	e8 05 01 00 00       	callq  4c30 <__stack_chk_fail>
    4b2b:	c9                   	leaveq 
    4b2c:	c3                   	retq   

0000000000004b2d <do_dtors_aux>:
    4b2d:	55                   	push   %rbp
    4b2e:	48 89 e5             	mov    %rsp,%rbp
    4b31:	48 83 ec 40          	sub    $0x40,%rsp
    4b35:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4b3c:	00 00 
    4b3e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4b42:	31 c0                	xor    %eax,%eax
    4b44:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    4b4b:	00 
    4b4c:	48 8d 05 ad b4 ff ff 	lea    -0x4b53(%rip),%rax        # 0 <enclave.so>
    4b53:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4b57:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    4b5b:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
    4b5f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4b63:	48 89 ce             	mov    %rcx,%rsi
    4b66:	48 89 c7             	mov    %rax,%rdi
    4b69:	e8 3f f9 ff ff       	callq  44ad <elf_get_uninit_array>
    4b6e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4b72:	48 85 c0             	test   %rax,%rax
    4b75:	74 5b                	je     4bd2 <do_dtors_aux+0xa5>
    4b77:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4b7b:	48 85 c0             	test   %rax,%rax
    4b7e:	74 52                	je     4bd2 <do_dtors_aux+0xa5>
    4b80:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4b84:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4b88:	48 01 d0             	add    %rdx,%rax
    4b8b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4b8f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4b93:	48 c1 e8 03          	shr    $0x3,%rax
    4b97:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4b9e:	00 
    4b9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ba3:	48 01 d0             	add    %rdx,%rax
    4ba6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4baa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4bae:	48 83 e8 08          	sub    $0x8,%rax
    4bb2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4bb6:	eb 0e                	jmp    4bc6 <do_dtors_aux+0x99>
    4bb8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4bbc:	48 8b 00             	mov    (%rax),%rax
    4bbf:	ff d0                	callq  *%rax
    4bc1:	48 83 6d d8 08       	subq   $0x8,-0x28(%rbp)
    4bc6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4bca:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    4bce:	73 e8                	jae    4bb8 <do_dtors_aux+0x8b>
    4bd0:	eb 01                	jmp    4bd3 <do_dtors_aux+0xa6>
    4bd2:	90                   	nop
    4bd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bd7:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    4bde:	00 00 
    4be0:	74 05                	je     4be7 <do_dtors_aux+0xba>
    4be2:	e8 49 00 00 00       	callq  4c30 <__stack_chk_fail>
    4be7:	c9                   	leaveq 
    4be8:	c3                   	retq   

0000000000004be9 <init_global_object>:
    4be9:	55                   	push   %rbp
    4bea:	48 89 e5             	mov    %rsp,%rbp
    4bed:	e8 6f fe ff ff       	callq  4a61 <do_ctors_aux>
    4bf2:	90                   	nop
    4bf3:	5d                   	pop    %rbp
    4bf4:	c3                   	retq   

0000000000004bf5 <uninit_global_object>:
    4bf5:	55                   	push   %rbp
    4bf6:	48 89 e5             	mov    %rsp,%rbp
    4bf9:	e8 e1 fd ff ff       	callq  49df <do_atexit_aux>
    4bfe:	e8 2a ff ff ff       	callq  4b2d <do_dtors_aux>
    4c03:	90                   	nop
    4c04:	5d                   	pop    %rbp
    4c05:	c3                   	retq   

0000000000004c06 <__tls_get_addr>:
    4c06:	55                   	push   %rbp
    4c07:	48 89 e5             	mov    %rsp,%rbp
    4c0a:	48 83 ec 20          	sub    $0x20,%rsp
    4c0e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4c12:	e8 b6 95 01 00       	callq  1e1cd <get_thread_data>
    4c17:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4c1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4c1f:	48 8b 50 08          	mov    0x8(%rax),%rdx
    4c23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c27:	48 8b 40 50          	mov    0x50(%rax),%rax
    4c2b:	48 01 d0             	add    %rdx,%rax
    4c2e:	c9                   	leaveq 
    4c2f:	c3                   	retq   

0000000000004c30 <__stack_chk_fail>:
    4c30:	55                   	push   %rbp
    4c31:	48 89 e5             	mov    %rsp,%rbp
    4c34:	e8 90 98 01 00       	callq  1e4c9 <abort>

0000000000004c39 <__stack_chk_fail_local>:
    4c39:	55                   	push   %rbp
    4c3a:	48 89 e5             	mov    %rsp,%rbp
    4c3d:	e8 ee ff ff ff       	callq  4c30 <__stack_chk_fail>

0000000000004c42 <__intel_security_check_cookie>:
    4c42:	55                   	push   %rbp
    4c43:	48 89 e5             	mov    %rsp,%rbp
    4c46:	48 83 ec 10          	sub    $0x10,%rsp
    4c4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c4e:	48 8b 05 d3 d1 21 00 	mov    0x21d1d3(%rip),%rax        # 221e28 <__intel_security_cookie>
    4c55:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    4c59:	74 05                	je     4c60 <__intel_security_check_cookie+0x1e>
    4c5b:	e8 69 98 01 00       	callq  1e4c9 <abort>
    4c60:	90                   	nop
    4c61:	c9                   	leaveq 
    4c62:	c3                   	retq   

0000000000004c63 <__assert>:
    4c63:	55                   	push   %rbp
    4c64:	48 89 e5             	mov    %rsp,%rbp
    4c67:	48 83 ec 20          	sub    $0x20,%rsp
    4c6b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c6f:	89 75 f4             	mov    %esi,-0xc(%rbp)
    4c72:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    4c76:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    4c7a:	e8 4a 98 01 00       	callq  1e4c9 <abort>

0000000000004c7f <spin_acquire_lock>:
    4c7f:	55                   	push   %rbp
    4c80:	48 89 e5             	mov    %rsp,%rbp
    4c83:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4c87:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4c8e:	eb 04                	jmp    4c94 <spin_acquire_lock+0x15>
    4c90:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4c94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4c98:	8b 00                	mov    (%rax),%eax
    4c9a:	85 c0                	test   %eax,%eax
    4c9c:	75 f2                	jne    4c90 <spin_acquire_lock+0x11>
    4c9e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4ca2:	b8 01 00 00 00       	mov    $0x1,%eax
    4ca7:	87 02                	xchg   %eax,(%rdx)
    4ca9:	85 c0                	test   %eax,%eax
    4cab:	75 e3                	jne    4c90 <spin_acquire_lock+0x11>
    4cad:	b8 00 00 00 00       	mov    $0x0,%eax
    4cb2:	5d                   	pop    %rbp
    4cb3:	c3                   	retq   

0000000000004cb4 <segment_holding>:
    4cb4:	55                   	push   %rbp
    4cb5:	48 89 e5             	mov    %rsp,%rbp
    4cb8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4cbc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4cc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4cc4:	48 05 78 03 00 00    	add    $0x378,%rax
    4cca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4cce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cd2:	48 8b 00             	mov    (%rax),%rax
    4cd5:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    4cd9:	77 1e                	ja     4cf9 <segment_holding+0x45>
    4cdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cdf:	48 8b 10             	mov    (%rax),%rdx
    4ce2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ce6:	48 8b 40 08          	mov    0x8(%rax),%rax
    4cea:	48 01 d0             	add    %rdx,%rax
    4ced:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    4cf1:	76 06                	jbe    4cf9 <segment_holding+0x45>
    4cf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cf7:	eb 18                	jmp    4d11 <segment_holding+0x5d>
    4cf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cfd:	48 8b 40 10          	mov    0x10(%rax),%rax
    4d01:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4d05:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    4d0a:	75 c2                	jne    4cce <segment_holding+0x1a>
    4d0c:	b8 00 00 00 00       	mov    $0x0,%eax
    4d11:	5d                   	pop    %rbp
    4d12:	c3                   	retq   

0000000000004d13 <has_segment_link>:
    4d13:	55                   	push   %rbp
    4d14:	48 89 e5             	mov    %rsp,%rbp
    4d17:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4d1b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4d1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4d23:	48 05 78 03 00 00    	add    $0x378,%rax
    4d29:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4d2d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4d31:	48 8b 00             	mov    (%rax),%rax
    4d34:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    4d38:	77 1f                	ja     4d59 <has_segment_link+0x46>
    4d3a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4d3e:	48 8b 10             	mov    (%rax),%rdx
    4d41:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4d45:	48 8b 40 08          	mov    0x8(%rax),%rax
    4d49:	48 01 d0             	add    %rdx,%rax
    4d4c:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    4d50:	76 07                	jbe    4d59 <has_segment_link+0x46>
    4d52:	b8 01 00 00 00       	mov    $0x1,%eax
    4d57:	eb 18                	jmp    4d71 <has_segment_link+0x5e>
    4d59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d5d:	48 8b 40 10          	mov    0x10(%rax),%rax
    4d61:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4d65:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    4d6a:	75 c1                	jne    4d2d <has_segment_link+0x1a>
    4d6c:	b8 00 00 00 00       	mov    $0x0,%eax
    4d71:	5d                   	pop    %rbp
    4d72:	c3                   	retq   

0000000000004d73 <init_mparams>:
    4d73:	55                   	push   %rbp
    4d74:	48 89 e5             	mov    %rsp,%rbp
    4d77:	48 83 ec 20          	sub    $0x20,%rsp
    4d7b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4d82:	00 00 
    4d84:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4d88:	31 c0                	xor    %eax,%eax
    4d8a:	b8 01 00 00 00       	mov    $0x1,%eax
    4d8f:	87 05 d3 db 21 00    	xchg   %eax,0x21dbd3(%rip)        # 222968 <malloc_global_mutex>
    4d95:	85 c0                	test   %eax,%eax
    4d97:	74 0c                	je     4da5 <init_mparams+0x32>
    4d99:	48 8d 3d c8 db 21 00 	lea    0x21dbc8(%rip),%rdi        # 222968 <malloc_global_mutex>
    4da0:	e8 da fe ff ff       	callq  4c7f <spin_acquire_lock>
    4da5:	48 8b 05 d4 db 21 00 	mov    0x21dbd4(%rip),%rax        # 222980 <mparams>
    4dac:	48 85 c0             	test   %rax,%rax
    4daf:	0f 85 d1 00 00 00    	jne    4e86 <init_mparams+0x113>
    4db5:	48 c7 45 e8 00 10 00 	movq   $0x1000,-0x18(%rbp)
    4dbc:	00 
    4dbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4dc1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4dc5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4dc9:	48 83 e8 01          	sub    $0x1,%rax
    4dcd:	48 23 45 f0          	and    -0x10(%rbp),%rax
    4dd1:	48 85 c0             	test   %rax,%rax
    4dd4:	75 11                	jne    4de7 <init_mparams+0x74>
    4dd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4dda:	48 83 e8 01          	sub    $0x1,%rax
    4dde:	48 23 45 e8          	and    -0x18(%rbp),%rax
    4de2:	48 85 c0             	test   %rax,%rax
    4de5:	74 05                	je     4dec <init_mparams+0x79>
    4de7:	e8 dd 96 01 00       	callq  1e4c9 <abort>
    4dec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4df0:	48 89 05 99 db 21 00 	mov    %rax,0x21db99(%rip)        # 222990 <mparams+0x10>
    4df7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4dfb:	48 89 05 86 db 21 00 	mov    %rax,0x21db86(%rip)        # 222988 <mparams+0x8>
    4e02:	48 c7 05 8b db 21 00 	movq   $0xffffffffffffffff,0x21db8b(%rip)        # 222998 <mparams+0x18>
    4e09:	ff ff ff ff 
    4e0d:	48 c7 05 88 db 21 00 	movq   $0x200000,0x21db88(%rip)        # 2229a0 <mparams+0x20>
    4e14:	00 00 20 00 
    4e18:	c7 05 86 db 21 00 02 	movl   $0x2,0x21db86(%rip)        # 2229a8 <mparams+0x28>
    4e1f:	00 00 00 
    4e22:	8b 05 80 db 21 00    	mov    0x21db80(%rip),%eax        # 2229a8 <mparams+0x28>
    4e28:	89 05 02 df 21 00    	mov    %eax,0x21df02(%rip)        # 222d30 <_gm_+0x370>
    4e2e:	c7 05 fc de 21 00 00 	movl   $0x0,0x21defc(%rip)        # 222d34 <_gm_+0x374>
    4e35:	00 00 00 
    4e38:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4e3c:	be 08 00 00 00       	mov    $0x8,%esi
    4e41:	48 89 c7             	mov    %rax,%rdi
    4e44:	e8 fe bd ff ff       	callq  c47 <sgx_read_rand>
    4e49:	85 c0                	test   %eax,%eax
    4e4b:	74 05                	je     4e52 <init_mparams+0xdf>
    4e4d:	e8 77 96 01 00       	callq  1e4c9 <abort>
    4e52:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4e56:	48 35 55 55 55 55    	xor    $0x55555555,%rax
    4e5c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4e60:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4e64:	48 83 c8 08          	or     $0x8,%rax
    4e68:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4e6c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4e70:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    4e74:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4e78:	48 8d 05 01 db 21 00 	lea    0x21db01(%rip),%rax        # 222980 <mparams>
    4e7f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4e83:	48 89 10             	mov    %rdx,(%rax)
    4e86:	b8 00 00 00 00       	mov    $0x0,%eax
    4e8b:	89 05 d7 da 21 00    	mov    %eax,0x21dad7(%rip)        # 222968 <malloc_global_mutex>
    4e91:	b8 01 00 00 00       	mov    $0x1,%eax
    4e96:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    4e9a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    4ea1:	00 00 
    4ea3:	74 05                	je     4eaa <init_mparams+0x137>
    4ea5:	e8 86 fd ff ff       	callq  4c30 <__stack_chk_fail>
    4eaa:	c9                   	leaveq 
    4eab:	c3                   	retq   

0000000000004eac <change_mparam>:
    4eac:	55                   	push   %rbp
    4ead:	48 89 e5             	mov    %rsp,%rbp
    4eb0:	48 83 ec 20          	sub    $0x20,%rsp
    4eb4:	89 7d ec             	mov    %edi,-0x14(%rbp)
    4eb7:	89 75 e8             	mov    %esi,-0x18(%rbp)
    4eba:	48 8b 05 bf da 21 00 	mov    0x21dabf(%rip),%rax        # 222980 <mparams>
    4ec1:	48 85 c0             	test   %rax,%rax
    4ec4:	75 07                	jne    4ecd <change_mparam+0x21>
    4ec6:	e8 a8 fe ff ff       	callq  4d73 <init_mparams>
    4ecb:	85 c0                	test   %eax,%eax
    4ecd:	90                   	nop
    4ece:	83 7d e8 ff          	cmpl   $0xffffffff,-0x18(%rbp)
    4ed2:	74 07                	je     4edb <change_mparam+0x2f>
    4ed4:	8b 45 e8             	mov    -0x18(%rbp),%eax
    4ed7:	48 98                	cltq   
    4ed9:	eb 07                	jmp    4ee2 <change_mparam+0x36>
    4edb:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    4ee2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4ee6:	8b 45 ec             	mov    -0x14(%rbp),%eax
    4ee9:	83 f8 fe             	cmp    $0xfffffffe,%eax
    4eec:	74 1e                	je     4f0c <change_mparam+0x60>
    4eee:	83 f8 ff             	cmp    $0xffffffff,%eax
    4ef1:	74 07                	je     4efa <change_mparam+0x4e>
    4ef3:	83 f8 fd             	cmp    $0xfffffffd,%eax
    4ef6:	74 4b                	je     4f43 <change_mparam+0x97>
    4ef8:	eb 5b                	jmp    4f55 <change_mparam+0xa9>
    4efa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4efe:	48 89 05 9b da 21 00 	mov    %rax,0x21da9b(%rip)        # 2229a0 <mparams+0x20>
    4f05:	b8 01 00 00 00       	mov    $0x1,%eax
    4f0a:	eb 4e                	jmp    4f5a <change_mparam+0xae>
    4f0c:	48 8b 05 75 da 21 00 	mov    0x21da75(%rip),%rax        # 222988 <mparams+0x8>
    4f13:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    4f17:	77 23                	ja     4f3c <change_mparam+0x90>
    4f19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f1d:	48 83 e8 01          	sub    $0x1,%rax
    4f21:	48 23 45 f8          	and    -0x8(%rbp),%rax
    4f25:	48 85 c0             	test   %rax,%rax
    4f28:	75 12                	jne    4f3c <change_mparam+0x90>
    4f2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f2e:	48 89 05 5b da 21 00 	mov    %rax,0x21da5b(%rip)        # 222990 <mparams+0x10>
    4f35:	b8 01 00 00 00       	mov    $0x1,%eax
    4f3a:	eb 1e                	jmp    4f5a <change_mparam+0xae>
    4f3c:	b8 00 00 00 00       	mov    $0x0,%eax
    4f41:	eb 17                	jmp    4f5a <change_mparam+0xae>
    4f43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f47:	48 89 05 4a da 21 00 	mov    %rax,0x21da4a(%rip)        # 222998 <mparams+0x18>
    4f4e:	b8 01 00 00 00       	mov    $0x1,%eax
    4f53:	eb 05                	jmp    4f5a <change_mparam+0xae>
    4f55:	b8 00 00 00 00       	mov    $0x0,%eax
    4f5a:	c9                   	leaveq 
    4f5b:	c3                   	retq   

0000000000004f5c <do_check_any_chunk>:
    4f5c:	55                   	push   %rbp
    4f5d:	48 89 e5             	mov    %rsp,%rbp
    4f60:	48 83 ec 10          	sub    $0x10,%rsp
    4f64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4f6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4f70:	48 83 c0 10          	add    $0x10,%rax
    4f74:	83 e0 07             	and    $0x7,%eax
    4f77:	48 85 c0             	test   %rax,%rax
    4f7a:	74 13                	je     4f8f <do_check_any_chunk+0x33>
    4f7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4f80:	48 8b 40 08          	mov    0x8(%rax),%rax
    4f84:	48 83 f8 0b          	cmp    $0xb,%rax
    4f88:	74 05                	je     4f8f <do_check_any_chunk+0x33>
    4f8a:	e8 3a 95 01 00       	callq  1e4c9 <abort>
    4f8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f93:	48 8b 40 18          	mov    0x18(%rax),%rax
    4f97:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4f9b:	76 05                	jbe    4fa2 <do_check_any_chunk+0x46>
    4f9d:	e8 27 95 01 00       	callq  1e4c9 <abort>
    4fa2:	90                   	nop
    4fa3:	c9                   	leaveq 
    4fa4:	c3                   	retq   

0000000000004fa5 <do_check_top_chunk>:
    4fa5:	55                   	push   %rbp
    4fa6:	48 89 e5             	mov    %rsp,%rbp
    4fa9:	48 83 ec 20          	sub    $0x20,%rsp
    4fad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4fb1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4fb5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4fb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4fbd:	48 89 d6             	mov    %rdx,%rsi
    4fc0:	48 89 c7             	mov    %rax,%rdi
    4fc3:	e8 ec fc ff ff       	callq  4cb4 <segment_holding>
    4fc8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4fcc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4fd0:	48 8b 40 08          	mov    0x8(%rax),%rax
    4fd4:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    4fd8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4fdc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4fe1:	75 05                	jne    4fe8 <do_check_top_chunk+0x43>
    4fe3:	e8 e1 94 01 00       	callq  1e4c9 <abort>
    4fe8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4fec:	48 83 c0 10          	add    $0x10,%rax
    4ff0:	83 e0 07             	and    $0x7,%eax
    4ff3:	48 85 c0             	test   %rax,%rax
    4ff6:	74 13                	je     500b <do_check_top_chunk+0x66>
    4ff8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4ffc:	48 8b 40 08          	mov    0x8(%rax),%rax
    5000:	48 83 f8 0b          	cmp    $0xb,%rax
    5004:	74 05                	je     500b <do_check_top_chunk+0x66>
    5006:	e8 be 94 01 00       	callq  1e4c9 <abort>
    500b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    500f:	48 8b 40 18          	mov    0x18(%rax),%rax
    5013:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    5017:	76 05                	jbe    501e <do_check_top_chunk+0x79>
    5019:	e8 ab 94 01 00       	callq  1e4c9 <abort>
    501e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5022:	48 8b 40 10          	mov    0x10(%rax),%rax
    5026:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    502a:	74 05                	je     5031 <do_check_top_chunk+0x8c>
    502c:	e8 98 94 01 00       	callq  1e4c9 <abort>
    5031:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    5036:	75 05                	jne    503d <do_check_top_chunk+0x98>
    5038:	e8 8c 94 01 00       	callq  1e4c9 <abort>
    503d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5041:	48 8b 10             	mov    (%rax),%rdx
    5044:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5048:	48 8b 40 08          	mov    0x8(%rax),%rax
    504c:	48 01 d0             	add    %rdx,%rax
    504f:	48 89 c2             	mov    %rax,%rdx
    5052:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5056:	48 29 c2             	sub    %rax,%rdx
    5059:	48 89 d0             	mov    %rdx,%rax
    505c:	48 83 e8 50          	sub    $0x50,%rax
    5060:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    5064:	74 05                	je     506b <do_check_top_chunk+0xc6>
    5066:	e8 5e 94 01 00       	callq  1e4c9 <abort>
    506b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    506f:	48 8b 40 08          	mov    0x8(%rax),%rax
    5073:	83 e0 01             	and    $0x1,%eax
    5076:	48 85 c0             	test   %rax,%rax
    5079:	75 05                	jne    5080 <do_check_top_chunk+0xdb>
    507b:	e8 49 94 01 00       	callq  1e4c9 <abort>
    5080:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5084:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5088:	48 01 d0             	add    %rdx,%rax
    508b:	48 8b 40 08          	mov    0x8(%rax),%rax
    508f:	83 e0 01             	and    $0x1,%eax
    5092:	48 85 c0             	test   %rax,%rax
    5095:	74 05                	je     509c <do_check_top_chunk+0xf7>
    5097:	e8 2d 94 01 00       	callq  1e4c9 <abort>
    509c:	90                   	nop
    509d:	c9                   	leaveq 
    509e:	c3                   	retq   

000000000000509f <do_check_mmapped_chunk>:
    509f:	55                   	push   %rbp
    50a0:	48 89 e5             	mov    %rsp,%rbp
    50a3:	48 83 ec 20          	sub    $0x20,%rsp
    50a7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    50ab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    50af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    50b3:	48 8b 40 08          	mov    0x8(%rax),%rax
    50b7:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    50bb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    50bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    50c3:	48 8b 10             	mov    (%rax),%rdx
    50c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    50ca:	48 01 d0             	add    %rdx,%rax
    50cd:	48 83 c0 20          	add    $0x20,%rax
    50d1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    50d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    50d9:	48 8b 40 08          	mov    0x8(%rax),%rax
    50dd:	83 e0 03             	and    $0x3,%eax
    50e0:	48 85 c0             	test   %rax,%rax
    50e3:	74 05                	je     50ea <do_check_mmapped_chunk+0x4b>
    50e5:	e8 df 93 01 00       	callq  1e4c9 <abort>
    50ea:	e8 da 93 01 00       	callq  1e4c9 <abort>

00000000000050ef <do_check_inuse_chunk>:
    50ef:	55                   	push   %rbp
    50f0:	48 89 e5             	mov    %rsp,%rbp
    50f3:	48 83 ec 10          	sub    $0x10,%rsp
    50f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50fb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    50ff:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5103:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5107:	48 89 d6             	mov    %rdx,%rsi
    510a:	48 89 c7             	mov    %rax,%rdi
    510d:	e8 4a fe ff ff       	callq  4f5c <do_check_any_chunk>
    5112:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5116:	48 8b 40 08          	mov    0x8(%rax),%rax
    511a:	83 e0 03             	and    $0x3,%eax
    511d:	48 83 f8 01          	cmp    $0x1,%rax
    5121:	75 05                	jne    5128 <do_check_inuse_chunk+0x39>
    5123:	e8 a1 93 01 00       	callq  1e4c9 <abort>
    5128:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    512c:	48 8b 40 08          	mov    0x8(%rax),%rax
    5130:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    5134:	48 89 c2             	mov    %rax,%rdx
    5137:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    513b:	48 01 d0             	add    %rdx,%rax
    513e:	48 8b 40 08          	mov    0x8(%rax),%rax
    5142:	83 e0 01             	and    $0x1,%eax
    5145:	48 85 c0             	test   %rax,%rax
    5148:	75 05                	jne    514f <do_check_inuse_chunk+0x60>
    514a:	e8 7a 93 01 00       	callq  1e4c9 <abort>
    514f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5153:	48 8b 40 08          	mov    0x8(%rax),%rax
    5157:	83 e0 03             	and    $0x3,%eax
    515a:	48 85 c0             	test   %rax,%rax
    515d:	74 40                	je     519f <do_check_inuse_chunk+0xb0>
    515f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5163:	48 8b 40 08          	mov    0x8(%rax),%rax
    5167:	83 e0 01             	and    $0x1,%eax
    516a:	48 85 c0             	test   %rax,%rax
    516d:	75 30                	jne    519f <do_check_inuse_chunk+0xb0>
    516f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5173:	48 8b 00             	mov    (%rax),%rax
    5176:	48 f7 d8             	neg    %rax
    5179:	48 89 c2             	mov    %rax,%rdx
    517c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5180:	48 01 d0             	add    %rdx,%rax
    5183:	48 8b 40 08          	mov    0x8(%rax),%rax
    5187:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    518b:	48 89 c2             	mov    %rax,%rdx
    518e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5192:	48 8b 00             	mov    (%rax),%rax
    5195:	48 39 c2             	cmp    %rax,%rdx
    5198:	74 05                	je     519f <do_check_inuse_chunk+0xb0>
    519a:	e8 2a 93 01 00       	callq  1e4c9 <abort>
    519f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    51a3:	48 8b 40 08          	mov    0x8(%rax),%rax
    51a7:	83 e0 03             	and    $0x3,%eax
    51aa:	48 85 c0             	test   %rax,%rax
    51ad:	75 13                	jne    51c2 <do_check_inuse_chunk+0xd3>
    51af:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    51b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51b7:	48 89 d6             	mov    %rdx,%rsi
    51ba:	48 89 c7             	mov    %rax,%rdi
    51bd:	e8 dd fe ff ff       	callq  509f <do_check_mmapped_chunk>
    51c2:	90                   	nop
    51c3:	c9                   	leaveq 
    51c4:	c3                   	retq   

00000000000051c5 <do_check_free_chunk>:
    51c5:	55                   	push   %rbp
    51c6:	48 89 e5             	mov    %rsp,%rbp
    51c9:	48 83 ec 20          	sub    $0x20,%rsp
    51cd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    51d1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    51d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    51d9:	48 8b 40 08          	mov    0x8(%rax),%rax
    51dd:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    51e1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    51e5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    51e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    51ed:	48 01 d0             	add    %rdx,%rax
    51f0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    51f4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    51f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    51fc:	48 89 d6             	mov    %rdx,%rsi
    51ff:	48 89 c7             	mov    %rax,%rdi
    5202:	e8 55 fd ff ff       	callq  4f5c <do_check_any_chunk>
    5207:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    520b:	48 8b 40 08          	mov    0x8(%rax),%rax
    520f:	83 e0 03             	and    $0x3,%eax
    5212:	48 83 f8 01          	cmp    $0x1,%rax
    5216:	74 05                	je     521d <do_check_free_chunk+0x58>
    5218:	e8 ac 92 01 00       	callq  1e4c9 <abort>
    521d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5221:	48 8b 40 08          	mov    0x8(%rax),%rax
    5225:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    5229:	48 89 c2             	mov    %rax,%rdx
    522c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5230:	48 01 d0             	add    %rdx,%rax
    5233:	48 8b 40 08          	mov    0x8(%rax),%rax
    5237:	83 e0 01             	and    $0x1,%eax
    523a:	48 85 c0             	test   %rax,%rax
    523d:	74 05                	je     5244 <do_check_free_chunk+0x7f>
    523f:	e8 85 92 01 00       	callq  1e4c9 <abort>
    5244:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5248:	48 8b 40 08          	mov    0x8(%rax),%rax
    524c:	83 e0 03             	and    $0x3,%eax
    524f:	48 85 c0             	test   %rax,%rax
    5252:	75 05                	jne    5259 <do_check_free_chunk+0x94>
    5254:	e8 70 92 01 00       	callq  1e4c9 <abort>
    5259:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    525d:	48 8b 40 20          	mov    0x20(%rax),%rax
    5261:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    5265:	0f 84 c8 00 00 00    	je     5333 <do_check_free_chunk+0x16e>
    526b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    526f:	48 8b 40 28          	mov    0x28(%rax),%rax
    5273:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    5277:	0f 84 b6 00 00 00    	je     5333 <do_check_free_chunk+0x16e>
    527d:	48 83 7d f0 1f       	cmpq   $0x1f,-0x10(%rbp)
    5282:	0f 86 9f 00 00 00    	jbe    5327 <do_check_free_chunk+0x162>
    5288:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    528c:	83 e0 07             	and    $0x7,%eax
    528f:	48 85 c0             	test   %rax,%rax
    5292:	74 05                	je     5299 <do_check_free_chunk+0xd4>
    5294:	e8 30 92 01 00       	callq  1e4c9 <abort>
    5299:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    529d:	48 83 c0 10          	add    $0x10,%rax
    52a1:	83 e0 07             	and    $0x7,%eax
    52a4:	48 85 c0             	test   %rax,%rax
    52a7:	74 05                	je     52ae <do_check_free_chunk+0xe9>
    52a9:	e8 1b 92 01 00       	callq  1e4c9 <abort>
    52ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52b2:	48 8b 00             	mov    (%rax),%rax
    52b5:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    52b9:	74 05                	je     52c0 <do_check_free_chunk+0xfb>
    52bb:	e8 09 92 01 00       	callq  1e4c9 <abort>
    52c0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    52c4:	48 8b 40 08          	mov    0x8(%rax),%rax
    52c8:	83 e0 01             	and    $0x1,%eax
    52cb:	48 85 c0             	test   %rax,%rax
    52ce:	75 05                	jne    52d5 <do_check_free_chunk+0x110>
    52d0:	e8 f4 91 01 00       	callq  1e4c9 <abort>
    52d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    52d9:	48 8b 40 28          	mov    0x28(%rax),%rax
    52dd:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    52e1:	74 16                	je     52f9 <do_check_free_chunk+0x134>
    52e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52e7:	48 8b 40 08          	mov    0x8(%rax),%rax
    52eb:	83 e0 03             	and    $0x3,%eax
    52ee:	48 83 f8 01          	cmp    $0x1,%rax
    52f2:	75 05                	jne    52f9 <do_check_free_chunk+0x134>
    52f4:	e8 d0 91 01 00       	callq  1e4c9 <abort>
    52f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    52fd:	48 8b 40 10          	mov    0x10(%rax),%rax
    5301:	48 8b 40 18          	mov    0x18(%rax),%rax
    5305:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    5309:	74 05                	je     5310 <do_check_free_chunk+0x14b>
    530b:	e8 b9 91 01 00       	callq  1e4c9 <abort>
    5310:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5314:	48 8b 40 18          	mov    0x18(%rax),%rax
    5318:	48 8b 40 10          	mov    0x10(%rax),%rax
    531c:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    5320:	74 11                	je     5333 <do_check_free_chunk+0x16e>
    5322:	e8 a2 91 01 00       	callq  1e4c9 <abort>
    5327:	48 83 7d f0 08       	cmpq   $0x8,-0x10(%rbp)
    532c:	74 05                	je     5333 <do_check_free_chunk+0x16e>
    532e:	e8 96 91 01 00       	callq  1e4c9 <abort>
    5333:	90                   	nop
    5334:	c9                   	leaveq 
    5335:	c3                   	retq   

0000000000005336 <do_check_malloced_chunk>:
    5336:	55                   	push   %rbp
    5337:	48 89 e5             	mov    %rsp,%rbp
    533a:	48 83 ec 30          	sub    $0x30,%rsp
    533e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5342:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5346:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    534a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    534f:	74 7e                	je     53cf <do_check_malloced_chunk+0x99>
    5351:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5355:	48 83 e8 10          	sub    $0x10,%rax
    5359:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    535d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5361:	48 8b 40 08          	mov    0x8(%rax),%rax
    5365:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    5369:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    536d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5371:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5375:	48 89 d6             	mov    %rdx,%rsi
    5378:	48 89 c7             	mov    %rax,%rdi
    537b:	e8 6f fd ff ff       	callq  50ef <do_check_inuse_chunk>
    5380:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5384:	83 e0 07             	and    $0x7,%eax
    5387:	48 85 c0             	test   %rax,%rax
    538a:	74 05                	je     5391 <do_check_malloced_chunk+0x5b>
    538c:	e8 38 91 01 00       	callq  1e4c9 <abort>
    5391:	48 83 7d f8 1f       	cmpq   $0x1f,-0x8(%rbp)
    5396:	77 05                	ja     539d <do_check_malloced_chunk+0x67>
    5398:	e8 2c 91 01 00       	callq  1e4c9 <abort>
    539d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53a1:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    53a5:	73 05                	jae    53ac <do_check_malloced_chunk+0x76>
    53a7:	e8 1d 91 01 00       	callq  1e4c9 <abort>
    53ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    53b0:	48 8b 40 08          	mov    0x8(%rax),%rax
    53b4:	83 e0 03             	and    $0x3,%eax
    53b7:	48 85 c0             	test   %rax,%rax
    53ba:	74 13                	je     53cf <do_check_malloced_chunk+0x99>
    53bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    53c0:	48 83 c0 20          	add    $0x20,%rax
    53c4:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    53c8:	77 05                	ja     53cf <do_check_malloced_chunk+0x99>
    53ca:	e8 fa 90 01 00       	callq  1e4c9 <abort>
    53cf:	90                   	nop
    53d0:	c9                   	leaveq 
    53d1:	c3                   	retq   

00000000000053d2 <do_check_tree>:
    53d2:	55                   	push   %rbp
    53d3:	48 89 e5             	mov    %rsp,%rbp
    53d6:	48 83 ec 40          	sub    $0x40,%rsp
    53da:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    53de:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    53e2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    53e9:	00 
    53ea:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    53ee:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    53f2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    53f6:	8b 40 38             	mov    0x38(%rax),%eax
    53f9:	89 45 dc             	mov    %eax,-0x24(%rbp)
    53fc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5400:	48 8b 40 08          	mov    0x8(%rax),%rax
    5404:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    5408:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    540c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5410:	48 c1 e8 08          	shr    $0x8,%rax
    5414:	89 45 e0             	mov    %eax,-0x20(%rbp)
    5417:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
    541b:	75 09                	jne    5426 <do_check_tree+0x54>
    541d:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
    5424:	eb 45                	jmp    546b <do_check_tree+0x99>
    5426:	81 7d e0 ff ff 00 00 	cmpl   $0xffff,-0x20(%rbp)
    542d:	76 09                	jbe    5438 <do_check_tree+0x66>
    542f:	c7 45 d8 1f 00 00 00 	movl   $0x1f,-0x28(%rbp)
    5436:	eb 33                	jmp    546b <do_check_tree+0x99>
    5438:	0f bd 45 e0          	bsr    -0x20(%rbp),%eax
    543c:	83 f0 1f             	xor    $0x1f,%eax
    543f:	ba 1f 00 00 00       	mov    $0x1f,%edx
    5444:	29 c2                	sub    %eax,%edx
    5446:	89 d0                	mov    %edx,%eax
    5448:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    544b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    544e:	8d 34 00             	lea    (%rax,%rax,1),%esi
    5451:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    5454:	83 c0 07             	add    $0x7,%eax
    5457:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    545b:	89 c1                	mov    %eax,%ecx
    545d:	48 d3 ea             	shr    %cl,%rdx
    5460:	48 89 d0             	mov    %rdx,%rax
    5463:	83 e0 01             	and    $0x1,%eax
    5466:	01 f0                	add    %esi,%eax
    5468:	89 45 d8             	mov    %eax,-0x28(%rbp)
    546b:	8b 45 dc             	mov    -0x24(%rbp),%eax
    546e:	3b 45 d8             	cmp    -0x28(%rbp),%eax
    5471:	74 05                	je     5478 <do_check_tree+0xa6>
    5473:	e8 51 90 01 00       	callq  1e4c9 <abort>
    5478:	48 81 7d f8 ff 00 00 	cmpq   $0xff,-0x8(%rbp)
    547f:	00 
    5480:	77 05                	ja     5487 <do_check_tree+0xb5>
    5482:	e8 42 90 01 00       	callq  1e4c9 <abort>
    5487:	8b 45 d8             	mov    -0x28(%rbp),%eax
    548a:	d1 e8                	shr    %eax
    548c:	83 c0 08             	add    $0x8,%eax
    548f:	ba 01 00 00 00       	mov    $0x1,%edx
    5494:	89 c1                	mov    %eax,%ecx
    5496:	48 d3 e2             	shl    %cl,%rdx
    5499:	8b 45 d8             	mov    -0x28(%rbp),%eax
    549c:	83 e0 01             	and    $0x1,%eax
    549f:	48 89 c6             	mov    %rax,%rsi
    54a2:	8b 45 d8             	mov    -0x28(%rbp),%eax
    54a5:	d1 e8                	shr    %eax
    54a7:	83 c0 07             	add    $0x7,%eax
    54aa:	89 c1                	mov    %eax,%ecx
    54ac:	48 d3 e6             	shl    %cl,%rsi
    54af:	48 89 f0             	mov    %rsi,%rax
    54b2:	48 09 d0             	or     %rdx,%rax
    54b5:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    54b9:	76 05                	jbe    54c0 <do_check_tree+0xee>
    54bb:	e8 09 90 01 00       	callq  1e4c9 <abort>
    54c0:	83 7d d8 1f          	cmpl   $0x1f,-0x28(%rbp)
    54c4:	74 44                	je     550a <do_check_tree+0x138>
    54c6:	8b 45 d8             	mov    -0x28(%rbp),%eax
    54c9:	83 c0 01             	add    $0x1,%eax
    54cc:	d1 e8                	shr    %eax
    54ce:	83 c0 08             	add    $0x8,%eax
    54d1:	ba 01 00 00 00       	mov    $0x1,%edx
    54d6:	89 c1                	mov    %eax,%ecx
    54d8:	48 d3 e2             	shl    %cl,%rdx
    54db:	8b 45 d8             	mov    -0x28(%rbp),%eax
    54de:	83 c0 01             	add    $0x1,%eax
    54e1:	89 c0                	mov    %eax,%eax
    54e3:	83 e0 01             	and    $0x1,%eax
    54e6:	48 89 c6             	mov    %rax,%rsi
    54e9:	8b 45 d8             	mov    -0x28(%rbp),%eax
    54ec:	83 c0 01             	add    $0x1,%eax
    54ef:	d1 e8                	shr    %eax
    54f1:	83 c0 07             	add    $0x7,%eax
    54f4:	89 c1                	mov    %eax,%ecx
    54f6:	48 d3 e6             	shl    %cl,%rsi
    54f9:	48 89 f0             	mov    %rsi,%rax
    54fc:	48 09 d0             	or     %rdx,%rax
    54ff:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    5503:	77 05                	ja     550a <do_check_tree+0x138>
    5505:	e8 bf 8f 01 00       	callq  1e4c9 <abort>
    550a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    550e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5512:	48 89 d6             	mov    %rdx,%rsi
    5515:	48 89 c7             	mov    %rax,%rdi
    5518:	e8 3f fa ff ff       	callq  4f5c <do_check_any_chunk>
    551d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5521:	8b 40 38             	mov    0x38(%rax),%eax
    5524:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    5527:	74 05                	je     552e <do_check_tree+0x15c>
    5529:	e8 9b 8f 01 00       	callq  1e4c9 <abort>
    552e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5532:	48 8b 40 08          	mov    0x8(%rax),%rax
    5536:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    553a:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    553e:	74 05                	je     5545 <do_check_tree+0x173>
    5540:	e8 84 8f 01 00       	callq  1e4c9 <abort>
    5545:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5549:	48 8b 40 08          	mov    0x8(%rax),%rax
    554d:	83 e0 03             	and    $0x3,%eax
    5550:	48 83 f8 01          	cmp    $0x1,%rax
    5554:	74 05                	je     555b <do_check_tree+0x189>
    5556:	e8 6e 8f 01 00       	callq  1e4c9 <abort>
    555b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    555f:	48 8b 40 08          	mov    0x8(%rax),%rax
    5563:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    5567:	48 89 c2             	mov    %rax,%rdx
    556a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    556e:	48 01 d0             	add    %rdx,%rax
    5571:	48 8b 40 08          	mov    0x8(%rax),%rax
    5575:	83 e0 01             	and    $0x1,%eax
    5578:	48 85 c0             	test   %rax,%rax
    557b:	74 05                	je     5582 <do_check_tree+0x1b0>
    557d:	e8 47 8f 01 00       	callq  1e4c9 <abort>
    5582:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5586:	48 8b 40 10          	mov    0x10(%rax),%rax
    558a:	48 8b 40 18          	mov    0x18(%rax),%rax
    558e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5592:	74 05                	je     5599 <do_check_tree+0x1c7>
    5594:	e8 30 8f 01 00       	callq  1e4c9 <abort>
    5599:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    559d:	48 8b 40 18          	mov    0x18(%rax),%rax
    55a1:	48 8b 40 10          	mov    0x10(%rax),%rax
    55a5:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    55a9:	74 05                	je     55b0 <do_check_tree+0x1de>
    55ab:	e8 19 8f 01 00       	callq  1e4c9 <abort>
    55b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    55b4:	48 8b 40 30          	mov    0x30(%rax),%rax
    55b8:	48 85 c0             	test   %rax,%rax
    55bb:	75 28                	jne    55e5 <do_check_tree+0x213>
    55bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    55c1:	48 8b 40 20          	mov    0x20(%rax),%rax
    55c5:	48 85 c0             	test   %rax,%rax
    55c8:	74 05                	je     55cf <do_check_tree+0x1fd>
    55ca:	e8 fa 8e 01 00       	callq  1e4c9 <abort>
    55cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    55d3:	48 8b 40 28          	mov    0x28(%rax),%rax
    55d7:	48 85 c0             	test   %rax,%rax
    55da:	0f 84 49 01 00 00    	je     5729 <do_check_tree+0x357>
    55e0:	e8 e4 8e 01 00       	callq  1e4c9 <abort>
    55e5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    55ea:	74 05                	je     55f1 <do_check_tree+0x21f>
    55ec:	e8 d8 8e 01 00       	callq  1e4c9 <abort>
    55f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    55f5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    55f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    55fd:	48 8b 40 30          	mov    0x30(%rax),%rax
    5601:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5605:	75 05                	jne    560c <do_check_tree+0x23a>
    5607:	e8 bd 8e 01 00       	callq  1e4c9 <abort>
    560c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5610:	48 8b 40 30          	mov    0x30(%rax),%rax
    5614:	48 8b 40 20          	mov    0x20(%rax),%rax
    5618:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    561c:	74 28                	je     5646 <do_check_tree+0x274>
    561e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5622:	48 8b 40 30          	mov    0x30(%rax),%rax
    5626:	48 8b 40 28          	mov    0x28(%rax),%rax
    562a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    562e:	74 16                	je     5646 <do_check_tree+0x274>
    5630:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5634:	48 8b 40 30          	mov    0x30(%rax),%rax
    5638:	48 8b 00             	mov    (%rax),%rax
    563b:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    563f:	74 05                	je     5646 <do_check_tree+0x274>
    5641:	e8 83 8e 01 00       	callq  1e4c9 <abort>
    5646:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    564a:	48 8b 40 20          	mov    0x20(%rax),%rax
    564e:	48 85 c0             	test   %rax,%rax
    5651:	74 41                	je     5694 <do_check_tree+0x2c2>
    5653:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5657:	48 8b 40 20          	mov    0x20(%rax),%rax
    565b:	48 8b 40 30          	mov    0x30(%rax),%rax
    565f:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5663:	74 05                	je     566a <do_check_tree+0x298>
    5665:	e8 5f 8e 01 00       	callq  1e4c9 <abort>
    566a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    566e:	48 8b 40 20          	mov    0x20(%rax),%rax
    5672:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5676:	75 05                	jne    567d <do_check_tree+0x2ab>
    5678:	e8 4c 8e 01 00       	callq  1e4c9 <abort>
    567d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5681:	48 8b 50 20          	mov    0x20(%rax),%rdx
    5685:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5689:	48 89 d6             	mov    %rdx,%rsi
    568c:	48 89 c7             	mov    %rax,%rdi
    568f:	e8 3e fd ff ff       	callq  53d2 <do_check_tree>
    5694:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5698:	48 8b 40 28          	mov    0x28(%rax),%rax
    569c:	48 85 c0             	test   %rax,%rax
    569f:	74 41                	je     56e2 <do_check_tree+0x310>
    56a1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    56a5:	48 8b 40 28          	mov    0x28(%rax),%rax
    56a9:	48 8b 40 30          	mov    0x30(%rax),%rax
    56ad:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    56b1:	74 05                	je     56b8 <do_check_tree+0x2e6>
    56b3:	e8 11 8e 01 00       	callq  1e4c9 <abort>
    56b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    56bc:	48 8b 40 28          	mov    0x28(%rax),%rax
    56c0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    56c4:	75 05                	jne    56cb <do_check_tree+0x2f9>
    56c6:	e8 fe 8d 01 00       	callq  1e4c9 <abort>
    56cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    56cf:	48 8b 50 28          	mov    0x28(%rax),%rdx
    56d3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    56d7:	48 89 d6             	mov    %rdx,%rsi
    56da:	48 89 c7             	mov    %rax,%rdi
    56dd:	e8 f0 fc ff ff       	callq  53d2 <do_check_tree>
    56e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    56e6:	48 8b 40 20          	mov    0x20(%rax),%rax
    56ea:	48 85 c0             	test   %rax,%rax
    56ed:	74 3a                	je     5729 <do_check_tree+0x357>
    56ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    56f3:	48 8b 40 28          	mov    0x28(%rax),%rax
    56f7:	48 85 c0             	test   %rax,%rax
    56fa:	74 2d                	je     5729 <do_check_tree+0x357>
    56fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5700:	48 8b 40 20          	mov    0x20(%rax),%rax
    5704:	48 8b 40 08          	mov    0x8(%rax),%rax
    5708:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    570c:	48 89 c2             	mov    %rax,%rdx
    570f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5713:	48 8b 40 28          	mov    0x28(%rax),%rax
    5717:	48 8b 40 08          	mov    0x8(%rax),%rax
    571b:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    571f:	48 39 c2             	cmp    %rax,%rdx
    5722:	72 05                	jb     5729 <do_check_tree+0x357>
    5724:	e8 a0 8d 01 00       	callq  1e4c9 <abort>
    5729:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    572d:	48 8b 40 10          	mov    0x10(%rax),%rax
    5731:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    5735:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5739:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    573d:	0f 85 c7 fd ff ff    	jne    550a <do_check_tree+0x138>
    5743:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    5748:	75 05                	jne    574f <do_check_tree+0x37d>
    574a:	e8 7a 8d 01 00       	callq  1e4c9 <abort>
    574f:	90                   	nop
    5750:	c9                   	leaveq 
    5751:	c3                   	retq   

0000000000005752 <do_check_treebin>:
    5752:	55                   	push   %rbp
    5753:	48 89 e5             	mov    %rsp,%rbp
    5756:	48 83 ec 30          	sub    $0x30,%rsp
    575a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    575e:	89 75 d4             	mov    %esi,-0x2c(%rbp)
    5761:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    5764:	48 83 c0 4a          	add    $0x4a,%rax
    5768:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    576f:	00 
    5770:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5774:	48 01 d0             	add    %rdx,%rax
    5777:	48 83 c0 08          	add    $0x8,%rax
    577b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    577f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5783:	48 8b 00             	mov    (%rax),%rax
    5786:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    578a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    578e:	8b 50 04             	mov    0x4(%rax),%edx
    5791:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    5794:	be 01 00 00 00       	mov    $0x1,%esi
    5799:	89 c1                	mov    %eax,%ecx
    579b:	d3 e6                	shl    %cl,%esi
    579d:	89 f0                	mov    %esi,%eax
    579f:	21 d0                	and    %edx,%eax
    57a1:	85 c0                	test   %eax,%eax
    57a3:	0f 94 c0             	sete   %al
    57a6:	0f b6 c0             	movzbl %al,%eax
    57a9:	89 45 ec             	mov    %eax,-0x14(%rbp)
    57ac:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    57b1:	75 0b                	jne    57be <do_check_treebin+0x6c>
    57b3:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    57b7:	75 05                	jne    57be <do_check_treebin+0x6c>
    57b9:	e8 0b 8d 01 00       	callq  1e4c9 <abort>
    57be:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    57c2:	75 13                	jne    57d7 <do_check_treebin+0x85>
    57c4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    57c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    57cc:	48 89 d6             	mov    %rdx,%rsi
    57cf:	48 89 c7             	mov    %rax,%rdi
    57d2:	e8 fb fb ff ff       	callq  53d2 <do_check_tree>
    57d7:	90                   	nop
    57d8:	c9                   	leaveq 
    57d9:	c3                   	retq   

00000000000057da <do_check_smallbin>:
    57da:	55                   	push   %rbp
    57db:	48 89 e5             	mov    %rsp,%rbp
    57de:	48 83 ec 40          	sub    $0x40,%rsp
    57e2:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    57e6:	89 75 c4             	mov    %esi,-0x3c(%rbp)
    57e9:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    57ec:	01 c0                	add    %eax,%eax
    57ee:	89 c0                	mov    %eax,%eax
    57f0:	48 83 c0 08          	add    $0x8,%rax
    57f4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    57fb:	00 
    57fc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5800:	48 01 d0             	add    %rdx,%rax
    5803:	48 83 c0 08          	add    $0x8,%rax
    5807:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    580b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    580f:	48 8b 40 18          	mov    0x18(%rax),%rax
    5813:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    5817:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    581b:	8b 10                	mov    (%rax),%edx
    581d:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    5820:	be 01 00 00 00       	mov    $0x1,%esi
    5825:	89 c1                	mov    %eax,%ecx
    5827:	d3 e6                	shl    %cl,%esi
    5829:	89 f0                	mov    %esi,%eax
    582b:	21 d0                	and    %edx,%eax
    582d:	85 c0                	test   %eax,%eax
    582f:	0f 94 c0             	sete   %al
    5832:	0f b6 c0             	movzbl %al,%eax
    5835:	89 45 dc             	mov    %eax,-0x24(%rbp)
    5838:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    583c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    5840:	75 0b                	jne    584d <do_check_smallbin+0x73>
    5842:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
    5846:	75 05                	jne    584d <do_check_smallbin+0x73>
    5848:	e8 7c 8c 01 00       	callq  1e4c9 <abort>
    584d:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
    5851:	0f 85 c2 00 00 00    	jne    5919 <do_check_smallbin+0x13f>
    5857:	e9 af 00 00 00       	jmpq   590b <do_check_smallbin+0x131>
    585c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5860:	48 8b 40 08          	mov    0x8(%rax),%rax
    5864:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    5868:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    586c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5870:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5874:	48 89 d6             	mov    %rdx,%rsi
    5877:	48 89 c7             	mov    %rax,%rdi
    587a:	e8 46 f9 ff ff       	callq  51c5 <do_check_free_chunk>
    587f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5883:	48 c1 e8 03          	shr    $0x3,%rax
    5887:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
    588a:	74 05                	je     5891 <do_check_smallbin+0xb7>
    588c:	e8 38 8c 01 00       	callq  1e4c9 <abort>
    5891:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5895:	48 8b 40 18          	mov    0x18(%rax),%rax
    5899:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    589d:	74 25                	je     58c4 <do_check_smallbin+0xea>
    589f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    58a3:	48 8b 40 18          	mov    0x18(%rax),%rax
    58a7:	48 8b 50 08          	mov    0x8(%rax),%rdx
    58ab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    58af:	48 8b 40 08          	mov    0x8(%rax),%rax
    58b3:	48 31 d0             	xor    %rdx,%rax
    58b6:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    58ba:	48 85 c0             	test   %rax,%rax
    58bd:	74 05                	je     58c4 <do_check_smallbin+0xea>
    58bf:	e8 05 8c 01 00       	callq  1e4c9 <abort>
    58c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    58c8:	48 8b 40 08          	mov    0x8(%rax),%rax
    58cc:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    58d0:	48 89 c2             	mov    %rax,%rdx
    58d3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    58d7:	48 01 d0             	add    %rdx,%rax
    58da:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    58de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58e2:	48 8b 40 08          	mov    0x8(%rax),%rax
    58e6:	48 83 f8 0b          	cmp    $0xb,%rax
    58ea:	74 13                	je     58ff <do_check_smallbin+0x125>
    58ec:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    58f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    58f4:	48 89 d6             	mov    %rdx,%rsi
    58f7:	48 89 c7             	mov    %rax,%rdi
    58fa:	e8 f0 f7 ff ff       	callq  50ef <do_check_inuse_chunk>
    58ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5903:	48 8b 40 18          	mov    0x18(%rax),%rax
    5907:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    590b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    590f:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    5913:	0f 85 43 ff ff ff    	jne    585c <do_check_smallbin+0x82>
    5919:	90                   	nop
    591a:	c9                   	leaveq 
    591b:	c3                   	retq   

000000000000591c <bin_find>:
    591c:	55                   	push   %rbp
    591d:	48 89 e5             	mov    %rsp,%rbp
    5920:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    5924:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    5928:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    592c:	48 8b 40 08          	mov    0x8(%rax),%rax
    5930:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    5934:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    5938:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    593c:	48 c1 e8 03          	shr    $0x3,%rax
    5940:	48 83 f8 1f          	cmp    $0x1f,%rax
    5944:	0f 87 82 00 00 00    	ja     59cc <bin_find+0xb0>
    594a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    594e:	48 c1 e8 03          	shr    $0x3,%rax
    5952:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    5955:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    5958:	01 c0                	add    %eax,%eax
    595a:	89 c0                	mov    %eax,%eax
    595c:	48 83 c0 08          	add    $0x8,%rax
    5960:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5967:	00 
    5968:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    596c:	48 01 d0             	add    %rdx,%rax
    596f:	48 83 c0 08          	add    $0x8,%rax
    5973:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5977:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    597b:	8b 10                	mov    (%rax),%edx
    597d:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    5980:	be 01 00 00 00       	mov    $0x1,%esi
    5985:	89 c1                	mov    %eax,%ecx
    5987:	d3 e6                	shl    %cl,%esi
    5989:	89 f0                	mov    %esi,%eax
    598b:	21 d0                	and    %edx,%eax
    598d:	85 c0                	test   %eax,%eax
    598f:	0f 84 64 01 00 00    	je     5af9 <bin_find+0x1dd>
    5995:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5999:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    599d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    59a1:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    59a5:	75 0a                	jne    59b1 <bin_find+0x95>
    59a7:	b8 01 00 00 00       	mov    $0x1,%eax
    59ac:	e9 4d 01 00 00       	jmpq   5afe <bin_find+0x1e2>
    59b1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    59b5:	48 8b 40 10          	mov    0x10(%rax),%rax
    59b9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    59bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    59c1:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    59c5:	75 d6                	jne    599d <bin_find+0x81>
    59c7:	e9 2d 01 00 00       	jmpq   5af9 <bin_find+0x1dd>
    59cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    59d0:	48 c1 e8 08          	shr    $0x8,%rax
    59d4:	89 45 c8             	mov    %eax,-0x38(%rbp)
    59d7:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
    59db:	75 09                	jne    59e6 <bin_find+0xca>
    59dd:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
    59e4:	eb 45                	jmp    5a2b <bin_find+0x10f>
    59e6:	81 7d c8 ff ff 00 00 	cmpl   $0xffff,-0x38(%rbp)
    59ed:	76 09                	jbe    59f8 <bin_find+0xdc>
    59ef:	c7 45 c0 1f 00 00 00 	movl   $0x1f,-0x40(%rbp)
    59f6:	eb 33                	jmp    5a2b <bin_find+0x10f>
    59f8:	0f bd 45 c8          	bsr    -0x38(%rbp),%eax
    59fc:	83 f0 1f             	xor    $0x1f,%eax
    59ff:	ba 1f 00 00 00       	mov    $0x1f,%edx
    5a04:	29 c2                	sub    %eax,%edx
    5a06:	89 d0                	mov    %edx,%eax
    5a08:	89 45 cc             	mov    %eax,-0x34(%rbp)
    5a0b:	8b 45 cc             	mov    -0x34(%rbp),%eax
    5a0e:	8d 34 00             	lea    (%rax,%rax,1),%esi
    5a11:	8b 45 cc             	mov    -0x34(%rbp),%eax
    5a14:	83 c0 07             	add    $0x7,%eax
    5a17:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5a1b:	89 c1                	mov    %eax,%ecx
    5a1d:	48 d3 ea             	shr    %cl,%rdx
    5a20:	48 89 d0             	mov    %rdx,%rax
    5a23:	83 e0 01             	and    $0x1,%eax
    5a26:	01 f0                	add    %esi,%eax
    5a28:	89 45 c0             	mov    %eax,-0x40(%rbp)
    5a2b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5a2f:	8b 50 04             	mov    0x4(%rax),%edx
    5a32:	8b 45 c0             	mov    -0x40(%rbp),%eax
    5a35:	be 01 00 00 00       	mov    $0x1,%esi
    5a3a:	89 c1                	mov    %eax,%ecx
    5a3c:	d3 e6                	shl    %cl,%esi
    5a3e:	89 f0                	mov    %esi,%eax
    5a40:	21 d0                	and    %edx,%eax
    5a42:	85 c0                	test   %eax,%eax
    5a44:	0f 84 af 00 00 00    	je     5af9 <bin_find+0x1dd>
    5a4a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5a4e:	8b 55 c0             	mov    -0x40(%rbp),%edx
    5a51:	48 83 c2 4a          	add    $0x4a,%rdx
    5a55:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
    5a5a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    5a5e:	83 7d c0 1f          	cmpl   $0x1f,-0x40(%rbp)
    5a62:	74 10                	je     5a74 <bin_find+0x158>
    5a64:	8b 45 c0             	mov    -0x40(%rbp),%eax
    5a67:	d1 e8                	shr    %eax
    5a69:	ba 39 00 00 00       	mov    $0x39,%edx
    5a6e:	29 c2                	sub    %eax,%edx
    5a70:	89 d0                	mov    %edx,%eax
    5a72:	eb 05                	jmp    5a79 <bin_find+0x15d>
    5a74:	b8 00 00 00 00       	mov    $0x0,%eax
    5a79:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5a7d:	89 c1                	mov    %eax,%ecx
    5a7f:	48 d3 e2             	shl    %cl,%rdx
    5a82:	48 89 d0             	mov    %rdx,%rax
    5a85:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    5a89:	eb 1f                	jmp    5aaa <bin_find+0x18e>
    5a8b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5a8f:	48 c1 e8 3f          	shr    $0x3f,%rax
    5a93:	48 89 c2             	mov    %rax,%rdx
    5a96:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5a9a:	48 83 c2 04          	add    $0x4,%rdx
    5a9e:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    5aa2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    5aa6:	48 d1 65 e0          	shlq   -0x20(%rbp)
    5aaa:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    5aaf:	74 12                	je     5ac3 <bin_find+0x1a7>
    5ab1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5ab5:	48 8b 40 08          	mov    0x8(%rax),%rax
    5ab9:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    5abd:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5ac1:	75 c8                	jne    5a8b <bin_find+0x16f>
    5ac3:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    5ac8:	74 2f                	je     5af9 <bin_find+0x1dd>
    5aca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5ace:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    5ad2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ad6:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    5ada:	75 07                	jne    5ae3 <bin_find+0x1c7>
    5adc:	b8 01 00 00 00       	mov    $0x1,%eax
    5ae1:	eb 1b                	jmp    5afe <bin_find+0x1e2>
    5ae3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ae7:	48 8b 40 10          	mov    0x10(%rax),%rax
    5aeb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    5aef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5af3:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5af7:	75 d9                	jne    5ad2 <bin_find+0x1b6>
    5af9:	b8 00 00 00 00       	mov    $0x0,%eax
    5afe:	5d                   	pop    %rbp
    5aff:	c3                   	retq   

0000000000005b00 <traverse_and_check>:
    5b00:	55                   	push   %rbp
    5b01:	48 89 e5             	mov    %rsp,%rbp
    5b04:	48 83 ec 30          	sub    $0x30,%rsp
    5b08:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5b0c:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    5b13:	00 
    5b14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5b18:	48 8b 40 28          	mov    0x28(%rax),%rax
    5b1c:	48 85 c0             	test   %rax,%rax
    5b1f:	0f 84 a4 01 00 00    	je     5cc9 <traverse_and_check+0x1c9>
    5b25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5b29:	48 05 78 03 00 00    	add    $0x378,%rax
    5b2f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    5b33:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5b37:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5b3b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5b3f:	48 01 d0             	add    %rdx,%rax
    5b42:	48 83 c0 50          	add    $0x50,%rax
    5b46:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    5b4a:	e9 6f 01 00 00       	jmpq   5cbe <traverse_and_check+0x1be>
    5b4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b53:	48 8b 10             	mov    (%rax),%rdx
    5b56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b5a:	48 8b 00             	mov    (%rax),%rax
    5b5d:	48 83 c0 10          	add    $0x10,%rax
    5b61:	83 e0 07             	and    $0x7,%eax
    5b64:	48 85 c0             	test   %rax,%rax
    5b67:	74 13                	je     5b7c <traverse_and_check+0x7c>
    5b69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b6d:	48 8b 00             	mov    (%rax),%rax
    5b70:	48 83 c0 10          	add    $0x10,%rax
    5b74:	48 f7 d8             	neg    %rax
    5b77:	83 e0 07             	and    $0x7,%eax
    5b7a:	eb 05                	jmp    5b81 <traverse_and_check+0x81>
    5b7c:	b8 00 00 00 00       	mov    $0x0,%eax
    5b81:	48 01 d0             	add    %rdx,%rax
    5b84:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    5b88:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    5b8f:	00 
    5b90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5b94:	48 8b 40 08          	mov    0x8(%rax),%rax
    5b98:	83 e0 01             	and    $0x1,%eax
    5b9b:	48 85 c0             	test   %rax,%rax
    5b9e:	0f 85 c9 00 00 00    	jne    5c6d <traverse_and_check+0x16d>
    5ba4:	e8 20 89 01 00       	callq  1e4c9 <abort>
    5ba9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5bad:	48 8b 40 08          	mov    0x8(%rax),%rax
    5bb1:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    5bb5:	48 01 45 e0          	add    %rax,-0x20(%rbp)
    5bb9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5bbd:	48 8b 40 08          	mov    0x8(%rax),%rax
    5bc1:	83 e0 03             	and    $0x3,%eax
    5bc4:	48 83 f8 01          	cmp    $0x1,%rax
    5bc8:	74 31                	je     5bfb <traverse_and_check+0xfb>
    5bca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5bce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5bd2:	48 89 d6             	mov    %rdx,%rsi
    5bd5:	48 89 c7             	mov    %rax,%rdi
    5bd8:	e8 3f fd ff ff       	callq  591c <bin_find>
    5bdd:	85 c0                	test   %eax,%eax
    5bdf:	74 05                	je     5be6 <traverse_and_check+0xe6>
    5be1:	e8 e3 88 01 00       	callq  1e4c9 <abort>
    5be6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5bea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5bee:	48 89 d6             	mov    %rdx,%rsi
    5bf1:	48 89 c7             	mov    %rax,%rdi
    5bf4:	e8 f6 f4 ff ff       	callq  50ef <do_check_inuse_chunk>
    5bf9:	eb 5a                	jmp    5c55 <traverse_and_check+0x155>
    5bfb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5bff:	48 8b 40 20          	mov    0x20(%rax),%rax
    5c03:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5c07:	74 1c                	je     5c25 <traverse_and_check+0x125>
    5c09:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5c0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5c11:	48 89 d6             	mov    %rdx,%rsi
    5c14:	48 89 c7             	mov    %rax,%rdi
    5c17:	e8 00 fd ff ff       	callq  591c <bin_find>
    5c1c:	85 c0                	test   %eax,%eax
    5c1e:	75 05                	jne    5c25 <traverse_and_check+0x125>
    5c20:	e8 a4 88 01 00       	callq  1e4c9 <abort>
    5c25:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    5c2a:	74 16                	je     5c42 <traverse_and_check+0x142>
    5c2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c30:	48 8b 40 08          	mov    0x8(%rax),%rax
    5c34:	83 e0 03             	and    $0x3,%eax
    5c37:	48 83 f8 01          	cmp    $0x1,%rax
    5c3b:	75 05                	jne    5c42 <traverse_and_check+0x142>
    5c3d:	e8 87 88 01 00       	callq  1e4c9 <abort>
    5c42:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5c46:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5c4a:	48 89 d6             	mov    %rdx,%rsi
    5c4d:	48 89 c7             	mov    %rax,%rdi
    5c50:	e8 70 f5 ff ff       	callq  51c5 <do_check_free_chunk>
    5c55:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5c59:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5c5d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5c61:	48 8b 40 08          	mov    0x8(%rax),%rax
    5c65:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    5c69:	48 01 45 f0          	add    %rax,-0x10(%rbp)
    5c6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c71:	48 8b 00             	mov    (%rax),%rax
    5c74:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5c78:	77 38                	ja     5cb2 <traverse_and_check+0x1b2>
    5c7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c7e:	48 8b 10             	mov    (%rax),%rdx
    5c81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c85:	48 8b 40 08          	mov    0x8(%rax),%rax
    5c89:	48 01 d0             	add    %rdx,%rax
    5c8c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5c90:	76 20                	jbe    5cb2 <traverse_and_check+0x1b2>
    5c92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5c96:	48 8b 40 28          	mov    0x28(%rax),%rax
    5c9a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    5c9e:	74 12                	je     5cb2 <traverse_and_check+0x1b2>
    5ca0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5ca4:	48 8b 40 08          	mov    0x8(%rax),%rax
    5ca8:	48 83 f8 0b          	cmp    $0xb,%rax
    5cac:	0f 85 f7 fe ff ff    	jne    5ba9 <traverse_and_check+0xa9>
    5cb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5cb6:	48 8b 40 10          	mov    0x10(%rax),%rax
    5cba:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    5cbe:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    5cc3:	0f 85 86 fe ff ff    	jne    5b4f <traverse_and_check+0x4f>
    5cc9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5ccd:	c9                   	leaveq 
    5cce:	c3                   	retq   

0000000000005ccf <do_check_malloc_state>:
    5ccf:	55                   	push   %rbp
    5cd0:	48 89 e5             	mov    %rsp,%rbp
    5cd3:	48 83 ec 20          	sub    $0x20,%rsp
    5cd7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5cdb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5ce2:	eb 15                	jmp    5cf9 <do_check_malloc_state+0x2a>
    5ce4:	8b 55 f4             	mov    -0xc(%rbp),%edx
    5ce7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ceb:	89 d6                	mov    %edx,%esi
    5ced:	48 89 c7             	mov    %rax,%rdi
    5cf0:	e8 e5 fa ff ff       	callq  57da <do_check_smallbin>
    5cf5:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5cf9:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%rbp)
    5cfd:	76 e5                	jbe    5ce4 <do_check_malloc_state+0x15>
    5cff:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5d06:	eb 15                	jmp    5d1d <do_check_malloc_state+0x4e>
    5d08:	8b 55 f4             	mov    -0xc(%rbp),%edx
    5d0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d0f:	89 d6                	mov    %edx,%esi
    5d11:	48 89 c7             	mov    %rax,%rdi
    5d14:	e8 39 fa ff ff       	callq  5752 <do_check_treebin>
    5d19:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5d1d:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%rbp)
    5d21:	76 e5                	jbe    5d08 <do_check_malloc_state+0x39>
    5d23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d27:	48 8b 40 08          	mov    0x8(%rax),%rax
    5d2b:	48 85 c0             	test   %rax,%rax
    5d2e:	74 6c                	je     5d9c <do_check_malloc_state+0xcd>
    5d30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d34:	48 8b 50 20          	mov    0x20(%rax),%rdx
    5d38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d3c:	48 89 d6             	mov    %rdx,%rsi
    5d3f:	48 89 c7             	mov    %rax,%rdi
    5d42:	e8 15 f2 ff ff       	callq  4f5c <do_check_any_chunk>
    5d47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d4b:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5d4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d53:	48 8b 40 20          	mov    0x20(%rax),%rax
    5d57:	48 8b 40 08          	mov    0x8(%rax),%rax
    5d5b:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    5d5f:	48 39 c2             	cmp    %rax,%rdx
    5d62:	74 05                	je     5d69 <do_check_malloc_state+0x9a>
    5d64:	e8 60 87 01 00       	callq  1e4c9 <abort>
    5d69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d6d:	48 8b 40 08          	mov    0x8(%rax),%rax
    5d71:	48 83 f8 1f          	cmp    $0x1f,%rax
    5d75:	77 05                	ja     5d7c <do_check_malloc_state+0xad>
    5d77:	e8 4d 87 01 00       	callq  1e4c9 <abort>
    5d7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d80:	48 8b 50 20          	mov    0x20(%rax),%rdx
    5d84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d88:	48 89 d6             	mov    %rdx,%rsi
    5d8b:	48 89 c7             	mov    %rax,%rdi
    5d8e:	e8 89 fb ff ff       	callq  591c <bin_find>
    5d93:	85 c0                	test   %eax,%eax
    5d95:	74 05                	je     5d9c <do_check_malloc_state+0xcd>
    5d97:	e8 2d 87 01 00       	callq  1e4c9 <abort>
    5d9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5da0:	48 8b 40 28          	mov    0x28(%rax),%rax
    5da4:	48 85 c0             	test   %rax,%rax
    5da7:	74 49                	je     5df2 <do_check_malloc_state+0x123>
    5da9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5dad:	48 8b 50 28          	mov    0x28(%rax),%rdx
    5db1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5db5:	48 89 d6             	mov    %rdx,%rsi
    5db8:	48 89 c7             	mov    %rax,%rdi
    5dbb:	e8 e5 f1 ff ff       	callq  4fa5 <do_check_top_chunk>
    5dc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5dc4:	48 8b 40 10          	mov    0x10(%rax),%rax
    5dc8:	48 85 c0             	test   %rax,%rax
    5dcb:	75 05                	jne    5dd2 <do_check_malloc_state+0x103>
    5dcd:	e8 f7 86 01 00       	callq  1e4c9 <abort>
    5dd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5dd6:	48 8b 50 28          	mov    0x28(%rax),%rdx
    5dda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5dde:	48 89 d6             	mov    %rdx,%rsi
    5de1:	48 89 c7             	mov    %rax,%rdi
    5de4:	e8 33 fb ff ff       	callq  591c <bin_find>
    5de9:	85 c0                	test   %eax,%eax
    5deb:	74 05                	je     5df2 <do_check_malloc_state+0x123>
    5ded:	e8 d7 86 01 00       	callq  1e4c9 <abort>
    5df2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5df6:	48 89 c7             	mov    %rax,%rdi
    5df9:	e8 02 fd ff ff       	callq  5b00 <traverse_and_check>
    5dfe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5e02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e06:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
    5e0d:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    5e11:	73 05                	jae    5e18 <do_check_malloc_state+0x149>
    5e13:	e8 b1 86 01 00       	callq  1e4c9 <abort>
    5e18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e1c:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    5e23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e27:	48 8b 80 60 03 00 00 	mov    0x360(%rax),%rax
    5e2e:	48 39 c2             	cmp    %rax,%rdx
    5e31:	76 05                	jbe    5e38 <do_check_malloc_state+0x169>
    5e33:	e8 91 86 01 00       	callq  1e4c9 <abort>
    5e38:	90                   	nop
    5e39:	c9                   	leaveq 
    5e3a:	c3                   	retq   

0000000000005e3b <internal_mallinfo>:
    5e3b:	55                   	push   %rbp
    5e3c:	48 89 e5             	mov    %rsp,%rbp
    5e3f:	48 83 ec 70          	sub    $0x70,%rsp
    5e43:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    5e47:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    5e4b:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    5e52:	00 
    5e53:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    5e5a:	00 
    5e5b:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    5e62:	00 
    5e63:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    5e6a:	00 
    5e6b:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    5e72:	00 
    5e73:	48 8b 05 06 cb 21 00 	mov    0x21cb06(%rip),%rax        # 222980 <mparams>
    5e7a:	48 85 c0             	test   %rax,%rax
    5e7d:	75 07                	jne    5e86 <internal_mallinfo+0x4b>
    5e7f:	e8 ef ee ff ff       	callq  4d73 <init_mparams>
    5e84:	85 c0                	test   %eax,%eax
    5e86:	90                   	nop
    5e87:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    5e8b:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
    5e91:	83 e0 02             	and    $0x2,%eax
    5e94:	85 c0                	test   %eax,%eax
    5e96:	74 30                	je     5ec8 <internal_mallinfo+0x8d>
    5e98:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    5e9c:	48 8d 90 74 03 00 00 	lea    0x374(%rax),%rdx
    5ea3:	b8 01 00 00 00       	mov    $0x1,%eax
    5ea8:	87 02                	xchg   %eax,(%rdx)
    5eaa:	85 c0                	test   %eax,%eax
    5eac:	74 1a                	je     5ec8 <internal_mallinfo+0x8d>
    5eae:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    5eb2:	48 05 74 03 00 00    	add    $0x374,%rax
    5eb8:	48 89 c7             	mov    %rax,%rdi
    5ebb:	e8 bf ed ff ff       	callq  4c7f <spin_acquire_lock>
    5ec0:	85 c0                	test   %eax,%eax
    5ec2:	0f 85 ad 01 00 00    	jne    6075 <internal_mallinfo+0x23a>
    5ec8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    5ecc:	48 89 c7             	mov    %rax,%rdi
    5ecf:	e8 fb fd ff ff       	callq  5ccf <do_check_malloc_state>
    5ed4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    5ed8:	48 8b 40 28          	mov    0x28(%rax),%rax
    5edc:	48 85 c0             	test   %rax,%rax
    5edf:	0f 84 6e 01 00 00    	je     6053 <internal_mallinfo+0x218>
    5ee5:	48 c7 45 a0 01 00 00 	movq   $0x1,-0x60(%rbp)
    5eec:	00 
    5eed:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    5ef1:	48 8b 40 10          	mov    0x10(%rax),%rax
    5ef5:	48 83 c0 50          	add    $0x50,%rax
    5ef9:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    5efd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5f01:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    5f05:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    5f09:	48 05 78 03 00 00    	add    $0x378,%rax
    5f0f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    5f13:	e9 d2 00 00 00       	jmpq   5fea <internal_mallinfo+0x1af>
    5f18:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5f1c:	48 8b 10             	mov    (%rax),%rdx
    5f1f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5f23:	48 8b 00             	mov    (%rax),%rax
    5f26:	48 83 c0 10          	add    $0x10,%rax
    5f2a:	83 e0 07             	and    $0x7,%eax
    5f2d:	48 85 c0             	test   %rax,%rax
    5f30:	74 13                	je     5f45 <internal_mallinfo+0x10a>
    5f32:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5f36:	48 8b 00             	mov    (%rax),%rax
    5f39:	48 83 c0 10          	add    $0x10,%rax
    5f3d:	48 f7 d8             	neg    %rax
    5f40:	83 e0 07             	and    $0x7,%eax
    5f43:	eb 05                	jmp    5f4a <internal_mallinfo+0x10f>
    5f45:	b8 00 00 00 00       	mov    $0x0,%eax
    5f4a:	48 01 d0             	add    %rdx,%rax
    5f4d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    5f51:	eb 46                	jmp    5f99 <internal_mallinfo+0x15e>
    5f53:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5f57:	48 8b 40 08          	mov    0x8(%rax),%rax
    5f5b:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    5f5f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    5f63:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5f67:	48 01 45 b0          	add    %rax,-0x50(%rbp)
    5f6b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5f6f:	48 8b 40 08          	mov    0x8(%rax),%rax
    5f73:	83 e0 03             	and    $0x3,%eax
    5f76:	48 83 f8 01          	cmp    $0x1,%rax
    5f7a:	75 0d                	jne    5f89 <internal_mallinfo+0x14e>
    5f7c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5f80:	48 01 45 a8          	add    %rax,-0x58(%rbp)
    5f84:	48 83 45 a0 01       	addq   $0x1,-0x60(%rbp)
    5f89:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5f8d:	48 8b 40 08          	mov    0x8(%rax),%rax
    5f91:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    5f95:	48 01 45 c0          	add    %rax,-0x40(%rbp)
    5f99:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5f9d:	48 8b 00             	mov    (%rax),%rax
    5fa0:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    5fa4:	77 38                	ja     5fde <internal_mallinfo+0x1a3>
    5fa6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5faa:	48 8b 10             	mov    (%rax),%rdx
    5fad:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5fb1:	48 8b 40 08          	mov    0x8(%rax),%rax
    5fb5:	48 01 d0             	add    %rdx,%rax
    5fb8:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    5fbc:	76 20                	jbe    5fde <internal_mallinfo+0x1a3>
    5fbe:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    5fc2:	48 8b 40 28          	mov    0x28(%rax),%rax
    5fc6:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    5fca:	74 12                	je     5fde <internal_mallinfo+0x1a3>
    5fcc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5fd0:	48 8b 40 08          	mov    0x8(%rax),%rax
    5fd4:	48 83 f8 0b          	cmp    $0xb,%rax
    5fd8:	0f 85 75 ff ff ff    	jne    5f53 <internal_mallinfo+0x118>
    5fde:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5fe2:	48 8b 40 10          	mov    0x10(%rax),%rax
    5fe6:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    5fea:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    5fef:	0f 85 23 ff ff ff    	jne    5f18 <internal_mallinfo+0xdd>
    5ff5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    5ff9:	89 45 d0             	mov    %eax,-0x30(%rbp)
    5ffc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6000:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    6003:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6007:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
    600e:	89 c2                	mov    %eax,%edx
    6010:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    6014:	29 c2                	sub    %eax,%edx
    6016:	89 d0                	mov    %edx,%eax
    6018:	89 45 e0             	mov    %eax,-0x20(%rbp)
    601b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    601f:	48 8b 80 60 03 00 00 	mov    0x360(%rax),%rax
    6026:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    6029:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    602d:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
    6034:	89 c2                	mov    %eax,%edx
    6036:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    603a:	29 c2                	sub    %eax,%edx
    603c:	89 d0                	mov    %edx,%eax
    603e:	89 45 ec             	mov    %eax,-0x14(%rbp)
    6041:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6045:	89 45 f0             	mov    %eax,-0x10(%rbp)
    6048:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    604c:	48 8b 40 10          	mov    0x10(%rax),%rax
    6050:	89 45 f4             	mov    %eax,-0xc(%rbp)
    6053:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6057:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
    605d:	83 e0 02             	and    $0x2,%eax
    6060:	85 c0                	test   %eax,%eax
    6062:	74 11                	je     6075 <internal_mallinfo+0x23a>
    6064:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6068:	48 05 74 03 00 00    	add    $0x374,%rax
    606e:	ba 00 00 00 00       	mov    $0x0,%edx
    6073:	89 10                	mov    %edx,(%rax)
    6075:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6079:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    607d:	48 89 10             	mov    %rdx,(%rax)
    6080:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6084:	48 89 50 08          	mov    %rdx,0x8(%rax)
    6088:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    608c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    6090:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6094:	48 89 50 18          	mov    %rdx,0x18(%rax)
    6098:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    609c:	48 89 50 20          	mov    %rdx,0x20(%rax)
    60a0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    60a4:	c9                   	leaveq 
    60a5:	c3                   	retq   

00000000000060a6 <internal_malloc_stats>:
    60a6:	55                   	push   %rbp
    60a7:	48 89 e5             	mov    %rsp,%rbp
    60aa:	48 83 ec 40          	sub    $0x40,%rsp
    60ae:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    60b2:	48 8b 05 c7 c8 21 00 	mov    0x21c8c7(%rip),%rax        # 222980 <mparams>
    60b9:	48 85 c0             	test   %rax,%rax
    60bc:	75 07                	jne    60c5 <internal_malloc_stats+0x1f>
    60be:	e8 b0 ec ff ff       	callq  4d73 <init_mparams>
    60c3:	85 c0                	test   %eax,%eax
    60c5:	90                   	nop
    60c6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    60ca:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
    60d0:	83 e0 02             	and    $0x2,%eax
    60d3:	85 c0                	test   %eax,%eax
    60d5:	74 30                	je     6107 <internal_malloc_stats+0x61>
    60d7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    60db:	48 8d 90 74 03 00 00 	lea    0x374(%rax),%rdx
    60e2:	b8 01 00 00 00       	mov    $0x1,%eax
    60e7:	87 02                	xchg   %eax,(%rdx)
    60e9:	85 c0                	test   %eax,%eax
    60eb:	74 1a                	je     6107 <internal_malloc_stats+0x61>
    60ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    60f1:	48 05 74 03 00 00    	add    $0x374,%rax
    60f7:	48 89 c7             	mov    %rax,%rdi
    60fa:	e8 80 eb ff ff       	callq  4c7f <spin_acquire_lock>
    60ff:	85 c0                	test   %eax,%eax
    6101:	0f 85 66 01 00 00    	jne    626d <internal_malloc_stats+0x1c7>
    6107:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    610e:	00 
    610f:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    6116:	00 
    6117:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    611e:	00 
    611f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6123:	48 89 c7             	mov    %rax,%rdi
    6126:	e8 a4 fb ff ff       	callq  5ccf <do_check_malloc_state>
    612b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    612f:	48 8b 40 28          	mov    0x28(%rax),%rax
    6133:	48 85 c0             	test   %rax,%rax
    6136:	0f 84 0f 01 00 00    	je     624b <internal_malloc_stats+0x1a5>
    613c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6140:	48 05 78 03 00 00    	add    $0x378,%rax
    6146:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    614a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    614e:	48 8b 80 60 03 00 00 	mov    0x360(%rax),%rax
    6155:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    6159:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    615d:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
    6164:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6168:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    616c:	48 8b 40 10          	mov    0x10(%rax),%rax
    6170:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6174:	48 29 c2             	sub    %rax,%rdx
    6177:	48 89 d0             	mov    %rdx,%rax
    617a:	48 83 e8 50          	sub    $0x50,%rax
    617e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    6182:	e9 b9 00 00 00       	jmpq   6240 <internal_malloc_stats+0x19a>
    6187:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    618b:	48 8b 10             	mov    (%rax),%rdx
    618e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6192:	48 8b 00             	mov    (%rax),%rax
    6195:	48 83 c0 10          	add    $0x10,%rax
    6199:	83 e0 07             	and    $0x7,%eax
    619c:	48 85 c0             	test   %rax,%rax
    619f:	74 13                	je     61b4 <internal_malloc_stats+0x10e>
    61a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    61a5:	48 8b 00             	mov    (%rax),%rax
    61a8:	48 83 c0 10          	add    $0x10,%rax
    61ac:	48 f7 d8             	neg    %rax
    61af:	83 e0 07             	and    $0x7,%eax
    61b2:	eb 05                	jmp    61b9 <internal_malloc_stats+0x113>
    61b4:	b8 00 00 00 00       	mov    $0x0,%eax
    61b9:	48 01 d0             	add    %rdx,%rax
    61bc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    61c0:	eb 31                	jmp    61f3 <internal_malloc_stats+0x14d>
    61c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61c6:	48 8b 40 08          	mov    0x8(%rax),%rax
    61ca:	83 e0 03             	and    $0x3,%eax
    61cd:	48 83 f8 01          	cmp    $0x1,%rax
    61d1:	75 10                	jne    61e3 <internal_malloc_stats+0x13d>
    61d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61d7:	48 8b 40 08          	mov    0x8(%rax),%rax
    61db:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    61df:	48 29 45 d8          	sub    %rax,-0x28(%rbp)
    61e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61e7:	48 8b 40 08          	mov    0x8(%rax),%rax
    61eb:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    61ef:	48 01 45 e8          	add    %rax,-0x18(%rbp)
    61f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    61f7:	48 8b 00             	mov    (%rax),%rax
    61fa:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    61fe:	77 34                	ja     6234 <internal_malloc_stats+0x18e>
    6200:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6204:	48 8b 10             	mov    (%rax),%rdx
    6207:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    620b:	48 8b 40 08          	mov    0x8(%rax),%rax
    620f:	48 01 d0             	add    %rdx,%rax
    6212:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    6216:	76 1c                	jbe    6234 <internal_malloc_stats+0x18e>
    6218:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    621c:	48 8b 40 28          	mov    0x28(%rax),%rax
    6220:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    6224:	74 0e                	je     6234 <internal_malloc_stats+0x18e>
    6226:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    622a:	48 8b 40 08          	mov    0x8(%rax),%rax
    622e:	48 83 f8 0b          	cmp    $0xb,%rax
    6232:	75 8e                	jne    61c2 <internal_malloc_stats+0x11c>
    6234:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6238:	48 8b 40 10          	mov    0x10(%rax),%rax
    623c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6240:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    6245:	0f 85 3c ff ff ff    	jne    6187 <internal_malloc_stats+0xe1>
    624b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    624f:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
    6255:	83 e0 02             	and    $0x2,%eax
    6258:	85 c0                	test   %eax,%eax
    625a:	74 11                	je     626d <internal_malloc_stats+0x1c7>
    625c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6260:	48 05 74 03 00 00    	add    $0x374,%rax
    6266:	ba 00 00 00 00       	mov    $0x0,%edx
    626b:	89 10                	mov    %edx,(%rax)
    626d:	90                   	nop
    626e:	c9                   	leaveq 
    626f:	c3                   	retq   

0000000000006270 <mmap_alloc>:
    6270:	55                   	push   %rbp
    6271:	48 89 e5             	mov    %rsp,%rbp
    6274:	48 83 ec 40          	sub    $0x40,%rsp
    6278:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    627c:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    6280:	48 8b 15 01 c7 21 00 	mov    0x21c701(%rip),%rdx        # 222988 <mparams+0x8>
    6287:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    628b:	48 01 d0             	add    %rdx,%rax
    628e:	48 8d 50 36          	lea    0x36(%rax),%rdx
    6292:	48 8b 05 ef c6 21 00 	mov    0x21c6ef(%rip),%rax        # 222988 <mparams+0x8>
    6299:	48 f7 d8             	neg    %rax
    629c:	48 21 d0             	and    %rdx,%rax
    629f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    62a3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    62a7:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
    62ae:	48 85 c0             	test   %rax,%rax
    62b1:	74 42                	je     62f5 <mmap_alloc+0x85>
    62b3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    62b7:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    62be:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    62c2:	48 01 d0             	add    %rdx,%rax
    62c5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    62c9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    62cd:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
    62d4:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    62d8:	73 11                	jae    62eb <mmap_alloc+0x7b>
    62da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    62de:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
    62e5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    62e9:	73 0a                	jae    62f5 <mmap_alloc+0x85>
    62eb:	b8 00 00 00 00       	mov    $0x0,%eax
    62f0:	e9 72 01 00 00       	jmpq   6467 <mmap_alloc+0x1f7>
    62f5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    62f9:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    62fd:	0f 86 5f 01 00 00    	jbe    6462 <mmap_alloc+0x1f2>
    6303:	48 c7 45 e0 ff ff ff 	movq   $0xffffffffffffffff,-0x20(%rbp)
    630a:	ff 
    630b:	48 83 7d e0 ff       	cmpq   $0xffffffffffffffff,-0x20(%rbp)
    6310:	0f 84 4c 01 00 00    	je     6462 <mmap_alloc+0x1f2>
    6316:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    631a:	48 83 c0 10          	add    $0x10,%rax
    631e:	83 e0 07             	and    $0x7,%eax
    6321:	48 85 c0             	test   %rax,%rax
    6324:	74 10                	je     6336 <mmap_alloc+0xc6>
    6326:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    632a:	48 83 c0 10          	add    $0x10,%rax
    632e:	48 f7 d8             	neg    %rax
    6331:	83 e0 07             	and    $0x7,%eax
    6334:	eb 05                	jmp    633b <mmap_alloc+0xcb>
    6336:	b8 00 00 00 00       	mov    $0x0,%eax
    633b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    633f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6343:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    6347:	48 83 e8 20          	sub    $0x20,%rax
    634b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    634f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6353:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6357:	48 01 d0             	add    %rdx,%rax
    635a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    635e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6362:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6366:	48 89 10             	mov    %rdx,(%rax)
    6369:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    636d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6371:	48 89 50 08          	mov    %rdx,0x8(%rax)
    6375:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6379:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    637d:	48 01 d0             	add    %rdx,%rax
    6380:	48 8b 0d f9 c5 21 00 	mov    0x21c5f9(%rip),%rcx        # 222980 <mparams>
    6387:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    638b:	48 31 ca             	xor    %rcx,%rdx
    638e:	48 89 10             	mov    %rdx,(%rax)
    6391:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6395:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6399:	48 01 d0             	add    %rdx,%rax
    639c:	48 c7 40 08 0b 00 00 	movq   $0xb,0x8(%rax)
    63a3:	00 
    63a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    63a8:	48 8d 50 08          	lea    0x8(%rax),%rdx
    63ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63b0:	48 01 d0             	add    %rdx,%rax
    63b3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    63ba:	00 
    63bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    63bf:	48 8b 40 18          	mov    0x18(%rax),%rax
    63c3:	48 85 c0             	test   %rax,%rax
    63c6:	74 0e                	je     63d6 <mmap_alloc+0x166>
    63c8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    63cc:	48 8b 40 18          	mov    0x18(%rax),%rax
    63d0:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    63d4:	76 0c                	jbe    63e2 <mmap_alloc+0x172>
    63d6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    63da:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    63de:	48 89 50 18          	mov    %rdx,0x18(%rax)
    63e2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    63e6:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    63ed:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    63f1:	48 01 c2             	add    %rax,%rdx
    63f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    63f8:	48 89 90 58 03 00 00 	mov    %rdx,0x358(%rax)
    63ff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6403:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    640a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    640e:	48 8b 80 60 03 00 00 	mov    0x360(%rax),%rax
    6415:	48 39 c2             	cmp    %rax,%rdx
    6418:	76 16                	jbe    6430 <mmap_alloc+0x1c0>
    641a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    641e:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    6425:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6429:	48 89 90 60 03 00 00 	mov    %rdx,0x360(%rax)
    6430:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6434:	48 83 c0 10          	add    $0x10,%rax
    6438:	83 e0 07             	and    $0x7,%eax
    643b:	48 85 c0             	test   %rax,%rax
    643e:	74 05                	je     6445 <mmap_alloc+0x1d5>
    6440:	e8 84 80 01 00       	callq  1e4c9 <abort>
    6445:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6449:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    644d:	48 89 d6             	mov    %rdx,%rsi
    6450:	48 89 c7             	mov    %rax,%rdi
    6453:	e8 47 ec ff ff       	callq  509f <do_check_mmapped_chunk>
    6458:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    645c:	48 83 c0 10          	add    $0x10,%rax
    6460:	eb 05                	jmp    6467 <mmap_alloc+0x1f7>
    6462:	b8 00 00 00 00       	mov    $0x0,%eax
    6467:	c9                   	leaveq 
    6468:	c3                   	retq   

0000000000006469 <mmap_resize>:
    6469:	55                   	push   %rbp
    646a:	48 89 e5             	mov    %rsp,%rbp
    646d:	48 83 ec 60          	sub    $0x60,%rsp
    6471:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    6475:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    6479:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    647d:	89 4d a4             	mov    %ecx,-0x5c(%rbp)
    6480:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    6484:	48 8b 40 08          	mov    0x8(%rax),%rax
    6488:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    648c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6490:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6494:	48 c1 e8 03          	shr    $0x3,%rax
    6498:	48 83 f8 1f          	cmp    $0x1f,%rax
    649c:	77 0a                	ja     64a8 <mmap_resize+0x3f>
    649e:	b8 00 00 00 00       	mov    $0x0,%eax
    64a3:	e9 7d 01 00 00       	jmpq   6625 <mmap_resize+0x1bc>
    64a8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    64ac:	48 83 c0 08          	add    $0x8,%rax
    64b0:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    64b4:	77 20                	ja     64d6 <mmap_resize+0x6d>
    64b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    64ba:	48 2b 45 a8          	sub    -0x58(%rbp),%rax
    64be:	48 8b 15 cb c4 21 00 	mov    0x21c4cb(%rip),%rdx        # 222990 <mparams+0x10>
    64c5:	48 01 d2             	add    %rdx,%rdx
    64c8:	48 39 d0             	cmp    %rdx,%rax
    64cb:	77 09                	ja     64d6 <mmap_resize+0x6d>
    64cd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    64d1:	e9 4f 01 00 00       	jmpq   6625 <mmap_resize+0x1bc>
    64d6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    64da:	48 8b 00             	mov    (%rax),%rax
    64dd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    64e1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    64e5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    64e9:	48 01 d0             	add    %rdx,%rax
    64ec:	48 83 c0 20          	add    $0x20,%rax
    64f0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    64f4:	48 8b 15 8d c4 21 00 	mov    0x21c48d(%rip),%rdx        # 222988 <mparams+0x8>
    64fb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    64ff:	48 01 d0             	add    %rdx,%rax
    6502:	48 8d 50 36          	lea    0x36(%rax),%rdx
    6506:	48 8b 05 7b c4 21 00 	mov    0x21c47b(%rip),%rax        # 222988 <mparams+0x8>
    650d:	48 f7 d8             	neg    %rax
    6510:	48 21 d0             	and    %rdx,%rax
    6513:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6517:	48 c7 45 e8 ff ff ff 	movq   $0xffffffffffffffff,-0x18(%rbp)
    651e:	ff 
    651f:	48 83 7d e8 ff       	cmpq   $0xffffffffffffffff,-0x18(%rbp)
    6524:	0f 84 f6 00 00 00    	je     6620 <mmap_resize+0x1b7>
    652a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    652e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6532:	48 01 d0             	add    %rdx,%rax
    6535:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    6539:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    653d:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
    6541:	48 83 e8 20          	sub    $0x20,%rax
    6545:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6549:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    654d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6551:	48 89 50 08          	mov    %rdx,0x8(%rax)
    6555:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6559:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    655d:	48 01 d0             	add    %rdx,%rax
    6560:	48 8b 0d 19 c4 21 00 	mov    0x21c419(%rip),%rcx        # 222980 <mparams>
    6567:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    656b:	48 31 ca             	xor    %rcx,%rdx
    656e:	48 89 10             	mov    %rdx,(%rax)
    6571:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6575:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6579:	48 01 d0             	add    %rdx,%rax
    657c:	48 c7 40 08 0b 00 00 	movq   $0xb,0x8(%rax)
    6583:	00 
    6584:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6588:	48 8d 50 08          	lea    0x8(%rax),%rdx
    658c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6590:	48 01 d0             	add    %rdx,%rax
    6593:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    659a:	00 
    659b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    659f:	48 8b 40 18          	mov    0x18(%rax),%rax
    65a3:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    65a7:	76 0c                	jbe    65b5 <mmap_resize+0x14c>
    65a9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    65ad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    65b1:	48 89 50 18          	mov    %rdx,0x18(%rax)
    65b5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    65b9:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    65c0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    65c4:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    65c8:	48 01 c2             	add    %rax,%rdx
    65cb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    65cf:	48 89 90 58 03 00 00 	mov    %rdx,0x358(%rax)
    65d6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    65da:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    65e1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    65e5:	48 8b 80 60 03 00 00 	mov    0x360(%rax),%rax
    65ec:	48 39 c2             	cmp    %rax,%rdx
    65ef:	76 16                	jbe    6607 <mmap_resize+0x19e>
    65f1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    65f5:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    65fc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6600:	48 89 90 60 03 00 00 	mov    %rdx,0x360(%rax)
    6607:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    660b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    660f:	48 89 d6             	mov    %rdx,%rsi
    6612:	48 89 c7             	mov    %rax,%rdi
    6615:	e8 85 ea ff ff       	callq  509f <do_check_mmapped_chunk>
    661a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    661e:	eb 05                	jmp    6625 <mmap_resize+0x1bc>
    6620:	b8 00 00 00 00       	mov    $0x0,%eax
    6625:	c9                   	leaveq 
    6626:	c3                   	retq   

0000000000006627 <init_top>:
    6627:	55                   	push   %rbp
    6628:	48 89 e5             	mov    %rsp,%rbp
    662b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    662f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6633:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    6637:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    663b:	48 83 c0 10          	add    $0x10,%rax
    663f:	83 e0 07             	and    $0x7,%eax
    6642:	48 85 c0             	test   %rax,%rax
    6645:	74 10                	je     6657 <init_top+0x30>
    6647:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    664b:	48 83 c0 10          	add    $0x10,%rax
    664f:	48 f7 d8             	neg    %rax
    6652:	83 e0 07             	and    $0x7,%eax
    6655:	eb 05                	jmp    665c <init_top+0x35>
    6657:	b8 00 00 00 00       	mov    $0x0,%eax
    665c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6660:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6664:	48 01 45 e0          	add    %rax,-0x20(%rbp)
    6668:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    666c:	48 29 45 d8          	sub    %rax,-0x28(%rbp)
    6670:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6674:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6678:	48 89 50 28          	mov    %rdx,0x28(%rax)
    667c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6680:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6684:	48 89 50 10          	mov    %rdx,0x10(%rax)
    6688:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    668c:	48 83 c8 01          	or     $0x1,%rax
    6690:	48 89 c2             	mov    %rax,%rdx
    6693:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6697:	48 89 50 08          	mov    %rdx,0x8(%rax)
    669b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    669f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    66a3:	48 01 d0             	add    %rdx,%rax
    66a6:	48 c7 40 08 50 00 00 	movq   $0x50,0x8(%rax)
    66ad:	00 
    66ae:	48 8b 15 eb c2 21 00 	mov    0x21c2eb(%rip),%rdx        # 2229a0 <mparams+0x20>
    66b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    66b9:	48 89 50 30          	mov    %rdx,0x30(%rax)
    66bd:	90                   	nop
    66be:	5d                   	pop    %rbp
    66bf:	c3                   	retq   

00000000000066c0 <init_bins>:
    66c0:	55                   	push   %rbp
    66c1:	48 89 e5             	mov    %rsp,%rbp
    66c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    66c8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    66cf:	eb 42                	jmp    6713 <init_bins+0x53>
    66d1:	8b 45 f4             	mov    -0xc(%rbp),%eax
    66d4:	01 c0                	add    %eax,%eax
    66d6:	89 c0                	mov    %eax,%eax
    66d8:	48 83 c0 08          	add    $0x8,%rax
    66dc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    66e3:	00 
    66e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    66e8:	48 01 d0             	add    %rdx,%rax
    66eb:	48 83 c0 08          	add    $0x8,%rax
    66ef:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    66f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66f7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    66fb:	48 89 50 18          	mov    %rdx,0x18(%rax)
    66ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6703:	48 8b 50 18          	mov    0x18(%rax),%rdx
    6707:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    670b:	48 89 50 10          	mov    %rdx,0x10(%rax)
    670f:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    6713:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%rbp)
    6717:	76 b8                	jbe    66d1 <init_bins+0x11>
    6719:	90                   	nop
    671a:	5d                   	pop    %rbp
    671b:	c3                   	retq   

000000000000671c <prepend_alloc>:
    671c:	55                   	push   %rbp
    671d:	48 89 e5             	mov    %rsp,%rbp
    6720:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
    6727:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
    672e:	48 89 b5 00 ff ff ff 	mov    %rsi,-0x100(%rbp)
    6735:	48 89 95 f8 fe ff ff 	mov    %rdx,-0x108(%rbp)
    673c:	48 89 8d f0 fe ff ff 	mov    %rcx,-0x110(%rbp)
    6743:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    674a:	48 83 c0 10          	add    $0x10,%rax
    674e:	83 e0 07             	and    $0x7,%eax
    6751:	48 85 c0             	test   %rax,%rax
    6754:	74 16                	je     676c <prepend_alloc+0x50>
    6756:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    675d:	48 83 c0 10          	add    $0x10,%rax
    6761:	48 f7 d8             	neg    %rax
    6764:	83 e0 07             	and    $0x7,%eax
    6767:	48 89 c2             	mov    %rax,%rdx
    676a:	eb 05                	jmp    6771 <prepend_alloc+0x55>
    676c:	ba 00 00 00 00       	mov    $0x0,%edx
    6771:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    6778:	48 01 d0             	add    %rdx,%rax
    677b:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    6782:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6789:	48 83 c0 10          	add    $0x10,%rax
    678d:	83 e0 07             	and    $0x7,%eax
    6790:	48 85 c0             	test   %rax,%rax
    6793:	74 16                	je     67ab <prepend_alloc+0x8f>
    6795:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    679c:	48 83 c0 10          	add    $0x10,%rax
    67a0:	48 f7 d8             	neg    %rax
    67a3:	83 e0 07             	and    $0x7,%eax
    67a6:	48 89 c2             	mov    %rax,%rdx
    67a9:	eb 05                	jmp    67b0 <prepend_alloc+0x94>
    67ab:	ba 00 00 00 00       	mov    $0x0,%edx
    67b0:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    67b7:	48 01 d0             	add    %rdx,%rax
    67ba:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    67c1:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    67c8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    67cf:	48 29 c2             	sub    %rax,%rdx
    67d2:	48 89 d0             	mov    %rdx,%rax
    67d5:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    67dc:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    67e3:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    67ea:	48 01 d0             	add    %rdx,%rax
    67ed:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    67f4:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    67fb:	48 2b 85 f0 fe ff ff 	sub    -0x110(%rbp),%rax
    6802:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    6809:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    6810:	48 83 c8 03          	or     $0x3,%rax
    6814:	48 89 c2             	mov    %rax,%rdx
    6817:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    681e:	48 89 50 08          	mov    %rdx,0x8(%rax)
    6822:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    6829:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    6830:	48 01 d0             	add    %rdx,%rax
    6833:	48 8b 0d 46 c1 21 00 	mov    0x21c146(%rip),%rcx        # 222980 <mparams>
    683a:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    6841:	48 31 ca             	xor    %rcx,%rdx
    6844:	48 89 10             	mov    %rdx,(%rax)
    6847:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    684e:	48 3b 85 78 ff ff ff 	cmp    -0x88(%rbp),%rax
    6855:	77 05                	ja     685c <prepend_alloc+0x140>
    6857:	e8 6d 7c 01 00       	callq  1e4c9 <abort>
    685c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    6863:	48 8b 40 08          	mov    0x8(%rax),%rax
    6867:	83 e0 01             	and    $0x1,%eax
    686a:	48 85 c0             	test   %rax,%rax
    686d:	75 05                	jne    6874 <prepend_alloc+0x158>
    686f:	e8 55 7c 01 00       	callq  1e4c9 <abort>
    6874:	48 83 bd 30 ff ff ff 	cmpq   $0x1f,-0xd0(%rbp)
    687b:	1f 
    687c:	77 05                	ja     6883 <prepend_alloc+0x167>
    687e:	e8 46 7c 01 00       	callq  1e4c9 <abort>
    6883:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    688a:	48 8b 40 28          	mov    0x28(%rax),%rax
    688e:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
    6895:	75 75                	jne    690c <prepend_alloc+0x1f0>
    6897:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    689e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    68a2:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    68a9:	48 01 c2             	add    %rax,%rdx
    68ac:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    68b3:	48 89 50 10          	mov    %rdx,0x10(%rax)
    68b7:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    68be:	48 8b 40 10          	mov    0x10(%rax),%rax
    68c2:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    68c6:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    68cd:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    68d4:	48 89 50 28          	mov    %rdx,0x28(%rax)
    68d8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    68dc:	48 83 c8 01          	or     $0x1,%rax
    68e0:	48 89 c2             	mov    %rax,%rdx
    68e3:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    68ea:	48 89 50 08          	mov    %rdx,0x8(%rax)
    68ee:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    68f5:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    68fc:	48 89 d6             	mov    %rdx,%rsi
    68ff:	48 89 c7             	mov    %rax,%rdi
    6902:	e8 9e e6 ff ff       	callq  4fa5 <do_check_top_chunk>
    6907:	e9 95 0a 00 00       	jmpq   73a1 <prepend_alloc+0xc85>
    690c:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6913:	48 8b 40 20          	mov    0x20(%rax),%rax
    6917:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
    691e:	75 71                	jne    6991 <prepend_alloc+0x275>
    6920:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6927:	48 8b 50 08          	mov    0x8(%rax),%rdx
    692b:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    6932:	48 01 c2             	add    %rax,%rdx
    6935:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    693c:	48 89 50 08          	mov    %rdx,0x8(%rax)
    6940:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6947:	48 8b 40 08          	mov    0x8(%rax),%rax
    694b:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    694f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6956:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    695d:	48 89 50 20          	mov    %rdx,0x20(%rax)
    6961:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    6965:	48 83 c8 01          	or     $0x1,%rax
    6969:	48 89 c2             	mov    %rax,%rdx
    696c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    6973:	48 89 50 08          	mov    %rdx,0x8(%rax)
    6977:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    697e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    6982:	48 01 c2             	add    %rax,%rdx
    6985:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    6989:	48 89 02             	mov    %rax,(%rdx)
    698c:	e9 10 0a 00 00       	jmpq   73a1 <prepend_alloc+0xc85>
    6991:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    6998:	48 8b 40 08          	mov    0x8(%rax),%rax
    699c:	83 e0 03             	and    $0x3,%eax
    699f:	48 83 f8 01          	cmp    $0x1,%rax
    69a3:	0f 85 70 05 00 00    	jne    6f19 <prepend_alloc+0x7fd>
    69a9:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    69b0:	48 8b 40 08          	mov    0x8(%rax),%rax
    69b4:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    69b8:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    69bc:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    69c0:	48 c1 e8 03          	shr    $0x3,%rax
    69c4:	48 83 f8 1f          	cmp    $0x1f,%rax
    69c8:	0f 87 c6 01 00 00    	ja     6b94 <prepend_alloc+0x478>
    69ce:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    69d5:	48 8b 40 10          	mov    0x10(%rax),%rax
    69d9:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    69dd:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    69e4:	48 8b 40 18          	mov    0x18(%rax),%rax
    69e8:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    69ec:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    69f0:	48 c1 e8 03          	shr    $0x3,%rax
    69f4:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%rbp)
    69fa:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    6a01:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
    6a05:	75 05                	jne    6a0c <prepend_alloc+0x2f0>
    6a07:	e8 bd 7a 01 00       	callq  1e4c9 <abort>
    6a0c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    6a13:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
    6a17:	75 05                	jne    6a1e <prepend_alloc+0x302>
    6a19:	e8 ab 7a 01 00       	callq  1e4c9 <abort>
    6a1e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    6a25:	48 8b 40 08          	mov    0x8(%rax),%rax
    6a29:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    6a2d:	48 89 c2             	mov    %rax,%rdx
    6a30:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
    6a36:	c1 e0 03             	shl    $0x3,%eax
    6a39:	89 c0                	mov    %eax,%eax
    6a3b:	48 39 c2             	cmp    %rax,%rdx
    6a3e:	74 05                	je     6a45 <prepend_alloc+0x329>
    6a40:	e8 84 7a 01 00       	callq  1e4c9 <abort>
    6a45:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
    6a4b:	01 c0                	add    %eax,%eax
    6a4d:	89 c0                	mov    %eax,%eax
    6a4f:	48 83 c0 08          	add    $0x8,%rax
    6a53:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6a5a:	00 
    6a5b:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6a62:	48 01 d0             	add    %rdx,%rax
    6a65:	48 83 c0 08          	add    $0x8,%rax
    6a69:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
    6a6d:	0f 94 c0             	sete   %al
    6a70:	0f b6 c0             	movzbl %al,%eax
    6a73:	48 85 c0             	test   %rax,%rax
    6a76:	75 48                	jne    6ac0 <prepend_alloc+0x3a4>
    6a78:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6a7f:	48 8b 40 18          	mov    0x18(%rax),%rax
    6a83:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
    6a87:	0f 96 c0             	setbe  %al
    6a8a:	0f b6 c0             	movzbl %al,%eax
    6a8d:	48 85 c0             	test   %rax,%rax
    6a90:	74 21                	je     6ab3 <prepend_alloc+0x397>
    6a92:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6a96:	48 8b 40 18          	mov    0x18(%rax),%rax
    6a9a:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
    6aa1:	0f 94 c0             	sete   %al
    6aa4:	0f b6 c0             	movzbl %al,%eax
    6aa7:	48 85 c0             	test   %rax,%rax
    6aaa:	74 07                	je     6ab3 <prepend_alloc+0x397>
    6aac:	b8 01 00 00 00       	mov    $0x1,%eax
    6ab1:	eb 05                	jmp    6ab8 <prepend_alloc+0x39c>
    6ab3:	b8 00 00 00 00       	mov    $0x0,%eax
    6ab8:	85 c0                	test   %eax,%eax
    6aba:	0f 84 cf 00 00 00    	je     6b8f <prepend_alloc+0x473>
    6ac0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6ac4:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
    6ac8:	75 2c                	jne    6af6 <prepend_alloc+0x3da>
    6aca:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6ad1:	8b 10                	mov    (%rax),%edx
    6ad3:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
    6ad9:	be 01 00 00 00       	mov    $0x1,%esi
    6ade:	89 c1                	mov    %eax,%ecx
    6ae0:	d3 e6                	shl    %cl,%esi
    6ae2:	89 f0                	mov    %esi,%eax
    6ae4:	f7 d0                	not    %eax
    6ae6:	21 c2                	and    %eax,%edx
    6ae8:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6aef:	89 10                	mov    %edx,(%rax)
    6af1:	e9 0d 04 00 00       	jmpq   6f03 <prepend_alloc+0x7e7>
    6af6:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
    6afc:	01 c0                	add    %eax,%eax
    6afe:	89 c0                	mov    %eax,%eax
    6b00:	48 83 c0 08          	add    $0x8,%rax
    6b04:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6b0b:	00 
    6b0c:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6b13:	48 01 d0             	add    %rdx,%rax
    6b16:	48 83 c0 08          	add    $0x8,%rax
    6b1a:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
    6b1e:	0f 94 c0             	sete   %al
    6b21:	0f b6 c0             	movzbl %al,%eax
    6b24:	48 85 c0             	test   %rax,%rax
    6b27:	75 44                	jne    6b6d <prepend_alloc+0x451>
    6b29:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6b30:	48 8b 40 18          	mov    0x18(%rax),%rax
    6b34:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
    6b38:	0f 96 c0             	setbe  %al
    6b3b:	0f b6 c0             	movzbl %al,%eax
    6b3e:	48 85 c0             	test   %rax,%rax
    6b41:	74 21                	je     6b64 <prepend_alloc+0x448>
    6b43:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6b47:	48 8b 40 10          	mov    0x10(%rax),%rax
    6b4b:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
    6b52:	0f 94 c0             	sete   %al
    6b55:	0f b6 c0             	movzbl %al,%eax
    6b58:	48 85 c0             	test   %rax,%rax
    6b5b:	74 07                	je     6b64 <prepend_alloc+0x448>
    6b5d:	b8 01 00 00 00       	mov    $0x1,%eax
    6b62:	eb 05                	jmp    6b69 <prepend_alloc+0x44d>
    6b64:	b8 00 00 00 00       	mov    $0x0,%eax
    6b69:	85 c0                	test   %eax,%eax
    6b6b:	74 1d                	je     6b8a <prepend_alloc+0x46e>
    6b6d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6b71:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    6b75:	48 89 50 18          	mov    %rdx,0x18(%rax)
    6b79:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6b7d:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    6b81:	48 89 50 10          	mov    %rdx,0x10(%rax)
    6b85:	e9 79 03 00 00       	jmpq   6f03 <prepend_alloc+0x7e7>
    6b8a:	e8 3a 79 01 00       	callq  1e4c9 <abort>
    6b8f:	e8 35 79 01 00       	callq  1e4c9 <abort>
    6b94:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    6b9b:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    6b9f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6ba3:	48 8b 40 30          	mov    0x30(%rax),%rax
    6ba7:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    6bab:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6baf:	48 8b 40 18          	mov    0x18(%rax),%rax
    6bb3:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
    6bb7:	0f 84 9e 00 00 00    	je     6c5b <prepend_alloc+0x53f>
    6bbd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6bc1:	48 8b 40 10          	mov    0x10(%rax),%rax
    6bc5:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    6bc9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6bcd:	48 8b 40 18          	mov    0x18(%rax),%rax
    6bd1:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    6bd8:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6bdf:	48 8b 40 18          	mov    0x18(%rax),%rax
    6be3:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
    6be7:	0f 96 c0             	setbe  %al
    6bea:	0f b6 c0             	movzbl %al,%eax
    6bed:	48 85 c0             	test   %rax,%rax
    6bf0:	74 1e                	je     6c10 <prepend_alloc+0x4f4>
    6bf2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6bf6:	48 8b 40 18          	mov    0x18(%rax),%rax
    6bfa:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
    6bfe:	0f 94 c0             	sete   %al
    6c01:	0f b6 c0             	movzbl %al,%eax
    6c04:	48 85 c0             	test   %rax,%rax
    6c07:	74 07                	je     6c10 <prepend_alloc+0x4f4>
    6c09:	b8 01 00 00 00       	mov    $0x1,%eax
    6c0e:	eb 05                	jmp    6c15 <prepend_alloc+0x4f9>
    6c10:	b8 00 00 00 00       	mov    $0x0,%eax
    6c15:	85 c0                	test   %eax,%eax
    6c17:	74 3d                	je     6c56 <prepend_alloc+0x53a>
    6c19:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    6c20:	48 8b 40 10          	mov    0x10(%rax),%rax
    6c24:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
    6c28:	0f 94 c0             	sete   %al
    6c2b:	0f b6 c0             	movzbl %al,%eax
    6c2e:	48 85 c0             	test   %rax,%rax
    6c31:	74 23                	je     6c56 <prepend_alloc+0x53a>
    6c33:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6c37:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    6c3e:	48 89 50 18          	mov    %rdx,0x18(%rax)
    6c42:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    6c49:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    6c4d:	48 89 50 10          	mov    %rdx,0x10(%rax)
    6c51:	e9 f2 00 00 00       	jmpq   6d48 <prepend_alloc+0x62c>
    6c56:	e8 6e 78 01 00       	callq  1e4c9 <abort>
    6c5b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6c5f:	48 83 c0 28          	add    $0x28,%rax
    6c63:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    6c6a:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    6c71:	48 8b 00             	mov    (%rax),%rax
    6c74:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    6c7b:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
    6c82:	00 
    6c83:	75 4f                	jne    6cd4 <prepend_alloc+0x5b8>
    6c85:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6c89:	48 83 c0 20          	add    $0x20,%rax
    6c8d:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    6c94:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    6c9b:	48 8b 00             	mov    (%rax),%rax
    6c9e:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    6ca5:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
    6cac:	00 
    6cad:	0f 84 95 00 00 00    	je     6d48 <prepend_alloc+0x62c>
    6cb3:	eb 1f                	jmp    6cd4 <prepend_alloc+0x5b8>
    6cb5:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    6cbc:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    6cc3:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    6cca:	48 8b 00             	mov    (%rax),%rax
    6ccd:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    6cd4:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    6cdb:	48 83 c0 28          	add    $0x28,%rax
    6cdf:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    6ce6:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    6ced:	48 8b 00             	mov    (%rax),%rax
    6cf0:	48 85 c0             	test   %rax,%rax
    6cf3:	75 c0                	jne    6cb5 <prepend_alloc+0x599>
    6cf5:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    6cfc:	48 83 c0 20          	add    $0x20,%rax
    6d00:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    6d07:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    6d0e:	48 8b 00             	mov    (%rax),%rax
    6d11:	48 85 c0             	test   %rax,%rax
    6d14:	75 9f                	jne    6cb5 <prepend_alloc+0x599>
    6d16:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6d1d:	48 8b 40 18          	mov    0x18(%rax),%rax
    6d21:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
    6d28:	0f 96 c0             	setbe  %al
    6d2b:	0f b6 c0             	movzbl %al,%eax
    6d2e:	48 85 c0             	test   %rax,%rax
    6d31:	74 10                	je     6d43 <prepend_alloc+0x627>
    6d33:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    6d3a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6d41:	eb 05                	jmp    6d48 <prepend_alloc+0x62c>
    6d43:	e8 81 77 01 00       	callq  1e4c9 <abort>
    6d48:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    6d4d:	0f 84 b0 01 00 00    	je     6f03 <prepend_alloc+0x7e7>
    6d53:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6d57:	8b 40 38             	mov    0x38(%rax),%eax
    6d5a:	89 c0                	mov    %eax,%eax
    6d5c:	48 83 c0 4a          	add    $0x4a,%rax
    6d60:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6d67:	00 
    6d68:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6d6f:	48 01 d0             	add    %rdx,%rax
    6d72:	48 83 c0 08          	add    $0x8,%rax
    6d76:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6d7a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6d7e:	48 8b 00             	mov    (%rax),%rax
    6d81:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
    6d85:	75 46                	jne    6dcd <prepend_alloc+0x6b1>
    6d87:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6d8b:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    6d92:	48 89 10             	mov    %rdx,(%rax)
    6d95:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6d99:	48 8b 00             	mov    (%rax),%rax
    6d9c:	48 85 c0             	test   %rax,%rax
    6d9f:	75 7b                	jne    6e1c <prepend_alloc+0x700>
    6da1:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6da8:	8b 50 04             	mov    0x4(%rax),%edx
    6dab:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6daf:	8b 40 38             	mov    0x38(%rax),%eax
    6db2:	be 01 00 00 00       	mov    $0x1,%esi
    6db7:	89 c1                	mov    %eax,%ecx
    6db9:	d3 e6                	shl    %cl,%esi
    6dbb:	89 f0                	mov    %esi,%eax
    6dbd:	f7 d0                	not    %eax
    6dbf:	21 c2                	and    %eax,%edx
    6dc1:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6dc8:	89 50 04             	mov    %edx,0x4(%rax)
    6dcb:	eb 4f                	jmp    6e1c <prepend_alloc+0x700>
    6dcd:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6dd4:	48 8b 40 18          	mov    0x18(%rax),%rax
    6dd8:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    6ddc:	0f 96 c0             	setbe  %al
    6ddf:	0f b6 c0             	movzbl %al,%eax
    6de2:	48 85 c0             	test   %rax,%rax
    6de5:	74 30                	je     6e17 <prepend_alloc+0x6fb>
    6de7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    6deb:	48 8b 40 20          	mov    0x20(%rax),%rax
    6def:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
    6df3:	75 11                	jne    6e06 <prepend_alloc+0x6ea>
    6df5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    6df9:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    6e00:	48 89 50 20          	mov    %rdx,0x20(%rax)
    6e04:	eb 16                	jmp    6e1c <prepend_alloc+0x700>
    6e06:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    6e0a:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    6e11:	48 89 50 28          	mov    %rdx,0x28(%rax)
    6e15:	eb 05                	jmp    6e1c <prepend_alloc+0x700>
    6e17:	e8 ad 76 01 00       	callq  1e4c9 <abort>
    6e1c:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
    6e23:	00 
    6e24:	0f 84 d9 00 00 00    	je     6f03 <prepend_alloc+0x7e7>
    6e2a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6e31:	48 8b 40 18          	mov    0x18(%rax),%rax
    6e35:	48 3b 85 38 ff ff ff 	cmp    -0xc8(%rbp),%rax
    6e3c:	0f 96 c0             	setbe  %al
    6e3f:	0f b6 c0             	movzbl %al,%eax
    6e42:	48 85 c0             	test   %rax,%rax
    6e45:	0f 84 b3 00 00 00    	je     6efe <prepend_alloc+0x7e2>
    6e4b:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    6e52:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    6e56:	48 89 50 30          	mov    %rdx,0x30(%rax)
    6e5a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6e5e:	48 8b 40 20          	mov    0x20(%rax),%rax
    6e62:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6e66:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    6e6b:	74 3f                	je     6eac <prepend_alloc+0x790>
    6e6d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6e74:	48 8b 40 18          	mov    0x18(%rax),%rax
    6e78:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    6e7c:	0f 96 c0             	setbe  %al
    6e7f:	0f b6 c0             	movzbl %al,%eax
    6e82:	48 85 c0             	test   %rax,%rax
    6e85:	74 20                	je     6ea7 <prepend_alloc+0x78b>
    6e87:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    6e8e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6e92:	48 89 50 20          	mov    %rdx,0x20(%rax)
    6e96:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6e9a:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    6ea1:	48 89 50 30          	mov    %rdx,0x30(%rax)
    6ea5:	eb 05                	jmp    6eac <prepend_alloc+0x790>
    6ea7:	e8 1d 76 01 00       	callq  1e4c9 <abort>
    6eac:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6eb0:	48 8b 40 28          	mov    0x28(%rax),%rax
    6eb4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6eb8:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    6ebd:	74 44                	je     6f03 <prepend_alloc+0x7e7>
    6ebf:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6ec6:	48 8b 40 18          	mov    0x18(%rax),%rax
    6eca:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
    6ece:	0f 96 c0             	setbe  %al
    6ed1:	0f b6 c0             	movzbl %al,%eax
    6ed4:	48 85 c0             	test   %rax,%rax
    6ed7:	74 20                	je     6ef9 <prepend_alloc+0x7dd>
    6ed9:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    6ee0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6ee4:	48 89 50 28          	mov    %rdx,0x28(%rax)
    6ee8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6eec:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    6ef3:	48 89 50 30          	mov    %rdx,0x30(%rax)
    6ef7:	eb 0a                	jmp    6f03 <prepend_alloc+0x7e7>
    6ef9:	e8 cb 75 01 00       	callq  1e4c9 <abort>
    6efe:	e8 c6 75 01 00       	callq  1e4c9 <abort>
    6f03:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6f07:	48 01 85 28 ff ff ff 	add    %rax,-0xd8(%rbp)
    6f0e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6f12:	48 01 85 30 ff ff ff 	add    %rax,-0xd0(%rbp)
    6f19:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    6f20:	48 8b 40 08          	mov    0x8(%rax),%rax
    6f24:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    6f28:	48 89 c2             	mov    %rax,%rdx
    6f2b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    6f32:	48 89 50 08          	mov    %rdx,0x8(%rax)
    6f36:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    6f3d:	48 83 c8 01          	or     $0x1,%rax
    6f41:	48 89 c2             	mov    %rax,%rdx
    6f44:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    6f4b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    6f4f:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    6f56:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    6f5d:	48 01 c2             	add    %rax,%rdx
    6f60:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    6f67:	48 89 02             	mov    %rax,(%rdx)
    6f6a:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    6f71:	48 c1 e8 03          	shr    $0x3,%rax
    6f75:	48 83 f8 1f          	cmp    $0x1f,%rax
    6f79:	0f 87 18 01 00 00    	ja     7097 <prepend_alloc+0x97b>
    6f7f:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    6f86:	48 c1 e8 03          	shr    $0x3,%rax
    6f8a:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
    6f90:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
    6f96:	01 c0                	add    %eax,%eax
    6f98:	89 c0                	mov    %eax,%eax
    6f9a:	48 83 c0 08          	add    $0x8,%rax
    6f9e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6fa5:	00 
    6fa6:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6fad:	48 01 d0             	add    %rdx,%rax
    6fb0:	48 83 c0 08          	add    $0x8,%rax
    6fb4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    6fb8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6fbc:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    6fc3:	48 83 bd 30 ff ff ff 	cmpq   $0x1f,-0xd0(%rbp)
    6fca:	1f 
    6fcb:	77 05                	ja     6fd2 <prepend_alloc+0x8b6>
    6fcd:	e8 f7 74 01 00       	callq  1e4c9 <abort>
    6fd2:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6fd9:	8b 10                	mov    (%rax),%edx
    6fdb:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
    6fe1:	be 01 00 00 00       	mov    $0x1,%esi
    6fe6:	89 c1                	mov    %eax,%ecx
    6fe8:	d3 e6                	shl    %cl,%esi
    6fea:	89 f0                	mov    %esi,%eax
    6fec:	21 d0                	and    %edx,%eax
    6fee:	85 c0                	test   %eax,%eax
    6ff0:	75 27                	jne    7019 <prepend_alloc+0x8fd>
    6ff2:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6ff9:	8b 10                	mov    (%rax),%edx
    6ffb:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
    7001:	be 01 00 00 00       	mov    $0x1,%esi
    7006:	89 c1                	mov    %eax,%ecx
    7008:	d3 e6                	shl    %cl,%esi
    700a:	89 f0                	mov    %esi,%eax
    700c:	09 c2                	or     %eax,%edx
    700e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    7015:	89 10                	mov    %edx,(%rax)
    7017:	eb 37                	jmp    7050 <prepend_alloc+0x934>
    7019:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    701d:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7021:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    7028:	48 8b 40 18          	mov    0x18(%rax),%rax
    702c:	48 39 c2             	cmp    %rax,%rdx
    702f:	0f 93 c0             	setae  %al
    7032:	0f b6 c0             	movzbl %al,%eax
    7035:	48 85 c0             	test   %rax,%rax
    7038:	74 11                	je     704b <prepend_alloc+0x92f>
    703a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    703e:	48 8b 40 10          	mov    0x10(%rax),%rax
    7042:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    7049:	eb 05                	jmp    7050 <prepend_alloc+0x934>
    704b:	e8 79 74 01 00       	callq  1e4c9 <abort>
    7050:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7054:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    705b:	48 89 50 10          	mov    %rdx,0x10(%rax)
    705f:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7066:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    706d:	48 89 50 18          	mov    %rdx,0x18(%rax)
    7071:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    7078:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    707f:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7083:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    708a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    708e:	48 89 50 18          	mov    %rdx,0x18(%rax)
    7092:	e9 f1 02 00 00       	jmpq   7388 <prepend_alloc+0xc6c>
    7097:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    709e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    70a2:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    70a9:	48 c1 e8 08          	shr    $0x8,%rax
    70ad:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%rbp)
    70b3:	83 bd 20 ff ff ff 00 	cmpl   $0x0,-0xe0(%rbp)
    70ba:	75 0c                	jne    70c8 <prepend_alloc+0x9ac>
    70bc:	c7 85 14 ff ff ff 00 	movl   $0x0,-0xec(%rbp)
    70c3:	00 00 00 
    70c6:	eb 5d                	jmp    7125 <prepend_alloc+0xa09>
    70c8:	81 bd 20 ff ff ff ff 	cmpl   $0xffff,-0xe0(%rbp)
    70cf:	ff 00 00 
    70d2:	76 0c                	jbe    70e0 <prepend_alloc+0x9c4>
    70d4:	c7 85 14 ff ff ff 1f 	movl   $0x1f,-0xec(%rbp)
    70db:	00 00 00 
    70de:	eb 45                	jmp    7125 <prepend_alloc+0xa09>
    70e0:	0f bd 85 20 ff ff ff 	bsr    -0xe0(%rbp),%eax
    70e7:	83 f0 1f             	xor    $0x1f,%eax
    70ea:	ba 1f 00 00 00       	mov    $0x1f,%edx
    70ef:	29 c2                	sub    %eax,%edx
    70f1:	89 d0                	mov    %edx,%eax
    70f3:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
    70f9:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
    70ff:	8d 34 00             	lea    (%rax,%rax,1),%esi
    7102:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
    7108:	83 c0 07             	add    $0x7,%eax
    710b:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
    7112:	89 c1                	mov    %eax,%ecx
    7114:	48 d3 ea             	shr    %cl,%rdx
    7117:	48 89 d0             	mov    %rdx,%rax
    711a:	83 e0 01             	and    $0x1,%eax
    711d:	01 f0                	add    %esi,%eax
    711f:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
    7125:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
    712b:	48 83 c0 4a          	add    $0x4a,%rax
    712f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7136:	00 
    7137:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    713e:	48 01 d0             	add    %rdx,%rax
    7141:	48 83 c0 08          	add    $0x8,%rax
    7145:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7149:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    714d:	8b 95 14 ff ff ff    	mov    -0xec(%rbp),%edx
    7153:	89 50 38             	mov    %edx,0x38(%rax)
    7156:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    715a:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    7161:	00 
    7162:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7166:	48 8b 50 28          	mov    0x28(%rax),%rdx
    716a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    716e:	48 89 50 20          	mov    %rdx,0x20(%rax)
    7172:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    7179:	8b 50 04             	mov    0x4(%rax),%edx
    717c:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
    7182:	be 01 00 00 00       	mov    $0x1,%esi
    7187:	89 c1                	mov    %eax,%ecx
    7189:	d3 e6                	shl    %cl,%esi
    718b:	89 f0                	mov    %esi,%eax
    718d:	21 d0                	and    %edx,%eax
    718f:	85 c0                	test   %eax,%eax
    7191:	75 5f                	jne    71f2 <prepend_alloc+0xad6>
    7193:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    719a:	8b 50 04             	mov    0x4(%rax),%edx
    719d:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
    71a3:	be 01 00 00 00       	mov    $0x1,%esi
    71a8:	89 c1                	mov    %eax,%ecx
    71aa:	d3 e6                	shl    %cl,%esi
    71ac:	89 f0                	mov    %esi,%eax
    71ae:	09 c2                	or     %eax,%edx
    71b0:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    71b7:	89 50 04             	mov    %edx,0x4(%rax)
    71ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    71be:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    71c2:	48 89 10             	mov    %rdx,(%rax)
    71c5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    71c9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    71cd:	48 89 50 30          	mov    %rdx,0x30(%rax)
    71d1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    71d5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    71d9:	48 89 50 18          	mov    %rdx,0x18(%rax)
    71dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    71e1:	48 8b 50 18          	mov    0x18(%rax),%rdx
    71e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    71e9:	48 89 50 10          	mov    %rdx,0x10(%rax)
    71ed:	e9 96 01 00 00       	jmpq   7388 <prepend_alloc+0xc6c>
    71f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    71f6:	48 8b 00             	mov    (%rax),%rax
    71f9:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    7200:	83 bd 14 ff ff ff 1f 	cmpl   $0x1f,-0xec(%rbp)
    7207:	74 13                	je     721c <prepend_alloc+0xb00>
    7209:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
    720f:	d1 e8                	shr    %eax
    7211:	ba 39 00 00 00       	mov    $0x39,%edx
    7216:	29 c2                	sub    %eax,%edx
    7218:	89 d0                	mov    %edx,%eax
    721a:	eb 05                	jmp    7221 <prepend_alloc+0xb05>
    721c:	b8 00 00 00 00       	mov    $0x0,%eax
    7221:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
    7228:	89 c1                	mov    %eax,%ecx
    722a:	48 d3 e2             	shl    %cl,%rdx
    722d:	48 89 d0             	mov    %rdx,%rax
    7230:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    7237:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    723e:	48 8b 40 08          	mov    0x8(%rax),%rax
    7242:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    7246:	48 3b 85 30 ff ff ff 	cmp    -0xd0(%rbp),%rax
    724d:	0f 84 a2 00 00 00    	je     72f5 <prepend_alloc+0xbd9>
    7253:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    725a:	48 c1 e8 3f          	shr    $0x3f,%rax
    725e:	48 83 c0 04          	add    $0x4,%rax
    7262:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7269:	00 
    726a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    7271:	48 01 d0             	add    %rdx,%rax
    7274:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7278:	48 d1 a5 60 ff ff ff 	shlq   -0xa0(%rbp)
    727f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7283:	48 8b 00             	mov    (%rax),%rax
    7286:	48 85 c0             	test   %rax,%rax
    7289:	74 10                	je     729b <prepend_alloc+0xb7f>
    728b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    728f:	48 8b 00             	mov    (%rax),%rax
    7292:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    7299:	eb 9c                	jmp    7237 <prepend_alloc+0xb1b>
    729b:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    72a2:	48 8b 40 18          	mov    0x18(%rax),%rax
    72a6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    72aa:	0f 96 c0             	setbe  %al
    72ad:	0f b6 c0             	movzbl %al,%eax
    72b0:	48 85 c0             	test   %rax,%rax
    72b3:	74 3b                	je     72f0 <prepend_alloc+0xbd4>
    72b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    72b9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    72bd:	48 89 10             	mov    %rdx,(%rax)
    72c0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    72c4:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    72cb:	48 89 50 30          	mov    %rdx,0x30(%rax)
    72cf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    72d3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    72d7:	48 89 50 18          	mov    %rdx,0x18(%rax)
    72db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    72df:	48 8b 50 18          	mov    0x18(%rax),%rdx
    72e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    72e7:	48 89 50 10          	mov    %rdx,0x10(%rax)
    72eb:	e9 98 00 00 00       	jmpq   7388 <prepend_alloc+0xc6c>
    72f0:	e8 d4 71 01 00       	callq  1e4c9 <abort>
    72f5:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    72fc:	48 8b 40 10          	mov    0x10(%rax),%rax
    7300:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7304:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    730b:	48 8b 40 18          	mov    0x18(%rax),%rax
    730f:	48 3b 85 58 ff ff ff 	cmp    -0xa8(%rbp),%rax
    7316:	0f 96 c0             	setbe  %al
    7319:	0f b6 c0             	movzbl %al,%eax
    731c:	48 85 c0             	test   %rax,%rax
    731f:	74 62                	je     7383 <prepend_alloc+0xc67>
    7321:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    7328:	48 8b 40 18          	mov    0x18(%rax),%rax
    732c:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    7330:	0f 96 c0             	setbe  %al
    7333:	0f b6 c0             	movzbl %al,%eax
    7336:	48 85 c0             	test   %rax,%rax
    7339:	74 48                	je     7383 <prepend_alloc+0xc67>
    733b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    733f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7343:	48 89 50 18          	mov    %rdx,0x18(%rax)
    7347:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    734b:	48 8b 50 18          	mov    0x18(%rax),%rdx
    734f:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    7356:	48 89 50 10          	mov    %rdx,0x10(%rax)
    735a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    735e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7362:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7366:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    736a:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    7371:	48 89 50 18          	mov    %rdx,0x18(%rax)
    7375:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7379:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    7380:	00 
    7381:	eb 05                	jmp    7388 <prepend_alloc+0xc6c>
    7383:	e8 41 71 01 00       	callq  1e4c9 <abort>
    7388:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    738f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    7396:	48 89 d6             	mov    %rdx,%rsi
    7399:	48 89 c7             	mov    %rax,%rdi
    739c:	e8 24 de ff ff       	callq  51c5 <do_check_free_chunk>
    73a1:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    73a8:	48 8d 48 10          	lea    0x10(%rax),%rcx
    73ac:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
    73b3:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    73ba:	48 89 ce             	mov    %rcx,%rsi
    73bd:	48 89 c7             	mov    %rax,%rdi
    73c0:	e8 71 df ff ff       	callq  5336 <do_check_malloced_chunk>
    73c5:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    73cc:	48 83 c0 10          	add    $0x10,%rax
    73d0:	c9                   	leaveq 
    73d1:	c3                   	retq   

00000000000073d2 <add_segment>:
    73d2:	55                   	push   %rbp
    73d3:	48 89 e5             	mov    %rsp,%rbp
    73d6:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
    73dd:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    73e4:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
    73eb:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
    73f2:	89 8d 04 ff ff ff    	mov    %ecx,-0xfc(%rbp)
    73f8:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    73ff:	48 8b 40 28          	mov    0x28(%rax),%rax
    7403:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    740a:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    7411:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    7418:	48 89 d6             	mov    %rdx,%rsi
    741b:	48 89 c7             	mov    %rax,%rdi
    741e:	e8 91 d8 ff ff       	callq  4cb4 <segment_holding>
    7423:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    742a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    7431:	48 8b 10             	mov    (%rax),%rdx
    7434:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    743b:	48 8b 40 08          	mov    0x8(%rax),%rax
    743f:	48 01 d0             	add    %rdx,%rax
    7442:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    7449:	48 c7 85 78 ff ff ff 	movq   $0x30,-0x88(%rbp)
    7450:	30 00 00 00 
    7454:	48 c7 c0 d9 ff ff ff 	mov    $0xffffffffffffffd9,%rax
    745b:	48 2b 85 78 ff ff ff 	sub    -0x88(%rbp),%rax
    7462:	48 89 c2             	mov    %rax,%rdx
    7465:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    746c:	48 01 d0             	add    %rdx,%rax
    746f:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    7473:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    7477:	48 83 c0 10          	add    $0x10,%rax
    747b:	83 e0 07             	and    $0x7,%eax
    747e:	48 85 c0             	test   %rax,%rax
    7481:	74 10                	je     7493 <add_segment+0xc1>
    7483:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    7487:	48 83 c0 10          	add    $0x10,%rax
    748b:	48 f7 d8             	neg    %rax
    748e:	83 e0 07             	and    $0x7,%eax
    7491:	eb 05                	jmp    7498 <add_segment+0xc6>
    7493:	b8 00 00 00 00       	mov    $0x0,%eax
    7498:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    749c:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    74a0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    74a4:	48 01 d0             	add    %rdx,%rax
    74a7:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    74ab:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    74b2:	48 83 c0 20          	add    $0x20,%rax
    74b6:	48 3b 45 90          	cmp    -0x70(%rbp),%rax
    74ba:	76 09                	jbe    74c5 <add_segment+0xf3>
    74bc:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    74c3:	eb 04                	jmp    74c9 <add_segment+0xf7>
    74c5:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    74c9:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    74cd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    74d1:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    74d5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    74d9:	48 83 c0 10          	add    $0x10,%rax
    74dd:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    74e1:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    74e5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    74ec:	48 01 d0             	add    %rdx,%rax
    74ef:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    74f3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    74f7:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    74fe:	c7 85 2c ff ff ff 00 	movl   $0x0,-0xd4(%rbp)
    7505:	00 00 00 
    7508:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    750f:	48 8d 50 b0          	lea    -0x50(%rax),%rdx
    7513:	48 8b 8d 10 ff ff ff 	mov    -0xf0(%rbp),%rcx
    751a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    7521:	48 89 ce             	mov    %rcx,%rsi
    7524:	48 89 c7             	mov    %rax,%rdi
    7527:	e8 fb f0 ff ff       	callq  6627 <init_top>
    752c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    7530:	83 e0 07             	and    $0x7,%eax
    7533:	48 85 c0             	test   %rax,%rax
    7536:	74 05                	je     753d <add_segment+0x16b>
    7538:	e8 8c 6f 01 00       	callq  1e4c9 <abort>
    753d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    7544:	48 83 c8 03          	or     $0x3,%rax
    7548:	48 89 c2             	mov    %rax,%rdx
    754b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    754f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7553:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    7557:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    755e:	48 01 d0             	add    %rdx,%rax
    7561:	48 8b 0d 18 b4 21 00 	mov    0x21b418(%rip),%rcx        # 222980 <mparams>
    7568:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    756f:	48 31 ca             	xor    %rcx,%rdx
    7572:	48 89 10             	mov    %rdx,(%rax)
    7575:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    7579:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    7580:	48 8b 8a 78 03 00 00 	mov    0x378(%rdx),%rcx
    7587:	48 89 08             	mov    %rcx,(%rax)
    758a:	48 8b 8a 80 03 00 00 	mov    0x380(%rdx),%rcx
    7591:	48 89 48 08          	mov    %rcx,0x8(%rax)
    7595:	48 8b 8a 88 03 00 00 	mov    0x388(%rdx),%rcx
    759c:	48 89 48 10          	mov    %rcx,0x10(%rax)
    75a0:	48 8b 92 90 03 00 00 	mov    0x390(%rdx),%rdx
    75a7:	48 89 50 18          	mov    %rdx,0x18(%rax)
    75ab:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    75b2:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
    75b9:	48 89 90 78 03 00 00 	mov    %rdx,0x378(%rax)
    75c0:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    75c7:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    75ce:	48 89 90 80 03 00 00 	mov    %rdx,0x380(%rax)
    75d5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    75dc:	8b 95 04 ff ff ff    	mov    -0xfc(%rbp),%edx
    75e2:	89 90 90 03 00 00    	mov    %edx,0x390(%rax)
    75e8:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    75ef:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    75f3:	48 89 90 88 03 00 00 	mov    %rdx,0x388(%rax)
    75fa:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    7601:	48 83 c0 08          	add    $0x8,%rax
    7605:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    7609:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    7610:	48 c7 40 08 0b 00 00 	movq   $0xb,0x8(%rax)
    7617:	00 
    7618:	83 85 2c ff ff ff 01 	addl   $0x1,-0xd4(%rbp)
    761f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7623:	48 83 c0 08          	add    $0x8,%rax
    7627:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
    762e:	73 0d                	jae    763d <add_segment+0x26b>
    7630:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7634:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    763b:	eb bd                	jmp    75fa <add_segment+0x228>
    763d:	90                   	nop
    763e:	83 bd 2c ff ff ff 01 	cmpl   $0x1,-0xd4(%rbp)
    7645:	7f 05                	jg     764c <add_segment+0x27a>
    7647:	e8 7d 6e 01 00       	callq  1e4c9 <abort>
    764c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7650:	48 3b 85 60 ff ff ff 	cmp    -0xa0(%rbp),%rax
    7657:	0f 84 65 04 00 00    	je     7ac2 <add_segment+0x6f0>
    765d:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    7664:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    7668:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    766c:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    7673:	48 29 c2             	sub    %rax,%rdx
    7676:	48 89 d0             	mov    %rdx,%rax
    7679:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    767d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    7681:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7685:	48 01 d0             	add    %rdx,%rax
    7688:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    768c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7690:	48 8b 40 08          	mov    0x8(%rax),%rax
    7694:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    7698:	48 89 c2             	mov    %rax,%rdx
    769b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    769f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    76a3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    76a7:	48 83 c8 01          	or     $0x1,%rax
    76ab:	48 89 c2             	mov    %rax,%rdx
    76ae:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    76b2:	48 89 50 08          	mov    %rdx,0x8(%rax)
    76b6:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    76ba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    76be:	48 01 c2             	add    %rax,%rdx
    76c1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    76c5:	48 89 02             	mov    %rax,(%rdx)
    76c8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    76cc:	48 c1 e8 03          	shr    $0x3,%rax
    76d0:	48 83 f8 1f          	cmp    $0x1f,%rax
    76d4:	0f 87 06 01 00 00    	ja     77e0 <add_segment+0x40e>
    76da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    76de:	48 c1 e8 03          	shr    $0x3,%rax
    76e2:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
    76e8:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
    76ee:	01 c0                	add    %eax,%eax
    76f0:	89 c0                	mov    %eax,%eax
    76f2:	48 83 c0 08          	add    $0x8,%rax
    76f6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    76fd:	00 
    76fe:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    7705:	48 01 d0             	add    %rdx,%rax
    7708:	48 83 c0 08          	add    $0x8,%rax
    770c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    7710:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7714:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    771b:	48 83 7d c8 1f       	cmpq   $0x1f,-0x38(%rbp)
    7720:	77 05                	ja     7727 <add_segment+0x355>
    7722:	e8 a2 6d 01 00       	callq  1e4c9 <abort>
    7727:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    772e:	8b 10                	mov    (%rax),%edx
    7730:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
    7736:	be 01 00 00 00       	mov    $0x1,%esi
    773b:	89 c1                	mov    %eax,%ecx
    773d:	d3 e6                	shl    %cl,%esi
    773f:	89 f0                	mov    %esi,%eax
    7741:	21 d0                	and    %edx,%eax
    7743:	85 c0                	test   %eax,%eax
    7745:	75 27                	jne    776e <add_segment+0x39c>
    7747:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    774e:	8b 10                	mov    (%rax),%edx
    7750:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
    7756:	be 01 00 00 00       	mov    $0x1,%esi
    775b:	89 c1                	mov    %eax,%ecx
    775d:	d3 e6                	shl    %cl,%esi
    775f:	89 f0                	mov    %esi,%eax
    7761:	09 c2                	or     %eax,%edx
    7763:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    776a:	89 10                	mov    %edx,(%rax)
    776c:	eb 37                	jmp    77a5 <add_segment+0x3d3>
    776e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7772:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7776:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    777d:	48 8b 40 18          	mov    0x18(%rax),%rax
    7781:	48 39 c2             	cmp    %rax,%rdx
    7784:	0f 93 c0             	setae  %al
    7787:	0f b6 c0             	movzbl %al,%eax
    778a:	48 85 c0             	test   %rax,%rax
    778d:	74 11                	je     77a0 <add_segment+0x3ce>
    778f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7793:	48 8b 40 10          	mov    0x10(%rax),%rax
    7797:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    779e:	eb 05                	jmp    77a5 <add_segment+0x3d3>
    77a0:	e8 24 6d 01 00       	callq  1e4c9 <abort>
    77a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    77a9:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    77ad:	48 89 50 10          	mov    %rdx,0x10(%rax)
    77b1:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    77b8:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    77bc:	48 89 50 18          	mov    %rdx,0x18(%rax)
    77c0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    77c4:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    77cb:	48 89 50 10          	mov    %rdx,0x10(%rax)
    77cf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    77d3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    77d7:	48 89 50 18          	mov    %rdx,0x18(%rax)
    77db:	e9 e2 02 00 00       	jmpq   7ac2 <add_segment+0x6f0>
    77e0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    77e4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    77e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    77ec:	48 c1 e8 08          	shr    $0x8,%rax
    77f0:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)
    77f6:	83 bd 38 ff ff ff 00 	cmpl   $0x0,-0xc8(%rbp)
    77fd:	75 0c                	jne    780b <add_segment+0x439>
    77ff:	c7 85 30 ff ff ff 00 	movl   $0x0,-0xd0(%rbp)
    7806:	00 00 00 
    7809:	eb 5a                	jmp    7865 <add_segment+0x493>
    780b:	81 bd 38 ff ff ff ff 	cmpl   $0xffff,-0xc8(%rbp)
    7812:	ff 00 00 
    7815:	76 0c                	jbe    7823 <add_segment+0x451>
    7817:	c7 85 30 ff ff ff 1f 	movl   $0x1f,-0xd0(%rbp)
    781e:	00 00 00 
    7821:	eb 42                	jmp    7865 <add_segment+0x493>
    7823:	0f bd 85 38 ff ff ff 	bsr    -0xc8(%rbp),%eax
    782a:	83 f0 1f             	xor    $0x1f,%eax
    782d:	ba 1f 00 00 00       	mov    $0x1f,%edx
    7832:	29 c2                	sub    %eax,%edx
    7834:	89 d0                	mov    %edx,%eax
    7836:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
    783c:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
    7842:	8d 34 00             	lea    (%rax,%rax,1),%esi
    7845:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
    784b:	83 c0 07             	add    $0x7,%eax
    784e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7852:	89 c1                	mov    %eax,%ecx
    7854:	48 d3 ea             	shr    %cl,%rdx
    7857:	48 89 d0             	mov    %rdx,%rax
    785a:	83 e0 01             	and    $0x1,%eax
    785d:	01 f0                	add    %esi,%eax
    785f:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
    7865:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
    786b:	48 83 c0 4a          	add    $0x4a,%rax
    786f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7876:	00 
    7877:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    787e:	48 01 d0             	add    %rdx,%rax
    7881:	48 83 c0 08          	add    $0x8,%rax
    7885:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7889:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    788d:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
    7893:	89 50 38             	mov    %edx,0x38(%rax)
    7896:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    789a:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    78a1:	00 
    78a2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    78a6:	48 8b 50 28          	mov    0x28(%rax),%rdx
    78aa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    78ae:	48 89 50 20          	mov    %rdx,0x20(%rax)
    78b2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    78b9:	8b 50 04             	mov    0x4(%rax),%edx
    78bc:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
    78c2:	be 01 00 00 00       	mov    $0x1,%esi
    78c7:	89 c1                	mov    %eax,%ecx
    78c9:	d3 e6                	shl    %cl,%esi
    78cb:	89 f0                	mov    %esi,%eax
    78cd:	21 d0                	and    %edx,%eax
    78cf:	85 c0                	test   %eax,%eax
    78d1:	75 5f                	jne    7932 <add_segment+0x560>
    78d3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    78da:	8b 50 04             	mov    0x4(%rax),%edx
    78dd:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
    78e3:	be 01 00 00 00       	mov    $0x1,%esi
    78e8:	89 c1                	mov    %eax,%ecx
    78ea:	d3 e6                	shl    %cl,%esi
    78ec:	89 f0                	mov    %esi,%eax
    78ee:	09 c2                	or     %eax,%edx
    78f0:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    78f7:	89 50 04             	mov    %edx,0x4(%rax)
    78fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78fe:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7902:	48 89 10             	mov    %rdx,(%rax)
    7905:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7909:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    790d:	48 89 50 30          	mov    %rdx,0x30(%rax)
    7911:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7915:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7919:	48 89 50 18          	mov    %rdx,0x18(%rax)
    791d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7921:	48 8b 50 18          	mov    0x18(%rax),%rdx
    7925:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7929:	48 89 50 10          	mov    %rdx,0x10(%rax)
    792d:	e9 90 01 00 00       	jmpq   7ac2 <add_segment+0x6f0>
    7932:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7936:	48 8b 00             	mov    (%rax),%rax
    7939:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    7940:	83 bd 30 ff ff ff 1f 	cmpl   $0x1f,-0xd0(%rbp)
    7947:	74 13                	je     795c <add_segment+0x58a>
    7949:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
    794f:	d1 e8                	shr    %eax
    7951:	ba 39 00 00 00       	mov    $0x39,%edx
    7956:	29 c2                	sub    %eax,%edx
    7958:	89 d0                	mov    %edx,%eax
    795a:	eb 05                	jmp    7961 <add_segment+0x58f>
    795c:	b8 00 00 00 00       	mov    $0x0,%eax
    7961:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7965:	89 c1                	mov    %eax,%ecx
    7967:	48 d3 e2             	shl    %cl,%rdx
    796a:	48 89 d0             	mov    %rdx,%rax
    796d:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    7974:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    797b:	48 8b 40 08          	mov    0x8(%rax),%rax
    797f:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    7983:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    7987:	0f 84 a2 00 00 00    	je     7a2f <add_segment+0x65d>
    798d:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    7994:	48 c1 e8 3f          	shr    $0x3f,%rax
    7998:	48 83 c0 04          	add    $0x4,%rax
    799c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    79a3:	00 
    79a4:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    79ab:	48 01 d0             	add    %rdx,%rax
    79ae:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    79b2:	48 d1 a5 58 ff ff ff 	shlq   -0xa8(%rbp)
    79b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    79bd:	48 8b 00             	mov    (%rax),%rax
    79c0:	48 85 c0             	test   %rax,%rax
    79c3:	74 10                	je     79d5 <add_segment+0x603>
    79c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    79c9:	48 8b 00             	mov    (%rax),%rax
    79cc:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    79d3:	eb 9f                	jmp    7974 <add_segment+0x5a2>
    79d5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    79dc:	48 8b 40 18          	mov    0x18(%rax),%rax
    79e0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    79e4:	0f 96 c0             	setbe  %al
    79e7:	0f b6 c0             	movzbl %al,%eax
    79ea:	48 85 c0             	test   %rax,%rax
    79ed:	74 3b                	je     7a2a <add_segment+0x658>
    79ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    79f3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    79f7:	48 89 10             	mov    %rdx,(%rax)
    79fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    79fe:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    7a05:	48 89 50 30          	mov    %rdx,0x30(%rax)
    7a09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7a0d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7a11:	48 89 50 18          	mov    %rdx,0x18(%rax)
    7a15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7a19:	48 8b 50 18          	mov    0x18(%rax),%rdx
    7a1d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7a21:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7a25:	e9 98 00 00 00       	jmpq   7ac2 <add_segment+0x6f0>
    7a2a:	e8 9a 6a 01 00       	callq  1e4c9 <abort>
    7a2f:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7a36:	48 8b 40 10          	mov    0x10(%rax),%rax
    7a3a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7a3e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    7a45:	48 8b 40 18          	mov    0x18(%rax),%rax
    7a49:	48 3b 85 50 ff ff ff 	cmp    -0xb0(%rbp),%rax
    7a50:	0f 96 c0             	setbe  %al
    7a53:	0f b6 c0             	movzbl %al,%eax
    7a56:	48 85 c0             	test   %rax,%rax
    7a59:	74 62                	je     7abd <add_segment+0x6eb>
    7a5b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    7a62:	48 8b 40 18          	mov    0x18(%rax),%rax
    7a66:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    7a6a:	0f 96 c0             	setbe  %al
    7a6d:	0f b6 c0             	movzbl %al,%eax
    7a70:	48 85 c0             	test   %rax,%rax
    7a73:	74 48                	je     7abd <add_segment+0x6eb>
    7a75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a79:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7a7d:	48 89 50 18          	mov    %rdx,0x18(%rax)
    7a81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a85:	48 8b 50 18          	mov    0x18(%rax),%rdx
    7a89:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7a90:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7a94:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7a98:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7a9c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7aa0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7aa4:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    7aab:	48 89 50 18          	mov    %rdx,0x18(%rax)
    7aaf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7ab3:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    7aba:	00 
    7abb:	eb 05                	jmp    7ac2 <add_segment+0x6f0>
    7abd:	e8 07 6a 01 00       	callq  1e4c9 <abort>
    7ac2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    7ac9:	48 8b 50 28          	mov    0x28(%rax),%rdx
    7acd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    7ad4:	48 89 d6             	mov    %rdx,%rsi
    7ad7:	48 89 c7             	mov    %rax,%rdi
    7ada:	e8 c6 d4 ff ff       	callq  4fa5 <do_check_top_chunk>
    7adf:	90                   	nop
    7ae0:	c9                   	leaveq 
    7ae1:	c3                   	retq   

0000000000007ae2 <sys_alloc>:
    7ae2:	55                   	push   %rbp
    7ae3:	48 89 e5             	mov    %rsp,%rbp
    7ae6:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    7aed:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
    7af4:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
    7afb:	48 c7 85 60 ff ff ff 	movq   $0xffffffffffffffff,-0xa0(%rbp)
    7b02:	ff ff ff ff 
    7b06:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    7b0d:	00 00 00 00 
    7b11:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
    7b18:	00 00 00 
    7b1b:	48 8b 05 5e ae 21 00 	mov    0x21ae5e(%rip),%rax        # 222980 <mparams>
    7b22:	48 85 c0             	test   %rax,%rax
    7b25:	75 07                	jne    7b2e <sys_alloc+0x4c>
    7b27:	e8 47 d2 ff ff       	callq  4d73 <init_mparams>
    7b2c:	85 c0                	test   %eax,%eax
    7b2e:	90                   	nop
    7b2f:	48 8b 15 5a ae 21 00 	mov    0x21ae5a(%rip),%rdx        # 222990 <mparams+0x10>
    7b36:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    7b3d:	48 01 d0             	add    %rdx,%rax
    7b40:	48 8d 50 57          	lea    0x57(%rax),%rdx
    7b44:	48 8b 05 45 ae 21 00 	mov    0x21ae45(%rip),%rax        # 222990 <mparams+0x10>
    7b4b:	48 f7 d8             	neg    %rax
    7b4e:	48 21 d0             	and    %rdx,%rax
    7b51:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    7b55:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7b59:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
    7b60:	77 0a                	ja     7b6c <sys_alloc+0x8a>
    7b62:	b8 00 00 00 00       	mov    $0x0,%eax
    7b67:	e9 50 09 00 00       	jmpq   84bc <sys_alloc+0x9da>
    7b6c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7b73:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
    7b7a:	48 85 c0             	test   %rax,%rax
    7b7d:	74 4b                	je     7bca <sys_alloc+0xe8>
    7b7f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7b86:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    7b8d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7b91:	48 01 d0             	add    %rdx,%rax
    7b94:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    7b98:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7b9f:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
    7ba6:	48 3b 45 90          	cmp    -0x70(%rbp),%rax
    7baa:	73 14                	jae    7bc0 <sys_alloc+0xde>
    7bac:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7bb3:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
    7bba:	48 3b 45 90          	cmp    -0x70(%rbp),%rax
    7bbe:	73 0a                	jae    7bca <sys_alloc+0xe8>
    7bc0:	b8 00 00 00 00       	mov    $0x0,%eax
    7bc5:	e9 f2 08 00 00       	jmpq   84bc <sys_alloc+0x9da>
    7bca:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7bd1:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
    7bd7:	83 e0 04             	and    $0x4,%eax
    7bda:	85 c0                	test   %eax,%eax
    7bdc:	0f 85 37 03 00 00    	jne    7f19 <sys_alloc+0x437>
    7be2:	48 c7 85 70 ff ff ff 	movq   $0xffffffffffffffff,-0x90(%rbp)
    7be9:	ff ff ff ff 
    7bed:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7bf1:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    7bf8:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7bff:	48 8b 40 28          	mov    0x28(%rax),%rax
    7c03:	48 85 c0             	test   %rax,%rax
    7c06:	74 1f                	je     7c27 <sys_alloc+0x145>
    7c08:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7c0f:	48 8b 50 28          	mov    0x28(%rax),%rdx
    7c13:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7c1a:	48 89 d6             	mov    %rdx,%rsi
    7c1d:	48 89 c7             	mov    %rax,%rdi
    7c20:	e8 8f d0 ff ff       	callq  4cb4 <segment_holding>
    7c25:	eb 05                	jmp    7c2c <sys_alloc+0x14a>
    7c27:	b8 00 00 00 00       	mov    $0x0,%eax
    7c2c:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    7c30:	b8 01 00 00 00       	mov    $0x1,%eax
    7c35:	87 05 2d ad 21 00    	xchg   %eax,0x21ad2d(%rip)        # 222968 <malloc_global_mutex>
    7c3b:	85 c0                	test   %eax,%eax
    7c3d:	74 0c                	je     7c4b <sys_alloc+0x169>
    7c3f:	48 8d 3d 22 ad 21 00 	lea    0x21ad22(%rip),%rdi        # 222968 <malloc_global_mutex>
    7c46:	e8 34 d0 ff ff       	callq  4c7f <spin_acquire_lock>
    7c4b:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
    7c50:	0f 85 2f 01 00 00    	jne    7d85 <sys_alloc+0x2a3>
    7c56:	bf 00 00 00 00       	mov    $0x0,%edi
    7c5b:	e8 b3 69 00 00       	callq  e613 <sbrk>
    7c60:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7c64:	48 83 7d a0 ff       	cmpq   $0xffffffffffffffff,-0x60(%rbp)
    7c69:	0f 84 ad 01 00 00    	je     7e1c <sys_alloc+0x33a>
    7c6f:	48 8b 05 12 ad 21 00 	mov    0x21ad12(%rip),%rax        # 222988 <mparams+0x8>
    7c76:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    7c7a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7c7e:	48 21 d0             	and    %rdx,%rax
    7c81:	48 85 c0             	test   %rax,%rax
    7c84:	74 30                	je     7cb6 <sys_alloc+0x1d4>
    7c86:	48 8b 15 fb ac 21 00 	mov    0x21acfb(%rip),%rdx        # 222988 <mparams+0x8>
    7c8d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7c91:	48 01 d0             	add    %rdx,%rax
    7c94:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    7c98:	48 8b 05 e9 ac 21 00 	mov    0x21ace9(%rip),%rax        # 222988 <mparams+0x8>
    7c9f:	48 f7 d8             	neg    %rax
    7ca2:	48 21 c2             	and    %rax,%rdx
    7ca5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7ca9:	48 29 c2             	sub    %rax,%rdx
    7cac:	48 89 d0             	mov    %rdx,%rax
    7caf:	48 01 85 78 ff ff ff 	add    %rax,-0x88(%rbp)
    7cb6:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7cbd:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    7cc4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    7ccb:	48 01 d0             	add    %rdx,%rax
    7cce:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7cd2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    7cd9:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
    7ce0:	0f 86 36 01 00 00    	jbe    7e1c <sys_alloc+0x33a>
    7ce6:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    7ced:	ff ff 7f 
    7cf0:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
    7cf7:	0f 87 1f 01 00 00    	ja     7e1c <sys_alloc+0x33a>
    7cfd:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7d04:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
    7d0b:	48 85 c0             	test   %rax,%rax
    7d0e:	74 30                	je     7d40 <sys_alloc+0x25e>
    7d10:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7d17:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
    7d1e:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
    7d22:	0f 83 f4 00 00 00    	jae    7e1c <sys_alloc+0x33a>
    7d28:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7d2f:	48 8b 80 68 03 00 00 	mov    0x368(%rax),%rax
    7d36:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
    7d3a:	0f 82 dc 00 00 00    	jb     7e1c <sys_alloc+0x33a>
    7d40:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    7d47:	48 89 c7             	mov    %rax,%rdi
    7d4a:	e8 c4 68 00 00       	callq  e613 <sbrk>
    7d4f:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    7d56:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    7d5d:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
    7d61:	0f 85 b5 00 00 00    	jne    7e1c <sys_alloc+0x33a>
    7d67:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7d6b:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    7d72:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    7d79:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    7d80:	e9 97 00 00 00       	jmpq   7e1c <sys_alloc+0x33a>
    7d85:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7d8c:	48 8b 40 10          	mov    0x10(%rax),%rax
    7d90:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    7d97:	48 29 c2             	sub    %rax,%rdx
    7d9a:	48 8b 05 ef ab 21 00 	mov    0x21abef(%rip),%rax        # 222990 <mparams+0x10>
    7da1:	48 01 d0             	add    %rdx,%rax
    7da4:	48 8d 50 57          	lea    0x57(%rax),%rdx
    7da8:	48 8b 05 e1 ab 21 00 	mov    0x21abe1(%rip),%rax        # 222990 <mparams+0x10>
    7daf:	48 f7 d8             	neg    %rax
    7db2:	48 21 d0             	and    %rdx,%rax
    7db5:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    7dbc:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    7dc3:	ff ff 7f 
    7dc6:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
    7dcd:	77 4d                	ja     7e1c <sys_alloc+0x33a>
    7dcf:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    7dd6:	48 89 c7             	mov    %rax,%rdi
    7dd9:	e8 35 68 00 00       	callq  e613 <sbrk>
    7dde:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    7de5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7de9:	48 8b 10             	mov    (%rax),%rdx
    7dec:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7df0:	48 8b 40 08          	mov    0x8(%rax),%rax
    7df4:	48 01 d0             	add    %rdx,%rax
    7df7:	48 39 85 70 ff ff ff 	cmp    %rax,-0x90(%rbp)
    7dfe:	75 1c                	jne    7e1c <sys_alloc+0x33a>
    7e00:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    7e07:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    7e0e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    7e15:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    7e1c:	48 83 bd 60 ff ff ff 	cmpq   $0xffffffffffffffff,-0xa0(%rbp)
    7e23:	ff 
    7e24:	0f 85 e4 00 00 00    	jne    7f0e <sys_alloc+0x42c>
    7e2a:	48 83 bd 70 ff ff ff 	cmpq   $0xffffffffffffffff,-0x90(%rbp)
    7e31:	ff 
    7e32:	0f 84 b0 00 00 00    	je     7ee8 <sys_alloc+0x406>
    7e38:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    7e3f:	ff ff 7f 
    7e42:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
    7e49:	0f 87 99 00 00 00    	ja     7ee8 <sys_alloc+0x406>
    7e4f:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    7e56:	48 83 c0 58          	add    $0x58,%rax
    7e5a:	48 3b 85 78 ff ff ff 	cmp    -0x88(%rbp),%rax
    7e61:	0f 86 81 00 00 00    	jbe    7ee8 <sys_alloc+0x406>
    7e67:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    7e6e:	48 2b 85 78 ff ff ff 	sub    -0x88(%rbp),%rax
    7e75:	48 89 c2             	mov    %rax,%rdx
    7e78:	48 8b 05 11 ab 21 00 	mov    0x21ab11(%rip),%rax        # 222990 <mparams+0x10>
    7e7f:	48 01 d0             	add    %rdx,%rax
    7e82:	48 8d 50 57          	lea    0x57(%rax),%rdx
    7e86:	48 8b 05 03 ab 21 00 	mov    0x21ab03(%rip),%rax        # 222990 <mparams+0x10>
    7e8d:	48 f7 d8             	neg    %rax
    7e90:	48 21 d0             	and    %rdx,%rax
    7e93:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    7e97:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    7e9e:	ff ff 7f 
    7ea1:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
    7ea5:	77 41                	ja     7ee8 <sys_alloc+0x406>
    7ea7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7eab:	48 89 c7             	mov    %rax,%rdi
    7eae:	e8 60 67 00 00       	callq  e613 <sbrk>
    7eb3:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    7eb7:	48 83 7d b8 ff       	cmpq   $0xffffffffffffffff,-0x48(%rbp)
    7ebc:	74 0d                	je     7ecb <sys_alloc+0x3e9>
    7ebe:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7ec2:	48 01 85 78 ff ff ff 	add    %rax,-0x88(%rbp)
    7ec9:	eb 1d                	jmp    7ee8 <sys_alloc+0x406>
    7ecb:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    7ed2:	48 f7 d8             	neg    %rax
    7ed5:	48 89 c7             	mov    %rax,%rdi
    7ed8:	e8 36 67 00 00       	callq  e613 <sbrk>
    7edd:	48 c7 85 70 ff ff ff 	movq   $0xffffffffffffffff,-0x90(%rbp)
    7ee4:	ff ff ff ff 
    7ee8:	48 83 bd 70 ff ff ff 	cmpq   $0xffffffffffffffff,-0x90(%rbp)
    7eef:	ff 
    7ef0:	74 1c                	je     7f0e <sys_alloc+0x42c>
    7ef2:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    7ef9:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    7f00:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    7f07:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    7f0e:	b8 00 00 00 00       	mov    $0x0,%eax
    7f13:	89 05 4f aa 21 00    	mov    %eax,0x21aa4f(%rip)        # 222968 <malloc_global_mutex>
    7f19:	48 83 bd 60 ff ff ff 	cmpq   $0xffffffffffffffff,-0xa0(%rbp)
    7f20:	ff 
    7f21:	0f 85 b9 00 00 00    	jne    7fe0 <sys_alloc+0x4fe>
    7f27:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    7f2e:	ff ff 7f 
    7f31:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
    7f35:	0f 87 a5 00 00 00    	ja     7fe0 <sys_alloc+0x4fe>
    7f3b:	48 c7 45 c0 ff ff ff 	movq   $0xffffffffffffffff,-0x40(%rbp)
    7f42:	ff 
    7f43:	48 c7 45 c8 ff ff ff 	movq   $0xffffffffffffffff,-0x38(%rbp)
    7f4a:	ff 
    7f4b:	b8 01 00 00 00       	mov    $0x1,%eax
    7f50:	87 05 12 aa 21 00    	xchg   %eax,0x21aa12(%rip)        # 222968 <malloc_global_mutex>
    7f56:	85 c0                	test   %eax,%eax
    7f58:	74 0c                	je     7f66 <sys_alloc+0x484>
    7f5a:	48 8d 3d 07 aa 21 00 	lea    0x21aa07(%rip),%rdi        # 222968 <malloc_global_mutex>
    7f61:	e8 19 cd ff ff       	callq  4c7f <spin_acquire_lock>
    7f66:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7f6a:	48 89 c7             	mov    %rax,%rdi
    7f6d:	e8 a1 66 00 00       	callq  e613 <sbrk>
    7f72:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    7f76:	bf 00 00 00 00       	mov    $0x0,%edi
    7f7b:	e8 93 66 00 00       	callq  e613 <sbrk>
    7f80:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    7f84:	b8 00 00 00 00       	mov    $0x0,%eax
    7f89:	89 05 d9 a9 21 00    	mov    %eax,0x21a9d9(%rip)        # 222968 <malloc_global_mutex>
    7f8f:	48 83 7d c0 ff       	cmpq   $0xffffffffffffffff,-0x40(%rbp)
    7f94:	74 4a                	je     7fe0 <sys_alloc+0x4fe>
    7f96:	48 83 7d c8 ff       	cmpq   $0xffffffffffffffff,-0x38(%rbp)
    7f9b:	74 43                	je     7fe0 <sys_alloc+0x4fe>
    7f9d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7fa1:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    7fa5:	73 39                	jae    7fe0 <sys_alloc+0x4fe>
    7fa7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7fab:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7faf:	48 29 c2             	sub    %rax,%rdx
    7fb2:	48 89 d0             	mov    %rdx,%rax
    7fb5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    7fb9:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    7fc0:	48 83 c0 50          	add    $0x50,%rax
    7fc4:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
    7fc8:	73 16                	jae    7fe0 <sys_alloc+0x4fe>
    7fca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7fce:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    7fd5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7fd9:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    7fe0:	48 83 bd 60 ff ff ff 	cmpq   $0xffffffffffffffff,-0xa0(%rbp)
    7fe7:	ff 
    7fe8:	0f 84 be 04 00 00    	je     84ac <sys_alloc+0x9ca>
    7fee:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7ff5:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    7ffc:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    8003:	48 01 c2             	add    %rax,%rdx
    8006:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    800d:	48 89 90 58 03 00 00 	mov    %rdx,0x358(%rax)
    8014:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    801b:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    8022:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    8029:	48 8b 80 60 03 00 00 	mov    0x360(%rax),%rax
    8030:	48 39 c2             	cmp    %rax,%rdx
    8033:	76 1c                	jbe    8051 <sys_alloc+0x56f>
    8035:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    803c:	48 8b 90 58 03 00 00 	mov    0x358(%rax),%rdx
    8043:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    804a:	48 89 90 60 03 00 00 	mov    %rdx,0x360(%rax)
    8051:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    8058:	48 8b 40 28          	mov    0x28(%rax),%rax
    805c:	48 85 c0             	test   %rax,%rax
    805f:	0f 85 3e 01 00 00    	jne    81a3 <sys_alloc+0x6c1>
    8065:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    806c:	48 8b 40 18          	mov    0x18(%rax),%rax
    8070:	48 85 c0             	test   %rax,%rax
    8073:	74 14                	je     8089 <sys_alloc+0x5a7>
    8075:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    807c:	48 8b 40 18          	mov    0x18(%rax),%rax
    8080:	48 3b 85 60 ff ff ff 	cmp    -0xa0(%rbp),%rax
    8087:	76 12                	jbe    809b <sys_alloc+0x5b9>
    8089:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    8090:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    8097:	48 89 50 18          	mov    %rdx,0x18(%rax)
    809b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    80a2:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    80a9:	48 89 90 78 03 00 00 	mov    %rdx,0x378(%rax)
    80b0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    80b7:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    80be:	48 89 90 80 03 00 00 	mov    %rdx,0x380(%rax)
    80c5:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    80cc:	8b 95 5c ff ff ff    	mov    -0xa4(%rbp),%edx
    80d2:	89 90 90 03 00 00    	mov    %edx,0x390(%rax)
    80d8:	48 8b 15 a1 a8 21 00 	mov    0x21a8a1(%rip),%rdx        # 222980 <mparams>
    80df:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    80e6:	48 89 50 40          	mov    %rdx,0x40(%rax)
    80ea:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    80f1:	48 c7 40 38 ff ff ff 	movq   $0xffffffffffffffff,0x38(%rax)
    80f8:	ff 
    80f9:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    8100:	48 89 c7             	mov    %rax,%rdi
    8103:	e8 b8 e5 ff ff       	callq  66c0 <init_bins>
    8108:	48 8d 05 b1 a8 21 00 	lea    0x21a8b1(%rip),%rax        # 2229c0 <_gm_>
    810f:	48 39 85 48 ff ff ff 	cmp    %rax,-0xb8(%rbp)
    8116:	75 29                	jne    8141 <sys_alloc+0x65f>
    8118:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    811f:	48 8d 50 b0          	lea    -0x50(%rax),%rdx
    8123:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
    812a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    8131:	48 89 ce             	mov    %rcx,%rsi
    8134:	48 89 c7             	mov    %rax,%rdi
    8137:	e8 eb e4 ff ff       	callq  6627 <init_top>
    813c:	e9 5a 02 00 00       	jmpq   839b <sys_alloc+0x8b9>
    8141:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    8148:	48 83 e8 10          	sub    $0x10,%rax
    814c:	48 8b 40 08          	mov    0x8(%rax),%rax
    8150:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    8154:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
    8158:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    815f:	48 01 d0             	add    %rdx,%rax
    8162:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    8166:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    816d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    8174:	48 01 d0             	add    %rdx,%rax
    8177:	48 89 c2             	mov    %rax,%rdx
    817a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    817e:	48 29 c2             	sub    %rax,%rdx
    8181:	48 89 d0             	mov    %rdx,%rax
    8184:	48 8d 50 b0          	lea    -0x50(%rax),%rdx
    8188:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    818c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    8193:	48 89 ce             	mov    %rcx,%rsi
    8196:	48 89 c7             	mov    %rax,%rdi
    8199:	e8 89 e4 ff ff       	callq  6627 <init_top>
    819e:	e9 f8 01 00 00       	jmpq   839b <sys_alloc+0x8b9>
    81a3:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    81aa:	48 05 78 03 00 00    	add    $0x378,%rax
    81b0:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    81b4:	eb 0c                	jmp    81c2 <sys_alloc+0x6e0>
    81b6:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    81ba:	48 8b 40 10          	mov    0x10(%rax),%rax
    81be:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    81c2:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
    81c7:	74 1b                	je     81e4 <sys_alloc+0x702>
    81c9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    81cd:	48 8b 10             	mov    (%rax),%rdx
    81d0:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    81d4:	48 8b 40 08          	mov    0x8(%rax),%rax
    81d8:	48 01 d0             	add    %rdx,%rax
    81db:	48 3b 85 60 ff ff ff 	cmp    -0xa0(%rbp),%rax
    81e2:	75 d2                	jne    81b6 <sys_alloc+0x6d4>
    81e4:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
    81e9:	0f 84 a9 00 00 00    	je     8298 <sys_alloc+0x7b6>
    81ef:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    81f3:	8b 40 18             	mov    0x18(%rax),%eax
    81f6:	83 e0 08             	and    $0x8,%eax
    81f9:	85 c0                	test   %eax,%eax
    81fb:	0f 85 97 00 00 00    	jne    8298 <sys_alloc+0x7b6>
    8201:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
    8208:	0f 85 8a 00 00 00    	jne    8298 <sys_alloc+0x7b6>
    820e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    8215:	48 8b 50 28          	mov    0x28(%rax),%rdx
    8219:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    821d:	48 8b 00             	mov    (%rax),%rax
    8220:	48 39 c2             	cmp    %rax,%rdx
    8223:	72 73                	jb     8298 <sys_alloc+0x7b6>
    8225:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    822c:	48 8b 50 28          	mov    0x28(%rax),%rdx
    8230:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    8234:	48 8b 08             	mov    (%rax),%rcx
    8237:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    823b:	48 8b 40 08          	mov    0x8(%rax),%rax
    823f:	48 01 c8             	add    %rcx,%rax
    8242:	48 39 c2             	cmp    %rax,%rdx
    8245:	73 51                	jae    8298 <sys_alloc+0x7b6>
    8247:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    824b:	48 8b 50 08          	mov    0x8(%rax),%rdx
    824f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    8256:	48 01 c2             	add    %rax,%rdx
    8259:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    825d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8261:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    8268:	48 8b 50 10          	mov    0x10(%rax),%rdx
    826c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    8273:	48 01 c2             	add    %rax,%rdx
    8276:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    827d:	48 8b 48 28          	mov    0x28(%rax),%rcx
    8281:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    8288:	48 89 ce             	mov    %rcx,%rsi
    828b:	48 89 c7             	mov    %rax,%rdi
    828e:	e8 94 e3 ff ff       	callq  6627 <init_top>
    8293:	e9 03 01 00 00       	jmpq   839b <sys_alloc+0x8b9>
    8298:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    829f:	48 8b 40 18          	mov    0x18(%rax),%rax
    82a3:	48 3b 85 60 ff ff ff 	cmp    -0xa0(%rbp),%rax
    82aa:	76 12                	jbe    82be <sys_alloc+0x7dc>
    82ac:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    82b3:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    82ba:	48 89 50 18          	mov    %rdx,0x18(%rax)
    82be:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    82c5:	48 05 78 03 00 00    	add    $0x378,%rax
    82cb:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    82cf:	eb 0c                	jmp    82dd <sys_alloc+0x7fb>
    82d1:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    82d5:	48 8b 40 10          	mov    0x10(%rax),%rax
    82d9:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    82dd:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
    82e2:	74 1d                	je     8301 <sys_alloc+0x81f>
    82e4:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    82e8:	48 8b 00             	mov    (%rax),%rax
    82eb:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
    82f2:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    82f9:	48 01 ca             	add    %rcx,%rdx
    82fc:	48 39 d0             	cmp    %rdx,%rax
    82ff:	75 d0                	jne    82d1 <sys_alloc+0x7ef>
    8301:	48 83 7d 80 00       	cmpq   $0x0,-0x80(%rbp)
    8306:	74 70                	je     8378 <sys_alloc+0x896>
    8308:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    830c:	8b 40 18             	mov    0x18(%rax),%eax
    830f:	83 e0 08             	and    $0x8,%eax
    8312:	85 c0                	test   %eax,%eax
    8314:	75 62                	jne    8378 <sys_alloc+0x896>
    8316:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
    831d:	75 59                	jne    8378 <sys_alloc+0x896>
    831f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    8323:	48 8b 00             	mov    (%rax),%rax
    8326:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    832a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    832e:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    8335:	48 89 10             	mov    %rdx,(%rax)
    8338:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    833c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8340:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    8347:	48 01 c2             	add    %rax,%rdx
    834a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    834e:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8352:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
    8359:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    835d:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
    8364:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    836b:	48 89 c7             	mov    %rax,%rdi
    836e:	e8 a9 e3 ff ff       	callq  671c <prepend_alloc>
    8373:	e9 44 01 00 00       	jmpq   84bc <sys_alloc+0x9da>
    8378:	8b 8d 5c ff ff ff    	mov    -0xa4(%rbp),%ecx
    837e:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    8385:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
    838c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    8393:	48 89 c7             	mov    %rax,%rdi
    8396:	e8 37 f0 ff ff       	callq  73d2 <add_segment>
    839b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    83a2:	48 8b 40 10          	mov    0x10(%rax),%rax
    83a6:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
    83ad:	0f 86 f9 00 00 00    	jbe    84ac <sys_alloc+0x9ca>
    83b3:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    83ba:	48 8b 40 10          	mov    0x10(%rax),%rax
    83be:	48 2b 85 40 ff ff ff 	sub    -0xc0(%rbp),%rax
    83c5:	48 89 c2             	mov    %rax,%rdx
    83c8:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    83cf:	48 89 50 10          	mov    %rdx,0x10(%rax)
    83d3:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    83da:	48 8b 40 10          	mov    0x10(%rax),%rax
    83de:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    83e2:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    83e9:	48 8b 40 28          	mov    0x28(%rax),%rax
    83ed:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    83f1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    83f5:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    83fc:	48 01 c2             	add    %rax,%rdx
    83ff:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    8406:	48 89 50 28          	mov    %rdx,0x28(%rax)
    840a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    8411:	48 8b 40 28          	mov    0x28(%rax),%rax
    8415:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8419:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    841d:	48 83 c8 01          	or     $0x1,%rax
    8421:	48 89 c2             	mov    %rax,%rdx
    8424:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8428:	48 89 50 08          	mov    %rdx,0x8(%rax)
    842c:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    8433:	48 83 c8 03          	or     $0x3,%rax
    8437:	48 89 c2             	mov    %rax,%rdx
    843a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    843e:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8442:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8446:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    844d:	48 01 d0             	add    %rdx,%rax
    8450:	48 8b 0d 29 a5 21 00 	mov    0x21a529(%rip),%rcx        # 222980 <mparams>
    8457:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    845e:	48 31 ca             	xor    %rcx,%rdx
    8461:	48 89 10             	mov    %rdx,(%rax)
    8464:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    846b:	48 8b 50 28          	mov    0x28(%rax),%rdx
    846f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    8476:	48 89 d6             	mov    %rdx,%rsi
    8479:	48 89 c7             	mov    %rax,%rdi
    847c:	e8 24 cb ff ff       	callq  4fa5 <do_check_top_chunk>
    8481:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8485:	48 8d 48 10          	lea    0x10(%rax),%rcx
    8489:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    8490:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    8497:	48 89 ce             	mov    %rcx,%rsi
    849a:	48 89 c7             	mov    %rax,%rdi
    849d:	e8 94 ce ff ff       	callq  5336 <do_check_malloced_chunk>
    84a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    84a6:	48 83 c0 10          	add    $0x10,%rax
    84aa:	eb 10                	jmp    84bc <sys_alloc+0x9da>
    84ac:	e8 15 22 01 00       	callq  1a6c6 <__errno>
    84b1:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    84b7:	b8 00 00 00 00       	mov    $0x0,%eax
    84bc:	c9                   	leaveq 
    84bd:	c3                   	retq   

00000000000084be <release_unused_segments>:
    84be:	55                   	push   %rbp
    84bf:	48 89 e5             	mov    %rsp,%rbp
    84c2:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    84c6:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    84cd:	00 
    84ce:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    84d5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    84d9:	48 05 78 03 00 00    	add    $0x378,%rax
    84df:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    84e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    84e7:	48 8b 40 10          	mov    0x10(%rax),%rax
    84eb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    84ef:	eb 37                	jmp    8528 <release_unused_segments+0x6a>
    84f1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    84f5:	48 8b 00             	mov    (%rax),%rax
    84f8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    84fc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8500:	48 8b 40 08          	mov    0x8(%rax),%rax
    8504:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    8508:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    850c:	48 8b 40 10          	mov    0x10(%rax),%rax
    8510:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8514:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
    8518:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    851c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    8520:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8524:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    8528:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    852d:	75 c2                	jne    84f1 <release_unused_segments+0x33>
    852f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8533:	48 c7 40 38 ff ff ff 	movq   $0xffffffffffffffff,0x38(%rax)
    853a:	ff 
    853b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    853f:	5d                   	pop    %rbp
    8540:	c3                   	retq   

0000000000008541 <sys_trim>:
    8541:	55                   	push   %rbp
    8542:	48 89 e5             	mov    %rsp,%rbp
    8545:	48 83 ec 50          	sub    $0x50,%rsp
    8549:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    854d:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    8551:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    8558:	00 
    8559:	48 8b 05 20 a4 21 00 	mov    0x21a420(%rip),%rax        # 222980 <mparams>
    8560:	48 85 c0             	test   %rax,%rax
    8563:	75 07                	jne    856c <sys_trim+0x2b>
    8565:	e8 09 c8 ff ff       	callq  4d73 <init_mparams>
    856a:	85 c0                	test   %eax,%eax
    856c:	90                   	nop
    856d:	48 81 7d b0 7f ff ff 	cmpq   $0xffffffffffffff7f,-0x50(%rbp)
    8574:	ff 
    8575:	0f 87 e2 01 00 00    	ja     875d <sys_trim+0x21c>
    857b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    857f:	48 8b 40 28          	mov    0x28(%rax),%rax
    8583:	48 85 c0             	test   %rax,%rax
    8586:	0f 84 d1 01 00 00    	je     875d <sys_trim+0x21c>
    858c:	48 83 45 b0 50       	addq   $0x50,-0x50(%rbp)
    8591:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8595:	48 8b 40 10          	mov    0x10(%rax),%rax
    8599:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    859d:	0f 86 92 01 00 00    	jbe    8735 <sys_trim+0x1f4>
    85a3:	48 8b 05 e6 a3 21 00 	mov    0x21a3e6(%rip),%rax        # 222990 <mparams+0x10>
    85aa:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    85ae:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    85b2:	48 8b 40 10          	mov    0x10(%rax),%rax
    85b6:	48 2b 45 b0          	sub    -0x50(%rbp),%rax
    85ba:	48 89 c2             	mov    %rax,%rdx
    85bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    85c1:	48 01 d0             	add    %rdx,%rax
    85c4:	48 83 e8 01          	sub    $0x1,%rax
    85c8:	ba 00 00 00 00       	mov    $0x0,%edx
    85cd:	48 f7 75 d8          	divq   -0x28(%rbp)
    85d1:	48 83 e8 01          	sub    $0x1,%rax
    85d5:	48 0f af 45 d8       	imul   -0x28(%rbp),%rax
    85da:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    85de:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    85e2:	48 8b 50 28          	mov    0x28(%rax),%rdx
    85e6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    85ea:	48 89 d6             	mov    %rdx,%rsi
    85ed:	48 89 c7             	mov    %rax,%rdi
    85f0:	e8 bf c6 ff ff       	callq  4cb4 <segment_holding>
    85f5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    85f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    85fd:	8b 40 18             	mov    0x18(%rax),%eax
    8600:	83 e0 08             	and    $0x8,%eax
    8603:	85 c0                	test   %eax,%eax
    8605:	0f 85 b2 00 00 00    	jne    86bd <sys_trim+0x17c>
    860b:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    8612:	ff ff 7f 
    8615:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
    8619:	76 12                	jbe    862d <sys_trim+0xec>
    861b:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
    8622:	00 00 80 
    8625:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    8629:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    862d:	b8 01 00 00 00       	mov    $0x1,%eax
    8632:	87 05 30 a3 21 00    	xchg   %eax,0x21a330(%rip)        # 222968 <malloc_global_mutex>
    8638:	85 c0                	test   %eax,%eax
    863a:	74 0c                	je     8648 <sys_trim+0x107>
    863c:	48 8d 3d 25 a3 21 00 	lea    0x21a325(%rip),%rdi        # 222968 <malloc_global_mutex>
    8643:	e8 37 c6 ff ff       	callq  4c7f <spin_acquire_lock>
    8648:	bf 00 00 00 00       	mov    $0x0,%edi
    864d:	e8 c1 5f 00 00       	callq  e613 <sbrk>
    8652:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    8656:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    865a:	48 8b 10             	mov    (%rax),%rdx
    865d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8661:	48 8b 40 08          	mov    0x8(%rax),%rax
    8665:	48 01 d0             	add    %rdx,%rax
    8668:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    866c:	75 44                	jne    86b2 <sys_trim+0x171>
    866e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8672:	48 f7 d8             	neg    %rax
    8675:	48 89 c7             	mov    %rax,%rdi
    8678:	e8 96 5f 00 00       	callq  e613 <sbrk>
    867d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    8681:	bf 00 00 00 00       	mov    $0x0,%edi
    8686:	e8 88 5f 00 00       	callq  e613 <sbrk>
    868b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    868f:	48 83 7d f0 ff       	cmpq   $0xffffffffffffffff,-0x10(%rbp)
    8694:	74 1c                	je     86b2 <sys_trim+0x171>
    8696:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    869a:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    869e:	73 12                	jae    86b2 <sys_trim+0x171>
    86a0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    86a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86a8:	48 29 c2             	sub    %rax,%rdx
    86ab:	48 89 d0             	mov    %rdx,%rax
    86ae:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    86b2:	b8 00 00 00 00       	mov    $0x0,%eax
    86b7:	89 05 ab a2 21 00    	mov    %eax,0x21a2ab(%rip)        # 222968 <malloc_global_mutex>
    86bd:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    86c2:	74 71                	je     8735 <sys_trim+0x1f4>
    86c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    86c8:	48 8b 40 08          	mov    0x8(%rax),%rax
    86cc:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    86d0:	48 89 c2             	mov    %rax,%rdx
    86d3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    86d7:	48 89 50 08          	mov    %rdx,0x8(%rax)
    86db:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    86df:	48 8b 80 58 03 00 00 	mov    0x358(%rax),%rax
    86e6:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    86ea:	48 89 c2             	mov    %rax,%rdx
    86ed:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    86f1:	48 89 90 58 03 00 00 	mov    %rdx,0x358(%rax)
    86f8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    86fc:	48 8b 40 10          	mov    0x10(%rax),%rax
    8700:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    8704:	48 89 c2             	mov    %rax,%rdx
    8707:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    870b:	48 8b 48 28          	mov    0x28(%rax),%rcx
    870f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8713:	48 89 ce             	mov    %rcx,%rsi
    8716:	48 89 c7             	mov    %rax,%rdi
    8719:	e8 09 df ff ff       	callq  6627 <init_top>
    871e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8722:	48 8b 50 28          	mov    0x28(%rax),%rdx
    8726:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    872a:	48 89 d6             	mov    %rdx,%rsi
    872d:	48 89 c7             	mov    %rax,%rdi
    8730:	e8 70 c8 ff ff       	callq  4fa5 <do_check_top_chunk>
    8735:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    873a:	75 21                	jne    875d <sys_trim+0x21c>
    873c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8740:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8744:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8748:	48 8b 40 30          	mov    0x30(%rax),%rax
    874c:	48 39 c2             	cmp    %rax,%rdx
    874f:	76 0c                	jbe    875d <sys_trim+0x21c>
    8751:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8755:	48 c7 40 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rax)
    875c:	ff 
    875d:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    8762:	0f 95 c0             	setne  %al
    8765:	0f b6 c0             	movzbl %al,%eax
    8768:	c9                   	leaveq 
    8769:	c3                   	retq   

000000000000876a <dispose_chunk>:
    876a:	55                   	push   %rbp
    876b:	48 89 e5             	mov    %rsp,%rbp
    876e:	48 81 ec 60 01 00 00 	sub    $0x160,%rsp
    8775:	48 89 bd b8 fe ff ff 	mov    %rdi,-0x148(%rbp)
    877c:	48 89 b5 b0 fe ff ff 	mov    %rsi,-0x150(%rbp)
    8783:	48 89 95 a8 fe ff ff 	mov    %rdx,-0x158(%rbp)
    878a:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
    8791:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    8798:	48 01 d0             	add    %rdx,%rax
    879b:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    87a2:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    87a9:	48 8b 40 08          	mov    0x8(%rax),%rax
    87ad:	83 e0 01             	and    $0x1,%eax
    87b0:	48 85 c0             	test   %rax,%rax
    87b3:	0f 85 3f 07 00 00    	jne    8ef8 <dispose_chunk+0x78e>
    87b9:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    87c0:	48 8b 00             	mov    (%rax),%rax
    87c3:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    87ca:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    87d1:	48 8b 40 08          	mov    0x8(%rax),%rax
    87d5:	83 e0 03             	and    $0x3,%eax
    87d8:	48 85 c0             	test   %rax,%rax
    87db:	75 21                	jne    87fe <dispose_chunk+0x94>
    87dd:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
    87e4:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    87eb:	48 01 d0             	add    %rdx,%rax
    87ee:	48 83 c0 20          	add    $0x20,%rax
    87f2:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
    87f9:	e9 9a 12 00 00       	jmpq   9a98 <dispose_chunk+0x132e>
    87fe:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    8805:	48 f7 d8             	neg    %rax
    8808:	48 89 c2             	mov    %rax,%rdx
    880b:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    8812:	48 01 d0             	add    %rdx,%rax
    8815:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    881c:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    8823:	48 01 85 a8 fe ff ff 	add    %rax,-0x158(%rbp)
    882a:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    8831:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    8838:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    883f:	48 8b 40 18          	mov    0x18(%rax),%rax
    8843:	48 3b 85 38 ff ff ff 	cmp    -0xc8(%rbp),%rax
    884a:	0f 96 c0             	setbe  %al
    884d:	0f b6 c0             	movzbl %al,%eax
    8850:	48 85 c0             	test   %rax,%rax
    8853:	0f 84 9a 06 00 00    	je     8ef3 <dispose_chunk+0x789>
    8859:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8860:	48 8b 40 20          	mov    0x20(%rax),%rax
    8864:	48 3b 85 b0 fe ff ff 	cmp    -0x150(%rbp),%rax
    886b:	0f 84 06 06 00 00    	je     8e77 <dispose_chunk+0x70d>
    8871:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    8878:	48 c1 e8 03          	shr    $0x3,%rax
    887c:	48 83 f8 1f          	cmp    $0x1f,%rax
    8880:	0f 87 f9 01 00 00    	ja     8a7f <dispose_chunk+0x315>
    8886:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    888d:	48 8b 40 10          	mov    0x10(%rax),%rax
    8891:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    8898:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    889f:	48 8b 40 18          	mov    0x18(%rax),%rax
    88a3:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    88aa:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    88b1:	48 c1 e8 03          	shr    $0x3,%rax
    88b5:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
    88bb:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    88c2:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
    88c9:	75 05                	jne    88d0 <dispose_chunk+0x166>
    88cb:	e8 f9 5b 01 00       	callq  1e4c9 <abort>
    88d0:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    88d7:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
    88de:	75 05                	jne    88e5 <dispose_chunk+0x17b>
    88e0:	e8 e4 5b 01 00       	callq  1e4c9 <abort>
    88e5:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    88ec:	48 8b 40 08          	mov    0x8(%rax),%rax
    88f0:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    88f4:	48 89 c2             	mov    %rax,%rdx
    88f7:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
    88fd:	c1 e0 03             	shl    $0x3,%eax
    8900:	89 c0                	mov    %eax,%eax
    8902:	48 39 c2             	cmp    %rax,%rdx
    8905:	74 05                	je     890c <dispose_chunk+0x1a2>
    8907:	e8 bd 5b 01 00       	callq  1e4c9 <abort>
    890c:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
    8912:	01 c0                	add    %eax,%eax
    8914:	89 c0                	mov    %eax,%eax
    8916:	48 83 c0 08          	add    $0x8,%rax
    891a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8921:	00 
    8922:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8929:	48 01 d0             	add    %rdx,%rax
    892c:	48 83 c0 08          	add    $0x8,%rax
    8930:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
    8937:	0f 94 c0             	sete   %al
    893a:	0f b6 c0             	movzbl %al,%eax
    893d:	48 85 c0             	test   %rax,%rax
    8940:	75 4e                	jne    8990 <dispose_chunk+0x226>
    8942:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8949:	48 8b 40 18          	mov    0x18(%rax),%rax
    894d:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
    8954:	0f 96 c0             	setbe  %al
    8957:	0f b6 c0             	movzbl %al,%eax
    895a:	48 85 c0             	test   %rax,%rax
    895d:	74 24                	je     8983 <dispose_chunk+0x219>
    895f:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    8966:	48 8b 40 18          	mov    0x18(%rax),%rax
    896a:	48 3b 85 b0 fe ff ff 	cmp    -0x150(%rbp),%rax
    8971:	0f 94 c0             	sete   %al
    8974:	0f b6 c0             	movzbl %al,%eax
    8977:	48 85 c0             	test   %rax,%rax
    897a:	74 07                	je     8983 <dispose_chunk+0x219>
    897c:	b8 01 00 00 00       	mov    $0x1,%eax
    8981:	eb 05                	jmp    8988 <dispose_chunk+0x21e>
    8983:	b8 00 00 00 00       	mov    $0x0,%eax
    8988:	85 c0                	test   %eax,%eax
    898a:	0f 84 ea 00 00 00    	je     8a7a <dispose_chunk+0x310>
    8990:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    8997:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
    899e:	75 2c                	jne    89cc <dispose_chunk+0x262>
    89a0:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    89a7:	8b 10                	mov    (%rax),%edx
    89a9:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
    89af:	be 01 00 00 00       	mov    $0x1,%esi
    89b4:	89 c1                	mov    %eax,%ecx
    89b6:	d3 e6                	shl    %cl,%esi
    89b8:	89 f0                	mov    %esi,%eax
    89ba:	f7 d0                	not    %eax
    89bc:	21 c2                	and    %eax,%edx
    89be:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    89c5:	89 10                	mov    %edx,(%rax)
    89c7:	e9 2c 05 00 00       	jmpq   8ef8 <dispose_chunk+0x78e>
    89cc:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
    89d2:	01 c0                	add    %eax,%eax
    89d4:	89 c0                	mov    %eax,%eax
    89d6:	48 83 c0 08          	add    $0x8,%rax
    89da:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    89e1:	00 
    89e2:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    89e9:	48 01 d0             	add    %rdx,%rax
    89ec:	48 83 c0 08          	add    $0x8,%rax
    89f0:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
    89f7:	0f 94 c0             	sete   %al
    89fa:	0f b6 c0             	movzbl %al,%eax
    89fd:	48 85 c0             	test   %rax,%rax
    8a00:	75 4a                	jne    8a4c <dispose_chunk+0x2e2>
    8a02:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8a09:	48 8b 40 18          	mov    0x18(%rax),%rax
    8a0d:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
    8a14:	0f 96 c0             	setbe  %al
    8a17:	0f b6 c0             	movzbl %al,%eax
    8a1a:	48 85 c0             	test   %rax,%rax
    8a1d:	74 24                	je     8a43 <dispose_chunk+0x2d9>
    8a1f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    8a26:	48 8b 40 10          	mov    0x10(%rax),%rax
    8a2a:	48 3b 85 b0 fe ff ff 	cmp    -0x150(%rbp),%rax
    8a31:	0f 94 c0             	sete   %al
    8a34:	0f b6 c0             	movzbl %al,%eax
    8a37:	48 85 c0             	test   %rax,%rax
    8a3a:	74 07                	je     8a43 <dispose_chunk+0x2d9>
    8a3c:	b8 01 00 00 00       	mov    $0x1,%eax
    8a41:	eb 05                	jmp    8a48 <dispose_chunk+0x2de>
    8a43:	b8 00 00 00 00       	mov    $0x0,%eax
    8a48:	85 c0                	test   %eax,%eax
    8a4a:	74 29                	je     8a75 <dispose_chunk+0x30b>
    8a4c:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    8a53:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    8a5a:	48 89 50 18          	mov    %rdx,0x18(%rax)
    8a5e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    8a65:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    8a6c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8a70:	e9 83 04 00 00       	jmpq   8ef8 <dispose_chunk+0x78e>
    8a75:	e8 4f 5a 01 00       	callq  1e4c9 <abort>
    8a7a:	e8 4a 5a 01 00       	callq  1e4c9 <abort>
    8a7f:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    8a86:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    8a8d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8a94:	48 8b 40 30          	mov    0x30(%rax),%rax
    8a98:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    8a9f:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8aa6:	48 8b 40 18          	mov    0x18(%rax),%rax
    8aaa:	48 3b 85 50 ff ff ff 	cmp    -0xb0(%rbp),%rax
    8ab1:	0f 84 b9 00 00 00    	je     8b70 <dispose_chunk+0x406>
    8ab7:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8abe:	48 8b 40 10          	mov    0x10(%rax),%rax
    8ac2:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    8ac9:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8ad0:	48 8b 40 18          	mov    0x18(%rax),%rax
    8ad4:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    8adb:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8ae2:	48 8b 40 18          	mov    0x18(%rax),%rax
    8ae6:	48 3b 85 60 ff ff ff 	cmp    -0xa0(%rbp),%rax
    8aed:	0f 96 c0             	setbe  %al
    8af0:	0f b6 c0             	movzbl %al,%eax
    8af3:	48 85 c0             	test   %rax,%rax
    8af6:	74 24                	je     8b1c <dispose_chunk+0x3b2>
    8af8:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    8aff:	48 8b 40 18          	mov    0x18(%rax),%rax
    8b03:	48 3b 85 50 ff ff ff 	cmp    -0xb0(%rbp),%rax
    8b0a:	0f 94 c0             	sete   %al
    8b0d:	0f b6 c0             	movzbl %al,%eax
    8b10:	48 85 c0             	test   %rax,%rax
    8b13:	74 07                	je     8b1c <dispose_chunk+0x3b2>
    8b15:	b8 01 00 00 00       	mov    $0x1,%eax
    8b1a:	eb 05                	jmp    8b21 <dispose_chunk+0x3b7>
    8b1c:	b8 00 00 00 00       	mov    $0x0,%eax
    8b21:	85 c0                	test   %eax,%eax
    8b23:	74 46                	je     8b6b <dispose_chunk+0x401>
    8b25:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    8b2c:	48 8b 40 10          	mov    0x10(%rax),%rax
    8b30:	48 3b 85 50 ff ff ff 	cmp    -0xb0(%rbp),%rax
    8b37:	0f 94 c0             	sete   %al
    8b3a:	0f b6 c0             	movzbl %al,%eax
    8b3d:	48 85 c0             	test   %rax,%rax
    8b40:	74 29                	je     8b6b <dispose_chunk+0x401>
    8b42:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    8b49:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
    8b50:	48 89 50 18          	mov    %rdx,0x18(%rax)
    8b54:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    8b5b:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    8b62:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8b66:	e9 f8 00 00 00       	jmpq   8c63 <dispose_chunk+0x4f9>
    8b6b:	e8 59 59 01 00       	callq  1e4c9 <abort>
    8b70:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8b77:	48 83 c0 28          	add    $0x28,%rax
    8b7b:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    8b82:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    8b89:	48 8b 00             	mov    (%rax),%rax
    8b8c:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    8b93:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
    8b9a:	00 
    8b9b:	75 52                	jne    8bef <dispose_chunk+0x485>
    8b9d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8ba4:	48 83 c0 20          	add    $0x20,%rax
    8ba8:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    8baf:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    8bb6:	48 8b 00             	mov    (%rax),%rax
    8bb9:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    8bc0:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
    8bc7:	00 
    8bc8:	0f 84 95 00 00 00    	je     8c63 <dispose_chunk+0x4f9>
    8bce:	eb 1f                	jmp    8bef <dispose_chunk+0x485>
    8bd0:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    8bd7:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    8bde:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    8be5:	48 8b 00             	mov    (%rax),%rax
    8be8:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    8bef:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    8bf6:	48 83 c0 28          	add    $0x28,%rax
    8bfa:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    8c01:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    8c08:	48 8b 00             	mov    (%rax),%rax
    8c0b:	48 85 c0             	test   %rax,%rax
    8c0e:	75 c0                	jne    8bd0 <dispose_chunk+0x466>
    8c10:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    8c17:	48 83 c0 20          	add    $0x20,%rax
    8c1b:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    8c22:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    8c29:	48 8b 00             	mov    (%rax),%rax
    8c2c:	48 85 c0             	test   %rax,%rax
    8c2f:	75 9f                	jne    8bd0 <dispose_chunk+0x466>
    8c31:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8c38:	48 8b 40 18          	mov    0x18(%rax),%rax
    8c3c:	48 3b 85 e8 fe ff ff 	cmp    -0x118(%rbp),%rax
    8c43:	0f 96 c0             	setbe  %al
    8c46:	0f b6 c0             	movzbl %al,%eax
    8c49:	48 85 c0             	test   %rax,%rax
    8c4c:	74 10                	je     8c5e <dispose_chunk+0x4f4>
    8c4e:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    8c55:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    8c5c:	eb 05                	jmp    8c63 <dispose_chunk+0x4f9>
    8c5e:	e8 66 58 01 00       	callq  1e4c9 <abort>
    8c63:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
    8c6a:	00 
    8c6b:	0f 84 87 02 00 00    	je     8ef8 <dispose_chunk+0x78e>
    8c71:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8c78:	8b 40 38             	mov    0x38(%rax),%eax
    8c7b:	89 c0                	mov    %eax,%eax
    8c7d:	48 83 c0 4a          	add    $0x4a,%rax
    8c81:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8c88:	00 
    8c89:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8c90:	48 01 d0             	add    %rdx,%rax
    8c93:	48 83 c0 08          	add    $0x8,%rax
    8c97:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    8c9e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    8ca5:	48 8b 00             	mov    (%rax),%rax
    8ca8:	48 3b 85 50 ff ff ff 	cmp    -0xb0(%rbp),%rax
    8caf:	75 53                	jne    8d04 <dispose_chunk+0x59a>
    8cb1:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    8cb8:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
    8cbf:	48 89 10             	mov    %rdx,(%rax)
    8cc2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    8cc9:	48 8b 00             	mov    (%rax),%rax
    8ccc:	48 85 c0             	test   %rax,%rax
    8ccf:	0f 85 8d 00 00 00    	jne    8d62 <dispose_chunk+0x5f8>
    8cd5:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8cdc:	8b 50 04             	mov    0x4(%rax),%edx
    8cdf:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8ce6:	8b 40 38             	mov    0x38(%rax),%eax
    8ce9:	be 01 00 00 00       	mov    $0x1,%esi
    8cee:	89 c1                	mov    %eax,%ecx
    8cf0:	d3 e6                	shl    %cl,%esi
    8cf2:	89 f0                	mov    %esi,%eax
    8cf4:	f7 d0                	not    %eax
    8cf6:	21 c2                	and    %eax,%edx
    8cf8:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8cff:	89 50 04             	mov    %edx,0x4(%rax)
    8d02:	eb 5e                	jmp    8d62 <dispose_chunk+0x5f8>
    8d04:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8d0b:	48 8b 40 18          	mov    0x18(%rax),%rax
    8d0f:	48 3b 85 58 ff ff ff 	cmp    -0xa8(%rbp),%rax
    8d16:	0f 96 c0             	setbe  %al
    8d19:	0f b6 c0             	movzbl %al,%eax
    8d1c:	48 85 c0             	test   %rax,%rax
    8d1f:	74 3c                	je     8d5d <dispose_chunk+0x5f3>
    8d21:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    8d28:	48 8b 40 20          	mov    0x20(%rax),%rax
    8d2c:	48 3b 85 50 ff ff ff 	cmp    -0xb0(%rbp),%rax
    8d33:	75 14                	jne    8d49 <dispose_chunk+0x5df>
    8d35:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    8d3c:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
    8d43:	48 89 50 20          	mov    %rdx,0x20(%rax)
    8d47:	eb 19                	jmp    8d62 <dispose_chunk+0x5f8>
    8d49:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    8d50:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
    8d57:	48 89 50 28          	mov    %rdx,0x28(%rax)
    8d5b:	eb 05                	jmp    8d62 <dispose_chunk+0x5f8>
    8d5d:	e8 67 57 01 00       	callq  1e4c9 <abort>
    8d62:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
    8d69:	00 
    8d6a:	0f 84 88 01 00 00    	je     8ef8 <dispose_chunk+0x78e>
    8d70:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8d77:	48 8b 40 18          	mov    0x18(%rax),%rax
    8d7b:	48 3b 85 e0 fe ff ff 	cmp    -0x120(%rbp),%rax
    8d82:	0f 96 c0             	setbe  %al
    8d85:	0f b6 c0             	movzbl %al,%eax
    8d88:	48 85 c0             	test   %rax,%rax
    8d8b:	0f 84 e1 00 00 00    	je     8e72 <dispose_chunk+0x708>
    8d91:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    8d98:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    8d9f:	48 89 50 30          	mov    %rdx,0x30(%rax)
    8da3:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8daa:	48 8b 40 20          	mov    0x20(%rax),%rax
    8dae:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    8db5:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
    8dbc:	00 
    8dbd:	74 48                	je     8e07 <dispose_chunk+0x69d>
    8dbf:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8dc6:	48 8b 40 18          	mov    0x18(%rax),%rax
    8dca:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
    8dd1:	0f 96 c0             	setbe  %al
    8dd4:	0f b6 c0             	movzbl %al,%eax
    8dd7:	48 85 c0             	test   %rax,%rax
    8dda:	74 26                	je     8e02 <dispose_chunk+0x698>
    8ddc:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    8de3:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
    8dea:	48 89 50 20          	mov    %rdx,0x20(%rax)
    8dee:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    8df5:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
    8dfc:	48 89 50 30          	mov    %rdx,0x30(%rax)
    8e00:	eb 05                	jmp    8e07 <dispose_chunk+0x69d>
    8e02:	e8 c2 56 01 00       	callq  1e4c9 <abort>
    8e07:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8e0e:	48 8b 40 28          	mov    0x28(%rax),%rax
    8e12:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    8e19:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
    8e20:	00 
    8e21:	0f 84 d1 00 00 00    	je     8ef8 <dispose_chunk+0x78e>
    8e27:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8e2e:	48 8b 40 18          	mov    0x18(%rax),%rax
    8e32:	48 3b 85 78 ff ff ff 	cmp    -0x88(%rbp),%rax
    8e39:	0f 96 c0             	setbe  %al
    8e3c:	0f b6 c0             	movzbl %al,%eax
    8e3f:	48 85 c0             	test   %rax,%rax
    8e42:	74 29                	je     8e6d <dispose_chunk+0x703>
    8e44:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    8e4b:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    8e52:	48 89 50 28          	mov    %rdx,0x28(%rax)
    8e56:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    8e5d:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
    8e64:	48 89 50 30          	mov    %rdx,0x30(%rax)
    8e68:	e9 8b 00 00 00       	jmpq   8ef8 <dispose_chunk+0x78e>
    8e6d:	e8 57 56 01 00       	callq  1e4c9 <abort>
    8e72:	e8 52 56 01 00       	callq  1e4c9 <abort>
    8e77:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    8e7e:	48 8b 40 08          	mov    0x8(%rax),%rax
    8e82:	83 e0 03             	and    $0x3,%eax
    8e85:	48 83 f8 03          	cmp    $0x3,%rax
    8e89:	75 6d                	jne    8ef8 <dispose_chunk+0x78e>
    8e8b:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8e92:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    8e99:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8e9d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    8ea4:	48 8b 40 08          	mov    0x8(%rax),%rax
    8ea8:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    8eac:	48 89 c2             	mov    %rax,%rdx
    8eaf:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    8eb6:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8eba:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    8ec1:	48 83 c8 01          	or     $0x1,%rax
    8ec5:	48 89 c2             	mov    %rax,%rdx
    8ec8:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    8ecf:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8ed3:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
    8eda:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    8ee1:	48 01 c2             	add    %rax,%rdx
    8ee4:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    8eeb:	48 89 02             	mov    %rax,(%rdx)
    8eee:	e9 a5 0b 00 00       	jmpq   9a98 <dispose_chunk+0x132e>
    8ef3:	e8 d1 55 01 00       	callq  1e4c9 <abort>
    8ef8:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8eff:	48 8b 40 18          	mov    0x18(%rax),%rax
    8f03:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
    8f0a:	0f 96 c0             	setbe  %al
    8f0d:	0f b6 c0             	movzbl %al,%eax
    8f10:	48 85 c0             	test   %rax,%rax
    8f13:	0f 84 79 0b 00 00    	je     9a92 <dispose_chunk+0x1328>
    8f19:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    8f20:	48 8b 40 08          	mov    0x8(%rax),%rax
    8f24:	83 e0 02             	and    $0x2,%eax
    8f27:	48 85 c0             	test   %rax,%rax
    8f2a:	0f 85 f3 06 00 00    	jne    9623 <dispose_chunk+0xeb9>
    8f30:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8f37:	48 8b 40 28          	mov    0x28(%rax),%rax
    8f3b:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
    8f42:	0f 85 92 00 00 00    	jne    8fda <dispose_chunk+0x870>
    8f48:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8f4f:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8f53:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    8f5a:	48 01 c2             	add    %rax,%rdx
    8f5d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8f64:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8f68:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8f6f:	48 8b 40 10          	mov    0x10(%rax),%rax
    8f73:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    8f77:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8f7e:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
    8f85:	48 89 50 28          	mov    %rdx,0x28(%rax)
    8f89:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    8f8d:	48 83 c8 01          	or     $0x1,%rax
    8f91:	48 89 c2             	mov    %rax,%rdx
    8f94:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    8f9b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8f9f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8fa6:	48 8b 40 20          	mov    0x20(%rax),%rax
    8faa:	48 3b 85 b0 fe ff ff 	cmp    -0x150(%rbp),%rax
    8fb1:	0f 85 e0 0a 00 00    	jne    9a97 <dispose_chunk+0x132d>
    8fb7:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8fbe:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    8fc5:	00 
    8fc6:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8fcd:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    8fd4:	00 
    8fd5:	e9 bd 0a 00 00       	jmpq   9a97 <dispose_chunk+0x132d>
    8fda:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8fe1:	48 8b 40 20          	mov    0x20(%rax),%rax
    8fe5:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
    8fec:	75 71                	jne    905f <dispose_chunk+0x8f5>
    8fee:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    8ff5:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8ff9:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    9000:	48 01 c2             	add    %rax,%rdx
    9003:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    900a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    900e:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    9015:	48 8b 40 08          	mov    0x8(%rax),%rax
    9019:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    901d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    9024:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
    902b:	48 89 50 20          	mov    %rdx,0x20(%rax)
    902f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    9033:	48 83 c8 01          	or     $0x1,%rax
    9037:	48 89 c2             	mov    %rax,%rdx
    903a:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    9041:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9045:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
    904c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    9050:	48 01 c2             	add    %rax,%rdx
    9053:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    9057:	48 89 02             	mov    %rax,(%rdx)
    905a:	e9 39 0a 00 00       	jmpq   9a98 <dispose_chunk+0x132e>
    905f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    9066:	48 8b 40 08          	mov    0x8(%rax),%rax
    906a:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    906e:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    9072:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    9076:	48 01 85 a8 fe ff ff 	add    %rax,-0x158(%rbp)
    907d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    9081:	48 c1 e8 03          	shr    $0x3,%rax
    9085:	48 83 f8 1f          	cmp    $0x1f,%rax
    9089:	0f 87 c6 01 00 00    	ja     9255 <dispose_chunk+0xaeb>
    908f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    9096:	48 8b 40 10          	mov    0x10(%rax),%rax
    909a:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    909e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    90a5:	48 8b 40 18          	mov    0x18(%rax),%rax
    90a9:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    90ad:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    90b1:	48 c1 e8 03          	shr    $0x3,%rax
    90b5:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
    90bb:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    90c2:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
    90c6:	75 05                	jne    90cd <dispose_chunk+0x963>
    90c8:	e8 fc 53 01 00       	callq  1e4c9 <abort>
    90cd:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    90d4:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
    90d8:	75 05                	jne    90df <dispose_chunk+0x975>
    90da:	e8 ea 53 01 00       	callq  1e4c9 <abort>
    90df:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    90e6:	48 8b 40 08          	mov    0x8(%rax),%rax
    90ea:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    90ee:	48 89 c2             	mov    %rax,%rdx
    90f1:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
    90f7:	c1 e0 03             	shl    $0x3,%eax
    90fa:	89 c0                	mov    %eax,%eax
    90fc:	48 39 c2             	cmp    %rax,%rdx
    90ff:	74 05                	je     9106 <dispose_chunk+0x99c>
    9101:	e8 c3 53 01 00       	callq  1e4c9 <abort>
    9106:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
    910c:	01 c0                	add    %eax,%eax
    910e:	89 c0                	mov    %eax,%eax
    9110:	48 83 c0 08          	add    $0x8,%rax
    9114:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    911b:	00 
    911c:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    9123:	48 01 d0             	add    %rdx,%rax
    9126:	48 83 c0 08          	add    $0x8,%rax
    912a:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
    912e:	0f 94 c0             	sete   %al
    9131:	0f b6 c0             	movzbl %al,%eax
    9134:	48 85 c0             	test   %rax,%rax
    9137:	75 48                	jne    9181 <dispose_chunk+0xa17>
    9139:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    9140:	48 8b 40 18          	mov    0x18(%rax),%rax
    9144:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
    9148:	0f 96 c0             	setbe  %al
    914b:	0f b6 c0             	movzbl %al,%eax
    914e:	48 85 c0             	test   %rax,%rax
    9151:	74 21                	je     9174 <dispose_chunk+0xa0a>
    9153:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    9157:	48 8b 40 18          	mov    0x18(%rax),%rax
    915b:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
    9162:	0f 94 c0             	sete   %al
    9165:	0f b6 c0             	movzbl %al,%eax
    9168:	48 85 c0             	test   %rax,%rax
    916b:	74 07                	je     9174 <dispose_chunk+0xa0a>
    916d:	b8 01 00 00 00       	mov    $0x1,%eax
    9172:	eb 05                	jmp    9179 <dispose_chunk+0xa0f>
    9174:	b8 00 00 00 00       	mov    $0x0,%eax
    9179:	85 c0                	test   %eax,%eax
    917b:	0f 84 cf 00 00 00    	je     9250 <dispose_chunk+0xae6>
    9181:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    9185:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
    9189:	75 2c                	jne    91b7 <dispose_chunk+0xa4d>
    918b:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    9192:	8b 10                	mov    (%rax),%edx
    9194:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
    919a:	be 01 00 00 00       	mov    $0x1,%esi
    919f:	89 c1                	mov    %eax,%ecx
    91a1:	d3 e6                	shl    %cl,%esi
    91a3:	89 f0                	mov    %esi,%eax
    91a5:	f7 d0                	not    %eax
    91a7:	21 c2                	and    %eax,%edx
    91a9:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    91b0:	89 10                	mov    %edx,(%rax)
    91b2:	e9 0d 04 00 00       	jmpq   95c4 <dispose_chunk+0xe5a>
    91b7:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
    91bd:	01 c0                	add    %eax,%eax
    91bf:	89 c0                	mov    %eax,%eax
    91c1:	48 83 c0 08          	add    $0x8,%rax
    91c5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    91cc:	00 
    91cd:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    91d4:	48 01 d0             	add    %rdx,%rax
    91d7:	48 83 c0 08          	add    $0x8,%rax
    91db:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
    91df:	0f 94 c0             	sete   %al
    91e2:	0f b6 c0             	movzbl %al,%eax
    91e5:	48 85 c0             	test   %rax,%rax
    91e8:	75 44                	jne    922e <dispose_chunk+0xac4>
    91ea:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    91f1:	48 8b 40 18          	mov    0x18(%rax),%rax
    91f5:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
    91f9:	0f 96 c0             	setbe  %al
    91fc:	0f b6 c0             	movzbl %al,%eax
    91ff:	48 85 c0             	test   %rax,%rax
    9202:	74 21                	je     9225 <dispose_chunk+0xabb>
    9204:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    9208:	48 8b 40 10          	mov    0x10(%rax),%rax
    920c:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
    9213:	0f 94 c0             	sete   %al
    9216:	0f b6 c0             	movzbl %al,%eax
    9219:	48 85 c0             	test   %rax,%rax
    921c:	74 07                	je     9225 <dispose_chunk+0xabb>
    921e:	b8 01 00 00 00       	mov    $0x1,%eax
    9223:	eb 05                	jmp    922a <dispose_chunk+0xac0>
    9225:	b8 00 00 00 00       	mov    $0x0,%eax
    922a:	85 c0                	test   %eax,%eax
    922c:	74 1d                	je     924b <dispose_chunk+0xae1>
    922e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    9232:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    9236:	48 89 50 18          	mov    %rdx,0x18(%rax)
    923a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    923e:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    9242:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9246:	e9 79 03 00 00       	jmpq   95c4 <dispose_chunk+0xe5a>
    924b:	e8 79 52 01 00       	callq  1e4c9 <abort>
    9250:	e8 74 52 01 00       	callq  1e4c9 <abort>
    9255:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    925c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    9260:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9264:	48 8b 40 30          	mov    0x30(%rax),%rax
    9268:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    926c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9270:	48 8b 40 18          	mov    0x18(%rax),%rax
    9274:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
    9278:	0f 84 9e 00 00 00    	je     931c <dispose_chunk+0xbb2>
    927e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9282:	48 8b 40 10          	mov    0x10(%rax),%rax
    9286:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    928a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    928e:	48 8b 40 18          	mov    0x18(%rax),%rax
    9292:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    9299:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    92a0:	48 8b 40 18          	mov    0x18(%rax),%rax
    92a4:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
    92a8:	0f 96 c0             	setbe  %al
    92ab:	0f b6 c0             	movzbl %al,%eax
    92ae:	48 85 c0             	test   %rax,%rax
    92b1:	74 1e                	je     92d1 <dispose_chunk+0xb67>
    92b3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    92b7:	48 8b 40 18          	mov    0x18(%rax),%rax
    92bb:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
    92bf:	0f 94 c0             	sete   %al
    92c2:	0f b6 c0             	movzbl %al,%eax
    92c5:	48 85 c0             	test   %rax,%rax
    92c8:	74 07                	je     92d1 <dispose_chunk+0xb67>
    92ca:	b8 01 00 00 00       	mov    $0x1,%eax
    92cf:	eb 05                	jmp    92d6 <dispose_chunk+0xb6c>
    92d1:	b8 00 00 00 00       	mov    $0x0,%eax
    92d6:	85 c0                	test   %eax,%eax
    92d8:	74 3d                	je     9317 <dispose_chunk+0xbad>
    92da:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    92e1:	48 8b 40 10          	mov    0x10(%rax),%rax
    92e5:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
    92e9:	0f 94 c0             	sete   %al
    92ec:	0f b6 c0             	movzbl %al,%eax
    92ef:	48 85 c0             	test   %rax,%rax
    92f2:	74 23                	je     9317 <dispose_chunk+0xbad>
    92f4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    92f8:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    92ff:	48 89 50 18          	mov    %rdx,0x18(%rax)
    9303:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    930a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    930e:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9312:	e9 f2 00 00 00       	jmpq   9409 <dispose_chunk+0xc9f>
    9317:	e8 ad 51 01 00       	callq  1e4c9 <abort>
    931c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9320:	48 83 c0 28          	add    $0x28,%rax
    9324:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    932b:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    9332:	48 8b 00             	mov    (%rax),%rax
    9335:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    933c:	48 83 bd f8 fe ff ff 	cmpq   $0x0,-0x108(%rbp)
    9343:	00 
    9344:	75 4f                	jne    9395 <dispose_chunk+0xc2b>
    9346:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    934a:	48 83 c0 20          	add    $0x20,%rax
    934e:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    9355:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    935c:	48 8b 00             	mov    (%rax),%rax
    935f:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    9366:	48 83 bd f8 fe ff ff 	cmpq   $0x0,-0x108(%rbp)
    936d:	00 
    936e:	0f 84 95 00 00 00    	je     9409 <dispose_chunk+0xc9f>
    9374:	eb 1f                	jmp    9395 <dispose_chunk+0xc2b>
    9376:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    937d:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    9384:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    938b:	48 8b 00             	mov    (%rax),%rax
    938e:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    9395:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    939c:	48 83 c0 28          	add    $0x28,%rax
    93a0:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    93a7:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    93ae:	48 8b 00             	mov    (%rax),%rax
    93b1:	48 85 c0             	test   %rax,%rax
    93b4:	75 c0                	jne    9376 <dispose_chunk+0xc0c>
    93b6:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    93bd:	48 83 c0 20          	add    $0x20,%rax
    93c1:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    93c8:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    93cf:	48 8b 00             	mov    (%rax),%rax
    93d2:	48 85 c0             	test   %rax,%rax
    93d5:	75 9f                	jne    9376 <dispose_chunk+0xc0c>
    93d7:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    93de:	48 8b 40 18          	mov    0x18(%rax),%rax
    93e2:	48 3b 85 00 ff ff ff 	cmp    -0x100(%rbp),%rax
    93e9:	0f 96 c0             	setbe  %al
    93ec:	0f b6 c0             	movzbl %al,%eax
    93ef:	48 85 c0             	test   %rax,%rax
    93f2:	74 10                	je     9404 <dispose_chunk+0xc9a>
    93f4:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    93fb:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    9402:	eb 05                	jmp    9409 <dispose_chunk+0xc9f>
    9404:	e8 c0 50 01 00       	callq  1e4c9 <abort>
    9409:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    940e:	0f 84 b0 01 00 00    	je     95c4 <dispose_chunk+0xe5a>
    9414:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9418:	8b 40 38             	mov    0x38(%rax),%eax
    941b:	89 c0                	mov    %eax,%eax
    941d:	48 83 c0 4a          	add    $0x4a,%rax
    9421:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9428:	00 
    9429:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    9430:	48 01 d0             	add    %rdx,%rax
    9433:	48 83 c0 08          	add    $0x8,%rax
    9437:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    943b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    943f:	48 8b 00             	mov    (%rax),%rax
    9442:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
    9446:	75 46                	jne    948e <dispose_chunk+0xd24>
    9448:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    944c:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    9453:	48 89 10             	mov    %rdx,(%rax)
    9456:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    945a:	48 8b 00             	mov    (%rax),%rax
    945d:	48 85 c0             	test   %rax,%rax
    9460:	75 7b                	jne    94dd <dispose_chunk+0xd73>
    9462:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    9469:	8b 50 04             	mov    0x4(%rax),%edx
    946c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9470:	8b 40 38             	mov    0x38(%rax),%eax
    9473:	be 01 00 00 00       	mov    $0x1,%esi
    9478:	89 c1                	mov    %eax,%ecx
    947a:	d3 e6                	shl    %cl,%esi
    947c:	89 f0                	mov    %esi,%eax
    947e:	f7 d0                	not    %eax
    9480:	21 c2                	and    %eax,%edx
    9482:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    9489:	89 50 04             	mov    %edx,0x4(%rax)
    948c:	eb 4f                	jmp    94dd <dispose_chunk+0xd73>
    948e:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    9495:	48 8b 40 18          	mov    0x18(%rax),%rax
    9499:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    949d:	0f 96 c0             	setbe  %al
    94a0:	0f b6 c0             	movzbl %al,%eax
    94a3:	48 85 c0             	test   %rax,%rax
    94a6:	74 30                	je     94d8 <dispose_chunk+0xd6e>
    94a8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    94ac:	48 8b 40 20          	mov    0x20(%rax),%rax
    94b0:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
    94b4:	75 11                	jne    94c7 <dispose_chunk+0xd5d>
    94b6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    94ba:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    94c1:	48 89 50 20          	mov    %rdx,0x20(%rax)
    94c5:	eb 16                	jmp    94dd <dispose_chunk+0xd73>
    94c7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    94cb:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    94d2:	48 89 50 28          	mov    %rdx,0x28(%rax)
    94d6:	eb 05                	jmp    94dd <dispose_chunk+0xd73>
    94d8:	e8 ec 4f 01 00       	callq  1e4c9 <abort>
    94dd:	48 83 bd f8 fe ff ff 	cmpq   $0x0,-0x108(%rbp)
    94e4:	00 
    94e5:	0f 84 d9 00 00 00    	je     95c4 <dispose_chunk+0xe5a>
    94eb:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    94f2:	48 8b 40 18          	mov    0x18(%rax),%rax
    94f6:	48 3b 85 f8 fe ff ff 	cmp    -0x108(%rbp),%rax
    94fd:	0f 96 c0             	setbe  %al
    9500:	0f b6 c0             	movzbl %al,%eax
    9503:	48 85 c0             	test   %rax,%rax
    9506:	0f 84 b3 00 00 00    	je     95bf <dispose_chunk+0xe55>
    950c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    9513:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    9517:	48 89 50 30          	mov    %rdx,0x30(%rax)
    951b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    951f:	48 8b 40 20          	mov    0x20(%rax),%rax
    9523:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    9527:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    952c:	74 3f                	je     956d <dispose_chunk+0xe03>
    952e:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    9535:	48 8b 40 18          	mov    0x18(%rax),%rax
    9539:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    953d:	0f 96 c0             	setbe  %al
    9540:	0f b6 c0             	movzbl %al,%eax
    9543:	48 85 c0             	test   %rax,%rax
    9546:	74 20                	je     9568 <dispose_chunk+0xdfe>
    9548:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    954f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9553:	48 89 50 20          	mov    %rdx,0x20(%rax)
    9557:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    955b:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    9562:	48 89 50 30          	mov    %rdx,0x30(%rax)
    9566:	eb 05                	jmp    956d <dispose_chunk+0xe03>
    9568:	e8 5c 4f 01 00       	callq  1e4c9 <abort>
    956d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9571:	48 8b 40 28          	mov    0x28(%rax),%rax
    9575:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    9579:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    957e:	74 44                	je     95c4 <dispose_chunk+0xe5a>
    9580:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    9587:	48 8b 40 18          	mov    0x18(%rax),%rax
    958b:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
    958f:	0f 96 c0             	setbe  %al
    9592:	0f b6 c0             	movzbl %al,%eax
    9595:	48 85 c0             	test   %rax,%rax
    9598:	74 20                	je     95ba <dispose_chunk+0xe50>
    959a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    95a1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    95a5:	48 89 50 28          	mov    %rdx,0x28(%rax)
    95a9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    95ad:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    95b4:	48 89 50 30          	mov    %rdx,0x30(%rax)
    95b8:	eb 0a                	jmp    95c4 <dispose_chunk+0xe5a>
    95ba:	e8 0a 4f 01 00       	callq  1e4c9 <abort>
    95bf:	e8 05 4f 01 00       	callq  1e4c9 <abort>
    95c4:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    95cb:	48 83 c8 01          	or     $0x1,%rax
    95cf:	48 89 c2             	mov    %rax,%rdx
    95d2:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    95d9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    95dd:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
    95e4:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    95eb:	48 01 c2             	add    %rax,%rdx
    95ee:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    95f5:	48 89 02             	mov    %rax,(%rdx)
    95f8:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    95ff:	48 8b 40 20          	mov    0x20(%rax),%rax
    9603:	48 3b 85 b0 fe ff ff 	cmp    -0x150(%rbp),%rax
    960a:	75 68                	jne    9674 <dispose_chunk+0xf0a>
    960c:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    9613:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    961a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    961e:	e9 75 04 00 00       	jmpq   9a98 <dispose_chunk+0x132e>
    9623:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    962a:	48 8b 40 08          	mov    0x8(%rax),%rax
    962e:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    9632:	48 89 c2             	mov    %rax,%rdx
    9635:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    963c:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9640:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    9647:	48 83 c8 01          	or     $0x1,%rax
    964b:	48 89 c2             	mov    %rax,%rdx
    964e:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    9655:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9659:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
    9660:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    9667:	48 01 c2             	add    %rax,%rdx
    966a:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    9671:	48 89 02             	mov    %rax,(%rdx)
    9674:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    967b:	48 c1 e8 03          	shr    $0x3,%rax
    967f:	48 83 f8 1f          	cmp    $0x1f,%rax
    9683:	0f 87 18 01 00 00    	ja     97a1 <dispose_chunk+0x1037>
    9689:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    9690:	48 c1 e8 03          	shr    $0x3,%rax
    9694:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%rbp)
    969a:	8b 85 d4 fe ff ff    	mov    -0x12c(%rbp),%eax
    96a0:	01 c0                	add    %eax,%eax
    96a2:	89 c0                	mov    %eax,%eax
    96a4:	48 83 c0 08          	add    $0x8,%rax
    96a8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    96af:	00 
    96b0:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    96b7:	48 01 d0             	add    %rdx,%rax
    96ba:	48 83 c0 08          	add    $0x8,%rax
    96be:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    96c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    96c6:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    96cd:	48 83 bd a8 fe ff ff 	cmpq   $0x1f,-0x158(%rbp)
    96d4:	1f 
    96d5:	77 05                	ja     96dc <dispose_chunk+0xf72>
    96d7:	e8 ed 4d 01 00       	callq  1e4c9 <abort>
    96dc:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    96e3:	8b 10                	mov    (%rax),%edx
    96e5:	8b 85 d4 fe ff ff    	mov    -0x12c(%rbp),%eax
    96eb:	be 01 00 00 00       	mov    $0x1,%esi
    96f0:	89 c1                	mov    %eax,%ecx
    96f2:	d3 e6                	shl    %cl,%esi
    96f4:	89 f0                	mov    %esi,%eax
    96f6:	21 d0                	and    %edx,%eax
    96f8:	85 c0                	test   %eax,%eax
    96fa:	75 27                	jne    9723 <dispose_chunk+0xfb9>
    96fc:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    9703:	8b 10                	mov    (%rax),%edx
    9705:	8b 85 d4 fe ff ff    	mov    -0x12c(%rbp),%eax
    970b:	be 01 00 00 00       	mov    $0x1,%esi
    9710:	89 c1                	mov    %eax,%ecx
    9712:	d3 e6                	shl    %cl,%esi
    9714:	89 f0                	mov    %esi,%eax
    9716:	09 c2                	or     %eax,%edx
    9718:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    971f:	89 10                	mov    %edx,(%rax)
    9721:	eb 37                	jmp    975a <dispose_chunk+0xff0>
    9723:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9727:	48 8b 50 10          	mov    0x10(%rax),%rdx
    972b:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    9732:	48 8b 40 18          	mov    0x18(%rax),%rax
    9736:	48 39 c2             	cmp    %rax,%rdx
    9739:	0f 93 c0             	setae  %al
    973c:	0f b6 c0             	movzbl %al,%eax
    973f:	48 85 c0             	test   %rax,%rax
    9742:	74 11                	je     9755 <dispose_chunk+0xfeb>
    9744:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9748:	48 8b 40 10          	mov    0x10(%rax),%rax
    974c:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    9753:	eb 05                	jmp    975a <dispose_chunk+0xff0>
    9755:	e8 6f 4d 01 00       	callq  1e4c9 <abort>
    975a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    975e:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
    9765:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9769:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    9770:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
    9777:	48 89 50 18          	mov    %rdx,0x18(%rax)
    977b:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    9782:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
    9789:	48 89 50 10          	mov    %rdx,0x10(%rax)
    978d:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    9794:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9798:	48 89 50 18          	mov    %rdx,0x18(%rax)
    979c:	e9 f7 02 00 00       	jmpq   9a98 <dispose_chunk+0x132e>
    97a1:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    97a8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    97ac:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    97b3:	48 c1 e8 08          	shr    $0x8,%rax
    97b7:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%rbp)
    97bd:	83 bd d8 fe ff ff 00 	cmpl   $0x0,-0x128(%rbp)
    97c4:	75 0c                	jne    97d2 <dispose_chunk+0x1068>
    97c6:	c7 85 c8 fe ff ff 00 	movl   $0x0,-0x138(%rbp)
    97cd:	00 00 00 
    97d0:	eb 5d                	jmp    982f <dispose_chunk+0x10c5>
    97d2:	81 bd d8 fe ff ff ff 	cmpl   $0xffff,-0x128(%rbp)
    97d9:	ff 00 00 
    97dc:	76 0c                	jbe    97ea <dispose_chunk+0x1080>
    97de:	c7 85 c8 fe ff ff 1f 	movl   $0x1f,-0x138(%rbp)
    97e5:	00 00 00 
    97e8:	eb 45                	jmp    982f <dispose_chunk+0x10c5>
    97ea:	0f bd 85 d8 fe ff ff 	bsr    -0x128(%rbp),%eax
    97f1:	83 f0 1f             	xor    $0x1f,%eax
    97f4:	ba 1f 00 00 00       	mov    $0x1f,%edx
    97f9:	29 c2                	sub    %eax,%edx
    97fb:	89 d0                	mov    %edx,%eax
    97fd:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)
    9803:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
    9809:	8d 34 00             	lea    (%rax,%rax,1),%esi
    980c:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
    9812:	83 c0 07             	add    $0x7,%eax
    9815:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    981c:	89 c1                	mov    %eax,%ecx
    981e:	48 d3 ea             	shr    %cl,%rdx
    9821:	48 89 d0             	mov    %rdx,%rax
    9824:	83 e0 01             	and    $0x1,%eax
    9827:	01 f0                	add    %esi,%eax
    9829:	89 85 c8 fe ff ff    	mov    %eax,-0x138(%rbp)
    982f:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
    9835:	48 83 c0 4a          	add    $0x4a,%rax
    9839:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9840:	00 
    9841:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    9848:	48 01 d0             	add    %rdx,%rax
    984b:	48 83 c0 08          	add    $0x8,%rax
    984f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    9853:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9857:	8b 95 c8 fe ff ff    	mov    -0x138(%rbp),%edx
    985d:	89 50 38             	mov    %edx,0x38(%rax)
    9860:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9864:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    986b:	00 
    986c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9870:	48 8b 50 28          	mov    0x28(%rax),%rdx
    9874:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9878:	48 89 50 20          	mov    %rdx,0x20(%rax)
    987c:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    9883:	8b 50 04             	mov    0x4(%rax),%edx
    9886:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
    988c:	be 01 00 00 00       	mov    $0x1,%esi
    9891:	89 c1                	mov    %eax,%ecx
    9893:	d3 e6                	shl    %cl,%esi
    9895:	89 f0                	mov    %esi,%eax
    9897:	21 d0                	and    %edx,%eax
    9899:	85 c0                	test   %eax,%eax
    989b:	75 5f                	jne    98fc <dispose_chunk+0x1192>
    989d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    98a4:	8b 50 04             	mov    0x4(%rax),%edx
    98a7:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
    98ad:	be 01 00 00 00       	mov    $0x1,%esi
    98b2:	89 c1                	mov    %eax,%ecx
    98b4:	d3 e6                	shl    %cl,%esi
    98b6:	89 f0                	mov    %esi,%eax
    98b8:	09 c2                	or     %eax,%edx
    98ba:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    98c1:	89 50 04             	mov    %edx,0x4(%rax)
    98c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    98c8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    98cc:	48 89 10             	mov    %rdx,(%rax)
    98cf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    98d3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    98d7:	48 89 50 30          	mov    %rdx,0x30(%rax)
    98db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    98df:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    98e3:	48 89 50 18          	mov    %rdx,0x18(%rax)
    98e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    98eb:	48 8b 50 18          	mov    0x18(%rax),%rdx
    98ef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    98f3:	48 89 50 10          	mov    %rdx,0x10(%rax)
    98f7:	e9 9c 01 00 00       	jmpq   9a98 <dispose_chunk+0x132e>
    98fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9900:	48 8b 00             	mov    (%rax),%rax
    9903:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    990a:	83 bd c8 fe ff ff 1f 	cmpl   $0x1f,-0x138(%rbp)
    9911:	74 13                	je     9926 <dispose_chunk+0x11bc>
    9913:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
    9919:	d1 e8                	shr    %eax
    991b:	ba 39 00 00 00       	mov    $0x39,%edx
    9920:	29 c2                	sub    %eax,%edx
    9922:	89 d0                	mov    %edx,%eax
    9924:	eb 05                	jmp    992b <dispose_chunk+0x11c1>
    9926:	b8 00 00 00 00       	mov    $0x0,%eax
    992b:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    9932:	89 c1                	mov    %eax,%ecx
    9934:	48 d3 e2             	shl    %cl,%rdx
    9937:	48 89 d0             	mov    %rdx,%rax
    993a:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    9941:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    9948:	48 8b 40 08          	mov    0x8(%rax),%rax
    994c:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    9950:	48 3b 85 a8 fe ff ff 	cmp    -0x158(%rbp),%rax
    9957:	0f 84 a2 00 00 00    	je     99ff <dispose_chunk+0x1295>
    995d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    9964:	48 c1 e8 3f          	shr    $0x3f,%rax
    9968:	48 83 c0 04          	add    $0x4,%rax
    996c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9973:	00 
    9974:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    997b:	48 01 d0             	add    %rdx,%rax
    997e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    9982:	48 d1 a5 20 ff ff ff 	shlq   -0xe0(%rbp)
    9989:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    998d:	48 8b 00             	mov    (%rax),%rax
    9990:	48 85 c0             	test   %rax,%rax
    9993:	74 10                	je     99a5 <dispose_chunk+0x123b>
    9995:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9999:	48 8b 00             	mov    (%rax),%rax
    999c:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    99a3:	eb 9c                	jmp    9941 <dispose_chunk+0x11d7>
    99a5:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    99ac:	48 8b 40 18          	mov    0x18(%rax),%rax
    99b0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    99b4:	0f 96 c0             	setbe  %al
    99b7:	0f b6 c0             	movzbl %al,%eax
    99ba:	48 85 c0             	test   %rax,%rax
    99bd:	74 3b                	je     99fa <dispose_chunk+0x1290>
    99bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    99c3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    99c7:	48 89 10             	mov    %rdx,(%rax)
    99ca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    99ce:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    99d5:	48 89 50 30          	mov    %rdx,0x30(%rax)
    99d9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    99dd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    99e1:	48 89 50 18          	mov    %rdx,0x18(%rax)
    99e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    99e9:	48 8b 50 18          	mov    0x18(%rax),%rdx
    99ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    99f1:	48 89 50 10          	mov    %rdx,0x10(%rax)
    99f5:	e9 9e 00 00 00       	jmpq   9a98 <dispose_chunk+0x132e>
    99fa:	e8 ca 4a 01 00       	callq  1e4c9 <abort>
    99ff:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    9a06:	48 8b 40 10          	mov    0x10(%rax),%rax
    9a0a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9a0e:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    9a15:	48 8b 40 18          	mov    0x18(%rax),%rax
    9a19:	48 3b 85 18 ff ff ff 	cmp    -0xe8(%rbp),%rax
    9a20:	0f 96 c0             	setbe  %al
    9a23:	0f b6 c0             	movzbl %al,%eax
    9a26:	48 85 c0             	test   %rax,%rax
    9a29:	74 62                	je     9a8d <dispose_chunk+0x1323>
    9a2b:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    9a32:	48 8b 40 18          	mov    0x18(%rax),%rax
    9a36:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    9a3a:	0f 96 c0             	setbe  %al
    9a3d:	0f b6 c0             	movzbl %al,%eax
    9a40:	48 85 c0             	test   %rax,%rax
    9a43:	74 48                	je     9a8d <dispose_chunk+0x1323>
    9a45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a49:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9a4d:	48 89 50 18          	mov    %rdx,0x18(%rax)
    9a51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a55:	48 8b 50 18          	mov    0x18(%rax),%rdx
    9a59:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    9a60:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9a64:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9a68:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9a6c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9a70:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9a74:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    9a7b:	48 89 50 18          	mov    %rdx,0x18(%rax)
    9a7f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9a83:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    9a8a:	00 
    9a8b:	eb 0b                	jmp    9a98 <dispose_chunk+0x132e>
    9a8d:	e8 37 4a 01 00       	callq  1e4c9 <abort>
    9a92:	e8 32 4a 01 00       	callq  1e4c9 <abort>
    9a97:	90                   	nop
    9a98:	c9                   	leaveq 
    9a99:	c3                   	retq   

0000000000009a9a <tmalloc_large>:
    9a9a:	55                   	push   %rbp
    9a9b:	48 89 e5             	mov    %rsp,%rbp
    9a9e:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
    9aa5:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
    9aac:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    9ab3:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    9aba:	00 00 00 00 
    9abe:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    9ac5:	48 f7 d8             	neg    %rax
    9ac8:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    9acf:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    9ad6:	48 c1 e8 08          	shr    $0x8,%rax
    9ada:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
    9ae0:	83 bd 14 ff ff ff 00 	cmpl   $0x0,-0xec(%rbp)
    9ae7:	75 0c                	jne    9af5 <tmalloc_large+0x5b>
    9ae9:	c7 85 0c ff ff ff 00 	movl   $0x0,-0xf4(%rbp)
    9af0:	00 00 00 
    9af3:	eb 5d                	jmp    9b52 <tmalloc_large+0xb8>
    9af5:	81 bd 14 ff ff ff ff 	cmpl   $0xffff,-0xec(%rbp)
    9afc:	ff 00 00 
    9aff:	76 0c                	jbe    9b0d <tmalloc_large+0x73>
    9b01:	c7 85 0c ff ff ff 1f 	movl   $0x1f,-0xf4(%rbp)
    9b08:	00 00 00 
    9b0b:	eb 45                	jmp    9b52 <tmalloc_large+0xb8>
    9b0d:	0f bd 85 14 ff ff ff 	bsr    -0xec(%rbp),%eax
    9b14:	83 f0 1f             	xor    $0x1f,%eax
    9b17:	ba 1f 00 00 00       	mov    $0x1f,%edx
    9b1c:	29 c2                	sub    %eax,%edx
    9b1e:	89 d0                	mov    %edx,%eax
    9b20:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%rbp)
    9b26:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
    9b2c:	8d 34 00             	lea    (%rax,%rax,1),%esi
    9b2f:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
    9b35:	83 c0 07             	add    $0x7,%eax
    9b38:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
    9b3f:	89 c1                	mov    %eax,%ecx
    9b41:	48 d3 ea             	shr    %cl,%rdx
    9b44:	48 89 d0             	mov    %rdx,%rax
    9b47:	83 e0 01             	and    $0x1,%eax
    9b4a:	01 f0                	add    %esi,%eax
    9b4c:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)
    9b52:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    9b59:	8b 95 0c ff ff ff    	mov    -0xf4(%rbp),%edx
    9b5f:	48 83 c2 4a          	add    $0x4a,%rdx
    9b63:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
    9b68:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    9b6f:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
    9b76:	00 
    9b77:	0f 84 05 01 00 00    	je     9c82 <tmalloc_large+0x1e8>
    9b7d:	83 bd 0c ff ff ff 1f 	cmpl   $0x1f,-0xf4(%rbp)
    9b84:	74 13                	je     9b99 <tmalloc_large+0xff>
    9b86:	8b 85 0c ff ff ff    	mov    -0xf4(%rbp),%eax
    9b8c:	d1 e8                	shr    %eax
    9b8e:	ba 39 00 00 00       	mov    $0x39,%edx
    9b93:	29 c2                	sub    %eax,%edx
    9b95:	89 d0                	mov    %edx,%eax
    9b97:	eb 05                	jmp    9b9e <tmalloc_large+0x104>
    9b99:	b8 00 00 00 00       	mov    $0x0,%eax
    9b9e:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
    9ba5:	89 c1                	mov    %eax,%ecx
    9ba7:	48 d3 e2             	shl    %cl,%rdx
    9baa:	48 89 d0             	mov    %rdx,%rax
    9bad:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    9bb4:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
    9bbb:	00 00 00 00 
    9bbf:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    9bc6:	48 8b 40 08          	mov    0x8(%rax),%rax
    9bca:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    9bce:	48 2b 85 f0 fe ff ff 	sub    -0x110(%rbp),%rax
    9bd5:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    9bd9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    9bdd:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
    9be4:	73 23                	jae    9c09 <tmalloc_large+0x16f>
    9be6:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    9bed:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    9bf4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    9bf8:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    9bff:	48 83 bd 40 ff ff ff 	cmpq   $0x0,-0xc0(%rbp)
    9c06:	00 
    9c07:	74 78                	je     9c81 <tmalloc_large+0x1e7>
    9c09:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    9c10:	48 8b 40 28          	mov    0x28(%rax),%rax
    9c14:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    9c18:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    9c1f:	48 c1 e8 3f          	shr    $0x3f,%rax
    9c23:	48 89 c2             	mov    %rax,%rdx
    9c26:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    9c2d:	48 83 c2 04          	add    $0x4,%rdx
    9c31:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    9c35:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    9c3c:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
    9c41:	74 18                	je     9c5b <tmalloc_large+0x1c1>
    9c43:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    9c47:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
    9c4e:	74 0b                	je     9c5b <tmalloc_large+0x1c1>
    9c50:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    9c54:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    9c5b:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
    9c62:	00 
    9c63:	75 10                	jne    9c75 <tmalloc_large+0x1db>
    9c65:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    9c6c:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    9c73:	eb 0d                	jmp    9c82 <tmalloc_large+0x1e8>
    9c75:	48 d1 a5 50 ff ff ff 	shlq   -0xb0(%rbp)
    9c7c:	e9 3e ff ff ff       	jmpq   9bbf <tmalloc_large+0x125>
    9c81:	90                   	nop
    9c82:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
    9c89:	00 
    9c8a:	0f 85 16 01 00 00    	jne    9da6 <tmalloc_large+0x30c>
    9c90:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
    9c97:	00 
    9c98:	0f 85 08 01 00 00    	jne    9da6 <tmalloc_large+0x30c>
    9c9e:	8b 85 0c ff ff ff    	mov    -0xf4(%rbp),%eax
    9ca4:	ba 01 00 00 00       	mov    $0x1,%edx
    9ca9:	89 c1                	mov    %eax,%ecx
    9cab:	d3 e2                	shl    %cl,%edx
    9cad:	89 d0                	mov    %edx,%eax
    9caf:	8d 14 00             	lea    (%rax,%rax,1),%edx
    9cb2:	8b 85 0c ff ff ff    	mov    -0xf4(%rbp),%eax
    9cb8:	be 01 00 00 00       	mov    $0x1,%esi
    9cbd:	89 c1                	mov    %eax,%ecx
    9cbf:	d3 e6                	shl    %cl,%esi
    9cc1:	89 f0                	mov    %esi,%eax
    9cc3:	01 c0                	add    %eax,%eax
    9cc5:	f7 d8                	neg    %eax
    9cc7:	09 c2                	or     %eax,%edx
    9cc9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    9cd0:	8b 40 04             	mov    0x4(%rax),%eax
    9cd3:	21 d0                	and    %edx,%eax
    9cd5:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
    9cdb:	83 bd 1c ff ff ff 00 	cmpl   $0x0,-0xe4(%rbp)
    9ce2:	0f 84 be 00 00 00    	je     9da6 <tmalloc_large+0x30c>
    9ce8:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
    9cee:	f7 d8                	neg    %eax
    9cf0:	23 85 1c ff ff ff    	and    -0xe4(%rbp),%eax
    9cf6:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%rbp)
    9cfc:	31 c0                	xor    %eax,%eax
    9cfe:	f3 0f bc 85 20 ff ff 	tzcnt  -0xe0(%rbp),%eax
    9d05:	ff 
    9d06:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
    9d0c:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
    9d12:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
    9d18:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    9d1f:	8b 95 28 ff ff ff    	mov    -0xd8(%rbp),%edx
    9d25:	48 83 c2 4a          	add    $0x4a,%rdx
    9d29:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
    9d2e:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    9d35:	eb 6f                	jmp    9da6 <tmalloc_large+0x30c>
    9d37:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    9d3e:	48 8b 40 08          	mov    0x8(%rax),%rax
    9d42:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    9d46:	48 2b 85 f0 fe ff ff 	sub    -0x110(%rbp),%rax
    9d4d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    9d51:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    9d55:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
    9d5c:	73 19                	jae    9d77 <tmalloc_large+0x2dd>
    9d5e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    9d62:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    9d69:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    9d70:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    9d77:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    9d7e:	48 8b 40 20          	mov    0x20(%rax),%rax
    9d82:	48 85 c0             	test   %rax,%rax
    9d85:	74 0d                	je     9d94 <tmalloc_large+0x2fa>
    9d87:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    9d8e:	48 8b 40 20          	mov    0x20(%rax),%rax
    9d92:	eb 0b                	jmp    9d9f <tmalloc_large+0x305>
    9d94:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    9d9b:	48 8b 40 28          	mov    0x28(%rax),%rax
    9d9f:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    9da6:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
    9dad:	00 
    9dae:	75 87                	jne    9d37 <tmalloc_large+0x29d>
    9db0:	48 83 bd 38 ff ff ff 	cmpq   $0x0,-0xc8(%rbp)
    9db7:	00 
    9db8:	0f 84 41 09 00 00    	je     a6ff <tmalloc_large+0xc65>
    9dbe:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    9dc5:	48 8b 40 08          	mov    0x8(%rax),%rax
    9dc9:	48 2b 85 f0 fe ff ff 	sub    -0x110(%rbp),%rax
    9dd0:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
    9dd7:	0f 86 22 09 00 00    	jbe    a6ff <tmalloc_large+0xc65>
    9ddd:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    9de4:	48 8b 40 18          	mov    0x18(%rax),%rax
    9de8:	48 3b 85 38 ff ff ff 	cmp    -0xc8(%rbp),%rax
    9def:	0f 96 c0             	setbe  %al
    9df2:	0f b6 c0             	movzbl %al,%eax
    9df5:	48 85 c0             	test   %rax,%rax
    9df8:	0f 84 fc 08 00 00    	je     a6fa <tmalloc_large+0xc60>
    9dfe:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    9e05:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    9e0c:	48 01 d0             	add    %rdx,%rax
    9e0f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    9e13:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    9e1a:	48 8b 40 08          	mov    0x8(%rax),%rax
    9e1e:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    9e22:	48 89 c1             	mov    %rax,%rcx
    9e25:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    9e2c:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    9e33:	48 01 d0             	add    %rdx,%rax
    9e36:	48 39 c1             	cmp    %rax,%rcx
    9e39:	74 05                	je     9e40 <tmalloc_large+0x3a6>
    9e3b:	e8 89 46 01 00       	callq  1e4c9 <abort>
    9e40:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    9e47:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
    9e4b:	0f 92 c0             	setb   %al
    9e4e:	0f b6 c0             	movzbl %al,%eax
    9e51:	48 85 c0             	test   %rax,%rax
    9e54:	0f 84 a0 08 00 00    	je     a6fa <tmalloc_large+0xc60>
    9e5a:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    9e61:	48 8b 40 30          	mov    0x30(%rax),%rax
    9e65:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    9e69:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    9e70:	48 8b 40 18          	mov    0x18(%rax),%rax
    9e74:	48 3b 85 38 ff ff ff 	cmp    -0xc8(%rbp),%rax
    9e7b:	0f 84 aa 00 00 00    	je     9f2b <tmalloc_large+0x491>
    9e81:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    9e88:	48 8b 40 10          	mov    0x10(%rax),%rax
    9e8c:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    9e90:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    9e97:	48 8b 40 18          	mov    0x18(%rax),%rax
    9e9b:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    9ea2:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    9ea9:	48 8b 40 18          	mov    0x18(%rax),%rax
    9ead:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
    9eb1:	0f 96 c0             	setbe  %al
    9eb4:	0f b6 c0             	movzbl %al,%eax
    9eb7:	48 85 c0             	test   %rax,%rax
    9eba:	74 21                	je     9edd <tmalloc_large+0x443>
    9ebc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9ec0:	48 8b 40 18          	mov    0x18(%rax),%rax
    9ec4:	48 3b 85 38 ff ff ff 	cmp    -0xc8(%rbp),%rax
    9ecb:	0f 94 c0             	sete   %al
    9ece:	0f b6 c0             	movzbl %al,%eax
    9ed1:	48 85 c0             	test   %rax,%rax
    9ed4:	74 07                	je     9edd <tmalloc_large+0x443>
    9ed6:	b8 01 00 00 00       	mov    $0x1,%eax
    9edb:	eb 05                	jmp    9ee2 <tmalloc_large+0x448>
    9edd:	b8 00 00 00 00       	mov    $0x0,%eax
    9ee2:	85 c0                	test   %eax,%eax
    9ee4:	74 40                	je     9f26 <tmalloc_large+0x48c>
    9ee6:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    9eed:	48 8b 40 10          	mov    0x10(%rax),%rax
    9ef1:	48 3b 85 38 ff ff ff 	cmp    -0xc8(%rbp),%rax
    9ef8:	0f 94 c0             	sete   %al
    9efb:	0f b6 c0             	movzbl %al,%eax
    9efe:	48 85 c0             	test   %rax,%rax
    9f01:	74 23                	je     9f26 <tmalloc_large+0x48c>
    9f03:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9f07:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    9f0e:	48 89 50 18          	mov    %rdx,0x18(%rax)
    9f12:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    9f19:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    9f1d:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9f21:	e9 f8 00 00 00       	jmpq   a01e <tmalloc_large+0x584>
    9f26:	e8 9e 45 01 00       	callq  1e4c9 <abort>
    9f2b:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    9f32:	48 83 c0 28          	add    $0x28,%rax
    9f36:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    9f3d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    9f44:	48 8b 00             	mov    (%rax),%rax
    9f47:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    9f4e:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
    9f55:	00 
    9f56:	75 52                	jne    9faa <tmalloc_large+0x510>
    9f58:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    9f5f:	48 83 c0 20          	add    $0x20,%rax
    9f63:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    9f6a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    9f71:	48 8b 00             	mov    (%rax),%rax
    9f74:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    9f7b:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
    9f82:	00 
    9f83:	0f 84 95 00 00 00    	je     a01e <tmalloc_large+0x584>
    9f89:	eb 1f                	jmp    9faa <tmalloc_large+0x510>
    9f8b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    9f92:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    9f99:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    9fa0:	48 8b 00             	mov    (%rax),%rax
    9fa3:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    9faa:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    9fb1:	48 83 c0 28          	add    $0x28,%rax
    9fb5:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    9fbc:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    9fc3:	48 8b 00             	mov    (%rax),%rax
    9fc6:	48 85 c0             	test   %rax,%rax
    9fc9:	75 c0                	jne    9f8b <tmalloc_large+0x4f1>
    9fcb:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    9fd2:	48 83 c0 20          	add    $0x20,%rax
    9fd6:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    9fdd:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    9fe4:	48 8b 00             	mov    (%rax),%rax
    9fe7:	48 85 c0             	test   %rax,%rax
    9fea:	75 9f                	jne    9f8b <tmalloc_large+0x4f1>
    9fec:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    9ff3:	48 8b 40 18          	mov    0x18(%rax),%rax
    9ff7:	48 3b 85 68 ff ff ff 	cmp    -0x98(%rbp),%rax
    9ffe:	0f 96 c0             	setbe  %al
    a001:	0f b6 c0             	movzbl %al,%eax
    a004:	48 85 c0             	test   %rax,%rax
    a007:	74 10                	je     a019 <tmalloc_large+0x57f>
    a009:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a010:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a017:	eb 05                	jmp    a01e <tmalloc_large+0x584>
    a019:	e8 ab 44 01 00       	callq  1e4c9 <abort>
    a01e:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    a023:	0f 84 c6 01 00 00    	je     a1ef <tmalloc_large+0x755>
    a029:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a030:	8b 40 38             	mov    0x38(%rax),%eax
    a033:	89 c0                	mov    %eax,%eax
    a035:	48 83 c0 4a          	add    $0x4a,%rax
    a039:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a040:	00 
    a041:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    a048:	48 01 d0             	add    %rdx,%rax
    a04b:	48 83 c0 08          	add    $0x8,%rax
    a04f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    a053:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a057:	48 8b 00             	mov    (%rax),%rax
    a05a:	48 3b 85 38 ff ff ff 	cmp    -0xc8(%rbp),%rax
    a061:	75 4d                	jne    a0b0 <tmalloc_large+0x616>
    a063:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a067:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    a06e:	48 89 10             	mov    %rdx,(%rax)
    a071:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a075:	48 8b 00             	mov    (%rax),%rax
    a078:	48 85 c0             	test   %rax,%rax
    a07b:	0f 85 81 00 00 00    	jne    a102 <tmalloc_large+0x668>
    a081:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    a088:	8b 50 04             	mov    0x4(%rax),%edx
    a08b:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a092:	8b 40 38             	mov    0x38(%rax),%eax
    a095:	be 01 00 00 00       	mov    $0x1,%esi
    a09a:	89 c1                	mov    %eax,%ecx
    a09c:	d3 e6                	shl    %cl,%esi
    a09e:	89 f0                	mov    %esi,%eax
    a0a0:	f7 d0                	not    %eax
    a0a2:	21 c2                	and    %eax,%edx
    a0a4:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    a0ab:	89 50 04             	mov    %edx,0x4(%rax)
    a0ae:	eb 52                	jmp    a102 <tmalloc_large+0x668>
    a0b0:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    a0b7:	48 8b 40 18          	mov    0x18(%rax),%rax
    a0bb:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    a0bf:	0f 96 c0             	setbe  %al
    a0c2:	0f b6 c0             	movzbl %al,%eax
    a0c5:	48 85 c0             	test   %rax,%rax
    a0c8:	74 33                	je     a0fd <tmalloc_large+0x663>
    a0ca:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a0ce:	48 8b 40 20          	mov    0x20(%rax),%rax
    a0d2:	48 3b 85 38 ff ff ff 	cmp    -0xc8(%rbp),%rax
    a0d9:	75 11                	jne    a0ec <tmalloc_large+0x652>
    a0db:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a0df:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    a0e6:	48 89 50 20          	mov    %rdx,0x20(%rax)
    a0ea:	eb 16                	jmp    a102 <tmalloc_large+0x668>
    a0ec:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a0f0:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    a0f7:	48 89 50 28          	mov    %rdx,0x28(%rax)
    a0fb:	eb 05                	jmp    a102 <tmalloc_large+0x668>
    a0fd:	e8 c7 43 01 00       	callq  1e4c9 <abort>
    a102:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
    a109:	00 
    a10a:	0f 84 df 00 00 00    	je     a1ef <tmalloc_large+0x755>
    a110:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    a117:	48 8b 40 18          	mov    0x18(%rax),%rax
    a11b:	48 3b 85 60 ff ff ff 	cmp    -0xa0(%rbp),%rax
    a122:	0f 96 c0             	setbe  %al
    a125:	0f b6 c0             	movzbl %al,%eax
    a128:	48 85 c0             	test   %rax,%rax
    a12b:	0f 84 b9 00 00 00    	je     a1ea <tmalloc_large+0x750>
    a131:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    a138:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    a13c:	48 89 50 30          	mov    %rdx,0x30(%rax)
    a140:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a147:	48 8b 40 20          	mov    0x20(%rax),%rax
    a14b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    a14f:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    a154:	74 3f                	je     a195 <tmalloc_large+0x6fb>
    a156:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    a15d:	48 8b 40 18          	mov    0x18(%rax),%rax
    a161:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    a165:	0f 96 c0             	setbe  %al
    a168:	0f b6 c0             	movzbl %al,%eax
    a16b:	48 85 c0             	test   %rax,%rax
    a16e:	74 20                	je     a190 <tmalloc_large+0x6f6>
    a170:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    a177:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a17b:	48 89 50 20          	mov    %rdx,0x20(%rax)
    a17f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a183:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    a18a:	48 89 50 30          	mov    %rdx,0x30(%rax)
    a18e:	eb 05                	jmp    a195 <tmalloc_large+0x6fb>
    a190:	e8 34 43 01 00       	callq  1e4c9 <abort>
    a195:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a19c:	48 8b 40 28          	mov    0x28(%rax),%rax
    a1a0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    a1a4:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    a1a9:	74 44                	je     a1ef <tmalloc_large+0x755>
    a1ab:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    a1b2:	48 8b 40 18          	mov    0x18(%rax),%rax
    a1b6:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
    a1ba:	0f 96 c0             	setbe  %al
    a1bd:	0f b6 c0             	movzbl %al,%eax
    a1c0:	48 85 c0             	test   %rax,%rax
    a1c3:	74 20                	je     a1e5 <tmalloc_large+0x74b>
    a1c5:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    a1cc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a1d0:	48 89 50 28          	mov    %rdx,0x28(%rax)
    a1d4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a1d8:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    a1df:	48 89 50 30          	mov    %rdx,0x30(%rax)
    a1e3:	eb 0a                	jmp    a1ef <tmalloc_large+0x755>
    a1e5:	e8 df 42 01 00       	callq  1e4c9 <abort>
    a1ea:	e8 da 42 01 00       	callq  1e4c9 <abort>
    a1ef:	48 83 bd 40 ff ff ff 	cmpq   $0x1f,-0xc0(%rbp)
    a1f6:	1f 
    a1f7:	0f 87 99 00 00 00    	ja     a296 <tmalloc_large+0x7fc>
    a1fd:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    a204:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    a20b:	48 01 d0             	add    %rdx,%rax
    a20e:	48 83 c8 03          	or     $0x3,%rax
    a212:	48 89 c2             	mov    %rax,%rdx
    a215:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a21c:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a220:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    a227:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    a22e:	48 01 c2             	add    %rax,%rdx
    a231:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a238:	48 01 d0             	add    %rdx,%rax
    a23b:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
    a242:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
    a249:	48 01 d1             	add    %rdx,%rcx
    a24c:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    a253:	48 01 ca             	add    %rcx,%rdx
    a256:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    a25a:	48 83 ca 01          	or     $0x1,%rdx
    a25e:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a262:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    a269:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    a270:	48 01 c2             	add    %rax,%rdx
    a273:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a27a:	48 01 d0             	add    %rdx,%rax
    a27d:	48 8b 0d fc 86 21 00 	mov    0x2186fc(%rip),%rcx        # 222980 <mparams>
    a284:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    a28b:	48 31 ca             	xor    %rcx,%rdx
    a28e:	48 89 10             	mov    %rdx,(%rax)
    a291:	e9 57 04 00 00       	jmpq   a6ed <tmalloc_large+0xc53>
    a296:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    a29d:	48 83 c8 03          	or     $0x3,%rax
    a2a1:	48 89 c2             	mov    %rax,%rdx
    a2a4:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a2ab:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a2af:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    a2b6:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    a2bd:	48 01 d0             	add    %rdx,%rax
    a2c0:	48 8b 0d b9 86 21 00 	mov    0x2186b9(%rip),%rcx        # 222980 <mparams>
    a2c7:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    a2ce:	48 31 ca             	xor    %rcx,%rdx
    a2d1:	48 89 10             	mov    %rdx,(%rax)
    a2d4:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    a2db:	48 83 c8 01          	or     $0x1,%rax
    a2df:	48 89 c2             	mov    %rax,%rdx
    a2e2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a2e6:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a2ea:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    a2ee:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    a2f5:	48 01 c2             	add    %rax,%rdx
    a2f8:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    a2ff:	48 89 02             	mov    %rax,(%rdx)
    a302:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    a309:	48 c1 e8 03          	shr    $0x3,%rax
    a30d:	48 83 f8 1f          	cmp    $0x1f,%rax
    a311:	0f 87 0c 01 00 00    	ja     a423 <tmalloc_large+0x989>
    a317:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    a31e:	48 c1 e8 03          	shr    $0x3,%rax
    a322:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
    a328:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
    a32e:	01 c0                	add    %eax,%eax
    a330:	89 c0                	mov    %eax,%eax
    a332:	48 83 c0 08          	add    $0x8,%rax
    a336:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a33d:	00 
    a33e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    a345:	48 01 d0             	add    %rdx,%rax
    a348:	48 83 c0 08          	add    $0x8,%rax
    a34c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    a350:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a354:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    a35b:	48 83 bd 40 ff ff ff 	cmpq   $0x1f,-0xc0(%rbp)
    a362:	1f 
    a363:	77 05                	ja     a36a <tmalloc_large+0x8d0>
    a365:	e8 5f 41 01 00       	callq  1e4c9 <abort>
    a36a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    a371:	8b 10                	mov    (%rax),%edx
    a373:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
    a379:	be 01 00 00 00       	mov    $0x1,%esi
    a37e:	89 c1                	mov    %eax,%ecx
    a380:	d3 e6                	shl    %cl,%esi
    a382:	89 f0                	mov    %esi,%eax
    a384:	21 d0                	and    %edx,%eax
    a386:	85 c0                	test   %eax,%eax
    a388:	75 27                	jne    a3b1 <tmalloc_large+0x917>
    a38a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    a391:	8b 10                	mov    (%rax),%edx
    a393:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
    a399:	be 01 00 00 00       	mov    $0x1,%esi
    a39e:	89 c1                	mov    %eax,%ecx
    a3a0:	d3 e6                	shl    %cl,%esi
    a3a2:	89 f0                	mov    %esi,%eax
    a3a4:	09 c2                	or     %eax,%edx
    a3a6:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    a3ad:	89 10                	mov    %edx,(%rax)
    a3af:	eb 37                	jmp    a3e8 <tmalloc_large+0x94e>
    a3b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a3b5:	48 8b 50 10          	mov    0x10(%rax),%rdx
    a3b9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    a3c0:	48 8b 40 18          	mov    0x18(%rax),%rax
    a3c4:	48 39 c2             	cmp    %rax,%rdx
    a3c7:	0f 93 c0             	setae  %al
    a3ca:	0f b6 c0             	movzbl %al,%eax
    a3cd:	48 85 c0             	test   %rax,%rax
    a3d0:	74 11                	je     a3e3 <tmalloc_large+0x949>
    a3d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a3d6:	48 8b 40 10          	mov    0x10(%rax),%rax
    a3da:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    a3e1:	eb 05                	jmp    a3e8 <tmalloc_large+0x94e>
    a3e3:	e8 e1 40 01 00       	callq  1e4c9 <abort>
    a3e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a3ec:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    a3f0:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a3f4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    a3fb:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    a3ff:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a403:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a407:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    a40e:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a412:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a416:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a41a:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a41e:	e9 ca 02 00 00       	jmpq   a6ed <tmalloc_large+0xc53>
    a423:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a427:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    a42b:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    a432:	48 c1 e8 08          	shr    $0x8,%rax
    a436:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
    a43c:	83 bd 30 ff ff ff 00 	cmpl   $0x0,-0xd0(%rbp)
    a443:	75 0c                	jne    a451 <tmalloc_large+0x9b7>
    a445:	c7 85 10 ff ff ff 00 	movl   $0x0,-0xf0(%rbp)
    a44c:	00 00 00 
    a44f:	eb 5d                	jmp    a4ae <tmalloc_large+0xa14>
    a451:	81 bd 30 ff ff ff ff 	cmpl   $0xffff,-0xd0(%rbp)
    a458:	ff 00 00 
    a45b:	76 0c                	jbe    a469 <tmalloc_large+0x9cf>
    a45d:	c7 85 10 ff ff ff 1f 	movl   $0x1f,-0xf0(%rbp)
    a464:	00 00 00 
    a467:	eb 45                	jmp    a4ae <tmalloc_large+0xa14>
    a469:	0f bd 85 30 ff ff ff 	bsr    -0xd0(%rbp),%eax
    a470:	83 f0 1f             	xor    $0x1f,%eax
    a473:	ba 1f 00 00 00       	mov    $0x1f,%edx
    a478:	29 c2                	sub    %eax,%edx
    a47a:	89 d0                	mov    %edx,%eax
    a47c:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
    a482:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
    a488:	8d 34 00             	lea    (%rax,%rax,1),%esi
    a48b:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
    a491:	83 c0 07             	add    $0x7,%eax
    a494:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    a49b:	89 c1                	mov    %eax,%ecx
    a49d:	48 d3 ea             	shr    %cl,%rdx
    a4a0:	48 89 d0             	mov    %rdx,%rax
    a4a3:	83 e0 01             	and    $0x1,%eax
    a4a6:	01 f0                	add    %esi,%eax
    a4a8:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%rbp)
    a4ae:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
    a4b4:	48 83 c0 4a          	add    $0x4a,%rax
    a4b8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a4bf:	00 
    a4c0:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    a4c7:	48 01 d0             	add    %rdx,%rax
    a4ca:	48 83 c0 08          	add    $0x8,%rax
    a4ce:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    a4d2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a4d6:	8b 95 10 ff ff ff    	mov    -0xf0(%rbp),%edx
    a4dc:	89 50 38             	mov    %edx,0x38(%rax)
    a4df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a4e3:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    a4ea:	00 
    a4eb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a4ef:	48 8b 50 28          	mov    0x28(%rax),%rdx
    a4f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a4f7:	48 89 50 20          	mov    %rdx,0x20(%rax)
    a4fb:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    a502:	8b 50 04             	mov    0x4(%rax),%edx
    a505:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
    a50b:	be 01 00 00 00       	mov    $0x1,%esi
    a510:	89 c1                	mov    %eax,%ecx
    a512:	d3 e6                	shl    %cl,%esi
    a514:	89 f0                	mov    %esi,%eax
    a516:	21 d0                	and    %edx,%eax
    a518:	85 c0                	test   %eax,%eax
    a51a:	75 5f                	jne    a57b <tmalloc_large+0xae1>
    a51c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    a523:	8b 50 04             	mov    0x4(%rax),%edx
    a526:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
    a52c:	be 01 00 00 00       	mov    $0x1,%esi
    a531:	89 c1                	mov    %eax,%ecx
    a533:	d3 e6                	shl    %cl,%esi
    a535:	89 f0                	mov    %esi,%eax
    a537:	09 c2                	or     %eax,%edx
    a539:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    a540:	89 50 04             	mov    %edx,0x4(%rax)
    a543:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a547:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a54b:	48 89 10             	mov    %rdx,(%rax)
    a54e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a552:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a556:	48 89 50 30          	mov    %rdx,0x30(%rax)
    a55a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a55e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a562:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a566:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a56a:	48 8b 50 18          	mov    0x18(%rax),%rdx
    a56e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a572:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a576:	e9 72 01 00 00       	jmpq   a6ed <tmalloc_large+0xc53>
    a57b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a57f:	48 8b 00             	mov    (%rax),%rax
    a582:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    a586:	83 bd 10 ff ff ff 1f 	cmpl   $0x1f,-0xf0(%rbp)
    a58d:	74 13                	je     a5a2 <tmalloc_large+0xb08>
    a58f:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
    a595:	d1 e8                	shr    %eax
    a597:	ba 39 00 00 00       	mov    $0x39,%edx
    a59c:	29 c2                	sub    %eax,%edx
    a59e:	89 d0                	mov    %edx,%eax
    a5a0:	eb 05                	jmp    a5a7 <tmalloc_large+0xb0d>
    a5a2:	b8 00 00 00 00       	mov    $0x0,%eax
    a5a7:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    a5ae:	89 c1                	mov    %eax,%ecx
    a5b0:	48 d3 e2             	shl    %cl,%rdx
    a5b3:	48 89 d0             	mov    %rdx,%rax
    a5b6:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    a5ba:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    a5be:	48 8b 40 08          	mov    0x8(%rax),%rax
    a5c2:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    a5c6:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
    a5cd:	0f 84 93 00 00 00    	je     a666 <tmalloc_large+0xbcc>
    a5d3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a5d7:	48 c1 e8 3f          	shr    $0x3f,%rax
    a5db:	48 83 c0 04          	add    $0x4,%rax
    a5df:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a5e6:	00 
    a5e7:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    a5eb:	48 01 d0             	add    %rdx,%rax
    a5ee:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    a5f2:	48 d1 65 88          	shlq   -0x78(%rbp)
    a5f6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a5fa:	48 8b 00             	mov    (%rax),%rax
    a5fd:	48 85 c0             	test   %rax,%rax
    a600:	74 0d                	je     a60f <tmalloc_large+0xb75>
    a602:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a606:	48 8b 00             	mov    (%rax),%rax
    a609:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    a60d:	eb ab                	jmp    a5ba <tmalloc_large+0xb20>
    a60f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    a616:	48 8b 40 18          	mov    0x18(%rax),%rax
    a61a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a61e:	0f 96 c0             	setbe  %al
    a621:	0f b6 c0             	movzbl %al,%eax
    a624:	48 85 c0             	test   %rax,%rax
    a627:	74 38                	je     a661 <tmalloc_large+0xbc7>
    a629:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a62d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a631:	48 89 10             	mov    %rdx,(%rax)
    a634:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a638:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    a63c:	48 89 50 30          	mov    %rdx,0x30(%rax)
    a640:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a644:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a648:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a64c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a650:	48 8b 50 18          	mov    0x18(%rax),%rdx
    a654:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a658:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a65c:	e9 8c 00 00 00       	jmpq   a6ed <tmalloc_large+0xc53>
    a661:	e8 63 3e 01 00       	callq  1e4c9 <abort>
    a666:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    a66a:	48 8b 40 10          	mov    0x10(%rax),%rax
    a66e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a672:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    a679:	48 8b 40 18          	mov    0x18(%rax),%rax
    a67d:	48 3b 45 80          	cmp    -0x80(%rbp),%rax
    a681:	0f 96 c0             	setbe  %al
    a684:	0f b6 c0             	movzbl %al,%eax
    a687:	48 85 c0             	test   %rax,%rax
    a68a:	74 5c                	je     a6e8 <tmalloc_large+0xc4e>
    a68c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    a693:	48 8b 40 18          	mov    0x18(%rax),%rax
    a697:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    a69b:	0f 96 c0             	setbe  %al
    a69e:	0f b6 c0             	movzbl %al,%eax
    a6a1:	48 85 c0             	test   %rax,%rax
    a6a4:	74 42                	je     a6e8 <tmalloc_large+0xc4e>
    a6a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6aa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a6ae:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a6b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6b6:	48 8b 50 18          	mov    0x18(%rax),%rdx
    a6ba:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    a6be:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a6c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a6c6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a6ca:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a6ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a6d2:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    a6d6:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a6da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a6de:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    a6e5:	00 
    a6e6:	eb 05                	jmp    a6ed <tmalloc_large+0xc53>
    a6e8:	e8 dc 3d 01 00       	callq  1e4c9 <abort>
    a6ed:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a6f4:	48 83 c0 10          	add    $0x10,%rax
    a6f8:	eb 0a                	jmp    a704 <tmalloc_large+0xc6a>
    a6fa:	e8 ca 3d 01 00       	callq  1e4c9 <abort>
    a6ff:	b8 00 00 00 00       	mov    $0x0,%eax
    a704:	c9                   	leaveq 
    a705:	c3                   	retq   

000000000000a706 <tmalloc_small>:
    a706:	55                   	push   %rbp
    a707:	48 89 e5             	mov    %rsp,%rbp
    a70a:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    a711:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    a718:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    a71f:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a726:	8b 50 04             	mov    0x4(%rax),%edx
    a729:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a730:	8b 40 04             	mov    0x4(%rax),%eax
    a733:	f7 d8                	neg    %eax
    a735:	21 d0                	and    %edx,%eax
    a737:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
    a73d:	31 c0                	xor    %eax,%eax
    a73f:	f3 0f bc 85 68 ff ff 	tzcnt  -0x98(%rbp),%eax
    a746:	ff 
    a747:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
    a74d:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    a753:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
    a759:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a760:	8b 95 70 ff ff ff    	mov    -0x90(%rbp),%edx
    a766:	48 83 c2 4a          	add    $0x4a,%rdx
    a76a:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
    a76f:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    a776:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    a77d:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    a781:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    a788:	48 8b 40 08          	mov    0x8(%rax),%rax
    a78c:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    a790:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
    a797:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    a79b:	eb 37                	jmp    a7d4 <tmalloc_small+0xce>
    a79d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    a7a4:	48 8b 40 08          	mov    0x8(%rax),%rax
    a7a8:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    a7ac:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
    a7b3:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    a7b7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a7bb:	48 3b 45 88          	cmp    -0x78(%rbp),%rax
    a7bf:	73 13                	jae    a7d4 <tmalloc_small+0xce>
    a7c1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a7c5:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    a7c9:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    a7d0:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    a7d4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    a7db:	48 8b 40 20          	mov    0x20(%rax),%rax
    a7df:	48 85 c0             	test   %rax,%rax
    a7e2:	74 0d                	je     a7f1 <tmalloc_small+0xeb>
    a7e4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    a7eb:	48 8b 40 20          	mov    0x20(%rax),%rax
    a7ef:	eb 0b                	jmp    a7fc <tmalloc_small+0xf6>
    a7f1:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    a7f8:	48 8b 40 28          	mov    0x28(%rax),%rax
    a7fc:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    a803:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
    a80a:	00 
    a80b:	75 90                	jne    a79d <tmalloc_small+0x97>
    a80d:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a814:	48 8b 40 18          	mov    0x18(%rax),%rax
    a818:	48 3b 45 80          	cmp    -0x80(%rbp),%rax
    a81c:	0f 96 c0             	setbe  %al
    a81f:	0f b6 c0             	movzbl %al,%eax
    a822:	48 85 c0             	test   %rax,%rax
    a825:	0f 84 8c 05 00 00    	je     adb7 <tmalloc_small+0x6b1>
    a82b:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    a82f:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    a836:	48 01 d0             	add    %rdx,%rax
    a839:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    a83d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    a841:	48 8b 40 08          	mov    0x8(%rax),%rax
    a845:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    a849:	48 89 c1             	mov    %rax,%rcx
    a84c:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    a850:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    a857:	48 01 d0             	add    %rdx,%rax
    a85a:	48 39 c1             	cmp    %rax,%rcx
    a85d:	74 05                	je     a864 <tmalloc_small+0x15e>
    a85f:	e8 65 3c 01 00       	callq  1e4c9 <abort>
    a864:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    a868:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
    a86c:	0f 92 c0             	setb   %al
    a86f:	0f b6 c0             	movzbl %al,%eax
    a872:	48 85 c0             	test   %rax,%rax
    a875:	0f 84 3c 05 00 00    	je     adb7 <tmalloc_small+0x6b1>
    a87b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    a87f:	48 8b 40 30          	mov    0x30(%rax),%rax
    a883:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    a887:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    a88b:	48 8b 40 18          	mov    0x18(%rax),%rax
    a88f:	48 3b 45 80          	cmp    -0x80(%rbp),%rax
    a893:	0f 84 92 00 00 00    	je     a92b <tmalloc_small+0x225>
    a899:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    a89d:	48 8b 40 10          	mov    0x10(%rax),%rax
    a8a1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    a8a5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    a8a9:	48 8b 40 18          	mov    0x18(%rax),%rax
    a8ad:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    a8b1:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a8b8:	48 8b 40 18          	mov    0x18(%rax),%rax
    a8bc:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    a8c0:	0f 96 c0             	setbe  %al
    a8c3:	0f b6 c0             	movzbl %al,%eax
    a8c6:	48 85 c0             	test   %rax,%rax
    a8c9:	74 1e                	je     a8e9 <tmalloc_small+0x1e3>
    a8cb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a8cf:	48 8b 40 18          	mov    0x18(%rax),%rax
    a8d3:	48 3b 45 80          	cmp    -0x80(%rbp),%rax
    a8d7:	0f 94 c0             	sete   %al
    a8da:	0f b6 c0             	movzbl %al,%eax
    a8dd:	48 85 c0             	test   %rax,%rax
    a8e0:	74 07                	je     a8e9 <tmalloc_small+0x1e3>
    a8e2:	b8 01 00 00 00       	mov    $0x1,%eax
    a8e7:	eb 05                	jmp    a8ee <tmalloc_small+0x1e8>
    a8e9:	b8 00 00 00 00       	mov    $0x0,%eax
    a8ee:	85 c0                	test   %eax,%eax
    a8f0:	74 34                	je     a926 <tmalloc_small+0x220>
    a8f2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    a8f6:	48 8b 40 10          	mov    0x10(%rax),%rax
    a8fa:	48 3b 45 80          	cmp    -0x80(%rbp),%rax
    a8fe:	0f 94 c0             	sete   %al
    a901:	0f b6 c0             	movzbl %al,%eax
    a904:	48 85 c0             	test   %rax,%rax
    a907:	74 1d                	je     a926 <tmalloc_small+0x220>
    a909:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a90d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    a911:	48 89 50 18          	mov    %rdx,0x18(%rax)
    a915:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    a919:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a91d:	48 89 50 10          	mov    %rdx,0x10(%rax)
    a921:	e9 b2 00 00 00       	jmpq   a9d8 <tmalloc_small+0x2d2>
    a926:	e8 9e 3b 01 00       	callq  1e4c9 <abort>
    a92b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    a92f:	48 83 c0 28          	add    $0x28,%rax
    a933:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    a937:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a93b:	48 8b 00             	mov    (%rax),%rax
    a93e:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    a942:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
    a947:	75 33                	jne    a97c <tmalloc_small+0x276>
    a949:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    a94d:	48 83 c0 20          	add    $0x20,%rax
    a951:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    a955:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a959:	48 8b 00             	mov    (%rax),%rax
    a95c:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    a960:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
    a965:	74 71                	je     a9d8 <tmalloc_small+0x2d2>
    a967:	eb 13                	jmp    a97c <tmalloc_small+0x276>
    a969:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    a96d:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    a971:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a975:	48 8b 00             	mov    (%rax),%rax
    a978:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    a97c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    a980:	48 83 c0 28          	add    $0x28,%rax
    a984:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    a988:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    a98c:	48 8b 00             	mov    (%rax),%rax
    a98f:	48 85 c0             	test   %rax,%rax
    a992:	75 d5                	jne    a969 <tmalloc_small+0x263>
    a994:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    a998:	48 83 c0 20          	add    $0x20,%rax
    a99c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    a9a0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    a9a4:	48 8b 00             	mov    (%rax),%rax
    a9a7:	48 85 c0             	test   %rax,%rax
    a9aa:	75 bd                	jne    a969 <tmalloc_small+0x263>
    a9ac:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a9b3:	48 8b 40 18          	mov    0x18(%rax),%rax
    a9b7:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
    a9bb:	0f 96 c0             	setbe  %al
    a9be:	0f b6 c0             	movzbl %al,%eax
    a9c1:	48 85 c0             	test   %rax,%rax
    a9c4:	74 0d                	je     a9d3 <tmalloc_small+0x2cd>
    a9c6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a9ca:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a9d1:	eb 05                	jmp    a9d8 <tmalloc_small+0x2d2>
    a9d3:	e8 f1 3a 01 00       	callq  1e4c9 <abort>
    a9d8:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    a9dd:	0f 84 92 01 00 00    	je     ab75 <tmalloc_small+0x46f>
    a9e3:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    a9e7:	8b 40 38             	mov    0x38(%rax),%eax
    a9ea:	89 c0                	mov    %eax,%eax
    a9ec:	48 83 c0 4a          	add    $0x4a,%rax
    a9f0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a9f7:	00 
    a9f8:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a9ff:	48 01 d0             	add    %rdx,%rax
    aa02:	48 83 c0 08          	add    $0x8,%rax
    aa06:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    aa0a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    aa0e:	48 8b 00             	mov    (%rax),%rax
    aa11:	48 3b 45 80          	cmp    -0x80(%rbp),%rax
    aa15:	75 43                	jne    aa5a <tmalloc_small+0x354>
    aa17:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    aa1b:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    aa1f:	48 89 10             	mov    %rdx,(%rax)
    aa22:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    aa26:	48 8b 00             	mov    (%rax),%rax
    aa29:	48 85 c0             	test   %rax,%rax
    aa2c:	75 75                	jne    aaa3 <tmalloc_small+0x39d>
    aa2e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    aa35:	8b 50 04             	mov    0x4(%rax),%edx
    aa38:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    aa3c:	8b 40 38             	mov    0x38(%rax),%eax
    aa3f:	be 01 00 00 00       	mov    $0x1,%esi
    aa44:	89 c1                	mov    %eax,%ecx
    aa46:	d3 e6                	shl    %cl,%esi
    aa48:	89 f0                	mov    %esi,%eax
    aa4a:	f7 d0                	not    %eax
    aa4c:	21 c2                	and    %eax,%edx
    aa4e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    aa55:	89 50 04             	mov    %edx,0x4(%rax)
    aa58:	eb 49                	jmp    aaa3 <tmalloc_small+0x39d>
    aa5a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    aa61:	48 8b 40 18          	mov    0x18(%rax),%rax
    aa65:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    aa69:	0f 96 c0             	setbe  %al
    aa6c:	0f b6 c0             	movzbl %al,%eax
    aa6f:	48 85 c0             	test   %rax,%rax
    aa72:	74 2a                	je     aa9e <tmalloc_small+0x398>
    aa74:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    aa78:	48 8b 40 20          	mov    0x20(%rax),%rax
    aa7c:	48 3b 45 80          	cmp    -0x80(%rbp),%rax
    aa80:	75 0e                	jne    aa90 <tmalloc_small+0x38a>
    aa82:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    aa86:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    aa8a:	48 89 50 20          	mov    %rdx,0x20(%rax)
    aa8e:	eb 13                	jmp    aaa3 <tmalloc_small+0x39d>
    aa90:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    aa94:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    aa98:	48 89 50 28          	mov    %rdx,0x28(%rax)
    aa9c:	eb 05                	jmp    aaa3 <tmalloc_small+0x39d>
    aa9e:	e8 26 3a 01 00       	callq  1e4c9 <abort>
    aaa3:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
    aaa8:	0f 84 c7 00 00 00    	je     ab75 <tmalloc_small+0x46f>
    aaae:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    aab5:	48 8b 40 18          	mov    0x18(%rax),%rax
    aab9:	48 3b 45 90          	cmp    -0x70(%rbp),%rax
    aabd:	0f 96 c0             	setbe  %al
    aac0:	0f b6 c0             	movzbl %al,%eax
    aac3:	48 85 c0             	test   %rax,%rax
    aac6:	0f 84 a4 00 00 00    	je     ab70 <tmalloc_small+0x46a>
    aacc:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    aad0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    aad4:	48 89 50 30          	mov    %rdx,0x30(%rax)
    aad8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    aadc:	48 8b 40 20          	mov    0x20(%rax),%rax
    aae0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    aae4:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    aae9:	74 39                	je     ab24 <tmalloc_small+0x41e>
    aaeb:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    aaf2:	48 8b 40 18          	mov    0x18(%rax),%rax
    aaf6:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    aafa:	0f 96 c0             	setbe  %al
    aafd:	0f b6 c0             	movzbl %al,%eax
    ab00:	48 85 c0             	test   %rax,%rax
    ab03:	74 1a                	je     ab1f <tmalloc_small+0x419>
    ab05:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    ab09:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ab0d:	48 89 50 20          	mov    %rdx,0x20(%rax)
    ab11:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ab15:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    ab19:	48 89 50 30          	mov    %rdx,0x30(%rax)
    ab1d:	eb 05                	jmp    ab24 <tmalloc_small+0x41e>
    ab1f:	e8 a5 39 01 00       	callq  1e4c9 <abort>
    ab24:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    ab28:	48 8b 40 28          	mov    0x28(%rax),%rax
    ab2c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    ab30:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    ab35:	74 3e                	je     ab75 <tmalloc_small+0x46f>
    ab37:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    ab3e:	48 8b 40 18          	mov    0x18(%rax),%rax
    ab42:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    ab46:	0f 96 c0             	setbe  %al
    ab49:	0f b6 c0             	movzbl %al,%eax
    ab4c:	48 85 c0             	test   %rax,%rax
    ab4f:	74 1a                	je     ab6b <tmalloc_small+0x465>
    ab51:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    ab55:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ab59:	48 89 50 28          	mov    %rdx,0x28(%rax)
    ab5d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ab61:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    ab65:	48 89 50 30          	mov    %rdx,0x30(%rax)
    ab69:	eb 0a                	jmp    ab75 <tmalloc_small+0x46f>
    ab6b:	e8 59 39 01 00       	callq  1e4c9 <abort>
    ab70:	e8 54 39 01 00       	callq  1e4c9 <abort>
    ab75:	48 83 7d 88 1f       	cmpq   $0x1f,-0x78(%rbp)
    ab7a:	0f 87 81 00 00 00    	ja     ac01 <tmalloc_small+0x4fb>
    ab80:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    ab84:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    ab8b:	48 01 d0             	add    %rdx,%rax
    ab8e:	48 83 c8 03          	or     $0x3,%rax
    ab92:	48 89 c2             	mov    %rax,%rdx
    ab95:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    ab99:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ab9d:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    aba1:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    aba8:	48 01 c2             	add    %rax,%rdx
    abab:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    abaf:	48 01 d0             	add    %rdx,%rax
    abb2:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
    abb6:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    abbd:	48 01 d1             	add    %rdx,%rcx
    abc0:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    abc4:	48 01 ca             	add    %rcx,%rdx
    abc7:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    abcb:	48 83 ca 01          	or     $0x1,%rdx
    abcf:	48 89 50 08          	mov    %rdx,0x8(%rax)
    abd3:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    abd7:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    abde:	48 01 c2             	add    %rax,%rdx
    abe1:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    abe5:	48 01 d0             	add    %rdx,%rax
    abe8:	48 8b 0d 91 7d 21 00 	mov    0x217d91(%rip),%rcx        # 222980 <mparams>
    abef:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    abf6:	48 31 ca             	xor    %rcx,%rdx
    abf9:	48 89 10             	mov    %rdx,(%rax)
    abfc:	e9 ac 01 00 00       	jmpq   adad <tmalloc_small+0x6a7>
    ac01:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    ac08:	48 83 c8 03          	or     $0x3,%rax
    ac0c:	48 89 c2             	mov    %rax,%rdx
    ac0f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    ac13:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ac17:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    ac1b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    ac22:	48 01 d0             	add    %rdx,%rax
    ac25:	48 8b 0d 54 7d 21 00 	mov    0x217d54(%rip),%rcx        # 222980 <mparams>
    ac2c:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    ac33:	48 31 ca             	xor    %rcx,%rdx
    ac36:	48 89 10             	mov    %rdx,(%rax)
    ac39:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ac3d:	48 83 c8 01          	or     $0x1,%rax
    ac41:	48 89 c2             	mov    %rax,%rdx
    ac44:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ac48:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ac4c:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    ac50:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ac54:	48 01 c2             	add    %rax,%rdx
    ac57:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ac5b:	48 89 02             	mov    %rax,(%rdx)
    ac5e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    ac65:	48 8b 40 08          	mov    0x8(%rax),%rax
    ac69:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ac6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac71:	48 c1 e8 03          	shr    $0x3,%rax
    ac75:	48 83 f8 1f          	cmp    $0x1f,%rax
    ac79:	76 05                	jbe    ac80 <tmalloc_small+0x57a>
    ac7b:	e8 49 38 01 00       	callq  1e4c9 <abort>
    ac80:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    ac85:	0f 84 04 01 00 00    	je     ad8f <tmalloc_small+0x689>
    ac8b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    ac92:	48 8b 40 20          	mov    0x20(%rax),%rax
    ac96:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    ac9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac9e:	48 c1 e8 03          	shr    $0x3,%rax
    aca2:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
    aca8:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    acae:	01 c0                	add    %eax,%eax
    acb0:	89 c0                	mov    %eax,%eax
    acb2:	48 83 c0 08          	add    $0x8,%rax
    acb6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    acbd:	00 
    acbe:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    acc5:	48 01 d0             	add    %rdx,%rax
    acc8:	48 83 c0 08          	add    $0x8,%rax
    accc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    acd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acd4:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    acd8:	48 83 7d e8 1f       	cmpq   $0x1f,-0x18(%rbp)
    acdd:	77 05                	ja     ace4 <tmalloc_small+0x5de>
    acdf:	e8 e5 37 01 00       	callq  1e4c9 <abort>
    ace4:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    aceb:	8b 10                	mov    (%rax),%edx
    aced:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    acf3:	be 01 00 00 00       	mov    $0x1,%esi
    acf8:	89 c1                	mov    %eax,%ecx
    acfa:	d3 e6                	shl    %cl,%esi
    acfc:	89 f0                	mov    %esi,%eax
    acfe:	21 d0                	and    %edx,%eax
    ad00:	85 c0                	test   %eax,%eax
    ad02:	75 27                	jne    ad2b <tmalloc_small+0x625>
    ad04:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    ad0b:	8b 10                	mov    (%rax),%edx
    ad0d:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    ad13:	be 01 00 00 00       	mov    $0x1,%esi
    ad18:	89 c1                	mov    %eax,%ecx
    ad1a:	d3 e6                	shl    %cl,%esi
    ad1c:	89 f0                	mov    %esi,%eax
    ad1e:	09 c2                	or     %eax,%edx
    ad20:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    ad27:	89 10                	mov    %edx,(%rax)
    ad29:	eb 34                	jmp    ad5f <tmalloc_small+0x659>
    ad2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad2f:	48 8b 50 10          	mov    0x10(%rax),%rdx
    ad33:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    ad3a:	48 8b 40 18          	mov    0x18(%rax),%rax
    ad3e:	48 39 c2             	cmp    %rax,%rdx
    ad41:	0f 93 c0             	setae  %al
    ad44:	0f b6 c0             	movzbl %al,%eax
    ad47:	48 85 c0             	test   %rax,%rax
    ad4a:	74 0e                	je     ad5a <tmalloc_small+0x654>
    ad4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad50:	48 8b 40 10          	mov    0x10(%rax),%rax
    ad54:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    ad58:	eb 05                	jmp    ad5f <tmalloc_small+0x659>
    ad5a:	e8 6a 37 01 00       	callq  1e4c9 <abort>
    ad5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad63:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ad67:	48 89 50 10          	mov    %rdx,0x10(%rax)
    ad6b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ad6f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ad73:	48 89 50 18          	mov    %rdx,0x18(%rax)
    ad77:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ad7b:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    ad7f:	48 89 50 10          	mov    %rdx,0x10(%rax)
    ad83:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ad87:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ad8b:	48 89 50 18          	mov    %rdx,0x18(%rax)
    ad8f:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    ad96:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    ad9a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ad9e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    ada5:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    ada9:	48 89 50 20          	mov    %rdx,0x20(%rax)
    adad:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    adb1:	48 83 c0 10          	add    $0x10,%rax
    adb5:	eb 05                	jmp    adbc <tmalloc_small+0x6b6>
    adb7:	e8 0d 37 01 00       	callq  1e4c9 <abort>
    adbc:	c9                   	leaveq 
    adbd:	c3                   	retq   

000000000000adbe <dlmalloc>:
    adbe:	55                   	push   %rbp
    adbf:	48 89 e5             	mov    %rsp,%rbp
    adc2:	53                   	push   %rbx
    adc3:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
    adca:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    add1:	48 8b 05 a8 7b 21 00 	mov    0x217ba8(%rip),%rax        # 222980 <mparams>
    add8:	48 85 c0             	test   %rax,%rax
    addb:	75 07                	jne    ade4 <dlmalloc+0x26>
    addd:	e8 91 9f ff ff       	callq  4d73 <init_mparams>
    ade2:	85 c0                	test   %eax,%eax
    ade4:	90                   	nop
    ade5:	8b 05 45 7f 21 00    	mov    0x217f45(%rip),%eax        # 222d30 <_gm_+0x370>
    adeb:	83 e0 02             	and    $0x2,%eax
    adee:	85 c0                	test   %eax,%eax
    adf0:	74 23                	je     ae15 <dlmalloc+0x57>
    adf2:	b8 01 00 00 00       	mov    $0x1,%eax
    adf7:	87 05 37 7f 21 00    	xchg   %eax,0x217f37(%rip)        # 222d34 <_gm_+0x374>
    adfd:	85 c0                	test   %eax,%eax
    adff:	74 14                	je     ae15 <dlmalloc+0x57>
    ae01:	48 8d 3d 2c 7f 21 00 	lea    0x217f2c(%rip),%rdi        # 222d34 <_gm_+0x374>
    ae08:	e8 72 9e ff ff       	callq  4c7f <spin_acquire_lock>
    ae0d:	85 c0                	test   %eax,%eax
    ae0f:	0f 85 8a 0a 00 00    	jne    b89f <dlmalloc+0xae1>
    ae15:	48 81 bd 18 ff ff ff 	cmpq   $0xe8,-0xe8(%rbp)
    ae1c:	e8 00 00 00 
    ae20:	0f 87 0b 07 00 00    	ja     b531 <dlmalloc+0x773>
    ae26:	48 83 bd 18 ff ff ff 	cmpq   $0xe,-0xe8(%rbp)
    ae2d:	0e 
    ae2e:	76 11                	jbe    ae41 <dlmalloc+0x83>
    ae30:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ae37:	48 83 c0 17          	add    $0x17,%rax
    ae3b:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    ae3f:	eb 05                	jmp    ae46 <dlmalloc+0x88>
    ae41:	b8 20 00 00 00       	mov    $0x20,%eax
    ae46:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    ae4d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    ae54:	48 c1 e8 03          	shr    $0x3,%rax
    ae58:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
    ae5e:	8b 15 5c 7b 21 00    	mov    0x217b5c(%rip),%edx        # 2229c0 <_gm_>
    ae64:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
    ae6a:	89 c1                	mov    %eax,%ecx
    ae6c:	d3 ea                	shr    %cl,%edx
    ae6e:	89 d0                	mov    %edx,%eax
    ae70:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
    ae76:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
    ae7c:	83 e0 03             	and    $0x3,%eax
    ae7f:	85 c0                	test   %eax,%eax
    ae81:	0f 84 1e 02 00 00    	je     b0a5 <dlmalloc+0x2e7>
    ae87:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
    ae8d:	83 e0 01             	and    $0x1,%eax
    ae90:	85 c0                	test   %eax,%eax
    ae92:	0f 94 c0             	sete   %al
    ae95:	0f b6 c0             	movzbl %al,%eax
    ae98:	01 85 2c ff ff ff    	add    %eax,-0xd4(%rbp)
    ae9e:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
    aea4:	01 c0                	add    %eax,%eax
    aea6:	89 c0                	mov    %eax,%eax
    aea8:	48 83 c0 08          	add    $0x8,%rax
    aeac:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    aeb3:	00 
    aeb4:	48 8d 05 05 7b 21 00 	lea    0x217b05(%rip),%rax        # 2229c0 <_gm_>
    aebb:	48 01 d0             	add    %rdx,%rax
    aebe:	48 83 c0 08          	add    $0x8,%rax
    aec2:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    aec9:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    aed0:	48 8b 40 10          	mov    0x10(%rax),%rax
    aed4:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    aedb:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    aee2:	48 8b 40 08          	mov    0x8(%rax),%rax
    aee6:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    aeea:	48 89 c2             	mov    %rax,%rdx
    aeed:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
    aef3:	c1 e0 03             	shl    $0x3,%eax
    aef6:	89 c0                	mov    %eax,%eax
    aef8:	48 39 c2             	cmp    %rax,%rdx
    aefb:	74 05                	je     af02 <dlmalloc+0x144>
    aefd:	e8 c7 35 01 00       	callq  1e4c9 <abort>
    af02:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    af09:	48 8b 40 10          	mov    0x10(%rax),%rax
    af0d:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    af14:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    af1b:	48 3b 85 60 ff ff ff 	cmp    -0xa0(%rbp),%rax
    af22:	75 05                	jne    af29 <dlmalloc+0x16b>
    af24:	e8 a0 35 01 00       	callq  1e4c9 <abort>
    af29:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    af30:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
    af37:	75 05                	jne    af3e <dlmalloc+0x180>
    af39:	e8 8b 35 01 00       	callq  1e4c9 <abort>
    af3e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    af45:	48 8b 40 08          	mov    0x8(%rax),%rax
    af49:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    af4d:	48 89 c2             	mov    %rax,%rdx
    af50:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
    af56:	c1 e0 03             	shl    $0x3,%eax
    af59:	89 c0                	mov    %eax,%eax
    af5b:	48 39 c2             	cmp    %rax,%rdx
    af5e:	74 05                	je     af65 <dlmalloc+0x1a7>
    af60:	e8 64 35 01 00       	callq  1e4c9 <abort>
    af65:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    af6c:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
    af73:	75 23                	jne    af98 <dlmalloc+0x1da>
    af75:	8b 15 45 7a 21 00    	mov    0x217a45(%rip),%edx        # 2229c0 <_gm_>
    af7b:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
    af81:	be 01 00 00 00       	mov    $0x1,%esi
    af86:	89 c1                	mov    %eax,%ecx
    af88:	d3 e6                	shl    %cl,%esi
    af8a:	89 f0                	mov    %esi,%eax
    af8c:	f7 d0                	not    %eax
    af8e:	21 d0                	and    %edx,%eax
    af90:	89 05 2a 7a 21 00    	mov    %eax,0x217a2a(%rip)        # 2229c0 <_gm_>
    af96:	eb 61                	jmp    aff9 <dlmalloc+0x23b>
    af98:	48 8b 05 39 7a 21 00 	mov    0x217a39(%rip),%rax        # 2229d8 <_gm_+0x18>
    af9f:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
    afa6:	0f 96 c0             	setbe  %al
    afa9:	0f b6 c0             	movzbl %al,%eax
    afac:	48 85 c0             	test   %rax,%rax
    afaf:	74 43                	je     aff4 <dlmalloc+0x236>
    afb1:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    afb8:	48 8b 40 18          	mov    0x18(%rax),%rax
    afbc:	48 3b 85 68 ff ff ff 	cmp    -0x98(%rbp),%rax
    afc3:	0f 94 c0             	sete   %al
    afc6:	0f b6 c0             	movzbl %al,%eax
    afc9:	48 85 c0             	test   %rax,%rax
    afcc:	74 26                	je     aff4 <dlmalloc+0x236>
    afce:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    afd5:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    afdc:	48 89 50 18          	mov    %rdx,0x18(%rax)
    afe0:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    afe7:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
    afee:	48 89 50 10          	mov    %rdx,0x10(%rax)
    aff2:	eb 05                	jmp    aff9 <dlmalloc+0x23b>
    aff4:	e8 d0 34 01 00       	callq  1e4c9 <abort>
    aff9:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
    afff:	c1 e0 03             	shl    $0x3,%eax
    b002:	83 c8 03             	or     $0x3,%eax
    b005:	89 c2                	mov    %eax,%edx
    b007:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    b00e:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b012:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
    b018:	c1 e0 03             	shl    $0x3,%eax
    b01b:	89 c2                	mov    %eax,%edx
    b01d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    b024:	48 01 d0             	add    %rdx,%rax
    b027:	8b 95 2c ff ff ff    	mov    -0xd4(%rbp),%edx
    b02d:	c1 e2 03             	shl    $0x3,%edx
    b030:	89 d1                	mov    %edx,%ecx
    b032:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    b039:	48 01 ca             	add    %rcx,%rdx
    b03c:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    b040:	48 83 ca 01          	or     $0x1,%rdx
    b044:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b048:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
    b04e:	c1 e0 03             	shl    $0x3,%eax
    b051:	89 c2                	mov    %eax,%edx
    b053:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    b05a:	48 01 d0             	add    %rdx,%rax
    b05d:	48 8b 0d 1c 79 21 00 	mov    0x21791c(%rip),%rcx        # 222980 <mparams>
    b064:	48 8d 15 55 79 21 00 	lea    0x217955(%rip),%rdx        # 2229c0 <_gm_>
    b06b:	48 31 ca             	xor    %rcx,%rdx
    b06e:	48 89 10             	mov    %rdx,(%rax)
    b071:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    b078:	48 83 c0 10          	add    $0x10,%rax
    b07c:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    b083:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    b08a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    b091:	48 89 c6             	mov    %rax,%rsi
    b094:	48 8d 3d 25 79 21 00 	lea    0x217925(%rip),%rdi        # 2229c0 <_gm_>
    b09b:	e8 96 a2 ff ff       	callq  5336 <do_check_malloced_chunk>
    b0a0:	e9 86 07 00 00       	jmpq   b82b <dlmalloc+0xa6d>
    b0a5:	48 8b 05 1c 79 21 00 	mov    0x21791c(%rip),%rax        # 2229c8 <_gm_+0x8>
    b0ac:	48 3b 85 50 ff ff ff 	cmp    -0xb0(%rbp),%rax
    b0b3:	0f 83 fb 04 00 00    	jae    b5b4 <dlmalloc+0x7f6>
    b0b9:	83 bd 30 ff ff ff 00 	cmpl   $0x0,-0xd0(%rbp)
    b0c0:	0f 84 10 04 00 00    	je     b4d6 <dlmalloc+0x718>
    b0c6:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
    b0cc:	8b 95 30 ff ff ff    	mov    -0xd0(%rbp),%edx
    b0d2:	89 c1                	mov    %eax,%ecx
    b0d4:	d3 e2                	shl    %cl,%edx
    b0d6:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
    b0dc:	be 01 00 00 00       	mov    $0x1,%esi
    b0e1:	89 c1                	mov    %eax,%ecx
    b0e3:	d3 e6                	shl    %cl,%esi
    b0e5:	89 f0                	mov    %esi,%eax
    b0e7:	8d 34 00             	lea    (%rax,%rax,1),%esi
    b0ea:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
    b0f0:	bf 01 00 00 00       	mov    $0x1,%edi
    b0f5:	89 c1                	mov    %eax,%ecx
    b0f7:	d3 e7                	shl    %cl,%edi
    b0f9:	89 f8                	mov    %edi,%eax
    b0fb:	01 c0                	add    %eax,%eax
    b0fd:	f7 d8                	neg    %eax
    b0ff:	09 f0                	or     %esi,%eax
    b101:	21 d0                	and    %edx,%eax
    b103:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
    b109:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
    b10f:	f7 d8                	neg    %eax
    b111:	23 85 34 ff ff ff    	and    -0xcc(%rbp),%eax
    b117:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)
    b11d:	31 c0                	xor    %eax,%eax
    b11f:	f3 0f bc 85 38 ff ff 	tzcnt  -0xc8(%rbp),%eax
    b126:	ff 
    b127:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
    b12d:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
    b133:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
    b139:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
    b13f:	01 c0                	add    %eax,%eax
    b141:	89 c0                	mov    %eax,%eax
    b143:	48 83 c0 08          	add    $0x8,%rax
    b147:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    b14e:	00 
    b14f:	48 8d 05 6a 78 21 00 	lea    0x21786a(%rip),%rax        # 2229c0 <_gm_>
    b156:	48 01 d0             	add    %rdx,%rax
    b159:	48 83 c0 08          	add    $0x8,%rax
    b15d:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    b164:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    b16b:	48 8b 40 10          	mov    0x10(%rax),%rax
    b16f:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    b173:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    b177:	48 8b 40 08          	mov    0x8(%rax),%rax
    b17b:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b17f:	48 89 c2             	mov    %rax,%rdx
    b182:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
    b188:	c1 e0 03             	shl    $0x3,%eax
    b18b:	89 c0                	mov    %eax,%eax
    b18d:	48 39 c2             	cmp    %rax,%rdx
    b190:	74 05                	je     b197 <dlmalloc+0x3d9>
    b192:	e8 32 33 01 00       	callq  1e4c9 <abort>
    b197:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    b19b:	48 8b 40 10          	mov    0x10(%rax),%rax
    b19f:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    b1a3:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    b1a7:	48 3b 85 78 ff ff ff 	cmp    -0x88(%rbp),%rax
    b1ae:	75 05                	jne    b1b5 <dlmalloc+0x3f7>
    b1b0:	e8 14 33 01 00       	callq  1e4c9 <abort>
    b1b5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    b1b9:	48 3b 45 88          	cmp    -0x78(%rbp),%rax
    b1bd:	75 05                	jne    b1c4 <dlmalloc+0x406>
    b1bf:	e8 05 33 01 00       	callq  1e4c9 <abort>
    b1c4:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    b1c8:	48 8b 40 08          	mov    0x8(%rax),%rax
    b1cc:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b1d0:	48 89 c2             	mov    %rax,%rdx
    b1d3:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
    b1d9:	c1 e0 03             	shl    $0x3,%eax
    b1dc:	89 c0                	mov    %eax,%eax
    b1de:	48 39 c2             	cmp    %rax,%rdx
    b1e1:	74 05                	je     b1e8 <dlmalloc+0x42a>
    b1e3:	e8 e1 32 01 00       	callq  1e4c9 <abort>
    b1e8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    b1ef:	48 3b 45 88          	cmp    -0x78(%rbp),%rax
    b1f3:	75 23                	jne    b218 <dlmalloc+0x45a>
    b1f5:	8b 15 c5 77 21 00    	mov    0x2177c5(%rip),%edx        # 2229c0 <_gm_>
    b1fb:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
    b201:	be 01 00 00 00       	mov    $0x1,%esi
    b206:	89 c1                	mov    %eax,%ecx
    b208:	d3 e6                	shl    %cl,%esi
    b20a:	89 f0                	mov    %esi,%eax
    b20c:	f7 d0                	not    %eax
    b20e:	21 d0                	and    %edx,%eax
    b210:	89 05 aa 77 21 00    	mov    %eax,0x2177aa(%rip)        # 2229c0 <_gm_>
    b216:	eb 52                	jmp    b26a <dlmalloc+0x4ac>
    b218:	48 8b 05 b9 77 21 00 	mov    0x2177b9(%rip),%rax        # 2229d8 <_gm_+0x18>
    b21f:	48 3b 45 88          	cmp    -0x78(%rbp),%rax
    b223:	0f 96 c0             	setbe  %al
    b226:	0f b6 c0             	movzbl %al,%eax
    b229:	48 85 c0             	test   %rax,%rax
    b22c:	74 37                	je     b265 <dlmalloc+0x4a7>
    b22e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    b232:	48 8b 40 18          	mov    0x18(%rax),%rax
    b236:	48 3b 45 80          	cmp    -0x80(%rbp),%rax
    b23a:	0f 94 c0             	sete   %al
    b23d:	0f b6 c0             	movzbl %al,%eax
    b240:	48 85 c0             	test   %rax,%rax
    b243:	74 20                	je     b265 <dlmalloc+0x4a7>
    b245:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    b249:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    b250:	48 89 50 18          	mov    %rdx,0x18(%rax)
    b254:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    b25b:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    b25f:	48 89 50 10          	mov    %rdx,0x10(%rax)
    b263:	eb 05                	jmp    b26a <dlmalloc+0x4ac>
    b265:	e8 5f 32 01 00       	callq  1e4c9 <abort>
    b26a:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
    b270:	c1 e0 03             	shl    $0x3,%eax
    b273:	89 c0                	mov    %eax,%eax
    b275:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
    b27c:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    b280:	48 83 7d 90 1f       	cmpq   $0x1f,-0x70(%rbp)
    b285:	77 71                	ja     b2f8 <dlmalloc+0x53a>
    b287:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
    b28d:	c1 e0 03             	shl    $0x3,%eax
    b290:	83 c8 03             	or     $0x3,%eax
    b293:	89 c2                	mov    %eax,%edx
    b295:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    b299:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b29d:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
    b2a3:	c1 e0 03             	shl    $0x3,%eax
    b2a6:	89 c2                	mov    %eax,%edx
    b2a8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    b2ac:	48 01 d0             	add    %rdx,%rax
    b2af:	8b 95 40 ff ff ff    	mov    -0xc0(%rbp),%edx
    b2b5:	c1 e2 03             	shl    $0x3,%edx
    b2b8:	89 d1                	mov    %edx,%ecx
    b2ba:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    b2be:	48 01 ca             	add    %rcx,%rdx
    b2c1:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    b2c5:	48 83 ca 01          	or     $0x1,%rdx
    b2c9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b2cd:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
    b2d3:	c1 e0 03             	shl    $0x3,%eax
    b2d6:	89 c2                	mov    %eax,%edx
    b2d8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    b2dc:	48 01 d0             	add    %rdx,%rax
    b2df:	48 8b 0d 9a 76 21 00 	mov    0x21769a(%rip),%rcx        # 222980 <mparams>
    b2e6:	48 8d 15 d3 76 21 00 	lea    0x2176d3(%rip),%rdx        # 2229c0 <_gm_>
    b2ed:	48 31 ca             	xor    %rcx,%rdx
    b2f0:	48 89 10             	mov    %rdx,(%rax)
    b2f3:	e9 ad 01 00 00       	jmpq   b4a5 <dlmalloc+0x6e7>
    b2f8:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    b2ff:	48 83 c8 03          	or     $0x3,%rax
    b303:	48 89 c2             	mov    %rax,%rdx
    b306:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    b30a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b30e:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    b312:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    b319:	48 01 d0             	add    %rdx,%rax
    b31c:	48 8b 0d 5d 76 21 00 	mov    0x21765d(%rip),%rcx        # 222980 <mparams>
    b323:	48 8d 15 96 76 21 00 	lea    0x217696(%rip),%rdx        # 2229c0 <_gm_>
    b32a:	48 31 ca             	xor    %rcx,%rdx
    b32d:	48 89 10             	mov    %rdx,(%rax)
    b330:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    b334:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    b33b:	48 01 d0             	add    %rdx,%rax
    b33e:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    b342:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    b346:	48 83 c8 01          	or     $0x1,%rax
    b34a:	48 89 c2             	mov    %rax,%rdx
    b34d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    b351:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b355:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    b359:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    b35d:	48 01 c2             	add    %rax,%rdx
    b360:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    b364:	48 89 02             	mov    %rax,(%rdx)
    b367:	48 8b 05 5a 76 21 00 	mov    0x21765a(%rip),%rax        # 2229c8 <_gm_+0x8>
    b36e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    b372:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    b376:	48 c1 e8 03          	shr    $0x3,%rax
    b37a:	48 83 f8 1f          	cmp    $0x1f,%rax
    b37e:	76 05                	jbe    b385 <dlmalloc+0x5c7>
    b380:	e8 44 31 01 00       	callq  1e4c9 <abort>
    b385:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
    b38a:	0f 84 ff 00 00 00    	je     b48f <dlmalloc+0x6d1>
    b390:	48 8b 05 49 76 21 00 	mov    0x217649(%rip),%rax        # 2229e0 <_gm_+0x20>
    b397:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    b39b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    b39f:	48 c1 e8 03          	shr    $0x3,%rax
    b3a3:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    b3a9:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    b3af:	01 c0                	add    %eax,%eax
    b3b1:	89 c0                	mov    %eax,%eax
    b3b3:	48 83 c0 08          	add    $0x8,%rax
    b3b7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    b3be:	00 
    b3bf:	48 8d 05 fa 75 21 00 	lea    0x2175fa(%rip),%rax        # 2229c0 <_gm_>
    b3c6:	48 01 d0             	add    %rdx,%rax
    b3c9:	48 83 c0 08          	add    $0x8,%rax
    b3cd:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    b3d1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    b3d5:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    b3dc:	48 83 7d a0 1f       	cmpq   $0x1f,-0x60(%rbp)
    b3e1:	77 05                	ja     b3e8 <dlmalloc+0x62a>
    b3e3:	e8 e1 30 01 00       	callq  1e4c9 <abort>
    b3e8:	8b 15 d2 75 21 00    	mov    0x2175d2(%rip),%edx        # 2229c0 <_gm_>
    b3ee:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    b3f4:	be 01 00 00 00       	mov    $0x1,%esi
    b3f9:	89 c1                	mov    %eax,%ecx
    b3fb:	d3 e6                	shl    %cl,%esi
    b3fd:	89 f0                	mov    %esi,%eax
    b3ff:	21 d0                	and    %edx,%eax
    b401:	85 c0                	test   %eax,%eax
    b403:	75 21                	jne    b426 <dlmalloc+0x668>
    b405:	8b 15 b5 75 21 00    	mov    0x2175b5(%rip),%edx        # 2229c0 <_gm_>
    b40b:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    b411:	be 01 00 00 00       	mov    $0x1,%esi
    b416:	89 c1                	mov    %eax,%ecx
    b418:	d3 e6                	shl    %cl,%esi
    b41a:	89 f0                	mov    %esi,%eax
    b41c:	09 d0                	or     %edx,%eax
    b41e:	89 05 9c 75 21 00    	mov    %eax,0x21759c(%rip)        # 2229c0 <_gm_>
    b424:	eb 33                	jmp    b459 <dlmalloc+0x69b>
    b426:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    b42a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    b42e:	48 8b 05 a3 75 21 00 	mov    0x2175a3(%rip),%rax        # 2229d8 <_gm_+0x18>
    b435:	48 39 c2             	cmp    %rax,%rdx
    b438:	0f 93 c0             	setae  %al
    b43b:	0f b6 c0             	movzbl %al,%eax
    b43e:	48 85 c0             	test   %rax,%rax
    b441:	74 11                	je     b454 <dlmalloc+0x696>
    b443:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    b447:	48 8b 40 10          	mov    0x10(%rax),%rax
    b44b:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    b452:	eb 05                	jmp    b459 <dlmalloc+0x69b>
    b454:	e8 70 30 01 00       	callq  1e4c9 <abort>
    b459:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    b45d:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    b461:	48 89 50 10          	mov    %rdx,0x10(%rax)
    b465:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    b46c:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    b470:	48 89 50 18          	mov    %rdx,0x18(%rax)
    b474:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b478:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    b47f:	48 89 50 10          	mov    %rdx,0x10(%rax)
    b483:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b487:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    b48b:	48 89 50 18          	mov    %rdx,0x18(%rax)
    b48f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    b493:	48 89 05 2e 75 21 00 	mov    %rax,0x21752e(%rip)        # 2229c8 <_gm_+0x8>
    b49a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    b49e:	48 89 05 3b 75 21 00 	mov    %rax,0x21753b(%rip)        # 2229e0 <_gm_+0x20>
    b4a5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    b4a9:	48 83 c0 10          	add    $0x10,%rax
    b4ad:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    b4b4:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    b4bb:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    b4c2:	48 89 c6             	mov    %rax,%rsi
    b4c5:	48 8d 3d f4 74 21 00 	lea    0x2174f4(%rip),%rdi        # 2229c0 <_gm_>
    b4cc:	e8 65 9e ff ff       	callq  5336 <do_check_malloced_chunk>
    b4d1:	e9 55 03 00 00       	jmpq   b82b <dlmalloc+0xa6d>
    b4d6:	8b 05 e8 74 21 00    	mov    0x2174e8(%rip),%eax        # 2229c4 <_gm_+0x4>
    b4dc:	85 c0                	test   %eax,%eax
    b4de:	0f 84 d0 00 00 00    	je     b5b4 <dlmalloc+0x7f6>
    b4e4:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    b4eb:	48 89 c6             	mov    %rax,%rsi
    b4ee:	48 8d 3d cb 74 21 00 	lea    0x2174cb(%rip),%rdi        # 2229c0 <_gm_>
    b4f5:	e8 0c f2 ff ff       	callq  a706 <tmalloc_small>
    b4fa:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    b501:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
    b508:	00 
    b509:	0f 84 a5 00 00 00    	je     b5b4 <dlmalloc+0x7f6>
    b50f:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    b516:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    b51d:	48 89 c6             	mov    %rax,%rsi
    b520:	48 8d 3d 99 74 21 00 	lea    0x217499(%rip),%rdi        # 2229c0 <_gm_>
    b527:	e8 0a 9e ff ff       	callq  5336 <do_check_malloced_chunk>
    b52c:	e9 fa 02 00 00       	jmpq   b82b <dlmalloc+0xa6d>
    b531:	48 81 bd 18 ff ff ff 	cmpq   $0xffffffffffffff7f,-0xe8(%rbp)
    b538:	7f ff ff ff 
    b53c:	76 0d                	jbe    b54b <dlmalloc+0x78d>
    b53e:	48 c7 85 50 ff ff ff 	movq   $0xffffffffffffffff,-0xb0(%rbp)
    b545:	ff ff ff ff 
    b549:	eb 69                	jmp    b5b4 <dlmalloc+0x7f6>
    b54b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    b552:	48 83 c0 17          	add    $0x17,%rax
    b556:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b55a:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    b561:	8b 05 5d 74 21 00    	mov    0x21745d(%rip),%eax        # 2229c4 <_gm_+0x4>
    b567:	85 c0                	test   %eax,%eax
    b569:	74 49                	je     b5b4 <dlmalloc+0x7f6>
    b56b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    b572:	48 89 c6             	mov    %rax,%rsi
    b575:	48 8d 3d 44 74 21 00 	lea    0x217444(%rip),%rdi        # 2229c0 <_gm_>
    b57c:	e8 19 e5 ff ff       	callq  9a9a <tmalloc_large>
    b581:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    b588:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
    b58f:	00 
    b590:	74 22                	je     b5b4 <dlmalloc+0x7f6>
    b592:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    b599:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    b5a0:	48 89 c6             	mov    %rax,%rsi
    b5a3:	48 8d 3d 16 74 21 00 	lea    0x217416(%rip),%rdi        # 2229c0 <_gm_>
    b5aa:	e8 87 9d ff ff       	callq  5336 <do_check_malloced_chunk>
    b5af:	e9 77 02 00 00       	jmpq   b82b <dlmalloc+0xa6d>
    b5b4:	48 8b 05 0d 74 21 00 	mov    0x21740d(%rip),%rax        # 2229c8 <_gm_+0x8>
    b5bb:	48 3b 85 50 ff ff ff 	cmp    -0xb0(%rbp),%rax
    b5c2:	0f 82 58 01 00 00    	jb     b720 <dlmalloc+0x962>
    b5c8:	48 8b 05 f9 73 21 00 	mov    0x2173f9(%rip),%rax        # 2229c8 <_gm_+0x8>
    b5cf:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
    b5d6:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    b5da:	48 8b 05 ff 73 21 00 	mov    0x2173ff(%rip),%rax        # 2229e0 <_gm_+0x20>
    b5e1:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    b5e5:	48 83 7d b8 1f       	cmpq   $0x1f,-0x48(%rbp)
    b5ea:	0f 86 8a 00 00 00    	jbe    b67a <dlmalloc+0x8bc>
    b5f0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    b5f4:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    b5fb:	48 01 d0             	add    %rdx,%rax
    b5fe:	48 89 05 db 73 21 00 	mov    %rax,0x2173db(%rip)        # 2229e0 <_gm_+0x20>
    b605:	48 8b 05 d4 73 21 00 	mov    0x2173d4(%rip),%rax        # 2229e0 <_gm_+0x20>
    b60c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    b610:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b614:	48 89 05 ad 73 21 00 	mov    %rax,0x2173ad(%rip)        # 2229c8 <_gm_+0x8>
    b61b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b61f:	48 83 c8 01          	or     $0x1,%rax
    b623:	48 89 c2             	mov    %rax,%rdx
    b626:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b62a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b62e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b632:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b636:	48 01 c2             	add    %rax,%rdx
    b639:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b63d:	48 89 02             	mov    %rax,(%rdx)
    b640:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    b647:	48 83 c8 03          	or     $0x3,%rax
    b64b:	48 89 c2             	mov    %rax,%rdx
    b64e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b652:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b656:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    b65a:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    b661:	48 01 d0             	add    %rdx,%rax
    b664:	48 8b 0d 15 73 21 00 	mov    0x217315(%rip),%rcx        # 222980 <mparams>
    b66b:	48 8d 15 4e 73 21 00 	lea    0x21734e(%rip),%rdx        # 2229c0 <_gm_>
    b672:	48 31 ca             	xor    %rcx,%rdx
    b675:	48 89 10             	mov    %rdx,(%rax)
    b678:	eb 75                	jmp    b6ef <dlmalloc+0x931>
    b67a:	48 8b 05 47 73 21 00 	mov    0x217347(%rip),%rax        # 2229c8 <_gm_+0x8>
    b681:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    b685:	48 c7 05 38 73 21 00 	movq   $0x0,0x217338(%rip)        # 2229c8 <_gm_+0x8>
    b68c:	00 00 00 00 
    b690:	48 c7 05 45 73 21 00 	movq   $0x0,0x217345(%rip)        # 2229e0 <_gm_+0x20>
    b697:	00 00 00 00 
    b69b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b69f:	48 83 c8 03          	or     $0x3,%rax
    b6a3:	48 89 c2             	mov    %rax,%rdx
    b6a6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b6aa:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b6ae:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    b6b2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b6b6:	48 01 d0             	add    %rdx,%rax
    b6b9:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    b6bd:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b6c1:	48 01 ca             	add    %rcx,%rdx
    b6c4:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    b6c8:	48 83 ca 01          	or     $0x1,%rdx
    b6cc:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b6d0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    b6d4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b6d8:	48 01 d0             	add    %rdx,%rax
    b6db:	48 8b 0d 9e 72 21 00 	mov    0x21729e(%rip),%rcx        # 222980 <mparams>
    b6e2:	48 8d 15 d7 72 21 00 	lea    0x2172d7(%rip),%rdx        # 2229c0 <_gm_>
    b6e9:	48 31 ca             	xor    %rcx,%rdx
    b6ec:	48 89 10             	mov    %rdx,(%rax)
    b6ef:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b6f3:	48 83 c0 10          	add    $0x10,%rax
    b6f7:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    b6fe:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    b705:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    b70c:	48 89 c6             	mov    %rax,%rsi
    b70f:	48 8d 3d aa 72 21 00 	lea    0x2172aa(%rip),%rdi        # 2229c0 <_gm_>
    b716:	e8 1b 9c ff ff       	callq  5336 <do_check_malloced_chunk>
    b71b:	e9 0b 01 00 00       	jmpq   b82b <dlmalloc+0xa6d>
    b720:	48 8b 05 a9 72 21 00 	mov    0x2172a9(%rip),%rax        # 2229d0 <_gm_+0x10>
    b727:	48 3b 85 50 ff ff ff 	cmp    -0xb0(%rbp),%rax
    b72e:	0f 86 da 00 00 00    	jbe    b80e <dlmalloc+0xa50>
    b734:	48 8b 05 95 72 21 00 	mov    0x217295(%rip),%rax        # 2229d0 <_gm_+0x10>
    b73b:	48 2b 85 50 ff ff ff 	sub    -0xb0(%rbp),%rax
    b742:	48 89 05 87 72 21 00 	mov    %rax,0x217287(%rip)        # 2229d0 <_gm_+0x10>
    b749:	48 8b 05 80 72 21 00 	mov    0x217280(%rip),%rax        # 2229d0 <_gm_+0x10>
    b750:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    b754:	48 8b 05 8d 72 21 00 	mov    0x21728d(%rip),%rax        # 2229e8 <_gm_+0x28>
    b75b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    b75f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b763:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    b76a:	48 01 d0             	add    %rdx,%rax
    b76d:	48 89 05 74 72 21 00 	mov    %rax,0x217274(%rip)        # 2229e8 <_gm_+0x28>
    b774:	48 8b 05 6d 72 21 00 	mov    0x21726d(%rip),%rax        # 2229e8 <_gm_+0x28>
    b77b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b77f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b783:	48 83 c8 01          	or     $0x1,%rax
    b787:	48 89 c2             	mov    %rax,%rdx
    b78a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b78e:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b792:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    b799:	48 83 c8 03          	or     $0x3,%rax
    b79d:	48 89 c2             	mov    %rax,%rdx
    b7a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b7a4:	48 89 50 08          	mov    %rdx,0x8(%rax)
    b7a8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b7ac:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    b7b3:	48 01 d0             	add    %rdx,%rax
    b7b6:	48 8b 0d c3 71 21 00 	mov    0x2171c3(%rip),%rcx        # 222980 <mparams>
    b7bd:	48 8d 15 fc 71 21 00 	lea    0x2171fc(%rip),%rdx        # 2229c0 <_gm_>
    b7c4:	48 31 ca             	xor    %rcx,%rdx
    b7c7:	48 89 10             	mov    %rdx,(%rax)
    b7ca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b7ce:	48 83 c0 10          	add    $0x10,%rax
    b7d2:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    b7d9:	48 8b 05 08 72 21 00 	mov    0x217208(%rip),%rax        # 2229e8 <_gm_+0x28>
    b7e0:	48 89 c6             	mov    %rax,%rsi
    b7e3:	48 8d 3d d6 71 21 00 	lea    0x2171d6(%rip),%rdi        # 2229c0 <_gm_>
    b7ea:	e8 b6 97 ff ff       	callq  4fa5 <do_check_top_chunk>
    b7ef:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    b7f6:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    b7fd:	48 89 c6             	mov    %rax,%rsi
    b800:	48 8d 3d b9 71 21 00 	lea    0x2171b9(%rip),%rdi        # 2229c0 <_gm_>
    b807:	e8 2a 9b ff ff       	callq  5336 <do_check_malloced_chunk>
    b80c:	eb 1d                	jmp    b82b <dlmalloc+0xa6d>
    b80e:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    b815:	48 89 c6             	mov    %rax,%rsi
    b818:	48 8d 3d a1 71 21 00 	lea    0x2171a1(%rip),%rdi        # 2229c0 <_gm_>
    b81f:	e8 be c2 ff ff       	callq  7ae2 <sys_alloc>
    b824:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    b82b:	48 83 bd 48 ff ff ff 	cmpq   $0x0,-0xb8(%rbp)
    b832:	00 
    b833:	74 49                	je     b87e <dlmalloc+0xac0>
    b835:	e8 d3 76 ff ff       	callq  2f0d <get_heap_base>
    b83a:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
    b841:	77 36                	ja     b879 <dlmalloc+0xabb>
    b843:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    b84a:	48 f7 d0             	not    %rax
    b84d:	48 3b 85 18 ff ff ff 	cmp    -0xe8(%rbp),%rax
    b854:	72 23                	jb     b879 <dlmalloc+0xabb>
    b856:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    b85d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    b864:	48 01 d0             	add    %rdx,%rax
    b867:	48 89 c3             	mov    %rax,%rbx
    b86a:	bf 00 00 00 00       	mov    $0x0,%edi
    b86f:	e8 9f 2d 00 00       	callq  e613 <sbrk>
    b874:	48 39 c3             	cmp    %rax,%rbx
    b877:	76 05                	jbe    b87e <dlmalloc+0xac0>
    b879:	e8 4b 2c 01 00       	callq  1e4c9 <abort>
    b87e:	8b 05 ac 74 21 00    	mov    0x2174ac(%rip),%eax        # 222d30 <_gm_+0x370>
    b884:	83 e0 02             	and    $0x2,%eax
    b887:	85 c0                	test   %eax,%eax
    b889:	74 0b                	je     b896 <dlmalloc+0xad8>
    b88b:	b8 00 00 00 00       	mov    $0x0,%eax
    b890:	89 05 9e 74 21 00    	mov    %eax,0x21749e(%rip)        # 222d34 <_gm_+0x374>
    b896:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    b89d:	eb 05                	jmp    b8a4 <dlmalloc+0xae6>
    b89f:	b8 00 00 00 00       	mov    $0x0,%eax
    b8a4:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
    b8ab:	5b                   	pop    %rbx
    b8ac:	5d                   	pop    %rbp
    b8ad:	c3                   	retq   

000000000000b8ae <dlfree>:
    b8ae:	55                   	push   %rbp
    b8af:	48 89 e5             	mov    %rsp,%rbp
    b8b2:	48 81 ec 60 01 00 00 	sub    $0x160,%rsp
    b8b9:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
    b8c0:	48 83 bd a8 fe ff ff 	cmpq   $0x0,-0x158(%rbp)
    b8c7:	00 
    b8c8:	0f 84 fc 14 00 00    	je     cdca <dlfree+0x151c>
    b8ce:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    b8d5:	48 83 e8 10          	sub    $0x10,%rax
    b8d9:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
    b8e0:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    b8e7:	48 8b 40 08          	mov    0x8(%rax),%rax
    b8eb:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b8ef:	48 89 c2             	mov    %rax,%rdx
    b8f2:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    b8f9:	48 01 d0             	add    %rdx,%rax
    b8fc:	48 8b 10             	mov    (%rax),%rdx
    b8ff:	48 8b 05 7a 70 21 00 	mov    0x21707a(%rip),%rax        # 222980 <mparams>
    b906:	48 31 d0             	xor    %rdx,%rax
    b909:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    b910:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    b917:	48 8b 50 40          	mov    0x40(%rax),%rdx
    b91b:	48 8b 05 5e 70 21 00 	mov    0x21705e(%rip),%rax        # 222980 <mparams>
    b922:	48 39 c2             	cmp    %rax,%rdx
    b925:	74 05                	je     b92c <dlfree+0x7e>
    b927:	e8 9d 2b 01 00       	callq  1e4c9 <abort>
    b92c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    b933:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
    b939:	83 e0 02             	and    $0x2,%eax
    b93c:	85 c0                	test   %eax,%eax
    b93e:	74 36                	je     b976 <dlfree+0xc8>
    b940:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    b947:	48 8d 90 74 03 00 00 	lea    0x374(%rax),%rdx
    b94e:	b8 01 00 00 00       	mov    $0x1,%eax
    b953:	87 02                	xchg   %eax,(%rdx)
    b955:	85 c0                	test   %eax,%eax
    b957:	74 1d                	je     b976 <dlfree+0xc8>
    b959:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    b960:	48 05 74 03 00 00    	add    $0x374,%rax
    b966:	48 89 c7             	mov    %rax,%rdi
    b969:	e8 11 93 ff ff       	callq  4c7f <spin_acquire_lock>
    b96e:	85 c0                	test   %eax,%eax
    b970:	0f 85 54 14 00 00    	jne    cdca <dlfree+0x151c>
    b976:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    b97d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    b984:	48 89 d6             	mov    %rdx,%rsi
    b987:	48 89 c7             	mov    %rax,%rdi
    b98a:	e8 60 97 ff ff       	callq  50ef <do_check_inuse_chunk>
    b98f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    b996:	48 8b 40 18          	mov    0x18(%rax),%rax
    b99a:	48 3b 85 c8 fe ff ff 	cmp    -0x138(%rbp),%rax
    b9a1:	0f 96 c0             	setbe  %al
    b9a4:	0f b6 c0             	movzbl %al,%eax
    b9a7:	48 85 c0             	test   %rax,%rax
    b9aa:	0f 84 e9 13 00 00    	je     cd99 <dlfree+0x14eb>
    b9b0:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    b9b7:	48 8b 40 08          	mov    0x8(%rax),%rax
    b9bb:	83 e0 03             	and    $0x3,%eax
    b9be:	48 83 f8 01          	cmp    $0x1,%rax
    b9c2:	0f 95 c0             	setne  %al
    b9c5:	0f b6 c0             	movzbl %al,%eax
    b9c8:	48 85 c0             	test   %rax,%rax
    b9cb:	0f 84 c8 13 00 00    	je     cd99 <dlfree+0x14eb>
    b9d1:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    b9d8:	48 8b 40 08          	mov    0x8(%rax),%rax
    b9dc:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b9e0:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    b9e7:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    b9ee:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    b9f5:	48 01 d0             	add    %rdx,%rax
    b9f8:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    b9ff:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    ba06:	48 8b 40 08          	mov    0x8(%rax),%rax
    ba0a:	83 e0 01             	and    $0x1,%eax
    ba0d:	48 85 c0             	test   %rax,%rax
    ba10:	0f 85 3a 07 00 00    	jne    c150 <dlfree+0x8a2>
    ba16:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    ba1d:	48 8b 00             	mov    (%rax),%rax
    ba20:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    ba27:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    ba2e:	48 8b 40 08          	mov    0x8(%rax),%rax
    ba32:	83 e0 03             	and    $0x3,%eax
    ba35:	48 85 c0             	test   %rax,%rax
    ba38:	75 21                	jne    ba5b <dlfree+0x1ad>
    ba3a:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
    ba41:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    ba48:	48 01 d0             	add    %rdx,%rax
    ba4b:	48 83 c0 20          	add    $0x20,%rax
    ba4f:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    ba56:	e9 47 13 00 00       	jmpq   cda2 <dlfree+0x14f4>
    ba5b:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    ba62:	48 f7 d8             	neg    %rax
    ba65:	48 89 c2             	mov    %rax,%rdx
    ba68:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    ba6f:	48 01 d0             	add    %rdx,%rax
    ba72:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    ba79:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    ba80:	48 01 85 d0 fe ff ff 	add    %rax,-0x130(%rbp)
    ba87:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    ba8e:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
    ba95:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    ba9c:	48 8b 40 18          	mov    0x18(%rax),%rax
    baa0:	48 3b 85 38 ff ff ff 	cmp    -0xc8(%rbp),%rax
    baa7:	0f 96 c0             	setbe  %al
    baaa:	0f b6 c0             	movzbl %al,%eax
    baad:	48 85 c0             	test   %rax,%rax
    bab0:	0f 84 e2 12 00 00    	je     cd98 <dlfree+0x14ea>
    bab6:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    babd:	48 8b 40 20          	mov    0x20(%rax),%rax
    bac1:	48 3b 85 c8 fe ff ff 	cmp    -0x138(%rbp),%rax
    bac8:	0f 84 06 06 00 00    	je     c0d4 <dlfree+0x826>
    bace:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    bad5:	48 c1 e8 03          	shr    $0x3,%rax
    bad9:	48 83 f8 1f          	cmp    $0x1f,%rax
    badd:	0f 87 f9 01 00 00    	ja     bcdc <dlfree+0x42e>
    bae3:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    baea:	48 8b 40 10          	mov    0x10(%rax),%rax
    baee:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    baf5:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    bafc:	48 8b 40 18          	mov    0x18(%rax),%rax
    bb00:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    bb07:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    bb0e:	48 c1 e8 03          	shr    $0x3,%rax
    bb12:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%rbp)
    bb18:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    bb1f:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
    bb26:	75 05                	jne    bb2d <dlfree+0x27f>
    bb28:	e8 9c 29 01 00       	callq  1e4c9 <abort>
    bb2d:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    bb34:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
    bb3b:	75 05                	jne    bb42 <dlfree+0x294>
    bb3d:	e8 87 29 01 00       	callq  1e4c9 <abort>
    bb42:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    bb49:	48 8b 40 08          	mov    0x8(%rax),%rax
    bb4d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    bb51:	48 89 c2             	mov    %rax,%rdx
    bb54:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
    bb5a:	c1 e0 03             	shl    $0x3,%eax
    bb5d:	89 c0                	mov    %eax,%eax
    bb5f:	48 39 c2             	cmp    %rax,%rdx
    bb62:	74 05                	je     bb69 <dlfree+0x2bb>
    bb64:	e8 60 29 01 00       	callq  1e4c9 <abort>
    bb69:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
    bb6f:	01 c0                	add    %eax,%eax
    bb71:	89 c0                	mov    %eax,%eax
    bb73:	48 83 c0 08          	add    $0x8,%rax
    bb77:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bb7e:	00 
    bb7f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    bb86:	48 01 d0             	add    %rdx,%rax
    bb89:	48 83 c0 08          	add    $0x8,%rax
    bb8d:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
    bb94:	0f 94 c0             	sete   %al
    bb97:	0f b6 c0             	movzbl %al,%eax
    bb9a:	48 85 c0             	test   %rax,%rax
    bb9d:	75 4e                	jne    bbed <dlfree+0x33f>
    bb9f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    bba6:	48 8b 40 18          	mov    0x18(%rax),%rax
    bbaa:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
    bbb1:	0f 96 c0             	setbe  %al
    bbb4:	0f b6 c0             	movzbl %al,%eax
    bbb7:	48 85 c0             	test   %rax,%rax
    bbba:	74 24                	je     bbe0 <dlfree+0x332>
    bbbc:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    bbc3:	48 8b 40 18          	mov    0x18(%rax),%rax
    bbc7:	48 3b 85 c8 fe ff ff 	cmp    -0x138(%rbp),%rax
    bbce:	0f 94 c0             	sete   %al
    bbd1:	0f b6 c0             	movzbl %al,%eax
    bbd4:	48 85 c0             	test   %rax,%rax
    bbd7:	74 07                	je     bbe0 <dlfree+0x332>
    bbd9:	b8 01 00 00 00       	mov    $0x1,%eax
    bbde:	eb 05                	jmp    bbe5 <dlfree+0x337>
    bbe0:	b8 00 00 00 00       	mov    $0x0,%eax
    bbe5:	85 c0                	test   %eax,%eax
    bbe7:	0f 84 ea 00 00 00    	je     bcd7 <dlfree+0x429>
    bbed:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    bbf4:	48 3b 85 40 ff ff ff 	cmp    -0xc0(%rbp),%rax
    bbfb:	75 2c                	jne    bc29 <dlfree+0x37b>
    bbfd:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    bc04:	8b 10                	mov    (%rax),%edx
    bc06:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
    bc0c:	be 01 00 00 00       	mov    $0x1,%esi
    bc11:	89 c1                	mov    %eax,%ecx
    bc13:	d3 e6                	shl    %cl,%esi
    bc15:	89 f0                	mov    %esi,%eax
    bc17:	f7 d0                	not    %eax
    bc19:	21 c2                	and    %eax,%edx
    bc1b:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    bc22:	89 10                	mov    %edx,(%rax)
    bc24:	e9 27 05 00 00       	jmpq   c150 <dlfree+0x8a2>
    bc29:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
    bc2f:	01 c0                	add    %eax,%eax
    bc31:	89 c0                	mov    %eax,%eax
    bc33:	48 83 c0 08          	add    $0x8,%rax
    bc37:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bc3e:	00 
    bc3f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    bc46:	48 01 d0             	add    %rdx,%rax
    bc49:	48 83 c0 08          	add    $0x8,%rax
    bc4d:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
    bc54:	0f 94 c0             	sete   %al
    bc57:	0f b6 c0             	movzbl %al,%eax
    bc5a:	48 85 c0             	test   %rax,%rax
    bc5d:	75 4a                	jne    bca9 <dlfree+0x3fb>
    bc5f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    bc66:	48 8b 40 18          	mov    0x18(%rax),%rax
    bc6a:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
    bc71:	0f 96 c0             	setbe  %al
    bc74:	0f b6 c0             	movzbl %al,%eax
    bc77:	48 85 c0             	test   %rax,%rax
    bc7a:	74 24                	je     bca0 <dlfree+0x3f2>
    bc7c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    bc83:	48 8b 40 10          	mov    0x10(%rax),%rax
    bc87:	48 3b 85 c8 fe ff ff 	cmp    -0x138(%rbp),%rax
    bc8e:	0f 94 c0             	sete   %al
    bc91:	0f b6 c0             	movzbl %al,%eax
    bc94:	48 85 c0             	test   %rax,%rax
    bc97:	74 07                	je     bca0 <dlfree+0x3f2>
    bc99:	b8 01 00 00 00       	mov    $0x1,%eax
    bc9e:	eb 05                	jmp    bca5 <dlfree+0x3f7>
    bca0:	b8 00 00 00 00       	mov    $0x0,%eax
    bca5:	85 c0                	test   %eax,%eax
    bca7:	74 29                	je     bcd2 <dlfree+0x424>
    bca9:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    bcb0:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    bcb7:	48 89 50 18          	mov    %rdx,0x18(%rax)
    bcbb:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    bcc2:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    bcc9:	48 89 50 10          	mov    %rdx,0x10(%rax)
    bccd:	e9 7e 04 00 00       	jmpq   c150 <dlfree+0x8a2>
    bcd2:	e8 f2 27 01 00       	callq  1e4c9 <abort>
    bcd7:	e8 ed 27 01 00       	callq  1e4c9 <abort>
    bcdc:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    bce3:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    bcea:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    bcf1:	48 8b 40 30          	mov    0x30(%rax),%rax
    bcf5:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    bcfc:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    bd03:	48 8b 40 18          	mov    0x18(%rax),%rax
    bd07:	48 3b 85 50 ff ff ff 	cmp    -0xb0(%rbp),%rax
    bd0e:	0f 84 b9 00 00 00    	je     bdcd <dlfree+0x51f>
    bd14:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    bd1b:	48 8b 40 10          	mov    0x10(%rax),%rax
    bd1f:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    bd26:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    bd2d:	48 8b 40 18          	mov    0x18(%rax),%rax
    bd31:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    bd38:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    bd3f:	48 8b 40 18          	mov    0x18(%rax),%rax
    bd43:	48 3b 85 60 ff ff ff 	cmp    -0xa0(%rbp),%rax
    bd4a:	0f 96 c0             	setbe  %al
    bd4d:	0f b6 c0             	movzbl %al,%eax
    bd50:	48 85 c0             	test   %rax,%rax
    bd53:	74 24                	je     bd79 <dlfree+0x4cb>
    bd55:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    bd5c:	48 8b 40 18          	mov    0x18(%rax),%rax
    bd60:	48 3b 85 50 ff ff ff 	cmp    -0xb0(%rbp),%rax
    bd67:	0f 94 c0             	sete   %al
    bd6a:	0f b6 c0             	movzbl %al,%eax
    bd6d:	48 85 c0             	test   %rax,%rax
    bd70:	74 07                	je     bd79 <dlfree+0x4cb>
    bd72:	b8 01 00 00 00       	mov    $0x1,%eax
    bd77:	eb 05                	jmp    bd7e <dlfree+0x4d0>
    bd79:	b8 00 00 00 00       	mov    $0x0,%eax
    bd7e:	85 c0                	test   %eax,%eax
    bd80:	74 46                	je     bdc8 <dlfree+0x51a>
    bd82:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    bd89:	48 8b 40 10          	mov    0x10(%rax),%rax
    bd8d:	48 3b 85 50 ff ff ff 	cmp    -0xb0(%rbp),%rax
    bd94:	0f 94 c0             	sete   %al
    bd97:	0f b6 c0             	movzbl %al,%eax
    bd9a:	48 85 c0             	test   %rax,%rax
    bd9d:	74 29                	je     bdc8 <dlfree+0x51a>
    bd9f:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    bda6:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    bdad:	48 89 50 18          	mov    %rdx,0x18(%rax)
    bdb1:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    bdb8:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    bdbf:	48 89 50 10          	mov    %rdx,0x10(%rax)
    bdc3:	e9 f8 00 00 00       	jmpq   bec0 <dlfree+0x612>
    bdc8:	e8 fc 26 01 00       	callq  1e4c9 <abort>
    bdcd:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    bdd4:	48 83 c0 28          	add    $0x28,%rax
    bdd8:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    bddf:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    bde6:	48 8b 00             	mov    (%rax),%rax
    bde9:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    bdf0:	48 83 bd d8 fe ff ff 	cmpq   $0x0,-0x128(%rbp)
    bdf7:	00 
    bdf8:	75 52                	jne    be4c <dlfree+0x59e>
    bdfa:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    be01:	48 83 c0 20          	add    $0x20,%rax
    be05:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    be0c:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    be13:	48 8b 00             	mov    (%rax),%rax
    be16:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    be1d:	48 83 bd d8 fe ff ff 	cmpq   $0x0,-0x128(%rbp)
    be24:	00 
    be25:	0f 84 95 00 00 00    	je     bec0 <dlfree+0x612>
    be2b:	eb 1f                	jmp    be4c <dlfree+0x59e>
    be2d:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    be34:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    be3b:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    be42:	48 8b 00             	mov    (%rax),%rax
    be45:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    be4c:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    be53:	48 83 c0 28          	add    $0x28,%rax
    be57:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    be5e:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    be65:	48 8b 00             	mov    (%rax),%rax
    be68:	48 85 c0             	test   %rax,%rax
    be6b:	75 c0                	jne    be2d <dlfree+0x57f>
    be6d:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    be74:	48 83 c0 20          	add    $0x20,%rax
    be78:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    be7f:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    be86:	48 8b 00             	mov    (%rax),%rax
    be89:	48 85 c0             	test   %rax,%rax
    be8c:	75 9f                	jne    be2d <dlfree+0x57f>
    be8e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    be95:	48 8b 40 18          	mov    0x18(%rax),%rax
    be99:	48 3b 85 e0 fe ff ff 	cmp    -0x120(%rbp),%rax
    bea0:	0f 96 c0             	setbe  %al
    bea3:	0f b6 c0             	movzbl %al,%eax
    bea6:	48 85 c0             	test   %rax,%rax
    bea9:	74 10                	je     bebb <dlfree+0x60d>
    beab:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    beb2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    beb9:	eb 05                	jmp    bec0 <dlfree+0x612>
    bebb:	e8 09 26 01 00       	callq  1e4c9 <abort>
    bec0:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
    bec7:	00 
    bec8:	0f 84 82 02 00 00    	je     c150 <dlfree+0x8a2>
    bece:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    bed5:	8b 40 38             	mov    0x38(%rax),%eax
    bed8:	89 c0                	mov    %eax,%eax
    beda:	48 83 c0 4a          	add    $0x4a,%rax
    bede:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bee5:	00 
    bee6:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    beed:	48 01 d0             	add    %rdx,%rax
    bef0:	48 83 c0 08          	add    $0x8,%rax
    bef4:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    befb:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    bf02:	48 8b 00             	mov    (%rax),%rax
    bf05:	48 3b 85 50 ff ff ff 	cmp    -0xb0(%rbp),%rax
    bf0c:	75 53                	jne    bf61 <dlfree+0x6b3>
    bf0e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    bf15:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    bf1c:	48 89 10             	mov    %rdx,(%rax)
    bf1f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    bf26:	48 8b 00             	mov    (%rax),%rax
    bf29:	48 85 c0             	test   %rax,%rax
    bf2c:	0f 85 8d 00 00 00    	jne    bfbf <dlfree+0x711>
    bf32:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    bf39:	8b 50 04             	mov    0x4(%rax),%edx
    bf3c:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    bf43:	8b 40 38             	mov    0x38(%rax),%eax
    bf46:	be 01 00 00 00       	mov    $0x1,%esi
    bf4b:	89 c1                	mov    %eax,%ecx
    bf4d:	d3 e6                	shl    %cl,%esi
    bf4f:	89 f0                	mov    %esi,%eax
    bf51:	f7 d0                	not    %eax
    bf53:	21 c2                	and    %eax,%edx
    bf55:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    bf5c:	89 50 04             	mov    %edx,0x4(%rax)
    bf5f:	eb 5e                	jmp    bfbf <dlfree+0x711>
    bf61:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    bf68:	48 8b 40 18          	mov    0x18(%rax),%rax
    bf6c:	48 3b 85 58 ff ff ff 	cmp    -0xa8(%rbp),%rax
    bf73:	0f 96 c0             	setbe  %al
    bf76:	0f b6 c0             	movzbl %al,%eax
    bf79:	48 85 c0             	test   %rax,%rax
    bf7c:	74 3c                	je     bfba <dlfree+0x70c>
    bf7e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    bf85:	48 8b 40 20          	mov    0x20(%rax),%rax
    bf89:	48 3b 85 50 ff ff ff 	cmp    -0xb0(%rbp),%rax
    bf90:	75 14                	jne    bfa6 <dlfree+0x6f8>
    bf92:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    bf99:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    bfa0:	48 89 50 20          	mov    %rdx,0x20(%rax)
    bfa4:	eb 19                	jmp    bfbf <dlfree+0x711>
    bfa6:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    bfad:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    bfb4:	48 89 50 28          	mov    %rdx,0x28(%rax)
    bfb8:	eb 05                	jmp    bfbf <dlfree+0x711>
    bfba:	e8 0a 25 01 00       	callq  1e4c9 <abort>
    bfbf:	48 83 bd d8 fe ff ff 	cmpq   $0x0,-0x128(%rbp)
    bfc6:	00 
    bfc7:	0f 84 83 01 00 00    	je     c150 <dlfree+0x8a2>
    bfcd:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    bfd4:	48 8b 40 18          	mov    0x18(%rax),%rax
    bfd8:	48 3b 85 d8 fe ff ff 	cmp    -0x128(%rbp),%rax
    bfdf:	0f 96 c0             	setbe  %al
    bfe2:	0f b6 c0             	movzbl %al,%eax
    bfe5:	48 85 c0             	test   %rax,%rax
    bfe8:	0f 84 e1 00 00 00    	je     c0cf <dlfree+0x821>
    bfee:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    bff5:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    bffc:	48 89 50 30          	mov    %rdx,0x30(%rax)
    c000:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    c007:	48 8b 40 20          	mov    0x20(%rax),%rax
    c00b:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    c012:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
    c019:	00 
    c01a:	74 48                	je     c064 <dlfree+0x7b6>
    c01c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c023:	48 8b 40 18          	mov    0x18(%rax),%rax
    c027:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax
    c02e:	0f 96 c0             	setbe  %al
    c031:	0f b6 c0             	movzbl %al,%eax
    c034:	48 85 c0             	test   %rax,%rax
    c037:	74 26                	je     c05f <dlfree+0x7b1>
    c039:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    c040:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
    c047:	48 89 50 20          	mov    %rdx,0x20(%rax)
    c04b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    c052:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    c059:	48 89 50 30          	mov    %rdx,0x30(%rax)
    c05d:	eb 05                	jmp    c064 <dlfree+0x7b6>
    c05f:	e8 65 24 01 00       	callq  1e4c9 <abort>
    c064:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    c06b:	48 8b 40 28          	mov    0x28(%rax),%rax
    c06f:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    c076:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
    c07d:	00 
    c07e:	0f 84 cc 00 00 00    	je     c150 <dlfree+0x8a2>
    c084:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c08b:	48 8b 40 18          	mov    0x18(%rax),%rax
    c08f:	48 3b 85 78 ff ff ff 	cmp    -0x88(%rbp),%rax
    c096:	0f 96 c0             	setbe  %al
    c099:	0f b6 c0             	movzbl %al,%eax
    c09c:	48 85 c0             	test   %rax,%rax
    c09f:	74 29                	je     c0ca <dlfree+0x81c>
    c0a1:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    c0a8:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    c0af:	48 89 50 28          	mov    %rdx,0x28(%rax)
    c0b3:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    c0ba:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    c0c1:	48 89 50 30          	mov    %rdx,0x30(%rax)
    c0c5:	e9 86 00 00 00       	jmpq   c150 <dlfree+0x8a2>
    c0ca:	e8 fa 23 01 00       	callq  1e4c9 <abort>
    c0cf:	e8 f5 23 01 00       	callq  1e4c9 <abort>
    c0d4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c0db:	48 8b 40 08          	mov    0x8(%rax),%rax
    c0df:	83 e0 03             	and    $0x3,%eax
    c0e2:	48 83 f8 03          	cmp    $0x3,%rax
    c0e6:	75 68                	jne    c150 <dlfree+0x8a2>
    c0e8:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c0ef:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
    c0f6:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c0fa:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c101:	48 8b 40 08          	mov    0x8(%rax),%rax
    c105:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    c109:	48 89 c2             	mov    %rax,%rdx
    c10c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c113:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c117:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    c11e:	48 83 c8 01          	or     $0x1,%rax
    c122:	48 89 c2             	mov    %rax,%rdx
    c125:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    c12c:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c130:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    c137:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    c13e:	48 01 c2             	add    %rax,%rdx
    c141:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    c148:	48 89 02             	mov    %rax,(%rdx)
    c14b:	e9 52 0c 00 00       	jmpq   cda2 <dlfree+0x14f4>
    c150:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    c157:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
    c15e:	0f 92 c0             	setb   %al
    c161:	0f b6 c0             	movzbl %al,%eax
    c164:	48 85 c0             	test   %rax,%rax
    c167:	0f 84 2c 0c 00 00    	je     cd99 <dlfree+0x14eb>
    c16d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c174:	48 8b 40 08          	mov    0x8(%rax),%rax
    c178:	83 e0 01             	and    $0x1,%eax
    c17b:	48 85 c0             	test   %rax,%rax
    c17e:	0f 95 c0             	setne  %al
    c181:	0f b6 c0             	movzbl %al,%eax
    c184:	48 85 c0             	test   %rax,%rax
    c187:	0f 84 0c 0c 00 00    	je     cd99 <dlfree+0x14eb>
    c18d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c194:	48 8b 40 08          	mov    0x8(%rax),%rax
    c198:	83 e0 02             	and    $0x2,%eax
    c19b:	48 85 c0             	test   %rax,%rax
    c19e:	0f 85 18 07 00 00    	jne    c8bc <dlfree+0x100e>
    c1a4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c1ab:	48 8b 40 28          	mov    0x28(%rax),%rax
    c1af:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
    c1b6:	0f 85 b7 00 00 00    	jne    c273 <dlfree+0x9c5>
    c1bc:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c1c3:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c1c7:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    c1ce:	48 01 c2             	add    %rax,%rdx
    c1d1:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c1d8:	48 89 50 10          	mov    %rdx,0x10(%rax)
    c1dc:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c1e3:	48 8b 40 10          	mov    0x10(%rax),%rax
    c1e7:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    c1eb:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c1f2:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    c1f9:	48 89 50 28          	mov    %rdx,0x28(%rax)
    c1fd:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    c201:	48 83 c8 01          	or     $0x1,%rax
    c205:	48 89 c2             	mov    %rax,%rdx
    c208:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    c20f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c213:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c21a:	48 8b 40 20          	mov    0x20(%rax),%rax
    c21e:	48 3b 85 c8 fe ff ff 	cmp    -0x138(%rbp),%rax
    c225:	75 1e                	jne    c245 <dlfree+0x997>
    c227:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c22e:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    c235:	00 
    c236:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c23d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c244:	00 
    c245:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c24c:	48 8b 40 30          	mov    0x30(%rax),%rax
    c250:	48 3b 45 80          	cmp    -0x80(%rbp),%rax
    c254:	0f 83 44 0b 00 00    	jae    cd9e <dlfree+0x14f0>
    c25a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c261:	be 00 00 00 00       	mov    $0x0,%esi
    c266:	48 89 c7             	mov    %rax,%rdi
    c269:	e8 d3 c2 ff ff       	callq  8541 <sys_trim>
    c26e:	e9 2b 0b 00 00       	jmpq   cd9e <dlfree+0x14f0>
    c273:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c27a:	48 8b 40 20          	mov    0x20(%rax),%rax
    c27e:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
    c285:	75 71                	jne    c2f8 <dlfree+0xa4a>
    c287:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c28e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    c292:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    c299:	48 01 c2             	add    %rax,%rdx
    c29c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c2a3:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c2a7:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c2ae:	48 8b 40 08          	mov    0x8(%rax),%rax
    c2b2:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    c2b6:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c2bd:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    c2c4:	48 89 50 20          	mov    %rdx,0x20(%rax)
    c2c8:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    c2cc:	48 83 c8 01          	or     $0x1,%rax
    c2d0:	48 89 c2             	mov    %rax,%rdx
    c2d3:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    c2da:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c2de:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    c2e5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    c2e9:	48 01 c2             	add    %rax,%rdx
    c2ec:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    c2f0:	48 89 02             	mov    %rax,(%rdx)
    c2f3:	e9 aa 0a 00 00       	jmpq   cda2 <dlfree+0x14f4>
    c2f8:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c2ff:	48 8b 40 08          	mov    0x8(%rax),%rax
    c303:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    c307:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    c30b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    c30f:	48 01 85 d0 fe ff ff 	add    %rax,-0x130(%rbp)
    c316:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    c31a:	48 c1 e8 03          	shr    $0x3,%rax
    c31e:	48 83 f8 1f          	cmp    $0x1f,%rax
    c322:	0f 87 c6 01 00 00    	ja     c4ee <dlfree+0xc40>
    c328:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c32f:	48 8b 40 10          	mov    0x10(%rax),%rax
    c333:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    c337:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c33e:	48 8b 40 18          	mov    0x18(%rax),%rax
    c342:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    c346:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    c34a:	48 c1 e8 03          	shr    $0x3,%rax
    c34e:	89 85 b8 fe ff ff    	mov    %eax,-0x148(%rbp)
    c354:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c35b:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
    c35f:	75 05                	jne    c366 <dlfree+0xab8>
    c361:	e8 63 21 01 00       	callq  1e4c9 <abort>
    c366:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c36d:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
    c371:	75 05                	jne    c378 <dlfree+0xaca>
    c373:	e8 51 21 01 00       	callq  1e4c9 <abort>
    c378:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c37f:	48 8b 40 08          	mov    0x8(%rax),%rax
    c383:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    c387:	48 89 c2             	mov    %rax,%rdx
    c38a:	8b 85 b8 fe ff ff    	mov    -0x148(%rbp),%eax
    c390:	c1 e0 03             	shl    $0x3,%eax
    c393:	89 c0                	mov    %eax,%eax
    c395:	48 39 c2             	cmp    %rax,%rdx
    c398:	74 05                	je     c39f <dlfree+0xaf1>
    c39a:	e8 2a 21 01 00       	callq  1e4c9 <abort>
    c39f:	8b 85 b8 fe ff ff    	mov    -0x148(%rbp),%eax
    c3a5:	01 c0                	add    %eax,%eax
    c3a7:	89 c0                	mov    %eax,%eax
    c3a9:	48 83 c0 08          	add    $0x8,%rax
    c3ad:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c3b4:	00 
    c3b5:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c3bc:	48 01 d0             	add    %rdx,%rax
    c3bf:	48 83 c0 08          	add    $0x8,%rax
    c3c3:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
    c3c7:	0f 94 c0             	sete   %al
    c3ca:	0f b6 c0             	movzbl %al,%eax
    c3cd:	48 85 c0             	test   %rax,%rax
    c3d0:	75 48                	jne    c41a <dlfree+0xb6c>
    c3d2:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c3d9:	48 8b 40 18          	mov    0x18(%rax),%rax
    c3dd:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
    c3e1:	0f 96 c0             	setbe  %al
    c3e4:	0f b6 c0             	movzbl %al,%eax
    c3e7:	48 85 c0             	test   %rax,%rax
    c3ea:	74 21                	je     c40d <dlfree+0xb5f>
    c3ec:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    c3f0:	48 8b 40 18          	mov    0x18(%rax),%rax
    c3f4:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
    c3fb:	0f 94 c0             	sete   %al
    c3fe:	0f b6 c0             	movzbl %al,%eax
    c401:	48 85 c0             	test   %rax,%rax
    c404:	74 07                	je     c40d <dlfree+0xb5f>
    c406:	b8 01 00 00 00       	mov    $0x1,%eax
    c40b:	eb 05                	jmp    c412 <dlfree+0xb64>
    c40d:	b8 00 00 00 00       	mov    $0x0,%eax
    c412:	85 c0                	test   %eax,%eax
    c414:	0f 84 cf 00 00 00    	je     c4e9 <dlfree+0xc3b>
    c41a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    c41e:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
    c422:	75 2c                	jne    c450 <dlfree+0xba2>
    c424:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c42b:	8b 10                	mov    (%rax),%edx
    c42d:	8b 85 b8 fe ff ff    	mov    -0x148(%rbp),%eax
    c433:	be 01 00 00 00       	mov    $0x1,%esi
    c438:	89 c1                	mov    %eax,%ecx
    c43a:	d3 e6                	shl    %cl,%esi
    c43c:	89 f0                	mov    %esi,%eax
    c43e:	f7 d0                	not    %eax
    c440:	21 c2                	and    %eax,%edx
    c442:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c449:	89 10                	mov    %edx,(%rax)
    c44b:	e9 0d 04 00 00       	jmpq   c85d <dlfree+0xfaf>
    c450:	8b 85 b8 fe ff ff    	mov    -0x148(%rbp),%eax
    c456:	01 c0                	add    %eax,%eax
    c458:	89 c0                	mov    %eax,%eax
    c45a:	48 83 c0 08          	add    $0x8,%rax
    c45e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c465:	00 
    c466:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c46d:	48 01 d0             	add    %rdx,%rax
    c470:	48 83 c0 08          	add    $0x8,%rax
    c474:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
    c478:	0f 94 c0             	sete   %al
    c47b:	0f b6 c0             	movzbl %al,%eax
    c47e:	48 85 c0             	test   %rax,%rax
    c481:	75 44                	jne    c4c7 <dlfree+0xc19>
    c483:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c48a:	48 8b 40 18          	mov    0x18(%rax),%rax
    c48e:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
    c492:	0f 96 c0             	setbe  %al
    c495:	0f b6 c0             	movzbl %al,%eax
    c498:	48 85 c0             	test   %rax,%rax
    c49b:	74 21                	je     c4be <dlfree+0xc10>
    c49d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    c4a1:	48 8b 40 10          	mov    0x10(%rax),%rax
    c4a5:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
    c4ac:	0f 94 c0             	sete   %al
    c4af:	0f b6 c0             	movzbl %al,%eax
    c4b2:	48 85 c0             	test   %rax,%rax
    c4b5:	74 07                	je     c4be <dlfree+0xc10>
    c4b7:	b8 01 00 00 00       	mov    $0x1,%eax
    c4bc:	eb 05                	jmp    c4c3 <dlfree+0xc15>
    c4be:	b8 00 00 00 00       	mov    $0x0,%eax
    c4c3:	85 c0                	test   %eax,%eax
    c4c5:	74 1d                	je     c4e4 <dlfree+0xc36>
    c4c7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    c4cb:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    c4cf:	48 89 50 18          	mov    %rdx,0x18(%rax)
    c4d3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    c4d7:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    c4db:	48 89 50 10          	mov    %rdx,0x10(%rax)
    c4df:	e9 79 03 00 00       	jmpq   c85d <dlfree+0xfaf>
    c4e4:	e8 e0 1f 01 00       	callq  1e4c9 <abort>
    c4e9:	e8 db 1f 01 00       	callq  1e4c9 <abort>
    c4ee:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c4f5:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    c4f9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c4fd:	48 8b 40 30          	mov    0x30(%rax),%rax
    c501:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    c505:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c509:	48 8b 40 18          	mov    0x18(%rax),%rax
    c50d:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
    c511:	0f 84 9e 00 00 00    	je     c5b5 <dlfree+0xd07>
    c517:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c51b:	48 8b 40 10          	mov    0x10(%rax),%rax
    c51f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    c523:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c527:	48 8b 40 18          	mov    0x18(%rax),%rax
    c52b:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    c532:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c539:	48 8b 40 18          	mov    0x18(%rax),%rax
    c53d:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
    c541:	0f 96 c0             	setbe  %al
    c544:	0f b6 c0             	movzbl %al,%eax
    c547:	48 85 c0             	test   %rax,%rax
    c54a:	74 1e                	je     c56a <dlfree+0xcbc>
    c54c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c550:	48 8b 40 18          	mov    0x18(%rax),%rax
    c554:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
    c558:	0f 94 c0             	sete   %al
    c55b:	0f b6 c0             	movzbl %al,%eax
    c55e:	48 85 c0             	test   %rax,%rax
    c561:	74 07                	je     c56a <dlfree+0xcbc>
    c563:	b8 01 00 00 00       	mov    $0x1,%eax
    c568:	eb 05                	jmp    c56f <dlfree+0xcc1>
    c56a:	b8 00 00 00 00       	mov    $0x0,%eax
    c56f:	85 c0                	test   %eax,%eax
    c571:	74 3d                	je     c5b0 <dlfree+0xd02>
    c573:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c57a:	48 8b 40 10          	mov    0x10(%rax),%rax
    c57e:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
    c582:	0f 94 c0             	sete   %al
    c585:	0f b6 c0             	movzbl %al,%eax
    c588:	48 85 c0             	test   %rax,%rax
    c58b:	74 23                	je     c5b0 <dlfree+0xd02>
    c58d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c591:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
    c598:	48 89 50 18          	mov    %rdx,0x18(%rax)
    c59c:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c5a3:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    c5a7:	48 89 50 10          	mov    %rdx,0x10(%rax)
    c5ab:	e9 f2 00 00 00       	jmpq   c6a2 <dlfree+0xdf4>
    c5b0:	e8 14 1f 01 00       	callq  1e4c9 <abort>
    c5b5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c5b9:	48 83 c0 28          	add    $0x28,%rax
    c5bd:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    c5c4:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    c5cb:	48 8b 00             	mov    (%rax),%rax
    c5ce:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    c5d5:	48 83 bd f0 fe ff ff 	cmpq   $0x0,-0x110(%rbp)
    c5dc:	00 
    c5dd:	75 4f                	jne    c62e <dlfree+0xd80>
    c5df:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c5e3:	48 83 c0 20          	add    $0x20,%rax
    c5e7:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    c5ee:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    c5f5:	48 8b 00             	mov    (%rax),%rax
    c5f8:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    c5ff:	48 83 bd f0 fe ff ff 	cmpq   $0x0,-0x110(%rbp)
    c606:	00 
    c607:	0f 84 95 00 00 00    	je     c6a2 <dlfree+0xdf4>
    c60d:	eb 1f                	jmp    c62e <dlfree+0xd80>
    c60f:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    c616:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    c61d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    c624:	48 8b 00             	mov    (%rax),%rax
    c627:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    c62e:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c635:	48 83 c0 28          	add    $0x28,%rax
    c639:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    c640:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    c647:	48 8b 00             	mov    (%rax),%rax
    c64a:	48 85 c0             	test   %rax,%rax
    c64d:	75 c0                	jne    c60f <dlfree+0xd61>
    c64f:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c656:	48 83 c0 20          	add    $0x20,%rax
    c65a:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    c661:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    c668:	48 8b 00             	mov    (%rax),%rax
    c66b:	48 85 c0             	test   %rax,%rax
    c66e:	75 9f                	jne    c60f <dlfree+0xd61>
    c670:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c677:	48 8b 40 18          	mov    0x18(%rax),%rax
    c67b:	48 3b 85 f8 fe ff ff 	cmp    -0x108(%rbp),%rax
    c682:	0f 96 c0             	setbe  %al
    c685:	0f b6 c0             	movzbl %al,%eax
    c688:	48 85 c0             	test   %rax,%rax
    c68b:	74 10                	je     c69d <dlfree+0xdef>
    c68d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    c694:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c69b:	eb 05                	jmp    c6a2 <dlfree+0xdf4>
    c69d:	e8 27 1e 01 00       	callq  1e4c9 <abort>
    c6a2:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    c6a7:	0f 84 b0 01 00 00    	je     c85d <dlfree+0xfaf>
    c6ad:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c6b1:	8b 40 38             	mov    0x38(%rax),%eax
    c6b4:	89 c0                	mov    %eax,%eax
    c6b6:	48 83 c0 4a          	add    $0x4a,%rax
    c6ba:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c6c1:	00 
    c6c2:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c6c9:	48 01 d0             	add    %rdx,%rax
    c6cc:	48 83 c0 08          	add    $0x8,%rax
    c6d0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    c6d4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c6d8:	48 8b 00             	mov    (%rax),%rax
    c6db:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
    c6df:	75 46                	jne    c727 <dlfree+0xe79>
    c6e1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c6e5:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
    c6ec:	48 89 10             	mov    %rdx,(%rax)
    c6ef:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c6f3:	48 8b 00             	mov    (%rax),%rax
    c6f6:	48 85 c0             	test   %rax,%rax
    c6f9:	75 7b                	jne    c776 <dlfree+0xec8>
    c6fb:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c702:	8b 50 04             	mov    0x4(%rax),%edx
    c705:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c709:	8b 40 38             	mov    0x38(%rax),%eax
    c70c:	be 01 00 00 00       	mov    $0x1,%esi
    c711:	89 c1                	mov    %eax,%ecx
    c713:	d3 e6                	shl    %cl,%esi
    c715:	89 f0                	mov    %esi,%eax
    c717:	f7 d0                	not    %eax
    c719:	21 c2                	and    %eax,%edx
    c71b:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c722:	89 50 04             	mov    %edx,0x4(%rax)
    c725:	eb 4f                	jmp    c776 <dlfree+0xec8>
    c727:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c72e:	48 8b 40 18          	mov    0x18(%rax),%rax
    c732:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    c736:	0f 96 c0             	setbe  %al
    c739:	0f b6 c0             	movzbl %al,%eax
    c73c:	48 85 c0             	test   %rax,%rax
    c73f:	74 30                	je     c771 <dlfree+0xec3>
    c741:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    c745:	48 8b 40 20          	mov    0x20(%rax),%rax
    c749:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
    c74d:	75 11                	jne    c760 <dlfree+0xeb2>
    c74f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    c753:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
    c75a:	48 89 50 20          	mov    %rdx,0x20(%rax)
    c75e:	eb 16                	jmp    c776 <dlfree+0xec8>
    c760:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    c764:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
    c76b:	48 89 50 28          	mov    %rdx,0x28(%rax)
    c76f:	eb 05                	jmp    c776 <dlfree+0xec8>
    c771:	e8 53 1d 01 00       	callq  1e4c9 <abort>
    c776:	48 83 bd f0 fe ff ff 	cmpq   $0x0,-0x110(%rbp)
    c77d:	00 
    c77e:	0f 84 d9 00 00 00    	je     c85d <dlfree+0xfaf>
    c784:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c78b:	48 8b 40 18          	mov    0x18(%rax),%rax
    c78f:	48 3b 85 f0 fe ff ff 	cmp    -0x110(%rbp),%rax
    c796:	0f 96 c0             	setbe  %al
    c799:	0f b6 c0             	movzbl %al,%eax
    c79c:	48 85 c0             	test   %rax,%rax
    c79f:	0f 84 b3 00 00 00    	je     c858 <dlfree+0xfaa>
    c7a5:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c7ac:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    c7b0:	48 89 50 30          	mov    %rdx,0x30(%rax)
    c7b4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c7b8:	48 8b 40 20          	mov    0x20(%rax),%rax
    c7bc:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c7c0:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    c7c5:	74 3f                	je     c806 <dlfree+0xf58>
    c7c7:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c7ce:	48 8b 40 18          	mov    0x18(%rax),%rax
    c7d2:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    c7d6:	0f 96 c0             	setbe  %al
    c7d9:	0f b6 c0             	movzbl %al,%eax
    c7dc:	48 85 c0             	test   %rax,%rax
    c7df:	74 20                	je     c801 <dlfree+0xf53>
    c7e1:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c7e8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c7ec:	48 89 50 20          	mov    %rdx,0x20(%rax)
    c7f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c7f4:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
    c7fb:	48 89 50 30          	mov    %rdx,0x30(%rax)
    c7ff:	eb 05                	jmp    c806 <dlfree+0xf58>
    c801:	e8 c3 1c 01 00       	callq  1e4c9 <abort>
    c806:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c80a:	48 8b 40 28          	mov    0x28(%rax),%rax
    c80e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c812:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    c817:	74 44                	je     c85d <dlfree+0xfaf>
    c819:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c820:	48 8b 40 18          	mov    0x18(%rax),%rax
    c824:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
    c828:	0f 96 c0             	setbe  %al
    c82b:	0f b6 c0             	movzbl %al,%eax
    c82e:	48 85 c0             	test   %rax,%rax
    c831:	74 20                	je     c853 <dlfree+0xfa5>
    c833:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c83a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c83e:	48 89 50 28          	mov    %rdx,0x28(%rax)
    c842:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c846:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
    c84d:	48 89 50 30          	mov    %rdx,0x30(%rax)
    c851:	eb 0a                	jmp    c85d <dlfree+0xfaf>
    c853:	e8 71 1c 01 00       	callq  1e4c9 <abort>
    c858:	e8 6c 1c 01 00       	callq  1e4c9 <abort>
    c85d:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    c864:	48 83 c8 01          	or     $0x1,%rax
    c868:	48 89 c2             	mov    %rax,%rdx
    c86b:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    c872:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c876:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    c87d:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    c884:	48 01 c2             	add    %rax,%rdx
    c887:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    c88e:	48 89 02             	mov    %rax,(%rdx)
    c891:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c898:	48 8b 40 20          	mov    0x20(%rax),%rax
    c89c:	48 3b 85 c8 fe ff ff 	cmp    -0x138(%rbp),%rax
    c8a3:	75 68                	jne    c90d <dlfree+0x105f>
    c8a5:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c8ac:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
    c8b3:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c8b7:	e9 e6 04 00 00       	jmpq   cda2 <dlfree+0x14f4>
    c8bc:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c8c3:	48 8b 40 08          	mov    0x8(%rax),%rax
    c8c7:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    c8cb:	48 89 c2             	mov    %rax,%rdx
    c8ce:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    c8d5:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c8d9:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    c8e0:	48 83 c8 01          	or     $0x1,%rax
    c8e4:	48 89 c2             	mov    %rax,%rdx
    c8e7:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    c8ee:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c8f2:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    c8f9:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    c900:	48 01 c2             	add    %rax,%rdx
    c903:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    c90a:	48 89 02             	mov    %rax,(%rdx)
    c90d:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    c914:	48 c1 e8 03          	shr    $0x3,%rax
    c918:	48 83 f8 1f          	cmp    $0x1f,%rax
    c91c:	0f 87 31 01 00 00    	ja     ca53 <dlfree+0x11a5>
    c922:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    c929:	48 c1 e8 03          	shr    $0x3,%rax
    c92d:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
    c933:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
    c939:	01 c0                	add    %eax,%eax
    c93b:	89 c0                	mov    %eax,%eax
    c93d:	48 83 c0 08          	add    $0x8,%rax
    c941:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c948:	00 
    c949:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c950:	48 01 d0             	add    %rdx,%rax
    c953:	48 83 c0 08          	add    $0x8,%rax
    c957:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    c95b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c95f:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    c966:	48 83 bd d0 fe ff ff 	cmpq   $0x1f,-0x130(%rbp)
    c96d:	1f 
    c96e:	77 05                	ja     c975 <dlfree+0x10c7>
    c970:	e8 54 1b 01 00       	callq  1e4c9 <abort>
    c975:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c97c:	8b 10                	mov    (%rax),%edx
    c97e:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
    c984:	be 01 00 00 00       	mov    $0x1,%esi
    c989:	89 c1                	mov    %eax,%ecx
    c98b:	d3 e6                	shl    %cl,%esi
    c98d:	89 f0                	mov    %esi,%eax
    c98f:	21 d0                	and    %edx,%eax
    c991:	85 c0                	test   %eax,%eax
    c993:	75 27                	jne    c9bc <dlfree+0x110e>
    c995:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c99c:	8b 10                	mov    (%rax),%edx
    c99e:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
    c9a4:	be 01 00 00 00       	mov    $0x1,%esi
    c9a9:	89 c1                	mov    %eax,%ecx
    c9ab:	d3 e6                	shl    %cl,%esi
    c9ad:	89 f0                	mov    %esi,%eax
    c9af:	09 c2                	or     %eax,%edx
    c9b1:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c9b8:	89 10                	mov    %edx,(%rax)
    c9ba:	eb 37                	jmp    c9f3 <dlfree+0x1145>
    c9bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c9c0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c9c4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    c9cb:	48 8b 40 18          	mov    0x18(%rax),%rax
    c9cf:	48 39 c2             	cmp    %rax,%rdx
    c9d2:	0f 93 c0             	setae  %al
    c9d5:	0f b6 c0             	movzbl %al,%eax
    c9d8:	48 85 c0             	test   %rax,%rax
    c9db:	74 11                	je     c9ee <dlfree+0x1140>
    c9dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c9e1:	48 8b 40 10          	mov    0x10(%rax),%rax
    c9e5:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    c9ec:	eb 05                	jmp    c9f3 <dlfree+0x1145>
    c9ee:	e8 d6 1a 01 00       	callq  1e4c9 <abort>
    c9f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c9f7:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    c9fe:	48 89 50 10          	mov    %rdx,0x10(%rax)
    ca02:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    ca09:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    ca10:	48 89 50 18          	mov    %rdx,0x18(%rax)
    ca14:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    ca1b:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    ca22:	48 89 50 10          	mov    %rdx,0x10(%rax)
    ca26:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    ca2d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ca31:	48 89 50 18          	mov    %rdx,0x18(%rax)
    ca35:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    ca3c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    ca43:	48 89 d6             	mov    %rdx,%rsi
    ca46:	48 89 c7             	mov    %rax,%rdi
    ca49:	e8 77 87 ff ff       	callq  51c5 <do_check_free_chunk>
    ca4e:	e9 4e 03 00 00       	jmpq   cda1 <dlfree+0x14f3>
    ca53:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    ca5a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    ca5e:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    ca65:	48 c1 e8 08          	shr    $0x8,%rax
    ca69:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
    ca6f:	83 bd c0 fe ff ff 00 	cmpl   $0x0,-0x140(%rbp)
    ca76:	75 0c                	jne    ca84 <dlfree+0x11d6>
    ca78:	c7 85 b0 fe ff ff 00 	movl   $0x0,-0x150(%rbp)
    ca7f:	00 00 00 
    ca82:	eb 5d                	jmp    cae1 <dlfree+0x1233>
    ca84:	81 bd c0 fe ff ff ff 	cmpl   $0xffff,-0x140(%rbp)
    ca8b:	ff 00 00 
    ca8e:	76 0c                	jbe    ca9c <dlfree+0x11ee>
    ca90:	c7 85 b0 fe ff ff 1f 	movl   $0x1f,-0x150(%rbp)
    ca97:	00 00 00 
    ca9a:	eb 45                	jmp    cae1 <dlfree+0x1233>
    ca9c:	0f bd 85 c0 fe ff ff 	bsr    -0x140(%rbp),%eax
    caa3:	83 f0 1f             	xor    $0x1f,%eax
    caa6:	ba 1f 00 00 00       	mov    $0x1f,%edx
    caab:	29 c2                	sub    %eax,%edx
    caad:	89 d0                	mov    %edx,%eax
    caaf:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
    cab5:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
    cabb:	8d 34 00             	lea    (%rax,%rax,1),%esi
    cabe:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
    cac4:	83 c0 07             	add    $0x7,%eax
    cac7:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
    cace:	89 c1                	mov    %eax,%ecx
    cad0:	48 d3 ea             	shr    %cl,%rdx
    cad3:	48 89 d0             	mov    %rdx,%rax
    cad6:	83 e0 01             	and    $0x1,%eax
    cad9:	01 f0                	add    %esi,%eax
    cadb:	89 85 b0 fe ff ff    	mov    %eax,-0x150(%rbp)
    cae1:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
    cae7:	48 83 c0 4a          	add    $0x4a,%rax
    caeb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    caf2:	00 
    caf3:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    cafa:	48 01 d0             	add    %rdx,%rax
    cafd:	48 83 c0 08          	add    $0x8,%rax
    cb01:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    cb05:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb09:	8b 95 b0 fe ff ff    	mov    -0x150(%rbp),%edx
    cb0f:	89 50 38             	mov    %edx,0x38(%rax)
    cb12:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb16:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    cb1d:	00 
    cb1e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb22:	48 8b 50 28          	mov    0x28(%rax),%rdx
    cb26:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb2a:	48 89 50 20          	mov    %rdx,0x20(%rax)
    cb2e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    cb35:	8b 50 04             	mov    0x4(%rax),%edx
    cb38:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
    cb3e:	be 01 00 00 00       	mov    $0x1,%esi
    cb43:	89 c1                	mov    %eax,%ecx
    cb45:	d3 e6                	shl    %cl,%esi
    cb47:	89 f0                	mov    %esi,%eax
    cb49:	21 d0                	and    %edx,%eax
    cb4b:	85 c0                	test   %eax,%eax
    cb4d:	75 5f                	jne    cbae <dlfree+0x1300>
    cb4f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    cb56:	8b 50 04             	mov    0x4(%rax),%edx
    cb59:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
    cb5f:	be 01 00 00 00       	mov    $0x1,%esi
    cb64:	89 c1                	mov    %eax,%ecx
    cb66:	d3 e6                	shl    %cl,%esi
    cb68:	89 f0                	mov    %esi,%eax
    cb6a:	09 c2                	or     %eax,%edx
    cb6c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    cb73:	89 50 04             	mov    %edx,0x4(%rax)
    cb76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb7a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    cb7e:	48 89 10             	mov    %rdx,(%rax)
    cb81:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb85:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cb89:	48 89 50 30          	mov    %rdx,0x30(%rax)
    cb8d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb91:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    cb95:	48 89 50 18          	mov    %rdx,0x18(%rax)
    cb99:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb9d:	48 8b 50 18          	mov    0x18(%rax),%rdx
    cba1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cba5:	48 89 50 10          	mov    %rdx,0x10(%rax)
    cba9:	e9 96 01 00 00       	jmpq   cd44 <dlfree+0x1496>
    cbae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cbb2:	48 8b 00             	mov    (%rax),%rax
    cbb5:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    cbbc:	83 bd b0 fe ff ff 1f 	cmpl   $0x1f,-0x150(%rbp)
    cbc3:	74 13                	je     cbd8 <dlfree+0x132a>
    cbc5:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
    cbcb:	d1 e8                	shr    %eax
    cbcd:	ba 39 00 00 00       	mov    $0x39,%edx
    cbd2:	29 c2                	sub    %eax,%edx
    cbd4:	89 d0                	mov    %edx,%eax
    cbd6:	eb 05                	jmp    cbdd <dlfree+0x132f>
    cbd8:	b8 00 00 00 00       	mov    $0x0,%eax
    cbdd:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
    cbe4:	89 c1                	mov    %eax,%ecx
    cbe6:	48 d3 e2             	shl    %cl,%rdx
    cbe9:	48 89 d0             	mov    %rdx,%rax
    cbec:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    cbf3:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    cbfa:	48 8b 40 08          	mov    0x8(%rax),%rax
    cbfe:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    cc02:	48 3b 85 d0 fe ff ff 	cmp    -0x130(%rbp),%rax
    cc09:	0f 84 a2 00 00 00    	je     ccb1 <dlfree+0x1403>
    cc0f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    cc16:	48 c1 e8 3f          	shr    $0x3f,%rax
    cc1a:	48 83 c0 04          	add    $0x4,%rax
    cc1e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    cc25:	00 
    cc26:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    cc2d:	48 01 d0             	add    %rdx,%rax
    cc30:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    cc34:	48 d1 a5 18 ff ff ff 	shlq   -0xe8(%rbp)
    cc3b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cc3f:	48 8b 00             	mov    (%rax),%rax
    cc42:	48 85 c0             	test   %rax,%rax
    cc45:	74 10                	je     cc57 <dlfree+0x13a9>
    cc47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cc4b:	48 8b 00             	mov    (%rax),%rax
    cc4e:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    cc55:	eb 9c                	jmp    cbf3 <dlfree+0x1345>
    cc57:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    cc5e:	48 8b 40 18          	mov    0x18(%rax),%rax
    cc62:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    cc66:	0f 96 c0             	setbe  %al
    cc69:	0f b6 c0             	movzbl %al,%eax
    cc6c:	48 85 c0             	test   %rax,%rax
    cc6f:	74 3b                	je     ccac <dlfree+0x13fe>
    cc71:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cc75:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    cc79:	48 89 10             	mov    %rdx,(%rax)
    cc7c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cc80:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
    cc87:	48 89 50 30          	mov    %rdx,0x30(%rax)
    cc8b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cc8f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    cc93:	48 89 50 18          	mov    %rdx,0x18(%rax)
    cc97:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cc9b:	48 8b 50 18          	mov    0x18(%rax),%rdx
    cc9f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cca3:	48 89 50 10          	mov    %rdx,0x10(%rax)
    cca7:	e9 98 00 00 00       	jmpq   cd44 <dlfree+0x1496>
    ccac:	e8 18 18 01 00       	callq  1e4c9 <abort>
    ccb1:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    ccb8:	48 8b 40 10          	mov    0x10(%rax),%rax
    ccbc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ccc0:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    ccc7:	48 8b 40 18          	mov    0x18(%rax),%rax
    cccb:	48 3b 85 10 ff ff ff 	cmp    -0xf0(%rbp),%rax
    ccd2:	0f 96 c0             	setbe  %al
    ccd5:	0f b6 c0             	movzbl %al,%eax
    ccd8:	48 85 c0             	test   %rax,%rax
    ccdb:	74 62                	je     cd3f <dlfree+0x1491>
    ccdd:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    cce4:	48 8b 40 18          	mov    0x18(%rax),%rax
    cce8:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    ccec:	0f 96 c0             	setbe  %al
    ccef:	0f b6 c0             	movzbl %al,%eax
    ccf2:	48 85 c0             	test   %rax,%rax
    ccf5:	74 48                	je     cd3f <dlfree+0x1491>
    ccf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccfb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ccff:	48 89 50 18          	mov    %rdx,0x18(%rax)
    cd03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd07:	48 8b 50 18          	mov    0x18(%rax),%rdx
    cd0b:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    cd12:	48 89 50 10          	mov    %rdx,0x10(%rax)
    cd16:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cd1a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cd1e:	48 89 50 10          	mov    %rdx,0x10(%rax)
    cd22:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cd26:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
    cd2d:	48 89 50 18          	mov    %rdx,0x18(%rax)
    cd31:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cd35:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    cd3c:	00 
    cd3d:	eb 05                	jmp    cd44 <dlfree+0x1496>
    cd3f:	e8 85 17 01 00       	callq  1e4c9 <abort>
    cd44:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    cd4b:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    cd52:	48 89 d6             	mov    %rdx,%rsi
    cd55:	48 89 c7             	mov    %rax,%rdi
    cd58:	e8 68 84 ff ff       	callq  51c5 <do_check_free_chunk>
    cd5d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    cd64:	48 8b 40 38          	mov    0x38(%rax),%rax
    cd68:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    cd6c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    cd73:	48 89 50 38          	mov    %rdx,0x38(%rax)
    cd77:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    cd7e:	48 8b 40 38          	mov    0x38(%rax),%rax
    cd82:	48 85 c0             	test   %rax,%rax
    cd85:	75 1a                	jne    cda1 <dlfree+0x14f3>
    cd87:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    cd8e:	48 89 c7             	mov    %rax,%rdi
    cd91:	e8 28 b7 ff ff       	callq  84be <release_unused_segments>
    cd96:	eb 09                	jmp    cda1 <dlfree+0x14f3>
    cd98:	90                   	nop
    cd99:	e8 2b 17 01 00       	callq  1e4c9 <abort>
    cd9e:	90                   	nop
    cd9f:	eb 01                	jmp    cda2 <dlfree+0x14f4>
    cda1:	90                   	nop
    cda2:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    cda9:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
    cdaf:	83 e0 02             	and    $0x2,%eax
    cdb2:	85 c0                	test   %eax,%eax
    cdb4:	74 14                	je     cdca <dlfree+0x151c>
    cdb6:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    cdbd:	48 05 74 03 00 00    	add    $0x374,%rax
    cdc3:	ba 00 00 00 00       	mov    $0x0,%edx
    cdc8:	89 10                	mov    %edx,(%rax)
    cdca:	90                   	nop
    cdcb:	c9                   	leaveq 
    cdcc:	c3                   	retq   

000000000000cdcd <calloc>:
    cdcd:	55                   	push   %rbp
    cdce:	48 89 e5             	mov    %rsp,%rbp
    cdd1:	48 83 ec 20          	sub    $0x20,%rsp
    cdd5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cdd9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cddd:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    cde4:	00 
    cde5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    cdea:	74 39                	je     ce25 <calloc+0x58>
    cdec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cdf0:	48 0f af 45 e0       	imul   -0x20(%rbp),%rax
    cdf5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    cdf9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cdfd:	48 0b 45 e0          	or     -0x20(%rbp),%rax
    ce01:	66 b8 00 00          	mov    $0x0,%ax
    ce05:	48 85 c0             	test   %rax,%rax
    ce08:	74 1b                	je     ce25 <calloc+0x58>
    ce0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ce0e:	ba 00 00 00 00       	mov    $0x0,%edx
    ce13:	48 f7 75 e8          	divq   -0x18(%rbp)
    ce17:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    ce1b:	74 08                	je     ce25 <calloc+0x58>
    ce1d:	48 c7 45 f0 ff ff ff 	movq   $0xffffffffffffffff,-0x10(%rbp)
    ce24:	ff 
    ce25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ce29:	48 89 c7             	mov    %rax,%rdi
    ce2c:	e8 8d df ff ff       	callq  adbe <dlmalloc>
    ce31:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ce35:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    ce3a:	74 15                	je     ce51 <calloc+0x84>
    ce3c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ce40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce44:	be 00 00 00 00       	mov    $0x0,%esi
    ce49:	48 89 c7             	mov    %rax,%rdi
    ce4c:	e8 5e 16 00 00       	callq  e4af <memset>
    ce51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce55:	c9                   	leaveq 
    ce56:	c3                   	retq   

000000000000ce57 <try_realloc_chunk>:
    ce57:	55                   	push   %rbp
    ce58:	48 89 e5             	mov    %rsp,%rbp
    ce5b:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
    ce62:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
    ce69:	48 89 b5 00 ff ff ff 	mov    %rsi,-0x100(%rbp)
    ce70:	48 89 95 f8 fe ff ff 	mov    %rdx,-0x108(%rbp)
    ce77:	89 8d f4 fe ff ff    	mov    %ecx,-0x10c(%rbp)
    ce7d:	48 c7 85 20 ff ff ff 	movq   $0x0,-0xe0(%rbp)
    ce84:	00 00 00 00 
    ce88:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    ce8f:	48 8b 40 08          	mov    0x8(%rax),%rax
    ce93:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    ce97:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    ce9e:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
    cea5:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    ceac:	48 01 d0             	add    %rdx,%rax
    ceaf:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    ceb6:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cebd:	48 8b 40 18          	mov    0x18(%rax),%rax
    cec1:	48 3b 85 00 ff ff ff 	cmp    -0x100(%rbp),%rax
    cec8:	0f 96 c0             	setbe  %al
    cecb:	0f b6 c0             	movzbl %al,%eax
    cece:	48 85 c0             	test   %rax,%rax
    ced1:	74 24                	je     cef7 <try_realloc_chunk+0xa0>
    ced3:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    ceda:	48 8b 40 08          	mov    0x8(%rax),%rax
    cede:	83 e0 03             	and    $0x3,%eax
    cee1:	48 83 f8 01          	cmp    $0x1,%rax
    cee5:	0f 95 c0             	setne  %al
    cee8:	0f b6 c0             	movzbl %al,%eax
    ceeb:	48 85 c0             	test   %rax,%rax
    ceee:	74 07                	je     cef7 <try_realloc_chunk+0xa0>
    cef0:	b8 01 00 00 00       	mov    $0x1,%eax
    cef5:	eb 05                	jmp    cefc <try_realloc_chunk+0xa5>
    cef7:	b8 00 00 00 00       	mov    $0x0,%eax
    cefc:	85 c0                	test   %eax,%eax
    cefe:	74 20                	je     cf20 <try_realloc_chunk+0xc9>
    cf00:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    cf07:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
    cf0e:	0f 92 c0             	setb   %al
    cf11:	0f b6 c0             	movzbl %al,%eax
    cf14:	48 85 c0             	test   %rax,%rax
    cf17:	74 07                	je     cf20 <try_realloc_chunk+0xc9>
    cf19:	b8 01 00 00 00       	mov    $0x1,%eax
    cf1e:	eb 05                	jmp    cf25 <try_realloc_chunk+0xce>
    cf20:	b8 00 00 00 00       	mov    $0x0,%eax
    cf25:	85 c0                	test   %eax,%eax
    cf27:	0f 84 b5 0c 00 00    	je     dbe2 <try_realloc_chunk+0xd8b>
    cf2d:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    cf34:	48 8b 40 08          	mov    0x8(%rax),%rax
    cf38:	83 e0 01             	and    $0x1,%eax
    cf3b:	48 85 c0             	test   %rax,%rax
    cf3e:	0f 95 c0             	setne  %al
    cf41:	0f b6 c0             	movzbl %al,%eax
    cf44:	48 85 c0             	test   %rax,%rax
    cf47:	0f 84 95 0c 00 00    	je     dbe2 <try_realloc_chunk+0xd8b>
    cf4d:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    cf54:	48 8b 40 08          	mov    0x8(%rax),%rax
    cf58:	83 e0 03             	and    $0x3,%eax
    cf5b:	48 85 c0             	test   %rax,%rax
    cf5e:	75 2f                	jne    cf8f <try_realloc_chunk+0x138>
    cf60:	8b 8d f4 fe ff ff    	mov    -0x10c(%rbp),%ecx
    cf66:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    cf6d:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
    cf74:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cf7b:	48 89 c7             	mov    %rax,%rdi
    cf7e:	e8 e6 94 ff ff       	callq  6469 <mmap_resize>
    cf83:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    cf8a:	e9 58 0c 00 00       	jmpq   dbe7 <try_realloc_chunk+0xd90>
    cf8f:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    cf96:	48 3b 85 f8 fe ff ff 	cmp    -0x108(%rbp),%rax
    cf9d:	0f 82 85 01 00 00    	jb     d128 <try_realloc_chunk+0x2d1>
    cfa3:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    cfaa:	48 2b 85 f8 fe ff ff 	sub    -0x108(%rbp),%rax
    cfb1:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    cfb8:	48 83 bd 50 ff ff ff 	cmpq   $0x1f,-0xb0(%rbp)
    cfbf:	1f 
    cfc0:	0f 86 4f 01 00 00    	jbe    d115 <try_realloc_chunk+0x2be>
    cfc6:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
    cfcd:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    cfd4:	48 01 d0             	add    %rdx,%rax
    cfd7:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    cfde:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    cfe5:	48 8b 40 08          	mov    0x8(%rax),%rax
    cfe9:	83 e0 01             	and    $0x1,%eax
    cfec:	48 0b 85 f8 fe ff ff 	or     -0x108(%rbp),%rax
    cff3:	48 83 c8 02          	or     $0x2,%rax
    cff7:	48 89 c2             	mov    %rax,%rdx
    cffa:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    d001:	48 89 50 08          	mov    %rdx,0x8(%rax)
    d005:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
    d00c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d013:	48 01 d0             	add    %rdx,%rax
    d016:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
    d01d:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    d024:	48 01 ca             	add    %rcx,%rdx
    d027:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    d02b:	48 83 ca 01          	or     $0x1,%rdx
    d02f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    d033:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
    d03a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d041:	48 01 d0             	add    %rdx,%rax
    d044:	48 8b 0d 35 59 21 00 	mov    0x215935(%rip),%rcx        # 222980 <mparams>
    d04b:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    d052:	48 31 ca             	xor    %rcx,%rdx
    d055:	48 89 10             	mov    %rdx,(%rax)
    d058:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d05f:	48 8b 40 08          	mov    0x8(%rax),%rax
    d063:	83 e0 01             	and    $0x1,%eax
    d066:	48 0b 85 50 ff ff ff 	or     -0xb0(%rbp),%rax
    d06d:	48 83 c8 02          	or     $0x2,%rax
    d071:	48 89 c2             	mov    %rax,%rdx
    d074:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d07b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    d07f:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    d086:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    d08d:	48 01 d0             	add    %rdx,%rax
    d090:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
    d097:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    d09e:	48 01 ca             	add    %rcx,%rdx
    d0a1:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    d0a5:	48 83 ca 01          	or     $0x1,%rdx
    d0a9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    d0ad:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    d0b4:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    d0bb:	48 01 d0             	add    %rdx,%rax
    d0be:	48 8b 0d bb 58 21 00 	mov    0x2158bb(%rip),%rcx        # 222980 <mparams>
    d0c5:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    d0cc:	48 31 ca             	xor    %rcx,%rdx
    d0cf:	48 89 10             	mov    %rdx,(%rax)
    d0d2:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    d0d9:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
    d0dd:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d0e4:	48 83 c0 10          	add    $0x10,%rax
    d0e8:	be 00 00 00 00       	mov    $0x0,%esi
    d0ed:	48 89 c7             	mov    %rax,%rdi
    d0f0:	e8 ba 13 00 00       	callq  e4af <memset>
    d0f5:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    d0fc:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
    d103:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d10a:	48 89 ce             	mov    %rcx,%rsi
    d10d:	48 89 c7             	mov    %rax,%rdi
    d110:	e8 55 b6 ff ff       	callq  876a <dispose_chunk>
    d115:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    d11c:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    d123:	e9 bf 0a 00 00       	jmpq   dbe7 <try_realloc_chunk+0xd90>
    d128:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d12f:	48 8b 40 28          	mov    0x28(%rax),%rax
    d133:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
    d13a:	0f 85 35 01 00 00    	jne    d275 <try_realloc_chunk+0x41e>
    d140:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d147:	48 8b 50 10          	mov    0x10(%rax),%rdx
    d14b:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    d152:	48 01 d0             	add    %rdx,%rax
    d155:	48 3b 85 f8 fe ff ff 	cmp    -0x108(%rbp),%rax
    d15c:	0f 86 85 0a 00 00    	jbe    dbe7 <try_realloc_chunk+0xd90>
    d162:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d169:	48 8b 50 10          	mov    0x10(%rax),%rdx
    d16d:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    d174:	48 01 d0             	add    %rdx,%rax
    d177:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    d17e:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    d185:	48 2b 85 f8 fe ff ff 	sub    -0x108(%rbp),%rax
    d18c:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    d193:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
    d19a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d1a1:	48 01 d0             	add    %rdx,%rax
    d1a4:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    d1ab:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    d1b2:	48 8b 40 08          	mov    0x8(%rax),%rax
    d1b6:	83 e0 01             	and    $0x1,%eax
    d1b9:	48 0b 85 f8 fe ff ff 	or     -0x108(%rbp),%rax
    d1c0:	48 83 c8 02          	or     $0x2,%rax
    d1c4:	48 89 c2             	mov    %rax,%rdx
    d1c7:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    d1ce:	48 89 50 08          	mov    %rdx,0x8(%rax)
    d1d2:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
    d1d9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d1e0:	48 01 d0             	add    %rdx,%rax
    d1e3:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
    d1ea:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    d1f1:	48 01 ca             	add    %rcx,%rdx
    d1f4:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    d1f8:	48 83 ca 01          	or     $0x1,%rdx
    d1fc:	48 89 50 08          	mov    %rdx,0x8(%rax)
    d200:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
    d207:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d20e:	48 01 d0             	add    %rdx,%rax
    d211:	48 8b 0d 68 57 21 00 	mov    0x215768(%rip),%rcx        # 222980 <mparams>
    d218:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    d21f:	48 31 ca             	xor    %rcx,%rdx
    d222:	48 89 10             	mov    %rdx,(%rax)
    d225:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    d22c:	48 83 c8 01          	or     $0x1,%rax
    d230:	48 89 c2             	mov    %rax,%rdx
    d233:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d23a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    d23e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d245:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
    d24c:	48 89 50 28          	mov    %rdx,0x28(%rax)
    d250:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d257:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    d25e:	48 89 50 10          	mov    %rdx,0x10(%rax)
    d262:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    d269:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    d270:	e9 72 09 00 00       	jmpq   dbe7 <try_realloc_chunk+0xd90>
    d275:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d27c:	48 8b 40 20          	mov    0x20(%rax),%rax
    d280:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
    d287:	0f 85 08 02 00 00    	jne    d495 <try_realloc_chunk+0x63e>
    d28d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d294:	48 8b 40 08          	mov    0x8(%rax),%rax
    d298:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    d29f:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    d2a6:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    d2ad:	48 01 d0             	add    %rdx,%rax
    d2b0:	48 3b 85 f8 fe ff ff 	cmp    -0x108(%rbp),%rax
    d2b7:	0f 82 2a 09 00 00    	jb     dbe7 <try_realloc_chunk+0xd90>
    d2bd:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    d2c4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    d2cb:	48 01 d0             	add    %rdx,%rax
    d2ce:	48 2b 85 f8 fe ff ff 	sub    -0x108(%rbp),%rax
    d2d5:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    d2d9:	48 83 7d 80 1f       	cmpq   $0x1f,-0x80(%rbp)
    d2de:	0f 86 fd 00 00 00    	jbe    d3e1 <try_realloc_chunk+0x58a>
    d2e4:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
    d2eb:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d2f2:	48 01 d0             	add    %rdx,%rax
    d2f5:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    d2f9:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    d2fd:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d301:	48 01 d0             	add    %rdx,%rax
    d304:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    d308:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    d30f:	48 8b 40 08          	mov    0x8(%rax),%rax
    d313:	83 e0 01             	and    $0x1,%eax
    d316:	48 0b 85 f8 fe ff ff 	or     -0x108(%rbp),%rax
    d31d:	48 83 c8 02          	or     $0x2,%rax
    d321:	48 89 c2             	mov    %rax,%rdx
    d324:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    d32b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    d32f:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
    d336:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d33d:	48 01 d0             	add    %rdx,%rax
    d340:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
    d347:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    d34e:	48 01 ca             	add    %rcx,%rdx
    d351:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    d355:	48 83 ca 01          	or     $0x1,%rdx
    d359:	48 89 50 08          	mov    %rdx,0x8(%rax)
    d35d:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
    d364:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d36b:	48 01 d0             	add    %rdx,%rax
    d36e:	48 8b 0d 0b 56 21 00 	mov    0x21560b(%rip),%rcx        # 222980 <mparams>
    d375:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    d37c:	48 31 ca             	xor    %rcx,%rdx
    d37f:	48 89 10             	mov    %rdx,(%rax)
    d382:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d386:	48 83 c8 01          	or     $0x1,%rax
    d38a:	48 89 c2             	mov    %rax,%rdx
    d38d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    d391:	48 89 50 08          	mov    %rdx,0x8(%rax)
    d395:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    d399:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d39d:	48 01 c2             	add    %rax,%rdx
    d3a0:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d3a4:	48 89 02             	mov    %rax,(%rdx)
    d3a7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    d3ab:	48 8b 40 08          	mov    0x8(%rax),%rax
    d3af:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    d3b3:	48 89 c2             	mov    %rax,%rdx
    d3b6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    d3ba:	48 89 50 08          	mov    %rdx,0x8(%rax)
    d3be:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d3c5:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    d3c9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    d3cd:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d3d4:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    d3d8:	48 89 50 20          	mov    %rdx,0x20(%rax)
    d3dc:	e9 a1 00 00 00       	jmpq   d482 <try_realloc_chunk+0x62b>
    d3e1:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    d3e8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    d3ef:	48 01 d0             	add    %rdx,%rax
    d3f2:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    d3f6:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    d3fd:	48 8b 40 08          	mov    0x8(%rax),%rax
    d401:	83 e0 01             	and    $0x1,%eax
    d404:	48 0b 45 98          	or     -0x68(%rbp),%rax
    d408:	48 83 c8 02          	or     $0x2,%rax
    d40c:	48 89 c2             	mov    %rax,%rdx
    d40f:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    d416:	48 89 50 08          	mov    %rdx,0x8(%rax)
    d41a:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
    d421:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    d425:	48 01 d0             	add    %rdx,%rax
    d428:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
    d42f:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    d433:	48 01 ca             	add    %rcx,%rdx
    d436:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    d43a:	48 83 ca 01          	or     $0x1,%rdx
    d43e:	48 89 50 08          	mov    %rdx,0x8(%rax)
    d442:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
    d449:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    d44d:	48 01 d0             	add    %rdx,%rax
    d450:	48 8b 0d 29 55 21 00 	mov    0x215529(%rip),%rcx        # 222980 <mparams>
    d457:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    d45e:	48 31 ca             	xor    %rcx,%rdx
    d461:	48 89 10             	mov    %rdx,(%rax)
    d464:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d46b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    d472:	00 
    d473:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d47a:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    d481:	00 
    d482:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    d489:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    d490:	e9 52 07 00 00       	jmpq   dbe7 <try_realloc_chunk+0xd90>
    d495:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d49c:	48 8b 40 08          	mov    0x8(%rax),%rax
    d4a0:	83 e0 02             	and    $0x2,%eax
    d4a3:	48 85 c0             	test   %rax,%rax
    d4a6:	0f 85 3b 07 00 00    	jne    dbe7 <try_realloc_chunk+0xd90>
    d4ac:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d4b3:	48 8b 40 08          	mov    0x8(%rax),%rax
    d4b7:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d4bb:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    d4bf:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    d4c6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d4ca:	48 01 d0             	add    %rdx,%rax
    d4cd:	48 3b 85 f8 fe ff ff 	cmp    -0x108(%rbp),%rax
    d4d4:	0f 82 0d 07 00 00    	jb     dbe7 <try_realloc_chunk+0xd90>
    d4da:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    d4e1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d4e5:	48 01 d0             	add    %rdx,%rax
    d4e8:	48 2b 85 f8 fe ff ff 	sub    -0x108(%rbp),%rax
    d4ef:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    d4f3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d4f7:	48 c1 e8 03          	shr    $0x3,%rax
    d4fb:	48 83 f8 1f          	cmp    $0x1f,%rax
    d4ff:	0f 87 c6 01 00 00    	ja     d6cb <try_realloc_chunk+0x874>
    d505:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d50c:	48 8b 40 10          	mov    0x10(%rax),%rax
    d510:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    d514:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d51b:	48 8b 40 18          	mov    0x18(%rax),%rax
    d51f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    d523:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d527:	48 c1 e8 03          	shr    $0x3,%rax
    d52b:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
    d531:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d538:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
    d53c:	75 05                	jne    d543 <try_realloc_chunk+0x6ec>
    d53e:	e8 86 0f 01 00       	callq  1e4c9 <abort>
    d543:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d54a:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    d54e:	75 05                	jne    d555 <try_realloc_chunk+0x6fe>
    d550:	e8 74 0f 01 00       	callq  1e4c9 <abort>
    d555:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d55c:	48 8b 40 08          	mov    0x8(%rax),%rax
    d560:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d564:	48 89 c2             	mov    %rax,%rdx
    d567:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
    d56d:	c1 e0 03             	shl    $0x3,%eax
    d570:	89 c0                	mov    %eax,%eax
    d572:	48 39 c2             	cmp    %rax,%rdx
    d575:	74 05                	je     d57c <try_realloc_chunk+0x725>
    d577:	e8 4d 0f 01 00       	callq  1e4c9 <abort>
    d57c:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
    d582:	01 c0                	add    %eax,%eax
    d584:	89 c0                	mov    %eax,%eax
    d586:	48 83 c0 08          	add    $0x8,%rax
    d58a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d591:	00 
    d592:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d599:	48 01 d0             	add    %rdx,%rax
    d59c:	48 83 c0 08          	add    $0x8,%rax
    d5a0:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    d5a4:	0f 94 c0             	sete   %al
    d5a7:	0f b6 c0             	movzbl %al,%eax
    d5aa:	48 85 c0             	test   %rax,%rax
    d5ad:	75 48                	jne    d5f7 <try_realloc_chunk+0x7a0>
    d5af:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d5b6:	48 8b 40 18          	mov    0x18(%rax),%rax
    d5ba:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    d5be:	0f 96 c0             	setbe  %al
    d5c1:	0f b6 c0             	movzbl %al,%eax
    d5c4:	48 85 c0             	test   %rax,%rax
    d5c7:	74 21                	je     d5ea <try_realloc_chunk+0x793>
    d5c9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d5cd:	48 8b 40 18          	mov    0x18(%rax),%rax
    d5d1:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
    d5d8:	0f 94 c0             	sete   %al
    d5db:	0f b6 c0             	movzbl %al,%eax
    d5de:	48 85 c0             	test   %rax,%rax
    d5e1:	74 07                	je     d5ea <try_realloc_chunk+0x793>
    d5e3:	b8 01 00 00 00       	mov    $0x1,%eax
    d5e8:	eb 05                	jmp    d5ef <try_realloc_chunk+0x798>
    d5ea:	b8 00 00 00 00       	mov    $0x0,%eax
    d5ef:	85 c0                	test   %eax,%eax
    d5f1:	0f 84 cf 00 00 00    	je     d6c6 <try_realloc_chunk+0x86f>
    d5f7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d5fb:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    d5ff:	75 2c                	jne    d62d <try_realloc_chunk+0x7d6>
    d601:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d608:	8b 10                	mov    (%rax),%edx
    d60a:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
    d610:	be 01 00 00 00       	mov    $0x1,%esi
    d615:	89 c1                	mov    %eax,%ecx
    d617:	d3 e6                	shl    %cl,%esi
    d619:	89 f0                	mov    %esi,%eax
    d61b:	f7 d0                	not    %eax
    d61d:	21 c2                	and    %eax,%edx
    d61f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d626:	89 10                	mov    %edx,(%rax)
    d628:	e9 0d 04 00 00       	jmpq   da3a <try_realloc_chunk+0xbe3>
    d62d:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
    d633:	01 c0                	add    %eax,%eax
    d635:	89 c0                	mov    %eax,%eax
    d637:	48 83 c0 08          	add    $0x8,%rax
    d63b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d642:	00 
    d643:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d64a:	48 01 d0             	add    %rdx,%rax
    d64d:	48 83 c0 08          	add    $0x8,%rax
    d651:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
    d655:	0f 94 c0             	sete   %al
    d658:	0f b6 c0             	movzbl %al,%eax
    d65b:	48 85 c0             	test   %rax,%rax
    d65e:	75 44                	jne    d6a4 <try_realloc_chunk+0x84d>
    d660:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d667:	48 8b 40 18          	mov    0x18(%rax),%rax
    d66b:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
    d66f:	0f 96 c0             	setbe  %al
    d672:	0f b6 c0             	movzbl %al,%eax
    d675:	48 85 c0             	test   %rax,%rax
    d678:	74 21                	je     d69b <try_realloc_chunk+0x844>
    d67a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d67e:	48 8b 40 10          	mov    0x10(%rax),%rax
    d682:	48 3b 85 48 ff ff ff 	cmp    -0xb8(%rbp),%rax
    d689:	0f 94 c0             	sete   %al
    d68c:	0f b6 c0             	movzbl %al,%eax
    d68f:	48 85 c0             	test   %rax,%rax
    d692:	74 07                	je     d69b <try_realloc_chunk+0x844>
    d694:	b8 01 00 00 00       	mov    $0x1,%eax
    d699:	eb 05                	jmp    d6a0 <try_realloc_chunk+0x849>
    d69b:	b8 00 00 00 00       	mov    $0x0,%eax
    d6a0:	85 c0                	test   %eax,%eax
    d6a2:	74 1d                	je     d6c1 <try_realloc_chunk+0x86a>
    d6a4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d6a8:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    d6ac:	48 89 50 18          	mov    %rdx,0x18(%rax)
    d6b0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d6b4:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    d6b8:	48 89 50 10          	mov    %rdx,0x10(%rax)
    d6bc:	e9 79 03 00 00       	jmpq   da3a <try_realloc_chunk+0xbe3>
    d6c1:	e8 03 0e 01 00       	callq  1e4c9 <abort>
    d6c6:	e8 fe 0d 01 00       	callq  1e4c9 <abort>
    d6cb:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    d6d2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    d6d6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d6da:	48 8b 40 30          	mov    0x30(%rax),%rax
    d6de:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    d6e2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d6e6:	48 8b 40 18          	mov    0x18(%rax),%rax
    d6ea:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    d6ee:	0f 84 9e 00 00 00    	je     d792 <try_realloc_chunk+0x93b>
    d6f4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d6f8:	48 8b 40 10          	mov    0x10(%rax),%rax
    d6fc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    d700:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d704:	48 8b 40 18          	mov    0x18(%rax),%rax
    d708:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    d70f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d716:	48 8b 40 18          	mov    0x18(%rax),%rax
    d71a:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
    d71e:	0f 96 c0             	setbe  %al
    d721:	0f b6 c0             	movzbl %al,%eax
    d724:	48 85 c0             	test   %rax,%rax
    d727:	74 1e                	je     d747 <try_realloc_chunk+0x8f0>
    d729:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d72d:	48 8b 40 18          	mov    0x18(%rax),%rax
    d731:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    d735:	0f 94 c0             	sete   %al
    d738:	0f b6 c0             	movzbl %al,%eax
    d73b:	48 85 c0             	test   %rax,%rax
    d73e:	74 07                	je     d747 <try_realloc_chunk+0x8f0>
    d740:	b8 01 00 00 00       	mov    $0x1,%eax
    d745:	eb 05                	jmp    d74c <try_realloc_chunk+0x8f5>
    d747:	b8 00 00 00 00       	mov    $0x0,%eax
    d74c:	85 c0                	test   %eax,%eax
    d74e:	74 3d                	je     d78d <try_realloc_chunk+0x936>
    d750:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    d757:	48 8b 40 10          	mov    0x10(%rax),%rax
    d75b:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    d75f:	0f 94 c0             	sete   %al
    d762:	0f b6 c0             	movzbl %al,%eax
    d765:	48 85 c0             	test   %rax,%rax
    d768:	74 23                	je     d78d <try_realloc_chunk+0x936>
    d76a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d76e:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    d775:	48 89 50 18          	mov    %rdx,0x18(%rax)
    d779:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    d780:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    d784:	48 89 50 10          	mov    %rdx,0x10(%rax)
    d788:	e9 f2 00 00 00       	jmpq   d87f <try_realloc_chunk+0xa28>
    d78d:	e8 37 0d 01 00       	callq  1e4c9 <abort>
    d792:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d796:	48 83 c0 28          	add    $0x28,%rax
    d79a:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    d7a1:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    d7a8:	48 8b 00             	mov    (%rax),%rax
    d7ab:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    d7b2:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
    d7b9:	00 
    d7ba:	75 4f                	jne    d80b <try_realloc_chunk+0x9b4>
    d7bc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d7c0:	48 83 c0 20          	add    $0x20,%rax
    d7c4:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    d7cb:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    d7d2:	48 8b 00             	mov    (%rax),%rax
    d7d5:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    d7dc:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
    d7e3:	00 
    d7e4:	0f 84 95 00 00 00    	je     d87f <try_realloc_chunk+0xa28>
    d7ea:	eb 1f                	jmp    d80b <try_realloc_chunk+0x9b4>
    d7ec:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    d7f3:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    d7fa:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    d801:	48 8b 00             	mov    (%rax),%rax
    d804:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    d80b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    d812:	48 83 c0 28          	add    $0x28,%rax
    d816:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    d81d:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    d824:	48 8b 00             	mov    (%rax),%rax
    d827:	48 85 c0             	test   %rax,%rax
    d82a:	75 c0                	jne    d7ec <try_realloc_chunk+0x995>
    d82c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    d833:	48 83 c0 20          	add    $0x20,%rax
    d837:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    d83e:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    d845:	48 8b 00             	mov    (%rax),%rax
    d848:	48 85 c0             	test   %rax,%rax
    d84b:	75 9f                	jne    d7ec <try_realloc_chunk+0x995>
    d84d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d854:	48 8b 40 18          	mov    0x18(%rax),%rax
    d858:	48 3b 85 30 ff ff ff 	cmp    -0xd0(%rbp),%rax
    d85f:	0f 96 c0             	setbe  %al
    d862:	0f b6 c0             	movzbl %al,%eax
    d865:	48 85 c0             	test   %rax,%rax
    d868:	74 10                	je     d87a <try_realloc_chunk+0xa23>
    d86a:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    d871:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    d878:	eb 05                	jmp    d87f <try_realloc_chunk+0xa28>
    d87a:	e8 4a 0c 01 00       	callq  1e4c9 <abort>
    d87f:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    d884:	0f 84 b0 01 00 00    	je     da3a <try_realloc_chunk+0xbe3>
    d88a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d88e:	8b 40 38             	mov    0x38(%rax),%eax
    d891:	89 c0                	mov    %eax,%eax
    d893:	48 83 c0 4a          	add    $0x4a,%rax
    d897:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d89e:	00 
    d89f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d8a6:	48 01 d0             	add    %rdx,%rax
    d8a9:	48 83 c0 08          	add    $0x8,%rax
    d8ad:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    d8b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d8b5:	48 8b 00             	mov    (%rax),%rax
    d8b8:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    d8bc:	75 46                	jne    d904 <try_realloc_chunk+0xaad>
    d8be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d8c2:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    d8c9:	48 89 10             	mov    %rdx,(%rax)
    d8cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d8d0:	48 8b 00             	mov    (%rax),%rax
    d8d3:	48 85 c0             	test   %rax,%rax
    d8d6:	75 7b                	jne    d953 <try_realloc_chunk+0xafc>
    d8d8:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d8df:	8b 50 04             	mov    0x4(%rax),%edx
    d8e2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d8e6:	8b 40 38             	mov    0x38(%rax),%eax
    d8e9:	be 01 00 00 00       	mov    $0x1,%esi
    d8ee:	89 c1                	mov    %eax,%ecx
    d8f0:	d3 e6                	shl    %cl,%esi
    d8f2:	89 f0                	mov    %esi,%eax
    d8f4:	f7 d0                	not    %eax
    d8f6:	21 c2                	and    %eax,%edx
    d8f8:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d8ff:	89 50 04             	mov    %edx,0x4(%rax)
    d902:	eb 4f                	jmp    d953 <try_realloc_chunk+0xafc>
    d904:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d90b:	48 8b 40 18          	mov    0x18(%rax),%rax
    d90f:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    d913:	0f 96 c0             	setbe  %al
    d916:	0f b6 c0             	movzbl %al,%eax
    d919:	48 85 c0             	test   %rax,%rax
    d91c:	74 30                	je     d94e <try_realloc_chunk+0xaf7>
    d91e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d922:	48 8b 40 20          	mov    0x20(%rax),%rax
    d926:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    d92a:	75 11                	jne    d93d <try_realloc_chunk+0xae6>
    d92c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d930:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    d937:	48 89 50 20          	mov    %rdx,0x20(%rax)
    d93b:	eb 16                	jmp    d953 <try_realloc_chunk+0xafc>
    d93d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d941:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    d948:	48 89 50 28          	mov    %rdx,0x28(%rax)
    d94c:	eb 05                	jmp    d953 <try_realloc_chunk+0xafc>
    d94e:	e8 76 0b 01 00       	callq  1e4c9 <abort>
    d953:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
    d95a:	00 
    d95b:	0f 84 d9 00 00 00    	je     da3a <try_realloc_chunk+0xbe3>
    d961:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d968:	48 8b 40 18          	mov    0x18(%rax),%rax
    d96c:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
    d973:	0f 96 c0             	setbe  %al
    d976:	0f b6 c0             	movzbl %al,%eax
    d979:	48 85 c0             	test   %rax,%rax
    d97c:	0f 84 b3 00 00 00    	je     da35 <try_realloc_chunk+0xbde>
    d982:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    d989:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    d98d:	48 89 50 30          	mov    %rdx,0x30(%rax)
    d991:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d995:	48 8b 40 20          	mov    0x20(%rax),%rax
    d999:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d99d:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    d9a2:	74 3f                	je     d9e3 <try_realloc_chunk+0xb8c>
    d9a4:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d9ab:	48 8b 40 18          	mov    0x18(%rax),%rax
    d9af:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    d9b3:	0f 96 c0             	setbe  %al
    d9b6:	0f b6 c0             	movzbl %al,%eax
    d9b9:	48 85 c0             	test   %rax,%rax
    d9bc:	74 20                	je     d9de <try_realloc_chunk+0xb87>
    d9be:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    d9c5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d9c9:	48 89 50 20          	mov    %rdx,0x20(%rax)
    d9cd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d9d1:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    d9d8:	48 89 50 30          	mov    %rdx,0x30(%rax)
    d9dc:	eb 05                	jmp    d9e3 <try_realloc_chunk+0xb8c>
    d9de:	e8 e6 0a 01 00       	callq  1e4c9 <abort>
    d9e3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d9e7:	48 8b 40 28          	mov    0x28(%rax),%rax
    d9eb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d9ef:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    d9f4:	74 44                	je     da3a <try_realloc_chunk+0xbe3>
    d9f6:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d9fd:	48 8b 40 18          	mov    0x18(%rax),%rax
    da01:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    da05:	0f 96 c0             	setbe  %al
    da08:	0f b6 c0             	movzbl %al,%eax
    da0b:	48 85 c0             	test   %rax,%rax
    da0e:	74 20                	je     da30 <try_realloc_chunk+0xbd9>
    da10:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    da17:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    da1b:	48 89 50 28          	mov    %rdx,0x28(%rax)
    da1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da23:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    da2a:	48 89 50 30          	mov    %rdx,0x30(%rax)
    da2e:	eb 0a                	jmp    da3a <try_realloc_chunk+0xbe3>
    da30:	e8 94 0a 01 00       	callq  1e4c9 <abort>
    da35:	e8 8f 0a 01 00       	callq  1e4c9 <abort>
    da3a:	48 83 7d a8 1f       	cmpq   $0x1f,-0x58(%rbp)
    da3f:	0f 87 85 00 00 00    	ja     daca <try_realloc_chunk+0xc73>
    da45:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    da4c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    da50:	48 01 d0             	add    %rdx,%rax
    da53:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    da57:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    da5e:	48 8b 40 08          	mov    0x8(%rax),%rax
    da62:	83 e0 01             	and    $0x1,%eax
    da65:	48 0b 45 f0          	or     -0x10(%rbp),%rax
    da69:	48 83 c8 02          	or     $0x2,%rax
    da6d:	48 89 c2             	mov    %rax,%rdx
    da70:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    da77:	48 89 50 08          	mov    %rdx,0x8(%rax)
    da7b:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
    da82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    da86:	48 01 d0             	add    %rdx,%rax
    da89:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
    da90:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    da94:	48 01 ca             	add    %rcx,%rdx
    da97:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    da9b:	48 83 ca 01          	or     $0x1,%rdx
    da9f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    daa3:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
    daaa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    daae:	48 01 d0             	add    %rdx,%rax
    dab1:	48 8b 0d c8 4e 21 00 	mov    0x214ec8(%rip),%rcx        # 222980 <mparams>
    dab8:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    dabf:	48 31 ca             	xor    %rcx,%rdx
    dac2:	48 89 10             	mov    %rdx,(%rax)
    dac5:	e9 08 01 00 00       	jmpq   dbd2 <try_realloc_chunk+0xd7b>
    daca:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
    dad1:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    dad8:	48 01 d0             	add    %rdx,%rax
    dadb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    dadf:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    dae6:	48 8b 40 08          	mov    0x8(%rax),%rax
    daea:	83 e0 01             	and    $0x1,%eax
    daed:	48 0b 85 f8 fe ff ff 	or     -0x108(%rbp),%rax
    daf4:	48 83 c8 02          	or     $0x2,%rax
    daf8:	48 89 c2             	mov    %rax,%rdx
    dafb:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    db02:	48 89 50 08          	mov    %rdx,0x8(%rax)
    db06:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
    db0d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    db14:	48 01 d0             	add    %rdx,%rax
    db17:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
    db1e:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    db25:	48 01 ca             	add    %rcx,%rdx
    db28:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    db2c:	48 83 ca 01          	or     $0x1,%rdx
    db30:	48 89 50 08          	mov    %rdx,0x8(%rax)
    db34:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
    db3b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    db42:	48 01 d0             	add    %rdx,%rax
    db45:	48 8b 0d 34 4e 21 00 	mov    0x214e34(%rip),%rcx        # 222980 <mparams>
    db4c:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    db53:	48 31 ca             	xor    %rcx,%rdx
    db56:	48 89 10             	mov    %rdx,(%rax)
    db59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db5d:	48 8b 40 08          	mov    0x8(%rax),%rax
    db61:	83 e0 01             	and    $0x1,%eax
    db64:	48 0b 45 a8          	or     -0x58(%rbp),%rax
    db68:	48 83 c8 02          	or     $0x2,%rax
    db6c:	48 89 c2             	mov    %rax,%rdx
    db6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db73:	48 89 50 08          	mov    %rdx,0x8(%rax)
    db77:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    db7b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    db7f:	48 01 d0             	add    %rdx,%rax
    db82:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    db86:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    db8a:	48 01 ca             	add    %rcx,%rdx
    db8d:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    db91:	48 83 ca 01          	or     $0x1,%rdx
    db95:	48 89 50 08          	mov    %rdx,0x8(%rax)
    db99:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    db9d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    dba1:	48 01 d0             	add    %rdx,%rax
    dba4:	48 8b 0d d5 4d 21 00 	mov    0x214dd5(%rip),%rcx        # 222980 <mparams>
    dbab:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    dbb2:	48 31 ca             	xor    %rcx,%rdx
    dbb5:	48 89 10             	mov    %rdx,(%rax)
    dbb8:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    dbbc:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    dbc0:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    dbc7:	48 89 ce             	mov    %rcx,%rsi
    dbca:	48 89 c7             	mov    %rax,%rdi
    dbcd:	e8 98 ab ff ff       	callq  876a <dispose_chunk>
    dbd2:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    dbd9:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    dbe0:	eb 05                	jmp    dbe7 <try_realloc_chunk+0xd90>
    dbe2:	e8 e2 08 01 00       	callq  1e4c9 <abort>
    dbe7:	90                   	nop
    dbe8:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    dbef:	c9                   	leaveq 
    dbf0:	c3                   	retq   

000000000000dbf1 <internal_memalign>:
    dbf1:	55                   	push   %rbp
    dbf2:	48 89 e5             	mov    %rsp,%rbp
    dbf5:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    dbfc:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    dc00:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    dc04:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    dc0b:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    dc12:	00 
    dc13:	48 83 7d 80 1f       	cmpq   $0x1f,-0x80(%rbp)
    dc18:	77 08                	ja     dc22 <internal_memalign+0x31>
    dc1a:	48 c7 45 80 20 00 00 	movq   $0x20,-0x80(%rbp)
    dc21:	00 
    dc22:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    dc26:	48 83 e8 01          	sub    $0x1,%rax
    dc2a:	48 23 45 80          	and    -0x80(%rbp),%rax
    dc2e:	48 85 c0             	test   %rax,%rax
    dc31:	74 20                	je     dc53 <internal_memalign+0x62>
    dc33:	48 c7 45 a0 10 00 00 	movq   $0x10,-0x60(%rbp)
    dc3a:	00 
    dc3b:	eb 04                	jmp    dc41 <internal_memalign+0x50>
    dc3d:	48 d1 65 a0          	shlq   -0x60(%rbp)
    dc41:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    dc45:	48 3b 45 80          	cmp    -0x80(%rbp),%rax
    dc49:	72 f2                	jb     dc3d <internal_memalign+0x4c>
    dc4b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    dc4f:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    dc53:	48 c7 c0 80 ff ff ff 	mov    $0xffffffffffffff80,%rax
    dc5a:	48 2b 45 80          	sub    -0x80(%rbp),%rax
    dc5e:	48 3b 85 78 ff ff ff 	cmp    -0x88(%rbp),%rax
    dc65:	77 1b                	ja     dc82 <internal_memalign+0x91>
    dc67:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
    dc6c:	0f 84 e6 03 00 00    	je     e058 <internal_memalign+0x467>
    dc72:	e8 4f ca 00 00       	callq  1a6c6 <__errno>
    dc77:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    dc7d:	e9 d6 03 00 00       	jmpq   e058 <internal_memalign+0x467>
    dc82:	48 83 bd 78 ff ff ff 	cmpq   $0xe,-0x88(%rbp)
    dc89:	0e 
    dc8a:	76 11                	jbe    dc9d <internal_memalign+0xac>
    dc8c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    dc93:	48 83 c0 17          	add    $0x17,%rax
    dc97:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    dc9b:	eb 05                	jmp    dca2 <internal_memalign+0xb1>
    dc9d:	b8 20 00 00 00       	mov    $0x20,%eax
    dca2:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    dca6:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    dcaa:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    dcae:	48 01 d0             	add    %rdx,%rax
    dcb1:	48 83 c0 10          	add    $0x10,%rax
    dcb5:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    dcb9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dcbd:	48 89 c7             	mov    %rax,%rdi
    dcc0:	e8 f9 d0 ff ff       	callq  adbe <dlmalloc>
    dcc5:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    dcc9:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
    dcce:	0f 84 84 03 00 00    	je     e058 <internal_memalign+0x467>
    dcd4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    dcd8:	48 83 e8 10          	sub    $0x10,%rax
    dcdc:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    dce0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    dce4:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
    dcea:	83 e0 02             	and    $0x2,%eax
    dced:	85 c0                	test   %eax,%eax
    dcef:	74 36                	je     dd27 <internal_memalign+0x136>
    dcf1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    dcf5:	48 8d 90 74 03 00 00 	lea    0x374(%rax),%rdx
    dcfc:	b8 01 00 00 00       	mov    $0x1,%eax
    dd01:	87 02                	xchg   %eax,(%rdx)
    dd03:	85 c0                	test   %eax,%eax
    dd05:	74 20                	je     dd27 <internal_memalign+0x136>
    dd07:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    dd0b:	48 05 74 03 00 00    	add    $0x374,%rax
    dd11:	48 89 c7             	mov    %rax,%rdi
    dd14:	e8 66 6f ff ff       	callq  4c7f <spin_acquire_lock>
    dd19:	85 c0                	test   %eax,%eax
    dd1b:	74 0a                	je     dd27 <internal_memalign+0x136>
    dd1d:	b8 00 00 00 00       	mov    $0x0,%eax
    dd22:	e9 35 03 00 00       	jmpq   e05c <internal_memalign+0x46b>
    dd27:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    dd2b:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    dd2f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    dd33:	48 21 d0             	and    %rdx,%rax
    dd36:	48 85 c0             	test   %rax,%rax
    dd39:	0f 84 88 01 00 00    	je     dec7 <internal_memalign+0x2d6>
    dd3f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    dd43:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    dd47:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    dd4b:	48 01 d0             	add    %rdx,%rax
    dd4e:	48 89 c2             	mov    %rax,%rdx
    dd51:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    dd55:	48 f7 d8             	neg    %rax
    dd58:	48 21 d0             	and    %rdx,%rax
    dd5b:	48 83 e8 10          	sub    $0x10,%rax
    dd5f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    dd63:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    dd67:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    dd6b:	48 29 c2             	sub    %rax,%rdx
    dd6e:	48 89 d0             	mov    %rdx,%rax
    dd71:	48 83 f8 1f          	cmp    $0x1f,%rax
    dd75:	77 0d                	ja     dd84 <internal_memalign+0x193>
    dd77:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    dd7b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    dd7f:	48 01 d0             	add    %rdx,%rax
    dd82:	eb 04                	jmp    dd88 <internal_memalign+0x197>
    dd84:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dd88:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    dd8c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    dd90:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    dd94:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    dd98:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    dd9c:	48 29 c2             	sub    %rax,%rdx
    dd9f:	48 89 d0             	mov    %rdx,%rax
    dda2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    dda6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ddaa:	48 8b 40 08          	mov    0x8(%rax),%rax
    ddae:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    ddb2:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    ddb6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    ddba:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ddbe:	48 8b 40 08          	mov    0x8(%rax),%rax
    ddc2:	83 e0 03             	and    $0x3,%eax
    ddc5:	48 85 c0             	test   %rax,%rax
    ddc8:	75 26                	jne    ddf0 <internal_memalign+0x1ff>
    ddca:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ddce:	48 8b 10             	mov    (%rax),%rdx
    ddd1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ddd5:	48 01 c2             	add    %rax,%rdx
    ddd8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dddc:	48 89 10             	mov    %rdx,(%rax)
    dddf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dde3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    dde7:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ddeb:	e9 cf 00 00 00       	jmpq   debf <internal_memalign+0x2ce>
    ddf0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ddf4:	48 8b 40 08          	mov    0x8(%rax),%rax
    ddf8:	83 e0 01             	and    $0x1,%eax
    ddfb:	48 0b 45 e0          	or     -0x20(%rbp),%rax
    ddff:	48 83 c8 02          	or     $0x2,%rax
    de03:	48 89 c2             	mov    %rax,%rdx
    de06:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    de0a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    de0e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    de12:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    de16:	48 01 d0             	add    %rdx,%rax
    de19:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    de1d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    de21:	48 01 ca             	add    %rcx,%rdx
    de24:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    de28:	48 83 ca 01          	or     $0x1,%rdx
    de2c:	48 89 50 08          	mov    %rdx,0x8(%rax)
    de30:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    de34:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    de38:	48 01 d0             	add    %rdx,%rax
    de3b:	48 8b 0d 3e 4b 21 00 	mov    0x214b3e(%rip),%rcx        # 222980 <mparams>
    de42:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    de46:	48 31 ca             	xor    %rcx,%rdx
    de49:	48 89 10             	mov    %rdx,(%rax)
    de4c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    de50:	48 8b 40 08          	mov    0x8(%rax),%rax
    de54:	83 e0 01             	and    $0x1,%eax
    de57:	48 0b 45 d8          	or     -0x28(%rbp),%rax
    de5b:	48 83 c8 02          	or     $0x2,%rax
    de5f:	48 89 c2             	mov    %rax,%rdx
    de62:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    de66:	48 89 50 08          	mov    %rdx,0x8(%rax)
    de6a:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    de6e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    de72:	48 01 d0             	add    %rdx,%rax
    de75:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    de79:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    de7d:	48 01 ca             	add    %rcx,%rdx
    de80:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    de84:	48 83 ca 01          	or     $0x1,%rdx
    de88:	48 89 50 08          	mov    %rdx,0x8(%rax)
    de8c:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    de90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    de94:	48 01 d0             	add    %rdx,%rax
    de97:	48 8b 0d e2 4a 21 00 	mov    0x214ae2(%rip),%rcx        # 222980 <mparams>
    de9e:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    dea2:	48 31 ca             	xor    %rcx,%rdx
    dea5:	48 89 10             	mov    %rdx,(%rax)
    dea8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    deac:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    deb0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    deb4:	48 89 ce             	mov    %rcx,%rsi
    deb7:	48 89 c7             	mov    %rax,%rdi
    deba:	e8 ab a8 ff ff       	callq  876a <dispose_chunk>
    debf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dec3:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    dec7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    decb:	48 8b 40 08          	mov    0x8(%rax),%rax
    decf:	83 e0 03             	and    $0x3,%eax
    ded2:	48 85 c0             	test   %rax,%rax
    ded5:	0f 84 0c 01 00 00    	je     dfe7 <internal_memalign+0x3f6>
    dedb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    dedf:	48 8b 40 08          	mov    0x8(%rax),%rax
    dee3:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    dee7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    deeb:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    deef:	48 83 c0 20          	add    $0x20,%rax
    def3:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    def7:	0f 83 ea 00 00 00    	jae    dfe7 <internal_memalign+0x3f6>
    defd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df01:	48 2b 45 b0          	sub    -0x50(%rbp),%rax
    df05:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    df09:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    df0d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    df11:	48 01 d0             	add    %rdx,%rax
    df14:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    df18:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    df1c:	48 8b 40 08          	mov    0x8(%rax),%rax
    df20:	83 e0 01             	and    $0x1,%eax
    df23:	48 0b 45 b0          	or     -0x50(%rbp),%rax
    df27:	48 83 c8 02          	or     $0x2,%rax
    df2b:	48 89 c2             	mov    %rax,%rdx
    df2e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    df32:	48 89 50 08          	mov    %rdx,0x8(%rax)
    df36:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    df3a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    df3e:	48 01 d0             	add    %rdx,%rax
    df41:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    df45:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    df49:	48 01 ca             	add    %rcx,%rdx
    df4c:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    df50:	48 83 ca 01          	or     $0x1,%rdx
    df54:	48 89 50 08          	mov    %rdx,0x8(%rax)
    df58:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    df5c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    df60:	48 01 d0             	add    %rdx,%rax
    df63:	48 8b 0d 16 4a 21 00 	mov    0x214a16(%rip),%rcx        # 222980 <mparams>
    df6a:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    df6e:	48 31 ca             	xor    %rcx,%rdx
    df71:	48 89 10             	mov    %rdx,(%rax)
    df74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df78:	48 8b 40 08          	mov    0x8(%rax),%rax
    df7c:	83 e0 01             	and    $0x1,%eax
    df7f:	48 0b 45 f0          	or     -0x10(%rbp),%rax
    df83:	48 83 c8 02          	or     $0x2,%rax
    df87:	48 89 c2             	mov    %rax,%rdx
    df8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df8e:	48 89 50 08          	mov    %rdx,0x8(%rax)
    df92:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    df96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    df9a:	48 01 d0             	add    %rdx,%rax
    df9d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    dfa1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dfa5:	48 01 ca             	add    %rcx,%rdx
    dfa8:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    dfac:	48 83 ca 01          	or     $0x1,%rdx
    dfb0:	48 89 50 08          	mov    %rdx,0x8(%rax)
    dfb4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dfb8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dfbc:	48 01 d0             	add    %rdx,%rax
    dfbf:	48 8b 0d ba 49 21 00 	mov    0x2149ba(%rip),%rcx        # 222980 <mparams>
    dfc6:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    dfca:	48 31 ca             	xor    %rcx,%rdx
    dfcd:	48 89 10             	mov    %rdx,(%rax)
    dfd0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dfd4:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    dfd8:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    dfdc:	48 89 ce             	mov    %rcx,%rsi
    dfdf:	48 89 c7             	mov    %rax,%rdi
    dfe2:	e8 83 a7 ff ff       	callq  876a <dispose_chunk>
    dfe7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    dfeb:	48 83 c0 10          	add    $0x10,%rax
    dfef:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    dff3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    dff7:	48 8b 40 08          	mov    0x8(%rax),%rax
    dffb:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    dfff:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    e003:	73 05                	jae    e00a <internal_memalign+0x419>
    e005:	e8 bf 04 01 00       	callq  1e4c9 <abort>
    e00a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    e00e:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    e012:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    e016:	48 21 d0             	and    %rdx,%rax
    e019:	48 85 c0             	test   %rax,%rax
    e01c:	74 05                	je     e023 <internal_memalign+0x432>
    e01e:	e8 a6 04 01 00       	callq  1e4c9 <abort>
    e023:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    e027:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e02b:	48 89 d6             	mov    %rdx,%rsi
    e02e:	48 89 c7             	mov    %rax,%rdi
    e031:	e8 b9 70 ff ff       	callq  50ef <do_check_inuse_chunk>
    e036:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e03a:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
    e040:	83 e0 02             	and    $0x2,%eax
    e043:	85 c0                	test   %eax,%eax
    e045:	74 11                	je     e058 <internal_memalign+0x467>
    e047:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e04b:	48 05 74 03 00 00    	add    $0x374,%rax
    e051:	ba 00 00 00 00       	mov    $0x0,%edx
    e056:	89 10                	mov    %edx,(%rax)
    e058:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    e05c:	c9                   	leaveq 
    e05d:	c3                   	retq   

000000000000e05e <dlrealloc>:
    e05e:	55                   	push   %rbp
    e05f:	48 89 e5             	mov    %rsp,%rbp
    e062:	48 83 ec 40          	sub    $0x40,%rsp
    e066:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    e06a:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    e06e:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    e075:	00 
    e076:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    e07b:	75 15                	jne    e092 <dlrealloc+0x34>
    e07d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e081:	48 89 c7             	mov    %rax,%rdi
    e084:	e8 35 cd ff ff       	callq  adbe <dlmalloc>
    e089:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    e08d:	e9 b3 01 00 00       	jmpq   e245 <dlrealloc+0x1e7>
    e092:	48 81 7d c0 7f ff ff 	cmpq   $0xffffffffffffff7f,-0x40(%rbp)
    e099:	ff 
    e09a:	76 10                	jbe    e0ac <dlrealloc+0x4e>
    e09c:	e8 25 c6 00 00       	callq  1a6c6 <__errno>
    e0a1:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    e0a7:	e9 99 01 00 00       	jmpq   e245 <dlrealloc+0x1e7>
    e0ac:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    e0b1:	75 11                	jne    e0c4 <dlrealloc+0x66>
    e0b3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e0b7:	48 89 c7             	mov    %rax,%rdi
    e0ba:	e8 ef d7 ff ff       	callq  b8ae <dlfree>
    e0bf:	e9 81 01 00 00       	jmpq   e245 <dlrealloc+0x1e7>
    e0c4:	48 83 7d c0 0e       	cmpq   $0xe,-0x40(%rbp)
    e0c9:	76 0e                	jbe    e0d9 <dlrealloc+0x7b>
    e0cb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e0cf:	48 83 c0 17          	add    $0x17,%rax
    e0d3:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e0d7:	eb 05                	jmp    e0de <dlrealloc+0x80>
    e0d9:	b8 20 00 00 00       	mov    $0x20,%eax
    e0de:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    e0e2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e0e6:	48 83 e8 10          	sub    $0x10,%rax
    e0ea:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    e0ee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e0f2:	48 8b 40 08          	mov    0x8(%rax),%rax
    e0f6:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e0fa:	48 89 c2             	mov    %rax,%rdx
    e0fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e101:	48 01 d0             	add    %rdx,%rax
    e104:	48 8b 10             	mov    (%rax),%rdx
    e107:	48 8b 05 72 48 21 00 	mov    0x214872(%rip),%rax        # 222980 <mparams>
    e10e:	48 31 d0             	xor    %rdx,%rax
    e111:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e115:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e119:	48 8b 50 40          	mov    0x40(%rax),%rdx
    e11d:	48 8b 05 5c 48 21 00 	mov    0x21485c(%rip),%rax        # 222980 <mparams>
    e124:	48 39 c2             	cmp    %rax,%rdx
    e127:	74 05                	je     e12e <dlrealloc+0xd0>
    e129:	e8 9b 03 01 00       	callq  1e4c9 <abort>
    e12e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e132:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
    e138:	83 e0 02             	and    $0x2,%eax
    e13b:	85 c0                	test   %eax,%eax
    e13d:	74 30                	je     e16f <dlrealloc+0x111>
    e13f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e143:	48 8d 90 74 03 00 00 	lea    0x374(%rax),%rdx
    e14a:	b8 01 00 00 00       	mov    $0x1,%eax
    e14f:	87 02                	xchg   %eax,(%rdx)
    e151:	85 c0                	test   %eax,%eax
    e153:	74 1a                	je     e16f <dlrealloc+0x111>
    e155:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e159:	48 05 74 03 00 00    	add    $0x374,%rax
    e15f:	48 89 c7             	mov    %rax,%rdi
    e162:	e8 18 6b ff ff       	callq  4c7f <spin_acquire_lock>
    e167:	85 c0                	test   %eax,%eax
    e169:	0f 85 d6 00 00 00    	jne    e245 <dlrealloc+0x1e7>
    e16f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e173:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    e177:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e17b:	b9 01 00 00 00       	mov    $0x1,%ecx
    e180:	48 89 c7             	mov    %rax,%rdi
    e183:	e8 cf ec ff ff       	callq  ce57 <try_realloc_chunk>
    e188:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e18c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e190:	8b 80 70 03 00 00    	mov    0x370(%rax),%eax
    e196:	83 e0 02             	and    $0x2,%eax
    e199:	85 c0                	test   %eax,%eax
    e19b:	74 11                	je     e1ae <dlrealloc+0x150>
    e19d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e1a1:	48 05 74 03 00 00    	add    $0x374,%rax
    e1a7:	ba 00 00 00 00       	mov    $0x0,%edx
    e1ac:	89 10                	mov    %edx,(%rax)
    e1ae:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e1b3:	74 21                	je     e1d6 <dlrealloc+0x178>
    e1b5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e1b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e1bd:	48 89 d6             	mov    %rdx,%rsi
    e1c0:	48 89 c7             	mov    %rax,%rdi
    e1c3:	e8 27 6f ff ff       	callq  50ef <do_check_inuse_chunk>
    e1c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e1cc:	48 83 c0 10          	add    $0x10,%rax
    e1d0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    e1d4:	eb 6f                	jmp    e245 <dlrealloc+0x1e7>
    e1d6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e1da:	48 89 c7             	mov    %rax,%rdi
    e1dd:	e8 dc cb ff ff       	callq  adbe <dlmalloc>
    e1e2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    e1e6:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    e1eb:	74 58                	je     e245 <dlrealloc+0x1e7>
    e1ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e1f1:	48 8b 40 08          	mov    0x8(%rax),%rax
    e1f5:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e1f9:	48 83 e8 10          	sub    $0x10,%rax
    e1fd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e201:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e205:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
    e209:	48 0f 46 45 c0       	cmovbe -0x40(%rbp),%rax
    e20e:	48 89 c2             	mov    %rax,%rdx
    e211:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    e215:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e219:	48 89 ce             	mov    %rcx,%rsi
    e21c:	48 89 c7             	mov    %rax,%rdi
    e21f:	e8 1d 02 00 00       	callq  e441 <memcpy>
    e224:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e228:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e22c:	be 00 00 00 00       	mov    $0x0,%esi
    e231:	48 89 c7             	mov    %rax,%rdi
    e234:	e8 76 02 00 00       	callq  e4af <memset>
    e239:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e23d:	48 89 c7             	mov    %rax,%rdi
    e240:	e8 69 d6 ff ff       	callq  b8ae <dlfree>
    e245:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e249:	c9                   	leaveq 
    e24a:	c3                   	retq   

000000000000e24b <dlmemalign>:
    e24b:	55                   	push   %rbp
    e24c:	48 89 e5             	mov    %rsp,%rbp
    e24f:	48 83 ec 10          	sub    $0x10,%rsp
    e253:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e257:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e25b:	48 83 7d f8 08       	cmpq   $0x8,-0x8(%rbp)
    e260:	77 0e                	ja     e270 <dlmemalign+0x25>
    e262:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e266:	48 89 c7             	mov    %rax,%rdi
    e269:	e8 50 cb ff ff       	callq  adbe <dlmalloc>
    e26e:	eb 17                	jmp    e287 <dlmemalign+0x3c>
    e270:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e274:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e278:	48 89 c6             	mov    %rax,%rsi
    e27b:	48 8d 3d 3e 47 21 00 	lea    0x21473e(%rip),%rdi        # 2229c0 <_gm_>
    e282:	e8 6a f9 ff ff       	callq  dbf1 <internal_memalign>
    e287:	c9                   	leaveq 
    e288:	c3                   	retq   

000000000000e289 <dlmallinfo>:
    e289:	55                   	push   %rbp
    e28a:	48 89 e5             	mov    %rsp,%rbp
    e28d:	48 83 ec 20          	sub    $0x20,%rsp
    e291:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e295:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e29c:	00 00 
    e29e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e2a2:	31 c0                	xor    %eax,%eax
    e2a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e2a8:	48 8d 35 11 47 21 00 	lea    0x214711(%rip),%rsi        # 2229c0 <_gm_>
    e2af:	48 89 c7             	mov    %rax,%rdi
    e2b2:	e8 84 7b ff ff       	callq  5e3b <internal_mallinfo>
    e2b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e2bb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e2bf:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    e2c6:	00 00 
    e2c8:	74 05                	je     e2cf <dlmallinfo+0x46>
    e2ca:	e8 61 69 ff ff       	callq  4c30 <__stack_chk_fail>
    e2cf:	c9                   	leaveq 
    e2d0:	c3                   	retq   

000000000000e2d1 <__memcpy>:
    e2d1:	55                   	push   %rbp
    e2d2:	48 89 e5             	mov    %rsp,%rbp
    e2d5:	48 83 ec 40          	sub    $0x40,%rsp
    e2d9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e2dd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e2e1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    e2e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e2e9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e2ed:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e2f1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e2f5:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    e2fa:	0f 84 3b 01 00 00    	je     e43b <__memcpy+0x16a>
    e300:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e304:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e308:	0f 84 2d 01 00 00    	je     e43b <__memcpy+0x16a>
    e30e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e312:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e316:	73 11                	jae    e329 <__memcpy+0x58>
    e318:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e31c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e320:	48 01 d0             	add    %rdx,%rax
    e323:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e327:	77 1b                	ja     e344 <__memcpy+0x73>
    e329:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e32d:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    e331:	73 16                	jae    e349 <__memcpy+0x78>
    e333:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e337:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e33b:	48 01 d0             	add    %rdx,%rax
    e33e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    e342:	76 05                	jbe    e349 <__memcpy+0x78>
    e344:	e8 80 01 01 00       	callq  1e4c9 <abort>
    e349:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e34d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e351:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e355:	48 0b 45 f8          	or     -0x8(%rbp),%rax
    e359:	83 e0 07             	and    $0x7,%eax
    e35c:	48 85 c0             	test   %rax,%rax
    e35f:	74 68                	je     e3c9 <__memcpy+0xf8>
    e361:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e365:	48 33 45 f8          	xor    -0x8(%rbp),%rax
    e369:	83 e0 07             	and    $0x7,%eax
    e36c:	48 85 c0             	test   %rax,%rax
    e36f:	75 07                	jne    e378 <__memcpy+0xa7>
    e371:	48 83 7d c8 07       	cmpq   $0x7,-0x38(%rbp)
    e376:	77 0a                	ja     e382 <__memcpy+0xb1>
    e378:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e37c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e380:	eb 16                	jmp    e398 <__memcpy+0xc7>
    e382:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e386:	83 e0 07             	and    $0x7,%eax
    e389:	ba 08 00 00 00       	mov    $0x8,%edx
    e38e:	48 29 c2             	sub    %rax,%rdx
    e391:	48 89 d0             	mov    %rdx,%rax
    e394:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e398:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e39c:	48 29 45 c8          	sub    %rax,-0x38(%rbp)
    e3a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e3a4:	48 8d 50 01          	lea    0x1(%rax),%rdx
    e3a8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    e3ac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e3b0:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
    e3b4:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
    e3b8:	0f b6 12             	movzbl (%rdx),%edx
    e3bb:	88 10                	mov    %dl,(%rax)
    e3bd:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
    e3c2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    e3c7:	75 d7                	jne    e3a0 <__memcpy+0xcf>
    e3c9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e3cd:	48 c1 e8 03          	shr    $0x3,%rax
    e3d1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e3d5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    e3da:	74 24                	je     e400 <__memcpy+0x12f>
    e3dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e3e0:	48 8b 10             	mov    (%rax),%rdx
    e3e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e3e7:	48 89 10             	mov    %rdx,(%rax)
    e3ea:	48 83 45 f0 08       	addq   $0x8,-0x10(%rbp)
    e3ef:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    e3f4:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
    e3f9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    e3fe:	75 dc                	jne    e3dc <__memcpy+0x10b>
    e400:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e404:	83 e0 07             	and    $0x7,%eax
    e407:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e40b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    e410:	74 29                	je     e43b <__memcpy+0x16a>
    e412:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e416:	48 8d 50 01          	lea    0x1(%rax),%rdx
    e41a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    e41e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e422:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
    e426:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
    e42a:	0f b6 12             	movzbl (%rdx),%edx
    e42d:	88 10                	mov    %dl,(%rax)
    e42f:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
    e434:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    e439:	75 d7                	jne    e412 <__memcpy+0x141>
    e43b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e43f:	c9                   	leaveq 
    e440:	c3                   	retq   

000000000000e441 <memcpy>:
    e441:	55                   	push   %rbp
    e442:	48 89 e5             	mov    %rsp,%rbp
    e445:	48 83 ec 20          	sub    $0x20,%rsp
    e449:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e44d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e451:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    e455:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e459:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e45d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e461:	48 89 ce             	mov    %rcx,%rsi
    e464:	48 89 c7             	mov    %rax,%rdi
    e467:	e8 b4 0f 00 00       	callq  f420 <_intel_fast_memcpy>
    e46c:	c9                   	leaveq 
    e46d:	c3                   	retq   

000000000000e46e <__memset>:
    e46e:	55                   	push   %rbp
    e46f:	48 89 e5             	mov    %rsp,%rbp
    e472:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e476:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    e479:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    e47d:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    e482:	74 25                	je     e4a9 <__memset+0x3b>
    e484:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e488:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e48c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e490:	48 8d 50 01          	lea    0x1(%rax),%rdx
    e494:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    e498:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    e49b:	88 10                	mov    %dl,(%rax)
    e49d:	48 83 6d d8 01       	subq   $0x1,-0x28(%rbp)
    e4a2:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    e4a7:	75 e3                	jne    e48c <__memset+0x1e>
    e4a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e4ad:	5d                   	pop    %rbp
    e4ae:	c3                   	retq   

000000000000e4af <memset>:
    e4af:	55                   	push   %rbp
    e4b0:	48 89 e5             	mov    %rsp,%rbp
    e4b3:	48 83 ec 20          	sub    $0x20,%rsp
    e4b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e4bb:	89 75 f4             	mov    %esi,-0xc(%rbp)
    e4be:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    e4c2:	8b 45 f4             	mov    -0xc(%rbp),%eax
    e4c5:	48 98                	cltq   
    e4c7:	48 89 c1             	mov    %rax,%rcx
    e4ca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e4ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4d2:	48 89 ce             	mov    %rcx,%rsi
    e4d5:	48 89 c7             	mov    %rax,%rdi
    e4d8:	e8 43 10 00 00       	callq  f520 <_intel_fast_memset>
    e4dd:	c9                   	leaveq 
    e4de:	c3                   	retq   

000000000000e4df <memset_s>:
    e4df:	55                   	push   %rbp
    e4e0:	48 89 e5             	mov    %rsp,%rbp
    e4e3:	48 83 ec 30          	sub    $0x30,%rsp
    e4e7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e4eb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e4ef:	89 55 dc             	mov    %edx,-0x24(%rbp)
    e4f2:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    e4f6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    e4fd:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    e502:	75 09                	jne    e50d <memset_s+0x2e>
    e504:	c7 45 fc 16 00 00 00 	movl   $0x16,-0x4(%rbp)
    e50b:	eb 30                	jmp    e53d <memset_s+0x5e>
    e50d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e511:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    e515:	76 0f                	jbe    e526 <memset_s+0x47>
    e517:	c7 45 fc 4b 00 00 00 	movl   $0x4b,-0x4(%rbp)
    e51e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e522:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    e526:	48 8b 05 2b 3b 21 00 	mov    0x213b2b(%rip),%rax        # 222058 <__memset_vp>
    e52d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    e531:	8b 75 dc             	mov    -0x24(%rbp),%esi
    e534:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    e538:	48 89 cf             	mov    %rcx,%rdi
    e53b:	ff d0                	callq  *%rax
    e53d:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    e541:	75 07                	jne    e54a <memset_s+0x6b>
    e543:	b8 00 00 00 00       	mov    $0x0,%eax
    e548:	eb 10                	jmp    e55a <memset_s+0x7b>
    e54a:	e8 77 c1 00 00       	callq  1a6c6 <__errno>
    e54f:	48 89 c2             	mov    %rax,%rdx
    e552:	8b 45 fc             	mov    -0x4(%rbp),%eax
    e555:	89 02                	mov    %eax,(%rdx)
    e557:	8b 45 fc             	mov    -0x4(%rbp),%eax
    e55a:	c9                   	leaveq 
    e55b:	c3                   	retq   

000000000000e55c <heap_init>:
    e55c:	55                   	push   %rbp
    e55d:	48 89 e5             	mov    %rsp,%rbp
    e560:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e564:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e568:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    e56c:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
    e56f:	48 8b 05 ba 38 21 00 	mov    0x2138ba(%rip),%rax        # 221e30 <heap_base>
    e576:	48 85 c0             	test   %rax,%rax
    e579:	74 0a                	je     e585 <heap_init+0x29>
    e57b:	b8 01 00 00 00       	mov    $0x1,%eax
    e580:	e9 8c 00 00 00       	jmpq   e611 <heap_init+0xb5>
    e585:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    e58a:	74 0e                	je     e59a <heap_init+0x3e>
    e58c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e590:	25 ff 0f 00 00       	and    $0xfff,%eax
    e595:	48 85 c0             	test   %rax,%rax
    e598:	74 07                	je     e5a1 <heap_init+0x45>
    e59a:	b8 01 00 00 00       	mov    $0x1,%eax
    e59f:	eb 70                	jmp    e611 <heap_init+0xb5>
    e5a1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e5a5:	25 ff 0f 00 00       	and    $0xfff,%eax
    e5aa:	48 85 c0             	test   %rax,%rax
    e5ad:	74 07                	je     e5b6 <heap_init+0x5a>
    e5af:	b8 01 00 00 00       	mov    $0x1,%eax
    e5b4:	eb 5b                	jmp    e611 <heap_init+0xb5>
    e5b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e5ba:	25 ff 0f 00 00       	and    $0xfff,%eax
    e5bf:	48 85 c0             	test   %rax,%rax
    e5c2:	74 07                	je     e5cb <heap_init+0x6f>
    e5c4:	b8 01 00 00 00       	mov    $0x1,%eax
    e5c9:	eb 46                	jmp    e611 <heap_init+0xb5>
    e5cb:	48 8b 05 5e 38 21 00 	mov    0x21385e(%rip),%rax        # 221e30 <heap_base>
    e5d2:	48 f7 d0             	not    %rax
    e5d5:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e5d9:	73 07                	jae    e5e2 <heap_init+0x86>
    e5db:	b8 01 00 00 00       	mov    $0x1,%eax
    e5e0:	eb 2f                	jmp    e611 <heap_init+0xb5>
    e5e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5e6:	48 89 05 43 38 21 00 	mov    %rax,0x213843(%rip)        # 221e30 <heap_base>
    e5ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e5f1:	48 89 05 40 38 21 00 	mov    %rax,0x213840(%rip)        # 221e38 <heap_size>
    e5f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e5fc:	48 89 05 45 38 21 00 	mov    %rax,0x213845(%rip)        # 221e48 <heap_min_size>
    e603:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    e606:	89 05 34 38 21 00    	mov    %eax,0x213834(%rip)        # 221e40 <is_edmm_supported>
    e60c:	b8 00 00 00 00       	mov    $0x0,%eax
    e611:	5d                   	pop    %rbp
    e612:	c3                   	retq   

000000000000e613 <sbrk>:
    e613:	55                   	push   %rbp
    e614:	48 89 e5             	mov    %rsp,%rbp
    e617:	48 83 ec 40          	sub    $0x40,%rsp
    e61b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    e61f:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    e626:	00 
    e627:	48 8b 05 42 47 21 00 	mov    0x214742(%rip),%rax        # 222d70 <heap_used.2426>
    e62e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e632:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    e639:	00 
    e63a:	48 8b 05 ef 37 21 00 	mov    0x2137ef(%rip),%rax        # 221e30 <heap_base>
    e641:	48 85 c0             	test   %rax,%rax
    e644:	75 0c                	jne    e652 <sbrk+0x3f>
    e646:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    e64d:	e9 9d 02 00 00       	jmpq   e8ef <sbrk+0x2dc>
    e652:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    e657:	0f 89 31 01 00 00    	jns    e78e <sbrk+0x17b>
    e65d:	48 f7 5d c8          	negq   -0x38(%rbp)
    e661:	48 8b 15 08 47 21 00 	mov    0x214708(%rip),%rdx        # 222d70 <heap_used.2426>
    e668:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e66c:	48 39 c2             	cmp    %rax,%rdx
    e66f:	73 0c                	jae    e67d <sbrk+0x6a>
    e671:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    e678:	e9 72 02 00 00       	jmpq   e8ef <sbrk+0x2dc>
    e67d:	48 8b 15 ec 46 21 00 	mov    0x2146ec(%rip),%rdx        # 222d70 <heap_used.2426>
    e684:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e688:	48 29 c2             	sub    %rax,%rdx
    e68b:	48 89 d0             	mov    %rdx,%rax
    e68e:	48 89 05 db 46 21 00 	mov    %rax,0x2146db(%rip)        # 222d70 <heap_used.2426>
    e695:	48 8b 05 94 37 21 00 	mov    0x213794(%rip),%rax        # 221e30 <heap_base>
    e69c:	48 89 c2             	mov    %rax,%rdx
    e69f:	48 8b 05 ca 46 21 00 	mov    0x2146ca(%rip),%rax        # 222d70 <heap_used.2426>
    e6a6:	48 01 d0             	add    %rdx,%rax
    e6a9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e6ad:	8b 05 8d 37 21 00    	mov    0x21378d(%rip),%eax        # 221e40 <is_edmm_supported>
    e6b3:	85 c0                	test   %eax,%eax
    e6b5:	0f 84 ca 00 00 00    	je     e785 <sbrk+0x172>
    e6bb:	48 8b 05 86 37 21 00 	mov    0x213786(%rip),%rax        # 221e48 <heap_min_size>
    e6c2:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    e6c6:	0f 86 b9 00 00 00    	jbe    e785 <sbrk+0x172>
    e6cc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e6d0:	25 ff 0f 00 00       	and    $0xfff,%eax
    e6d5:	48 85 c0             	test   %rax,%rax
    e6d8:	74 1f                	je     e6f9 <sbrk+0xe6>
    e6da:	48 8d 0d 7f ff 00 00 	lea    0xff7f(%rip),%rcx        # 1e660 <_ZZL16init_stack_guardPvE8__func__+0xc0>
    e6e1:	48 8d 15 a1 ff 00 00 	lea    0xffa1(%rip),%rdx        # 1e689 <__func__.2431>
    e6e8:	be 65 00 00 00       	mov    $0x65,%esi
    e6ed:	48 8d 3d 8a ff 00 00 	lea    0xff8a(%rip),%rdi        # 1e67e <_ZZL16init_stack_guardPvE8__func__+0xde>
    e6f4:	e8 6a 65 ff ff       	callq  4c63 <__assert>
    e6f9:	48 8b 15 70 46 21 00 	mov    0x214670(%rip),%rdx        # 222d70 <heap_used.2426>
    e700:	48 8b 05 41 37 21 00 	mov    0x213741(%rip),%rax        # 221e48 <heap_min_size>
    e707:	48 39 c2             	cmp    %rax,%rdx
    e70a:	76 12                	jbe    e71e <sbrk+0x10b>
    e70c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e710:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    e714:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e718:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e71c:	eb 2d                	jmp    e74b <sbrk+0x138>
    e71e:	48 8b 05 0b 37 21 00 	mov    0x21370b(%rip),%rax        # 221e30 <heap_base>
    e725:	48 89 c2             	mov    %rax,%rdx
    e728:	48 8b 05 19 37 21 00 	mov    0x213719(%rip),%rax        # 221e48 <heap_min_size>
    e72f:	48 01 d0             	add    %rdx,%rax
    e732:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    e736:	48 8b 05 0b 37 21 00 	mov    0x21370b(%rip),%rax        # 221e48 <heap_min_size>
    e73d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e741:	48 29 c2             	sub    %rax,%rdx
    e744:	48 89 d0             	mov    %rdx,%rax
    e747:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e74b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e74f:	48 c1 e8 0c          	shr    $0xc,%rax
    e753:	48 89 c2             	mov    %rax,%rdx
    e756:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e75a:	48 89 d6             	mov    %rdx,%rsi
    e75d:	48 89 c7             	mov    %rax,%rdi
    e760:	e8 75 31 ff ff       	callq  18da <trim_EPC_pages>
    e765:	89 45 d8             	mov    %eax,-0x28(%rbp)
    e768:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
    e76c:	74 17                	je     e785 <sbrk+0x172>
    e76e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e772:	48 89 05 f7 45 21 00 	mov    %rax,0x2145f7(%rip)        # 222d70 <heap_used.2426>
    e779:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    e780:	e9 6a 01 00 00       	jmpq   e8ef <sbrk+0x2dc>
    e785:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e789:	e9 61 01 00 00       	jmpq   e8ef <sbrk+0x2dc>
    e78e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e792:	48 f7 d0             	not    %rax
    e795:	48 89 c2             	mov    %rax,%rdx
    e798:	48 8b 05 d1 45 21 00 	mov    0x2145d1(%rip),%rax        # 222d70 <heap_used.2426>
    e79f:	48 39 c2             	cmp    %rax,%rdx
    e7a2:	72 1a                	jb     e7be <sbrk+0x1ab>
    e7a4:	48 8b 15 c5 45 21 00 	mov    0x2145c5(%rip),%rdx        # 222d70 <heap_used.2426>
    e7ab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e7af:	48 01 c2             	add    %rax,%rdx
    e7b2:	48 8b 05 7f 36 21 00 	mov    0x21367f(%rip),%rax        # 221e38 <heap_size>
    e7b9:	48 39 c2             	cmp    %rax,%rdx
    e7bc:	76 0c                	jbe    e7ca <sbrk+0x1b7>
    e7be:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    e7c5:	e9 25 01 00 00       	jmpq   e8ef <sbrk+0x2dc>
    e7ca:	48 8b 05 5f 36 21 00 	mov    0x21365f(%rip),%rax        # 221e30 <heap_base>
    e7d1:	48 89 c2             	mov    %rax,%rdx
    e7d4:	48 8b 05 95 45 21 00 	mov    0x214595(%rip),%rax        # 222d70 <heap_used.2426>
    e7db:	48 01 d0             	add    %rdx,%rax
    e7de:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e7e2:	48 8b 15 87 45 21 00 	mov    0x214587(%rip),%rdx        # 222d70 <heap_used.2426>
    e7e9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e7ed:	48 01 d0             	add    %rdx,%rax
    e7f0:	48 89 05 79 45 21 00 	mov    %rax,0x214579(%rip)        # 222d70 <heap_used.2426>
    e7f7:	48 8b 15 6a 45 21 00 	mov    0x21456a(%rip),%rdx        # 222d68 <g_peak_heap_used>
    e7fe:	48 8b 05 6b 45 21 00 	mov    0x21456b(%rip),%rax        # 222d70 <heap_used.2426>
    e805:	48 39 c2             	cmp    %rax,%rdx
    e808:	48 0f 43 c2          	cmovae %rdx,%rax
    e80c:	48 89 05 55 45 21 00 	mov    %rax,0x214555(%rip)        # 222d68 <g_peak_heap_used>
    e813:	8b 05 27 36 21 00    	mov    0x213627(%rip),%eax        # 221e40 <is_edmm_supported>
    e819:	85 c0                	test   %eax,%eax
    e81b:	0f 84 ca 00 00 00    	je     e8eb <sbrk+0x2d8>
    e821:	48 8b 15 48 45 21 00 	mov    0x214548(%rip),%rdx        # 222d70 <heap_used.2426>
    e828:	48 8b 05 19 36 21 00 	mov    0x213619(%rip),%rax        # 221e48 <heap_min_size>
    e82f:	48 39 c2             	cmp    %rax,%rdx
    e832:	0f 86 b3 00 00 00    	jbe    e8eb <sbrk+0x2d8>
    e838:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e83c:	25 ff 0f 00 00       	and    $0xfff,%eax
    e841:	48 85 c0             	test   %rax,%rax
    e844:	74 1f                	je     e865 <sbrk+0x252>
    e846:	48 8d 0d 13 fe 00 00 	lea    0xfe13(%rip),%rcx        # 1e660 <_ZZL16init_stack_guardPvE8__func__+0xc0>
    e84d:	48 8d 15 35 fe 00 00 	lea    0xfe35(%rip),%rdx        # 1e689 <__func__.2431>
    e854:	be 8d 00 00 00       	mov    $0x8d,%esi
    e859:	48 8d 3d 1e fe 00 00 	lea    0xfe1e(%rip),%rdi        # 1e67e <_ZZL16init_stack_guardPvE8__func__+0xde>
    e860:	e8 fe 63 ff ff       	callq  4c63 <__assert>
    e865:	48 8b 05 dc 35 21 00 	mov    0x2135dc(%rip),%rax        # 221e48 <heap_min_size>
    e86c:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    e870:	76 12                	jbe    e884 <sbrk+0x271>
    e872:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e876:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    e87a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e87e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e882:	eb 30                	jmp    e8b4 <sbrk+0x2a1>
    e884:	48 8b 05 a5 35 21 00 	mov    0x2135a5(%rip),%rax        # 221e30 <heap_base>
    e88b:	48 89 c2             	mov    %rax,%rdx
    e88e:	48 8b 05 b3 35 21 00 	mov    0x2135b3(%rip),%rax        # 221e48 <heap_min_size>
    e895:	48 01 d0             	add    %rdx,%rax
    e898:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    e89c:	48 8b 15 cd 44 21 00 	mov    0x2144cd(%rip),%rdx        # 222d70 <heap_used.2426>
    e8a3:	48 8b 05 9e 35 21 00 	mov    0x21359e(%rip),%rax        # 221e48 <heap_min_size>
    e8aa:	48 29 c2             	sub    %rax,%rdx
    e8ad:	48 89 d0             	mov    %rdx,%rax
    e8b0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e8b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e8b8:	48 c1 e8 0c          	shr    $0xc,%rax
    e8bc:	48 89 c2             	mov    %rax,%rdx
    e8bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e8c3:	48 89 d6             	mov    %rdx,%rsi
    e8c6:	48 89 c7             	mov    %rax,%rdi
    e8c9:	e8 39 2f ff ff       	callq  1807 <apply_EPC_pages>
    e8ce:	89 45 dc             	mov    %eax,-0x24(%rbp)
    e8d1:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
    e8d5:	74 14                	je     e8eb <sbrk+0x2d8>
    e8d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8db:	48 89 05 8e 44 21 00 	mov    %rax,0x21448e(%rip)        # 222d70 <heap_used.2426>
    e8e2:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    e8e9:	eb 04                	jmp    e8ef <sbrk+0x2dc>
    e8eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e8ef:	c9                   	leaveq 
    e8f0:	c3                   	retq   

000000000000e8f1 <tstdc_access_version_dummy1>:
    e8f1:	55                   	push   %rbp
    e8f2:	48 89 e5             	mov    %rsp,%rbp
    e8f5:	c6 05 64 37 21 00 73 	movb   $0x73,0x213764(%rip)        # 222060 <sgx_tstdc_version>
    e8fc:	48 8d 05 5d 37 21 00 	lea    0x21375d(%rip),%rax        # 222060 <sgx_tstdc_version>
    e903:	5d                   	pop    %rbp
    e904:	c3                   	retq   

000000000000e905 <_intel_cpu_indicator_init>:
    e905:	55                   	push   %rbp
    e906:	48 89 e5             	mov    %rsp,%rbp
    e909:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e90d:	c7 05 61 44 21 00 01 	movl   $0x1,0x214461(%rip)        # 222d78 <__intel_cpu_indicator>
    e914:	00 00 00 
    e917:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e91b:	25 00 00 80 00       	and    $0x800000,%eax
    e920:	48 85 c0             	test   %rax,%rax
    e923:	74 55                	je     e97a <_intel_cpu_indicator_init+0x75>
    e925:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e929:	25 00 00 04 00       	and    $0x40000,%eax
    e92e:	48 85 c0             	test   %rax,%rax
    e931:	74 47                	je     e97a <_intel_cpu_indicator_init+0x75>
    e933:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e937:	25 00 00 08 00       	and    $0x80000,%eax
    e93c:	48 85 c0             	test   %rax,%rax
    e93f:	74 39                	je     e97a <_intel_cpu_indicator_init+0x75>
    e941:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e945:	25 00 00 10 00       	and    $0x100000,%eax
    e94a:	48 85 c0             	test   %rax,%rax
    e94d:	74 2b                	je     e97a <_intel_cpu_indicator_init+0x75>
    e94f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e953:	25 00 00 20 00       	and    $0x200000,%eax
    e958:	48 85 c0             	test   %rax,%rax
    e95b:	74 1d                	je     e97a <_intel_cpu_indicator_init+0x75>
    e95d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e961:	25 00 00 40 00       	and    $0x400000,%eax
    e966:	48 85 c0             	test   %rax,%rax
    e969:	74 0f                	je     e97a <_intel_cpu_indicator_init+0x75>
    e96b:	c7 05 03 44 21 00 00 	movl   $0x200000,0x214403(%rip)        # 222d78 <__intel_cpu_indicator>
    e972:	00 20 00 
    e975:	e9 32 01 00 00       	jmpq   eaac <_intel_cpu_indicator_init+0x1a7>
    e97a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e97e:	25 00 80 00 00       	and    $0x8000,%eax
    e983:	48 85 c0             	test   %rax,%rax
    e986:	74 0f                	je     e997 <_intel_cpu_indicator_init+0x92>
    e988:	c7 05 e6 43 21 00 00 	movl   $0x40000,0x2143e6(%rip)        # 222d78 <__intel_cpu_indicator>
    e98f:	00 04 00 
    e992:	e9 15 01 00 00       	jmpq   eaac <_intel_cpu_indicator_init+0x1a7>
    e997:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e99b:	25 00 00 01 00       	and    $0x10000,%eax
    e9a0:	48 85 c0             	test   %rax,%rax
    e9a3:	74 0f                	je     e9b4 <_intel_cpu_indicator_init+0xaf>
    e9a5:	c7 05 c9 43 21 00 00 	movl   $0x20000,0x2143c9(%rip)        # 222d78 <__intel_cpu_indicator>
    e9ac:	00 02 00 
    e9af:	e9 f8 00 00 00       	jmpq   eaac <_intel_cpu_indicator_init+0x1a7>
    e9b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9b8:	25 00 20 00 00       	and    $0x2000,%eax
    e9bd:	48 85 c0             	test   %rax,%rax
    e9c0:	74 1d                	je     e9df <_intel_cpu_indicator_init+0xda>
    e9c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9c6:	25 00 40 00 00       	and    $0x4000,%eax
    e9cb:	48 85 c0             	test   %rax,%rax
    e9ce:	74 0f                	je     e9df <_intel_cpu_indicator_init+0xda>
    e9d0:	c7 05 9e 43 21 00 00 	movl   $0x10000,0x21439e(%rip)        # 222d78 <__intel_cpu_indicator>
    e9d7:	00 01 00 
    e9da:	e9 cd 00 00 00       	jmpq   eaac <_intel_cpu_indicator_init+0x1a7>
    e9df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9e3:	25 00 04 00 00       	and    $0x400,%eax
    e9e8:	48 85 c0             	test   %rax,%rax
    e9eb:	74 1d                	je     ea0a <_intel_cpu_indicator_init+0x105>
    e9ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9f1:	25 00 10 00 00       	and    $0x1000,%eax
    e9f6:	48 85 c0             	test   %rax,%rax
    e9f9:	74 0f                	je     ea0a <_intel_cpu_indicator_init+0x105>
    e9fb:	c7 05 73 43 21 00 00 	movl   $0x8000,0x214373(%rip)        # 222d78 <__intel_cpu_indicator>
    ea02:	80 00 00 
    ea05:	e9 a2 00 00 00       	jmpq   eaac <_intel_cpu_indicator_init+0x1a7>
    ea0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea0e:	25 00 02 00 00       	and    $0x200,%eax
    ea13:	48 85 c0             	test   %rax,%rax
    ea16:	74 0f                	je     ea27 <_intel_cpu_indicator_init+0x122>
    ea18:	c7 05 56 43 21 00 00 	movl   $0x2000,0x214356(%rip)        # 222d78 <__intel_cpu_indicator>
    ea1f:	20 00 00 
    ea22:	e9 85 00 00 00       	jmpq   eaac <_intel_cpu_indicator_init+0x1a7>
    ea27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea2b:	25 00 08 00 00       	and    $0x800,%eax
    ea30:	48 85 c0             	test   %rax,%rax
    ea33:	74 0c                	je     ea41 <_intel_cpu_indicator_init+0x13c>
    ea35:	c7 05 39 43 21 00 00 	movl   $0x4000,0x214339(%rip)        # 222d78 <__intel_cpu_indicator>
    ea3c:	40 00 00 
    ea3f:	eb 6b                	jmp    eaac <_intel_cpu_indicator_init+0x1a7>
    ea41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea45:	25 00 01 00 00       	and    $0x100,%eax
    ea4a:	48 85 c0             	test   %rax,%rax
    ea4d:	74 0c                	je     ea5b <_intel_cpu_indicator_init+0x156>
    ea4f:	c7 05 1f 43 21 00 00 	movl   $0x1000,0x21431f(%rip)        # 222d78 <__intel_cpu_indicator>
    ea56:	10 00 00 
    ea59:	eb 51                	jmp    eaac <_intel_cpu_indicator_init+0x1a7>
    ea5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea5f:	25 80 00 00 00       	and    $0x80,%eax
    ea64:	48 85 c0             	test   %rax,%rax
    ea67:	74 0c                	je     ea75 <_intel_cpu_indicator_init+0x170>
    ea69:	c7 05 05 43 21 00 00 	movl   $0x800,0x214305(%rip)        # 222d78 <__intel_cpu_indicator>
    ea70:	08 00 00 
    ea73:	eb 37                	jmp    eaac <_intel_cpu_indicator_init+0x1a7>
    ea75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea79:	83 e0 40             	and    $0x40,%eax
    ea7c:	48 85 c0             	test   %rax,%rax
    ea7f:	74 0c                	je     ea8d <_intel_cpu_indicator_init+0x188>
    ea81:	c7 05 ed 42 21 00 00 	movl   $0x400,0x2142ed(%rip)        # 222d78 <__intel_cpu_indicator>
    ea88:	04 00 00 
    ea8b:	eb 1f                	jmp    eaac <_intel_cpu_indicator_init+0x1a7>
    ea8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea91:	83 e0 20             	and    $0x20,%eax
    ea94:	48 85 c0             	test   %rax,%rax
    ea97:	74 0c                	je     eaa5 <_intel_cpu_indicator_init+0x1a0>
    ea99:	c7 05 d5 42 21 00 80 	movl   $0x80,0x2142d5(%rip)        # 222d78 <__intel_cpu_indicator>
    eaa0:	00 00 00 
    eaa3:	eb 07                	jmp    eaac <_intel_cpu_indicator_init+0x1a7>
    eaa5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    eaaa:	eb 05                	jmp    eab1 <_intel_cpu_indicator_init+0x1ac>
    eaac:	b8 00 00 00 00       	mov    $0x0,%eax
    eab1:	5d                   	pop    %rbp
    eab2:	c3                   	retq   

000000000000eab3 <sgx_init_string_lib>:
    eab3:	55                   	push   %rbp
    eab4:	48 89 e5             	mov    %rsp,%rbp
    eab7:	48 83 ec 18          	sub    $0x18,%rsp
    eabb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    eabf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eac3:	83 e0 fe             	and    $0xfffffffe,%eax
    eac6:	89 45 fc             	mov    %eax,-0x4(%rbp)
    eac9:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    eacd:	74 1b                	je     eaea <sgx_init_string_lib+0x37>
    eacf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ead3:	48 89 05 ae 42 21 00 	mov    %rax,0x2142ae(%rip)        # 222d88 <__intel_cpu_feature_indicator_x>
    eada:	48 8b 05 a7 42 21 00 	mov    0x2142a7(%rip),%rax        # 222d88 <__intel_cpu_feature_indicator_x>
    eae1:	48 89 05 98 42 21 00 	mov    %rax,0x214298(%rip)        # 222d80 <__intel_cpu_feature_indicator>
    eae8:	eb 19                	jmp    eb03 <sgx_init_string_lib+0x50>
    eaea:	48 c7 05 93 42 21 00 	movq   $0x1,0x214293(%rip)        # 222d88 <__intel_cpu_feature_indicator_x>
    eaf1:	01 00 00 00 
    eaf5:	48 8b 05 8c 42 21 00 	mov    0x21428c(%rip),%rax        # 222d88 <__intel_cpu_feature_indicator_x>
    eafc:	48 89 05 7d 42 21 00 	mov    %rax,0x21427d(%rip)        # 222d80 <__intel_cpu_feature_indicator>
    eb03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eb07:	48 89 c7             	mov    %rax,%rdi
    eb0a:	e8 f6 fd ff ff       	callq  e905 <_intel_cpu_indicator_init>
    eb0f:	c9                   	leaveq 
    eb10:	c3                   	retq   

000000000000eb11 <sgx_spin_lock>:
    eb11:	55                   	push   %rbp
    eb12:	48 89 e5             	mov    %rsp,%rbp
    eb15:	48 83 ec 30          	sub    $0x30,%rsp
    eb19:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    eb1d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    eb24:	00 00 
    eb26:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    eb2a:	31 c0                	xor    %eax,%eax
    eb2c:	eb 0c                	jmp    eb3a <sgx_spin_lock+0x29>
    eb2e:	f3 90                	pause  
    eb30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eb34:	8b 00                	mov    (%rax),%eax
    eb36:	85 c0                	test   %eax,%eax
    eb38:	75 f4                	jne    eb2e <sgx_spin_lock+0x1d>
    eb3a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eb3e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    eb42:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
    eb49:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eb4d:	8b 55 ec             	mov    -0x14(%rbp),%edx
    eb50:	f0 87 10             	lock xchg %edx,(%rax)
    eb53:	89 55 e8             	mov    %edx,-0x18(%rbp)
    eb56:	8b 45 e8             	mov    -0x18(%rbp),%eax
    eb59:	85 c0                	test   %eax,%eax
    eb5b:	75 d3                	jne    eb30 <sgx_spin_lock+0x1f>
    eb5d:	b8 00 00 00 00       	mov    $0x0,%eax
    eb62:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    eb66:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    eb6d:	00 00 
    eb6f:	74 05                	je     eb76 <sgx_spin_lock+0x65>
    eb71:	e8 ba 60 ff ff       	callq  4c30 <__stack_chk_fail>
    eb76:	c9                   	leaveq 
    eb77:	c3                   	retq   

000000000000eb78 <sgx_spin_unlock>:
    eb78:	55                   	push   %rbp
    eb79:	48 89 e5             	mov    %rsp,%rbp
    eb7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eb80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb84:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    eb8a:	b8 00 00 00 00       	mov    $0x0,%eax
    eb8f:	5d                   	pop    %rbp
    eb90:	c3                   	retq   
    eb91:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    eb98:	00 00 00 
    eb9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000eba0 <__intel_cpu_indicator_init>:
    eba0:	f3 0f 1e fa          	repz nop %edx
    eba4:	50                   	push   %rax
    eba5:	52                   	push   %rdx
    eba6:	51                   	push   %rcx
    eba7:	53                   	push   %rbx
    eba8:	57                   	push   %rdi
    eba9:	56                   	push   %rsi
    ebaa:	55                   	push   %rbp
    ebab:	41 50                	push   %r8
    ebad:	41 51                	push   %r9
    ebaf:	41 54                	push   %r12
    ebb1:	41 55                	push   %r13
    ebb3:	41 56                	push   %r14
    ebb5:	41 57                	push   %r15
    ebb7:	48 89 e5             	mov    %rsp,%rbp
    ebba:	48 83 ec 50          	sub    $0x50,%rsp
    ebbe:	9c                   	pushfq 
    ebbf:	58                   	pop    %rax
    ebc0:	48 89 c1             	mov    %rax,%rcx
    ebc3:	48 35 00 00 20 00    	xor    $0x200000,%rax
    ebc9:	50                   	push   %rax
    ebca:	9d                   	popfq  
    ebcb:	9c                   	pushfq 
    ebcc:	58                   	pop    %rax
    ebcd:	48 3b c1             	cmp    %rcx,%rax
    ebd0:	74 2a                	je     ebfc <__intel_cpu_indicator_init+0x5c>
    ebd2:	51                   	push   %rcx
    ebd3:	9d                   	popfq  
    ebd4:	48 33 c0             	xor    %rax,%rax
    ebd7:	0f a2                	cpuid  
    ebd9:	89 45 e0             	mov    %eax,-0x20(%rbp)
    ebdc:	89 5d f0             	mov    %ebx,-0x10(%rbp)
    ebdf:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
    ebe2:	89 55 ec             	mov    %edx,-0x14(%rbp)
    ebe5:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
    ebec:	0f a2                	cpuid  
    ebee:	89 45 e8             	mov    %eax,-0x18(%rbp)
    ebf1:	89 5d b0             	mov    %ebx,-0x50(%rbp)
    ebf4:	89 4d dc             	mov    %ecx,-0x24(%rbp)
    ebf7:	89 55 b4             	mov    %edx,-0x4c(%rbp)
    ebfa:	eb 1b                	jmp    ec17 <__intel_cpu_indicator_init+0x77>
    ebfc:	48 33 c0             	xor    %rax,%rax
    ebff:	89 45 e0             	mov    %eax,-0x20(%rbp)
    ec02:	89 45 f0             	mov    %eax,-0x10(%rbp)
    ec05:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    ec08:	89 45 ec             	mov    %eax,-0x14(%rbp)
    ec0b:	89 45 e8             	mov    %eax,-0x18(%rbp)
    ec0e:	89 45 b0             	mov    %eax,-0x50(%rbp)
    ec11:	89 45 dc             	mov    %eax,-0x24(%rbp)
    ec14:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    ec17:	bb 01 00 00 00       	mov    $0x1,%ebx
    ec1c:	81 7d f0 47 65 6e 75 	cmpl   $0x756e6547,-0x10(%rbp)
    ec23:	0f 85 fb 01 00 00    	jne    ee24 <__intel_cpu_indicator_init+0x284>
    ec29:	81 7d ec 69 6e 65 49 	cmpl   $0x49656e69,-0x14(%rbp)
    ec30:	0f 85 ee 01 00 00    	jne    ee24 <__intel_cpu_indicator_init+0x284>
    ec36:	81 7d e4 6e 74 65 6c 	cmpl   $0x6c65746e,-0x1c(%rbp)
    ec3d:	0f 85 e1 01 00 00    	jne    ee24 <__intel_cpu_indicator_init+0x284>
    ec43:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
    ec47:	0f 84 d7 01 00 00    	je     ee24 <__intel_cpu_indicator_init+0x284>
    ec4d:	8a 45 e9             	mov    -0x17(%rbp),%al
    ec50:	24 0f                	and    $0xf,%al
    ec52:	3c 0f                	cmp    $0xf,%al
    ec54:	75 11                	jne    ec67 <__intel_cpu_indicator_init+0xc7>
    ec56:	b8 00 08 00 00       	mov    $0x800,%eax
    ec5b:	f6 45 dc 01          	testb  $0x1,-0x24(%rbp)
    ec5f:	0f 45 d8             	cmovne %eax,%ebx
    ec62:	e9 bd 01 00 00       	jmpq   ee24 <__intel_cpu_indicator_init+0x284>
    ec67:	3c 06                	cmp    $0x6,%al
    ec69:	0f 85 b5 01 00 00    	jne    ee24 <__intel_cpu_indicator_init+0x284>
    ec6f:	44 8b 5d dc          	mov    -0x24(%rbp),%r11d
    ec73:	b8 00 08 00 00       	mov    $0x800,%eax
    ec78:	41 f7 c3 01 00 00 00 	test   $0x1,%r11d
    ec7f:	0f 45 d8             	cmovne %eax,%ebx
    ec82:	ba 00 10 00 00       	mov    $0x1000,%edx
    ec87:	41 f7 c3 00 02 00 00 	test   $0x200,%r11d
    ec8e:	0f 45 da             	cmovne %edx,%ebx
    ec91:	b9 00 40 00 00       	mov    $0x4000,%ecx
    ec96:	41 f7 c3 00 00 40 00 	test   $0x400000,%r11d
    ec9d:	44 89 df             	mov    %r11d,%edi
    eca0:	0f 45 d9             	cmovne %ecx,%ebx
    eca3:	be 00 20 00 00       	mov    $0x2000,%esi
    eca8:	41 f7 c3 00 00 08 00 	test   $0x80000,%r11d
    ecaf:	45 89 d9             	mov    %r11d,%r9d
    ecb2:	0f 45 de             	cmovne %esi,%ebx
    ecb5:	41 b8 00 80 00 00    	mov    $0x8000,%r8d
    ecbb:	81 e7 00 00 90 00    	and    $0x900000,%edi
    ecc1:	81 ff 00 00 90 00    	cmp    $0x900000,%edi
    ecc7:	41 0f 44 d8          	cmove  %r8d,%ebx
    eccb:	41 ba 00 00 01 00    	mov    $0x10000,%r10d
    ecd1:	41 81 e1 02 00 00 02 	and    $0x2000002,%r9d
    ecd8:	41 81 f9 02 00 00 02 	cmp    $0x2000002,%r9d
    ecdf:	41 0f 44 da          	cmove  %r10d,%ebx
    ece3:	41 f7 c3 00 00 00 08 	test   $0x8000000,%r11d
    ecea:	0f 84 34 01 00 00    	je     ee24 <__intel_cpu_indicator_init+0x284>
    ecf0:	b9 00 00 00 00       	mov    $0x0,%ecx
    ecf5:	0f 01 d0             	xgetbv 
    ecf8:	89 45 d8             	mov    %eax,-0x28(%rbp)
    ecfb:	8a 45 d8             	mov    -0x28(%rbp),%al
    ecfe:	24 06                	and    $0x6,%al
    ed00:	3c 06                	cmp    $0x6,%al
    ed02:	0f 85 1c 01 00 00    	jne    ee24 <__intel_cpu_indicator_init+0x284>
    ed08:	8b 75 dc             	mov    -0x24(%rbp),%esi
    ed0b:	f7 c6 00 00 00 10    	test   $0x10000000,%esi
    ed11:	0f 84 0d 01 00 00    	je     ee24 <__intel_cpu_indicator_init+0x284>
    ed17:	81 e6 00 00 00 20    	and    $0x20000000,%esi
    ed1d:	c1 ee 0c             	shr    $0xc,%esi
    ed20:	81 c6 00 00 02 00    	add    $0x20000,%esi
    ed26:	b8 07 00 00 00       	mov    $0x7,%eax
    ed2b:	33 c9                	xor    %ecx,%ecx
    ed2d:	0f a2                	cpuid  
    ed2f:	89 45 b8             	mov    %eax,-0x48(%rbp)
    ed32:	89 5d bc             	mov    %ebx,-0x44(%rbp)
    ed35:	89 4d c0             	mov    %ecx,-0x40(%rbp)
    ed38:	89 55 c4             	mov    %edx,-0x3c(%rbp)
    ed3b:	b8 01 00 00 80       	mov    $0x80000001,%eax
    ed40:	0f a2                	cpuid  
    ed42:	89 45 c8             	mov    %eax,-0x38(%rbp)
    ed45:	89 5d cc             	mov    %ebx,-0x34(%rbp)
    ed48:	89 4d d0             	mov    %ecx,-0x30(%rbp)
    ed4b:	89 55 d4             	mov    %edx,-0x2c(%rbp)
    ed4e:	8b 55 bc             	mov    -0x44(%rbp),%edx
    ed51:	f6 c2 20             	test   $0x20,%dl
    ed54:	74 30                	je     ed86 <__intel_cpu_indicator_init+0x1e6>
    ed56:	89 d0                	mov    %edx,%eax
    ed58:	25 08 01 00 00       	and    $0x108,%eax
    ed5d:	3d 08 01 00 00       	cmp    $0x108,%eax
    ed62:	75 22                	jne    ed86 <__intel_cpu_indicator_init+0x1e6>
    ed64:	f6 45 d0 20          	testb  $0x20,-0x30(%rbp)
    ed68:	74 1c                	je     ed86 <__intel_cpu_indicator_init+0x1e6>
    ed6a:	f7 45 dc 00 10 00 00 	testl  $0x1000,-0x24(%rbp)
    ed71:	74 13                	je     ed86 <__intel_cpu_indicator_init+0x1e6>
    ed73:	f6 c2 10             	test   $0x10,%dl
    ed76:	74 0e                	je     ed86 <__intel_cpu_indicator_init+0x1e6>
    ed78:	b8 00 00 20 00       	mov    $0x200000,%eax
    ed7d:	f7 c2 00 08 00 00    	test   $0x800,%edx
    ed83:	0f 45 f0             	cmovne %eax,%esi
    ed86:	89 d3                	mov    %edx,%ebx
    ed88:	81 e3 00 00 0c 00    	and    $0xc0000,%ebx
    ed8e:	81 fb 00 00 0c 00    	cmp    $0xc0000,%ebx
    ed94:	bb 00 00 80 00       	mov    $0x800000,%ebx
    ed99:	8a 45 d8             	mov    -0x28(%rbp),%al
    ed9c:	0f 45 de             	cmovne %esi,%ebx
    ed9f:	24 e0                	and    $0xe0,%al
    eda1:	3c e0                	cmp    $0xe0,%al
    eda3:	75 7f                	jne    ee24 <__intel_cpu_indicator_init+0x284>
    eda5:	89 d0                	mov    %edx,%eax
    eda7:	25 00 00 01 04       	and    $0x4010000,%eax
    edac:	3d 00 00 01 04       	cmp    $0x4010000,%eax
    edb1:	75 16                	jne    edc9 <__intel_cpu_indicator_init+0x229>
    edb3:	f7 c2 00 00 00 08    	test   $0x8000000,%edx
    edb9:	74 0e                	je     edc9 <__intel_cpu_indicator_init+0x229>
    edbb:	b8 00 00 00 02       	mov    $0x2000000,%eax
    edc0:	f7 c2 00 00 00 10    	test   $0x10000000,%edx
    edc6:	0f 45 d8             	cmovne %eax,%ebx
    edc9:	89 d0                	mov    %edx,%eax
    edcb:	25 00 00 03 00       	and    $0x30000,%eax
    edd0:	3d 00 00 03 00       	cmp    $0x30000,%eax
    edd5:	75 16                	jne    eded <__intel_cpu_indicator_init+0x24d>
    edd7:	f7 c2 00 00 00 40    	test   $0x40000000,%edx
    eddd:	74 0e                	je     eded <__intel_cpu_indicator_init+0x24d>
    eddf:	b8 00 00 00 04       	mov    $0x4000000,%eax
    ede4:	f7 c2 00 00 00 80    	test   $0x80000000,%edx
    edea:	0f 45 d8             	cmovne %eax,%ebx
    eded:	8b 55 c0             	mov    -0x40(%rbp),%edx
    edf0:	89 d0                	mov    %edx,%eax
    edf2:	25 40 01 00 00       	and    $0x140,%eax
    edf7:	3d 40 01 00 00       	cmp    $0x140,%eax
    edfc:	75 26                	jne    ee24 <__intel_cpu_indicator_init+0x284>
    edfe:	f7 c2 00 02 00 00    	test   $0x200,%edx
    ee04:	74 1e                	je     ee24 <__intel_cpu_indicator_init+0x284>
    ee06:	f7 c2 00 04 00 00    	test   $0x400,%edx
    ee0c:	74 16                	je     ee24 <__intel_cpu_indicator_init+0x284>
    ee0e:	f7 c2 00 08 00 00    	test   $0x800,%edx
    ee14:	74 0e                	je     ee24 <__intel_cpu_indicator_init+0x284>
    ee16:	b8 00 00 00 10       	mov    $0x10000000,%eax
    ee1b:	f7 c2 00 10 00 00    	test   $0x1000,%edx
    ee21:	0f 45 d8             	cmovne %eax,%ebx
    ee24:	89 1d 4e 3f 21 00    	mov    %ebx,0x213f4e(%rip)        # 222d78 <__intel_cpu_indicator>
    ee2a:	48 83 c4 50          	add    $0x50,%rsp
    ee2e:	41 5f                	pop    %r15
    ee30:	41 5e                	pop    %r14
    ee32:	41 5d                	pop    %r13
    ee34:	41 5c                	pop    %r12
    ee36:	41 59                	pop    %r9
    ee38:	41 58                	pop    %r8
    ee3a:	5d                   	pop    %rbp
    ee3b:	5e                   	pop    %rsi
    ee3c:	5f                   	pop    %rdi
    ee3d:	5b                   	pop    %rbx
    ee3e:	59                   	pop    %rcx
    ee3f:	5a                   	pop    %rdx
    ee40:	58                   	pop    %rax
    ee41:	c3                   	retq   
    ee42:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ee49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000ee50 <__intel_cpu_features_init_x>:
    ee50:	f3 0f 1e fa          	repz nop %edx
    ee54:	50                   	push   %rax
    ee55:	33 c0                	xor    %eax,%eax
    ee57:	e8 24 00 00 00       	callq  ee80 <__intel_cpu_features_init_body>
    ee5c:	58                   	pop    %rax
    ee5d:	c3                   	retq   
    ee5e:	66 90                	xchg   %ax,%ax

000000000000ee60 <__intel_cpu_features_init>:
    ee60:	f3 0f 1e fa          	repz nop %edx
    ee64:	50                   	push   %rax
    ee65:	b8 01 00 00 00       	mov    $0x1,%eax
    ee6a:	e8 11 00 00 00       	callq  ee80 <__intel_cpu_features_init_body>
    ee6f:	58                   	pop    %rax
    ee70:	c3                   	retq   
    ee71:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ee78:	00 
    ee79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000ee80 <__intel_cpu_features_init_body>:
    ee80:	52                   	push   %rdx
    ee81:	51                   	push   %rcx
    ee82:	53                   	push   %rbx
    ee83:	56                   	push   %rsi
    ee84:	57                   	push   %rdi
    ee85:	41 50                	push   %r8
    ee87:	41 51                	push   %r9
    ee89:	41 57                	push   %r15
    ee8b:	55                   	push   %rbp
    ee8c:	41 89 c3             	mov    %eax,%r11d
    ee8f:	33 c0                	xor    %eax,%eax
    ee91:	0f a2                	cpuid  
    ee93:	89 44 24 f0          	mov    %eax,-0x10(%rsp)
    ee97:	89 5c 24 f4          	mov    %ebx,-0xc(%rsp)
    ee9b:	89 4c 24 f8          	mov    %ecx,-0x8(%rsp)
    ee9f:	89 54 24 fc          	mov    %edx,-0x4(%rsp)
    eea3:	83 7c 24 f0 00       	cmpl   $0x0,-0x10(%rsp)
    eea8:	0f 84 be 04 00 00    	je     f36c <__intel_cpu_features_init_body+0x4ec>
    eeae:	41 83 fb 01          	cmp    $0x1,%r11d
    eeb2:	0f 84 cc 04 00 00    	je     f384 <__intel_cpu_features_init_body+0x504>
    eeb8:	b8 01 00 00 00       	mov    $0x1,%eax
    eebd:	0f a2                	cpuid  
    eebf:	89 d7                	mov    %edx,%edi
    eec1:	89 d5                	mov    %edx,%ebp
    eec3:	81 e7 00 80 00 00    	and    $0x8000,%edi
    eec9:	83 e5 01             	and    $0x1,%ebp
    eecc:	89 ce                	mov    %ecx,%esi
    eece:	41 89 c2             	mov    %eax,%r10d
    eed1:	48 c1 ef 0d          	shr    $0xd,%rdi
    eed5:	f7 c2 00 00 80 00    	test   $0x800000,%edx
    eedb:	48 8d 6c 6f 01       	lea    0x1(%rdi,%rbp,2),%rbp
    eee0:	4c 8d 45 08          	lea    0x8(%rbp),%r8
    eee4:	49 0f 45 e8          	cmovne %r8,%rbp
    eee8:	f7 c2 00 00 00 01    	test   $0x1000000,%edx
    eeee:	75 25                	jne    ef15 <__intel_cpu_features_init_body+0x95>
    eef0:	89 f7                	mov    %esi,%edi
    eef2:	81 e7 00 00 00 40    	and    $0x40000000,%edi
    eef8:	b8 07 00 00 00       	mov    $0x7,%eax
    eefd:	33 c9                	xor    %ecx,%ecx
    eeff:	0f a2                	cpuid  
    ef01:	48 c1 ef 0d          	shr    $0xd,%rdi
    ef05:	41 89 d1             	mov    %edx,%r9d
    ef08:	48 03 ef             	add    %rdi,%rbp
    ef0b:	41 89 c8             	mov    %ecx,%r8d
    ef0e:	89 df                	mov    %ebx,%edi
    ef10:	e9 e3 00 00 00       	jmpq   eff8 <__intel_cpu_features_init_body+0x178>
    ef15:	41 89 f1             	mov    %esi,%r9d
    ef18:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
    ef1c:	48 83 c5 30          	add    $0x30,%rbp
    ef20:	f7 c2 00 00 00 02    	test   $0x2000000,%edx
    ef26:	48 0f 45 fd          	cmovne %rbp,%rdi
    ef2a:	81 e2 00 00 00 04    	and    $0x4000000,%edx
    ef30:	41 81 e1 00 02 00 00 	and    $0x200,%r9d
    ef37:	48 c1 ea 14          	shr    $0x14,%rdx
    ef3b:	f7 c6 01 00 00 00    	test   $0x1,%esi
    ef41:	48 8d 2c 3a          	lea    (%rdx,%rdi,1),%rbp
    ef45:	4c 8d 84 17 80 00 00 	lea    0x80(%rdi,%rdx,1),%r8
    ef4c:	00 
    ef4d:	89 f7                	mov    %esi,%edi
    ef4f:	49 0f 45 e8          	cmovne %r8,%rbp
    ef53:	81 e7 00 00 08 00    	and    $0x80000,%edi
    ef59:	49 d1 e9             	shr    %r9
    ef5c:	89 f2                	mov    %esi,%edx
    ef5e:	49 0b e9             	or     %r9,%rbp
    ef61:	41 89 f1             	mov    %esi,%r9d
    ef64:	49 89 ef             	mov    %rbp,%r15
    ef67:	41 81 e1 00 00 80 00 	and    $0x800000,%r9d
    ef6e:	49 81 cf 00 08 00 00 	or     $0x800,%r15
    ef75:	f7 c6 00 00 40 00    	test   $0x400000,%esi
    ef7b:	49 0f 45 ef          	cmovne %r15,%rbp
    ef7f:	81 e2 00 00 00 02    	and    $0x2000000,%edx
    ef85:	48 c1 ef 0a          	shr    $0xa,%rdi
    ef89:	48 0b ef             	or     %rdi,%rbp
    ef8c:	49 89 e8             	mov    %rbp,%r8
    ef8f:	49 81 c8 00 04 00 00 	or     $0x400,%r8
    ef96:	f7 c6 00 00 10 00    	test   $0x100000,%esi
    ef9c:	49 0f 45 e8          	cmovne %r8,%rbp
    efa0:	49 c1 e9 0b          	shr    $0xb,%r9
    efa4:	49 0b e9             	or     %r9,%rbp
    efa7:	48 89 e8             	mov    %rbp,%rax
    efaa:	48 0d 00 20 00 00    	or     $0x2000,%rax
    efb0:	f7 c6 02 00 00 00    	test   $0x2,%esi
    efb6:	48 0f 45 e8          	cmovne %rax,%rbp
    efba:	48 c1 ea 0b          	shr    $0xb,%rdx
    efbe:	48 0b ea             	or     %rdx,%rbp
    efc1:	b8 07 00 00 00       	mov    $0x7,%eax
    efc6:	33 c9                	xor    %ecx,%ecx
    efc8:	0f a2                	cpuid  
    efca:	41 89 c8             	mov    %ecx,%r8d
    efcd:	89 df                	mov    %ebx,%edi
    efcf:	48 b9 00 00 00 00 08 	movabs $0x800000000,%rcx
    efd6:	00 00 00 
    efd9:	89 f3                	mov    %esi,%ebx
    efdb:	48 0b cd             	or     %rbp,%rcx
    efde:	f7 c7 00 00 00 20    	test   $0x20000000,%edi
    efe4:	41 89 d1             	mov    %edx,%r9d
    efe7:	48 0f 45 e9          	cmovne %rcx,%rbp
    efeb:	81 e3 00 00 00 40    	and    $0x40000000,%ebx
    eff1:	48 c1 eb 0d          	shr    $0xd,%rbx
    eff5:	48 0b eb             	or     %rbx,%rbp
    eff8:	89 f8                	mov    %edi,%eax
    effa:	48 89 eb             	mov    %rbp,%rbx
    effd:	25 08 01 00 00       	and    $0x108,%eax
    f002:	41 89 ff             	mov    %edi,%r15d
    f005:	48 81 cb 00 00 08 00 	or     $0x80000,%rbx
    f00c:	3d 08 01 00 00       	cmp    $0x108,%eax
    f011:	89 f8                	mov    %edi,%eax
    f013:	89 f9                	mov    %edi,%ecx
    f015:	48 0f 44 eb          	cmove  %rbx,%rbp
    f019:	41 83 e7 04          	and    $0x4,%r15d
    f01d:	25 00 08 00 00       	and    $0x800,%eax
    f022:	81 e1 00 00 04 00    	and    $0x40000,%ecx
    f028:	49 c1 e7 33          	shl    $0x33,%r15
    f02c:	48 ba 00 00 00 00 00 	movabs $0x2000000000000,%rdx
    f033:	00 02 00 
    f036:	4c 0b fd             	or     %rbp,%r15
    f039:	4c 89 fd             	mov    %r15,%rbp
    f03c:	48 81 cd 00 00 20 00 	or     $0x200000,%rbp
    f043:	f7 c7 10 00 00 00    	test   $0x10,%edi
    f049:	4c 0f 45 fd          	cmovne %rbp,%r15
    f04d:	48 bd 00 00 00 00 00 	movabs $0x40000000000000,%rbp
    f054:	00 40 00 
    f057:	48 c1 e0 0b          	shl    $0xb,%rax
    f05b:	4c 0b f8             	or     %rax,%r15
    f05e:	4c 89 fb             	mov    %r15,%rbx
    f061:	48 81 cb 00 00 00 10 	or     $0x10000000,%rbx
    f068:	f7 c7 00 00 08 00    	test   $0x80000,%edi
    f06e:	4c 0f 45 fb          	cmovne %rbx,%r15
    f072:	48 c1 e1 0b          	shl    $0xb,%rcx
    f076:	4c 0b f9             	or     %rcx,%r15
    f079:	49 0b d7             	or     %r15,%rdx
    f07c:	f7 c7 00 00 00 01    	test   $0x1000000,%edi
    f082:	4c 0f 45 fa          	cmovne %rdx,%r15
    f086:	b8 01 00 00 80       	mov    $0x80000001,%eax
    f08b:	0f a2                	cpuid  
    f08d:	83 e1 20             	and    $0x20,%ecx
    f090:	48 c1 e1 0f          	shl    $0xf,%rcx
    f094:	4c 0b f9             	or     %rcx,%r15
    f097:	b8 08 00 00 80       	mov    $0x80000008,%eax
    f09c:	0f a2                	cpuid  
    f09e:	49 0b ef             	or     %r15,%rbp
    f0a1:	f7 c3 00 02 00 00    	test   $0x200,%ebx
    f0a7:	44 89 c0             	mov    %r8d,%eax
    f0aa:	44 89 c3             	mov    %r8d,%ebx
    f0ad:	4c 0f 45 fd          	cmovne %rbp,%r15
    f0b1:	25 00 01 00 00       	and    $0x100,%eax
    f0b6:	81 e3 80 00 00 00    	and    $0x80,%ebx
    f0bc:	48 bd 00 00 00 00 00 	movabs $0x8000000000000,%rbp
    f0c3:	00 08 00 
    f0c6:	48 c1 e0 25          	shl    $0x25,%rax
    f0ca:	49 0b c7             	or     %r15,%rax
    f0cd:	49 bf 00 00 00 00 00 	movabs $0x4000000000000,%r15
    f0d4:	00 04 00 
    f0d7:	4c 0b f8             	or     %rax,%r15
    f0da:	41 f7 c0 00 00 40 00 	test   $0x400000,%r8d
    f0e1:	49 0f 45 c7          	cmovne %r15,%rax
    f0e5:	48 c1 e3 2d          	shl    $0x2d,%rbx
    f0e9:	48 0b d8             	or     %rax,%rbx
    f0ec:	48 0b eb             	or     %rbx,%rbp
    f0ef:	41 f7 c1 00 00 10 00 	test   $0x100000,%r9d
    f0f6:	48 0f 45 dd          	cmovne %rbp,%rbx
    f0fa:	44 89 cd             	mov    %r9d,%ebp
    f0fd:	81 e5 00 00 04 00    	and    $0x40000,%ebp
    f103:	48 c1 e5 25          	shl    $0x25,%rbp
    f107:	48 0b eb             	or     %rbx,%rbp
    f10a:	b8 14 00 00 00       	mov    $0x14,%eax
    f10f:	33 c9                	xor    %ecx,%ecx
    f111:	0f a2                	cpuid  
    f113:	48 89 ea             	mov    %rbp,%rdx
    f116:	48 81 ca 00 00 00 02 	or     $0x2000000,%rdx
    f11d:	f6 c3 10             	test   $0x10,%bl
    f120:	48 0f 45 ea          	cmovne %rdx,%rbp
    f124:	f7 c6 00 00 00 08    	test   $0x8000000,%esi
    f12a:	0f 84 dd 01 00 00    	je     f30d <__intel_cpu_features_init_body+0x48d>
    f130:	33 c9                	xor    %ecx,%ecx
    f132:	0f 01 d0             	xgetbv 
    f135:	48 83 cd 01          	or     $0x1,%rbp
    f139:	89 c2                	mov    %eax,%edx
    f13b:	83 e2 06             	and    $0x6,%edx
    f13e:	83 fa 06             	cmp    $0x6,%edx
    f141:	0f 85 c6 01 00 00    	jne    f30d <__intel_cpu_features_init_body+0x48d>
    f147:	f7 c6 00 00 00 10    	test   $0x10000000,%esi
    f14d:	74 2f                	je     f17e <__intel_cpu_features_init_body+0x2fe>
    f14f:	48 81 cd 00 00 01 00 	or     $0x10000,%rbp
    f156:	48 ba 00 00 00 00 00 	movabs $0x400000000000,%rdx
    f15d:	40 00 00 
    f160:	44 89 c1             	mov    %r8d,%ecx
    f163:	48 0b d5             	or     %rbp,%rdx
    f166:	41 f7 c0 00 02 00 00 	test   $0x200,%r8d
    f16d:	48 0f 45 ea          	cmovne %rdx,%rbp
    f171:	81 e1 00 04 00 00    	and    $0x400,%ecx
    f177:	48 c1 e1 25          	shl    $0x25,%rcx
    f17b:	48 0b e9             	or     %rcx,%rbp
    f17e:	48 89 ea             	mov    %rbp,%rdx
    f181:	89 f9                	mov    %edi,%ecx
    f183:	48 81 ca 00 80 00 00 	or     $0x8000,%rdx
    f18a:	f7 c6 00 00 00 20    	test   $0x20000000,%esi
    f190:	48 0f 45 ea          	cmovne %rdx,%rbp
    f194:	83 e1 20             	and    $0x20,%ecx
    f197:	48 c1 e1 12          	shl    $0x12,%rcx
    f19b:	48 0b e9             	or     %rcx,%rbp
    f19e:	48 89 eb             	mov    %rbp,%rbx
    f1a1:	48 81 cb 00 00 04 00 	or     $0x40000,%rbx
    f1a8:	f7 c6 00 10 00 00    	test   $0x1000,%esi
    f1ae:	89 c6                	mov    %eax,%esi
    f1b0:	48 0f 45 eb          	cmovne %rbx,%rbp
    f1b4:	83 e6 18             	and    $0x18,%esi
    f1b7:	83 fe 18             	cmp    $0x18,%esi
    f1ba:	75 1b                	jne    f1d7 <__intel_cpu_features_init_body+0x357>
    f1bc:	48 83 cd 01          	or     $0x1,%rbp
    f1c0:	48 ba 00 00 00 00 10 	movabs $0x1000000000,%rdx
    f1c7:	00 00 00 
    f1ca:	48 0b d5             	or     %rbp,%rdx
    f1cd:	f7 c7 00 40 00 00    	test   $0x4000,%edi
    f1d3:	48 0f 45 ea          	cmovne %rdx,%rbp
    f1d7:	25 e0 00 00 00       	and    $0xe0,%eax
    f1dc:	3d e0 00 00 00       	cmp    $0xe0,%eax
    f1e1:	0f 85 26 01 00 00    	jne    f30d <__intel_cpu_features_init_body+0x48d>
    f1e7:	48 83 cd 01          	or     $0x1,%rbp
    f1eb:	89 f9                	mov    %edi,%ecx
    f1ed:	48 89 ea             	mov    %rbp,%rdx
    f1f0:	81 e1 00 00 00 10    	and    $0x10000000,%ecx
    f1f6:	48 81 ca 00 00 00 08 	or     $0x8000000,%rdx
    f1fd:	f7 c7 00 00 01 00    	test   $0x10000,%edi
    f203:	89 fb                	mov    %edi,%ebx
    f205:	89 f8                	mov    %edi,%eax
    f207:	48 0f 45 ea          	cmovne %rdx,%rbp
    f20b:	81 e3 00 00 00 04    	and    $0x4000000,%ebx
    f211:	48 c1 e1 06          	shl    $0x6,%rcx
    f215:	25 00 00 00 40       	and    $0x40000000,%eax
    f21a:	48 0b cd             	or     %rbp,%rcx
    f21d:	48 bd 00 00 00 00 01 	movabs $0x100000000,%rbp
    f224:	00 00 00 
    f227:	48 0b e9             	or     %rcx,%rbp
    f22a:	f7 c7 00 00 00 08    	test   $0x8000000,%edi
    f230:	41 89 ff             	mov    %edi,%r15d
    f233:	44 89 c2             	mov    %r8d,%edx
    f236:	48 0f 45 cd          	cmovne %rbp,%rcx
    f23a:	48 bd 00 00 00 00 40 	movabs $0x4000000000,%rbp
    f241:	00 00 00 
    f244:	48 c1 e3 07          	shl    $0x7,%rbx
    f248:	41 81 e7 00 00 00 80 	and    $0x80000000,%r15d
    f24f:	48 0b d9             	or     %rcx,%rbx
    f252:	81 e2 00 40 00 00    	and    $0x4000,%edx
    f258:	48 89 de             	mov    %rbx,%rsi
    f25b:	48 81 ce 00 00 00 01 	or     $0x1000000,%rsi
    f262:	f7 c7 00 00 02 00    	test   $0x20000,%edi
    f268:	48 0f 45 de          	cmovne %rsi,%rbx
    f26c:	81 e7 00 00 20 00    	and    $0x200000,%edi
    f272:	48 c1 e0 07          	shl    $0x7,%rax
    f276:	48 0b c3             	or     %rbx,%rax
    f279:	48 0b e8             	or     %rax,%rbp
    f27c:	41 81 ff 00 00 00 80 	cmp    $0x80000000,%r15d
    f283:	48 0f 44 c5          	cmove  %rbp,%rax
    f287:	48 bd 00 00 00 00 80 	movabs $0x8000000000,%rbp
    f28e:	00 00 00 
    f291:	48 c1 e7 09          	shl    $0x9,%rdi
    f295:	48 0b c7             	or     %rdi,%rax
    f298:	48 0b e8             	or     %rax,%rbp
    f29b:	41 f7 c0 02 00 00 00 	test   $0x2,%r8d
    f2a2:	48 0f 45 c5          	cmovne %rbp,%rax
    f2a6:	48 bd 00 00 00 00 00 	movabs $0x80000000000,%rbp
    f2ad:	08 00 00 
    f2b0:	48 c1 e2 1c          	shl    $0x1c,%rdx
    f2b4:	48 0b d0             	or     %rax,%rdx
    f2b7:	48 b8 00 00 00 00 00 	movabs $0x20000000000,%rax
    f2be:	02 00 00 
    f2c1:	48 0b c2             	or     %rdx,%rax
    f2c4:	41 f7 c1 04 00 00 00 	test   $0x4,%r9d
    f2cb:	48 0f 45 d0          	cmovne %rax,%rdx
    f2cf:	41 83 e1 08          	and    $0x8,%r9d
    f2d3:	48 b8 00 00 00 00 00 	movabs $0x1000000000000,%rax
    f2da:	00 01 00 
    f2dd:	49 c1 e1 25          	shl    $0x25,%r9
    f2e1:	4c 0b ca             	or     %rdx,%r9
    f2e4:	49 0b e9             	or     %r9,%rbp
    f2e7:	41 f7 c0 00 10 00 00 	test   $0x1000,%r8d
    f2ee:	4c 0f 45 cd          	cmovne %rbp,%r9
    f2f2:	44 89 c5             	mov    %r8d,%ebp
    f2f5:	83 e5 40             	and    $0x40,%ebp
    f2f8:	48 c1 e5 26          	shl    $0x26,%rbp
    f2fc:	49 0b e9             	or     %r9,%rbp
    f2ff:	48 0b c5             	or     %rbp,%rax
    f302:	41 f7 c0 00 08 00 00 	test   $0x800,%r8d
    f309:	48 0f 45 e8          	cmovne %rax,%rbp
    f30d:	44 89 d0             	mov    %r10d,%eax
    f310:	c1 e8 0c             	shr    $0xc,%eax
    f313:	41 c1 ea 04          	shr    $0x4,%r10d
    f317:	25 f0 00 00 00       	and    $0xf0,%eax
    f31c:	41 83 e2 0f          	and    $0xf,%r10d
    f320:	41 03 c2             	add    %r10d,%eax
    f323:	83 f8 1c             	cmp    $0x1c,%eax
    f326:	74 0a                	je     f332 <__intel_cpu_features_init_body+0x4b2>
    f328:	83 f8 26             	cmp    $0x26,%eax
    f32b:	74 05                	je     f332 <__intel_cpu_features_init_body+0x4b2>
    f32d:	83 f8 27             	cmp    $0x27,%eax
    f330:	75 05                	jne    f337 <__intel_cpu_features_init_body+0x4b7>
    f332:	48 0f ba ed 1f       	bts    $0x1f,%rbp
    f337:	41 83 fb 01          	cmp    $0x1,%r11d
    f33b:	74 14                	je     f351 <__intel_cpu_features_init_body+0x4d1>
    f33d:	48 89 2d 44 3a 21 00 	mov    %rbp,0x213a44(%rip)        # 222d88 <__intel_cpu_feature_indicator_x>
    f344:	5d                   	pop    %rbp
    f345:	41 5f                	pop    %r15
    f347:	41 59                	pop    %r9
    f349:	41 58                	pop    %r8
    f34b:	5f                   	pop    %rdi
    f34c:	5e                   	pop    %rsi
    f34d:	5b                   	pop    %rbx
    f34e:	59                   	pop    %rcx
    f34f:	5a                   	pop    %rdx
    f350:	c3                   	retq   
    f351:	48 89 2d 28 3a 21 00 	mov    %rbp,0x213a28(%rip)        # 222d80 <__intel_cpu_feature_indicator>
    f358:	48 89 2d 29 3a 21 00 	mov    %rbp,0x213a29(%rip)        # 222d88 <__intel_cpu_feature_indicator_x>
    f35f:	5d                   	pop    %rbp
    f360:	41 5f                	pop    %r15
    f362:	41 59                	pop    %r9
    f364:	41 58                	pop    %r8
    f366:	5f                   	pop    %rdi
    f367:	5e                   	pop    %rsi
    f368:	5b                   	pop    %rbx
    f369:	59                   	pop    %rcx
    f36a:	5a                   	pop    %rdx
    f36b:	c3                   	retq   
    f36c:	48 c7 05 09 3a 21 00 	movq   $0x1,0x213a09(%rip)        # 222d80 <__intel_cpu_feature_indicator>
    f373:	01 00 00 00 
    f377:	5d                   	pop    %rbp
    f378:	41 5f                	pop    %r15
    f37a:	41 59                	pop    %r9
    f37c:	41 58                	pop    %r8
    f37e:	5f                   	pop    %rdi
    f37f:	5e                   	pop    %rsi
    f380:	5b                   	pop    %rbx
    f381:	59                   	pop    %rcx
    f382:	5a                   	pop    %rdx
    f383:	c3                   	retq   
    f384:	81 7c 24 f4 47 65 6e 	cmpl   $0x756e6547,-0xc(%rsp)
    f38b:	75 
    f38c:	75 de                	jne    f36c <__intel_cpu_features_init_body+0x4ec>
    f38e:	81 7c 24 fc 69 6e 65 	cmpl   $0x49656e69,-0x4(%rsp)
    f395:	49 
    f396:	75 d4                	jne    f36c <__intel_cpu_features_init_body+0x4ec>
    f398:	81 7c 24 f8 6e 74 65 	cmpl   $0x6c65746e,-0x8(%rsp)
    f39f:	6c 
    f3a0:	75 ca                	jne    f36c <__intel_cpu_features_init_body+0x4ec>
    f3a2:	e9 11 fb ff ff       	jmpq   eeb8 <__intel_cpu_features_init_body+0x38>
    f3a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f3ae:	00 00 

000000000000f3b0 <_intel_fast_memcpy.A>:
    f3b0:	f3 0f 1e fa          	repz nop %edx
    f3b4:	e9 18 ef ff ff       	jmpq   e2d1 <__memcpy>
    f3b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f3c0 <_intel_fast_memcpy.J>:
    f3c0:	f3 0f 1e fa          	repz nop %edx
    f3c4:	e9 07 b8 00 00       	jmpq   1abd0 <__intel_memcpy>
    f3c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f3d0 <_intel_fast_memcpy.M>:
    f3d0:	f3 0f 1e fa          	repz nop %edx
    f3d4:	e9 67 5e 00 00       	jmpq   15240 <__intel_ssse3_memcpy>
    f3d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f3e0 <_intel_fast_memcpy.P>:
    f3e0:	f3 0f 1e fa          	repz nop %edx
    f3e4:	e9 27 88 00 00       	jmpq   17c10 <__intel_ssse3_rep_memcpy>
    f3e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f3f0 <_intel_fast_memcpy.V>:
    f3f0:	f3 0f 1e fa          	repz nop %edx
    f3f4:	e9 a7 01 00 00       	jmpq   f5a0 <__intel_avx_rep_memcpy>
    f3f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f400 <_intel_fast_memcpy.Z>:
    f400:	f3 0f 1e fa          	repz nop %edx
    f404:	e9 b7 29 00 00       	jmpq   11dc0 <__intel_mic_avx512f_memcpy>
    f409:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f410 <_intel_fast_memcpy.a>:
    f410:	f3 0f 1e fa          	repz nop %edx
    f414:	e9 87 01 00 00       	jmpq   f5a0 <__intel_avx_rep_memcpy>
    f419:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f420 <_intel_fast_memcpy>:
    f420:	f3 0f 1e fa          	repz nop %edx
    f424:	56                   	push   %rsi
    f425:	48 b9 ff 97 9d 18 07 	movabs $0x7189d97ff,%rcx
    f42c:	00 00 00 
    f42f:	48 8d 05 4a 39 21 00 	lea    0x21394a(%rip),%rax        # 222d80 <__intel_cpu_feature_indicator>
    f436:	4c 8b 00             	mov    (%rax),%r8
    f439:	4c 23 c1             	and    %rcx,%r8
    f43c:	4c 3b c1             	cmp    %rcx,%r8
    f43f:	75 09                	jne    f44a <_intel_fast_memcpy+0x2a>
    f441:	48 83 c4 08          	add    $0x8,%rsp
    f445:	e9 b6 ff ff ff       	jmpq   f400 <_intel_fast_memcpy.Z>
    f44a:	44 8b 08             	mov    (%rax),%r9d
    f44d:	45 89 c8             	mov    %r9d,%r8d
    f450:	41 81 e0 ff 97 9d 00 	and    $0x9d97ff,%r8d
    f457:	41 81 f8 ff 97 9d 00 	cmp    $0x9d97ff,%r8d
    f45e:	75 09                	jne    f469 <_intel_fast_memcpy+0x49>
    f460:	48 83 c4 08          	add    $0x8,%rsp
    f464:	e9 87 ff ff ff       	jmpq   f3f0 <_intel_fast_memcpy.V>
    f469:	45 89 c8             	mov    %r9d,%r8d
    f46c:	41 81 e0 ff 17 00 00 	and    $0x17ff,%r8d
    f473:	41 81 f8 ff 17 00 00 	cmp    $0x17ff,%r8d
    f47a:	75 09                	jne    f485 <_intel_fast_memcpy+0x65>
    f47c:	48 83 c4 08          	add    $0x8,%rsp
    f480:	e9 5b ff ff ff       	jmpq   f3e0 <_intel_fast_memcpy.P>
    f485:	41 81 e1 ff 01 00 00 	and    $0x1ff,%r9d
    f48c:	41 81 f9 ff 01 00 00 	cmp    $0x1ff,%r9d
    f493:	75 09                	jne    f49e <_intel_fast_memcpy+0x7e>
    f495:	48 83 c4 08          	add    $0x8,%rsp
    f499:	e9 32 ff ff ff       	jmpq   f3d0 <_intel_fast_memcpy.M>
    f49e:	44 8a 00             	mov    (%rax),%r8b
    f4a1:	41 80 e0 7f          	and    $0x7f,%r8b
    f4a5:	41 80 f8 7f          	cmp    $0x7f,%r8b
    f4a9:	75 09                	jne    f4b4 <_intel_fast_memcpy+0x94>
    f4ab:	48 83 c4 08          	add    $0x8,%rsp
    f4af:	e9 0c ff ff ff       	jmpq   f3c0 <_intel_fast_memcpy.J>
    f4b4:	f6 00 01             	testb  $0x1,(%rax)
    f4b7:	74 09                	je     f4c2 <_intel_fast_memcpy+0xa2>
    f4b9:	48 83 c4 08          	add    $0x8,%rsp
    f4bd:	e9 ee fe ff ff       	jmpq   f3b0 <_intel_fast_memcpy.A>
    f4c2:	ff 15 20 2b 21 00    	callq  *0x212b20(%rip)        # 221fe8 <_DYNAMIC+0x198>
    f4c8:	e9 69 ff ff ff       	jmpq   f436 <_intel_fast_memcpy+0x16>
    f4cd:	0f 1f 00             	nopl   (%rax)

000000000000f4d0 <_intel_fast_memset.A>:
    f4d0:	f3 0f 1e fa          	repz nop %edx
    f4d4:	e9 95 ef ff ff       	jmpq   e46e <__memset>
    f4d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f4e0 <_intel_fast_memset.J>:
    f4e0:	f3 0f 1e fa          	repz nop %edx
    f4e4:	e9 97 ce 00 00       	jmpq   1c380 <__intel_memset>
    f4e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f4f0 <_intel_fast_memset.V>:
    f4f0:	f3 0f 1e fa          	repz nop %edx
    f4f4:	e9 77 18 00 00       	jmpq   10d70 <__intel_avx_rep_memset>
    f4f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f500 <_intel_fast_memset.Z>:
    f500:	f3 0f 1e fa          	repz nop %edx
    f504:	e9 37 44 00 00       	jmpq   13940 <__intel_mic_avx512f_memset>
    f509:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f510 <_intel_fast_memset.a>:
    f510:	f3 0f 1e fa          	repz nop %edx
    f514:	e9 57 18 00 00       	jmpq   10d70 <__intel_avx_rep_memset>
    f519:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f520 <_intel_fast_memset>:
    f520:	f3 0f 1e fa          	repz nop %edx
    f524:	56                   	push   %rsi
    f525:	48 b9 ff 97 9d 18 07 	movabs $0x7189d97ff,%rcx
    f52c:	00 00 00 
    f52f:	48 8d 05 4a 38 21 00 	lea    0x21384a(%rip),%rax        # 222d80 <__intel_cpu_feature_indicator>
    f536:	4c 8b 00             	mov    (%rax),%r8
    f539:	4c 23 c1             	and    %rcx,%r8
    f53c:	4c 3b c1             	cmp    %rcx,%r8
    f53f:	75 09                	jne    f54a <_intel_fast_memset+0x2a>
    f541:	48 83 c4 08          	add    $0x8,%rsp
    f545:	e9 b6 ff ff ff       	jmpq   f500 <_intel_fast_memset.Z>
    f54a:	44 8b 00             	mov    (%rax),%r8d
    f54d:	41 81 e0 ff 97 9d 00 	and    $0x9d97ff,%r8d
    f554:	41 81 f8 ff 97 9d 00 	cmp    $0x9d97ff,%r8d
    f55b:	75 09                	jne    f566 <_intel_fast_memset+0x46>
    f55d:	48 83 c4 08          	add    $0x8,%rsp
    f561:	e9 8a ff ff ff       	jmpq   f4f0 <_intel_fast_memset.V>
    f566:	44 8a 00             	mov    (%rax),%r8b
    f569:	41 80 e0 7f          	and    $0x7f,%r8b
    f56d:	41 80 f8 7f          	cmp    $0x7f,%r8b
    f571:	75 09                	jne    f57c <_intel_fast_memset+0x5c>
    f573:	48 83 c4 08          	add    $0x8,%rsp
    f577:	e9 64 ff ff ff       	jmpq   f4e0 <_intel_fast_memset.J>
    f57c:	f6 00 01             	testb  $0x1,(%rax)
    f57f:	74 09                	je     f58a <_intel_fast_memset+0x6a>
    f581:	48 83 c4 08          	add    $0x8,%rsp
    f585:	e9 46 ff ff ff       	jmpq   f4d0 <_intel_fast_memset.A>
    f58a:	ff 15 58 2a 21 00    	callq  *0x212a58(%rip)        # 221fe8 <_DYNAMIC+0x198>
    f590:	eb a4                	jmp    f536 <_intel_fast_memset+0x16>
    f592:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f599:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f5a0 <__intel_avx_rep_memcpy>:
    f5a0:	f3 0f 1e fa          	repz nop %edx
    f5a4:	41 54                	push   %r12
    f5a6:	48 89 d1             	mov    %rdx,%rcx
    f5a9:	4c 8d 15 d8 32 21 00 	lea    0x2132d8(%rip),%r10        # 222888 <__libirc_largest_cache_size_half>
    f5b0:	4c 8d 05 d9 32 21 00 	lea    0x2132d9(%rip),%r8        # 222890 <__libirc_data_cache_size_half>
    f5b7:	48 89 f8             	mov    %rdi,%rax
    f5ba:	48 81 f9 00 01 00 00 	cmp    $0x100,%rcx
    f5c1:	77 1d                	ja     f5e0 <__intel_avx_rep_memcpy+0x40>
    f5c3:	4c 8d 0d 86 0f 00 00 	lea    0xf86(%rip),%r9        # 10550 <__intel_avx_rep_memcpy+0xfb0>
    f5ca:	4d 2b 0c c9          	sub    (%r9,%rcx,8),%r9
    f5ce:	3e 41 ff e1          	ds jmpq *%r9
    f5d2:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f5d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f5e0:	4c 8d 0d 69 06 00 00 	lea    0x669(%rip),%r9        # fc50 <__intel_avx_rep_memcpy+0x6b0>
    f5e7:	49 89 fb             	mov    %rdi,%r11
    f5ea:	49 83 e3 1f          	and    $0x1f,%r11
    f5ee:	74 26                	je     f616 <__intel_avx_rep_memcpy+0x76>
    f5f0:	49 f7 db             	neg    %r11
    f5f3:	49 83 c3 20          	add    $0x20,%r11
    f5f7:	49 2b cb             	sub    %r11,%rcx
    f5fa:	49 89 fc             	mov    %rdi,%r12
    f5fd:	4d 03 e3             	add    %r11,%r12
    f600:	48 89 f2             	mov    %rsi,%rdx
    f603:	49 03 d3             	add    %r11,%rdx
    f606:	4f 2b 0c d9          	sub    (%r9,%r11,8),%r9
    f60a:	3e 41 ff e1          	ds jmpq *%r9
    f60e:	66 90                	xchg   %ax,%ax
    f610:	49 03 fb             	add    %r11,%rdi
    f613:	49 03 f3             	add    %r11,%rsi
    f616:	48 81 f9 00 01 00 00 	cmp    $0x100,%rcx
    f61d:	0f 8c 4d 02 00 00    	jl     f870 <__intel_avx_rep_memcpy+0x2d0>
    f623:	45 8b 08             	mov    (%r8),%r9d
    f626:	4d 89 cb             	mov    %r9,%r11
    f629:	49 c1 e9 02          	shr    $0x2,%r9
    f62d:	4d 2b d9             	sub    %r9,%r11
    f630:	49 3b cb             	cmp    %r11,%rcx
    f633:	0f 83 97 00 00 00    	jae    f6d0 <__intel_avx_rep_memcpy+0x130>
    f639:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f640:	c5 fe 6f 0e          	vmovdqu (%rsi),%ymm1
    f644:	c5 fe 6f 56 20       	vmovdqu 0x20(%rsi),%ymm2
    f649:	c5 fe 6f 5e 40       	vmovdqu 0x40(%rsi),%ymm3
    f64e:	c5 fe 6f 66 60       	vmovdqu 0x60(%rsi),%ymm4
    f653:	c5 fe 6f ae 80 00 00 	vmovdqu 0x80(%rsi),%ymm5
    f65a:	00 
    f65b:	c5 fe 6f b6 a0 00 00 	vmovdqu 0xa0(%rsi),%ymm6
    f662:	00 
    f663:	c5 fe 6f be c0 00 00 	vmovdqu 0xc0(%rsi),%ymm7
    f66a:	00 
    f66b:	c5 7e 6f 86 e0 00 00 	vmovdqu 0xe0(%rsi),%ymm8
    f672:	00 
    f673:	c5 fd 7f 0f          	vmovdqa %ymm1,(%rdi)
    f677:	c5 fd 7f 57 20       	vmovdqa %ymm2,0x20(%rdi)
    f67c:	c5 fd 7f 5f 40       	vmovdqa %ymm3,0x40(%rdi)
    f681:	c5 fd 7f 67 60       	vmovdqa %ymm4,0x60(%rdi)
    f686:	c5 fd 7f af 80 00 00 	vmovdqa %ymm5,0x80(%rdi)
    f68d:	00 
    f68e:	c5 fd 7f b7 a0 00 00 	vmovdqa %ymm6,0xa0(%rdi)
    f695:	00 
    f696:	c5 fd 7f bf c0 00 00 	vmovdqa %ymm7,0xc0(%rdi)
    f69d:	00 
    f69e:	c5 7d 7f 87 e0 00 00 	vmovdqa %ymm8,0xe0(%rdi)
    f6a5:	00 
    f6a6:	48 81 c7 00 01 00 00 	add    $0x100,%rdi
    f6ad:	48 81 c6 00 01 00 00 	add    $0x100,%rsi
    f6b4:	48 81 e9 00 01 00 00 	sub    $0x100,%rcx
    f6bb:	48 81 f9 00 01 00 00 	cmp    $0x100,%rcx
    f6c2:	0f 83 78 ff ff ff    	jae    f640 <__intel_avx_rep_memcpy+0xa0>
    f6c8:	e9 a3 01 00 00       	jmpq   f870 <__intel_avx_rep_memcpy+0x2d0>
    f6cd:	0f 1f 00             	nopl   (%rax)
    f6d0:	45 8b 0a             	mov    (%r10),%r9d
    f6d3:	49 3b c9             	cmp    %r9,%rcx
    f6d6:	73 18                	jae    f6f0 <__intel_avx_rep_memcpy+0x150>
    f6d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f6df:	00 
    f6e0:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
    f6e2:	e9 79 16 00 00       	jmpq   10d60 <__intel_avx_rep_memcpy+0x17c0>
    f6e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f6ee:	00 00 
    f6f0:	0f 18 8e 00 02 00 00 	prefetcht0 0x200(%rsi)
    f6f7:	0f 18 8e 40 02 00 00 	prefetcht0 0x240(%rsi)
    f6fe:	0f 18 8e 80 02 00 00 	prefetcht0 0x280(%rsi)
    f705:	0f 18 8e c0 02 00 00 	prefetcht0 0x2c0(%rsi)
    f70c:	c5 fe 6f 0e          	vmovdqu (%rsi),%ymm1
    f710:	c5 fe 6f 56 20       	vmovdqu 0x20(%rsi),%ymm2
    f715:	c5 fe 6f 5e 40       	vmovdqu 0x40(%rsi),%ymm3
    f71a:	c5 fe 6f 66 60       	vmovdqu 0x60(%rsi),%ymm4
    f71f:	c5 fe 6f ae 80 00 00 	vmovdqu 0x80(%rsi),%ymm5
    f726:	00 
    f727:	c5 fe 6f b6 a0 00 00 	vmovdqu 0xa0(%rsi),%ymm6
    f72e:	00 
    f72f:	c5 fe 6f be c0 00 00 	vmovdqu 0xc0(%rsi),%ymm7
    f736:	00 
    f737:	c5 7e 6f 86 e0 00 00 	vmovdqu 0xe0(%rsi),%ymm8
    f73e:	00 
    f73f:	48 81 e9 00 01 00 00 	sub    $0x100,%rcx
    f746:	c5 fd e7 0f          	vmovntdq %ymm1,(%rdi)
    f74a:	c5 fd e7 57 20       	vmovntdq %ymm2,0x20(%rdi)
    f74f:	c5 fd e7 5f 40       	vmovntdq %ymm3,0x40(%rdi)
    f754:	c5 fd e7 67 60       	vmovntdq %ymm4,0x60(%rdi)
    f759:	c5 fd e7 af 80 00 00 	vmovntdq %ymm5,0x80(%rdi)
    f760:	00 
    f761:	c5 fd e7 b7 a0 00 00 	vmovntdq %ymm6,0xa0(%rdi)
    f768:	00 
    f769:	c5 fd e7 bf c0 00 00 	vmovntdq %ymm7,0xc0(%rdi)
    f770:	00 
    f771:	c5 7d e7 87 e0 00 00 	vmovntdq %ymm8,0xe0(%rdi)
    f778:	00 
    f779:	48 8d bf 00 01 00 00 	lea    0x100(%rdi),%rdi
    f780:	48 8d b6 00 01 00 00 	lea    0x100(%rsi),%rsi
    f787:	48 81 f9 00 03 00 00 	cmp    $0x300,%rcx
    f78e:	0f 8d 5c ff ff ff    	jge    f6f0 <__intel_avx_rep_memcpy+0x150>
    f794:	0f ae f8             	sfence 
    f797:	e9 a4 fe ff ff       	jmpq   f640 <__intel_avx_rep_memcpy+0xa0>
    f79c:	0f 1f 40 00          	nopl   0x0(%rax)
    f7a0:	44 8a 0e             	mov    (%rsi),%r9b
    f7a3:	44 88 0f             	mov    %r9b,(%rdi)
    f7a6:	e9 65 fe ff ff       	jmpq   f610 <__intel_avx_rep_memcpy+0x70>
    f7ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f7b0:	66 44 8b 0e          	mov    (%rsi),%r9w
    f7b4:	66 44 89 0f          	mov    %r9w,(%rdi)
    f7b8:	e9 53 fe ff ff       	jmpq   f610 <__intel_avx_rep_memcpy+0x70>
    f7bd:	0f 1f 00             	nopl   (%rax)
    f7c0:	66 44 8b 0e          	mov    (%rsi),%r9w
    f7c4:	66 44 89 0f          	mov    %r9w,(%rdi)
    f7c8:	44 8a 4e 02          	mov    0x2(%rsi),%r9b
    f7cc:	44 88 4f 02          	mov    %r9b,0x2(%rdi)
    f7d0:	e9 3b fe ff ff       	jmpq   f610 <__intel_avx_rep_memcpy+0x70>
    f7d5:	0f 1f 40 00          	nopl   0x0(%rax)
    f7d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f7e0:	44 8b 0e             	mov    (%rsi),%r9d
    f7e3:	44 89 0f             	mov    %r9d,(%rdi)
    f7e6:	e9 25 fe ff ff       	jmpq   f610 <__intel_avx_rep_memcpy+0x70>
    f7eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f7f0:	44 8b 0e             	mov    (%rsi),%r9d
    f7f3:	44 89 0f             	mov    %r9d,(%rdi)
    f7f6:	44 8b 4a fc          	mov    -0x4(%rdx),%r9d
    f7fa:	45 89 4c 24 fc       	mov    %r9d,-0x4(%r12)
    f7ff:	e9 0c fe ff ff       	jmpq   f610 <__intel_avx_rep_memcpy+0x70>
    f804:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f809:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f810:	4c 8b 0e             	mov    (%rsi),%r9
    f813:	4c 89 0f             	mov    %r9,(%rdi)
    f816:	e9 f5 fd ff ff       	jmpq   f610 <__intel_avx_rep_memcpy+0x70>
    f81b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f820:	4c 8b 0e             	mov    (%rsi),%r9
    f823:	4c 89 0f             	mov    %r9,(%rdi)
    f826:	4c 8b 4a f8          	mov    -0x8(%rdx),%r9
    f82a:	4d 89 4c 24 f8       	mov    %r9,-0x8(%r12)
    f82f:	e9 dc fd ff ff       	jmpq   f610 <__intel_avx_rep_memcpy+0x70>
    f834:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f839:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f840:	c5 f8 10 06          	vmovups (%rsi),%xmm0
    f844:	c5 f8 11 07          	vmovups %xmm0,(%rdi)
    f848:	e9 c3 fd ff ff       	jmpq   f610 <__intel_avx_rep_memcpy+0x70>
    f84d:	0f 1f 00             	nopl   (%rax)
    f850:	c5 f8 10 06          	vmovups (%rsi),%xmm0
    f854:	c5 f8 11 07          	vmovups %xmm0,(%rdi)
    f858:	c5 f8 10 42 f0       	vmovups -0x10(%rdx),%xmm0
    f85d:	c4 c1 78 11 44 24 f0 	vmovups %xmm0,-0x10(%r12)
    f864:	e9 a7 fd ff ff       	jmpq   f610 <__intel_avx_rep_memcpy+0x70>
    f869:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f870:	48 03 f9             	add    %rcx,%rdi
    f873:	49 89 fc             	mov    %rdi,%r12
    f876:	4d 89 e3             	mov    %r12,%r11
    f879:	48 83 e7 e0          	and    $0xffffffffffffffe0,%rdi
    f87d:	48 03 f1             	add    %rcx,%rsi
    f880:	48 89 f2             	mov    %rsi,%rdx
    f883:	4c 2b df             	sub    %rdi,%r11
    f886:	49 2b f3             	sub    %r11,%rsi
    f889:	4c 8d 0d c0 04 00 00 	lea    0x4c0(%rip),%r9        # fd50 <__intel_avx_rep_memcpy+0x7b0>
    f890:	4d 2b 0c c9          	sub    (%r9,%rcx,8),%r9
    f894:	3e 41 ff e1          	ds jmpq *%r9
    f898:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f89f:	00 
    f8a0:	c5 fc 10 86 20 ff ff 	vmovups -0xe0(%rsi),%ymm0
    f8a7:	ff 
    f8a8:	c5 fc 29 87 20 ff ff 	vmovaps %ymm0,-0xe0(%rdi)
    f8af:	ff 
    f8b0:	c5 fc 10 86 40 ff ff 	vmovups -0xc0(%rsi),%ymm0
    f8b7:	ff 
    f8b8:	c5 fc 29 87 40 ff ff 	vmovaps %ymm0,-0xc0(%rdi)
    f8bf:	ff 
    f8c0:	c5 fc 10 86 60 ff ff 	vmovups -0xa0(%rsi),%ymm0
    f8c7:	ff 
    f8c8:	c5 fc 29 87 60 ff ff 	vmovaps %ymm0,-0xa0(%rdi)
    f8cf:	ff 
    f8d0:	c5 fc 10 46 80       	vmovups -0x80(%rsi),%ymm0
    f8d5:	c5 fc 29 47 80       	vmovaps %ymm0,-0x80(%rdi)
    f8da:	c5 fc 10 46 a0       	vmovups -0x60(%rsi),%ymm0
    f8df:	c5 fc 29 47 a0       	vmovaps %ymm0,-0x60(%rdi)
    f8e4:	c5 fc 10 46 c0       	vmovups -0x40(%rsi),%ymm0
    f8e9:	c5 fc 29 47 c0       	vmovaps %ymm0,-0x40(%rdi)
    f8ee:	c5 fc 10 46 e0       	vmovups -0x20(%rsi),%ymm0
    f8f3:	c5 fc 29 47 e0       	vmovaps %ymm0,-0x20(%rdi)
    f8f8:	4c 8d 0d 51 04 00 00 	lea    0x451(%rip),%r9        # fd50 <__intel_avx_rep_memcpy+0x7b0>
    f8ff:	4c 89 d9             	mov    %r11,%rcx
    f902:	4f 2b 0c d9          	sub    (%r9,%r11,8),%r9
    f906:	3e 41 ff e1          	ds jmpq *%r9
    f90a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f910:	44 8a 0e             	mov    (%rsi),%r9b
    f913:	44 88 0f             	mov    %r9b,(%rdi)
    f916:	e9 45 14 00 00       	jmpq   10d60 <__intel_avx_rep_memcpy+0x17c0>
    f91b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f920:	e9 3b 14 00 00       	jmpq   10d60 <__intel_avx_rep_memcpy+0x17c0>
    f925:	0f 1f 40 00          	nopl   0x0(%rax)
    f929:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f930:	66 44 8b 0e          	mov    (%rsi),%r9w
    f934:	66 44 89 0f          	mov    %r9w,(%rdi)
    f938:	e9 23 14 00 00       	jmpq   10d60 <__intel_avx_rep_memcpy+0x17c0>
    f93d:	0f 1f 00             	nopl   (%rax)
    f940:	66 44 8b 0e          	mov    (%rsi),%r9w
    f944:	66 44 89 0f          	mov    %r9w,(%rdi)
    f948:	44 8a 4e 02          	mov    0x2(%rsi),%r9b
    f94c:	44 88 4f 02          	mov    %r9b,0x2(%rdi)
    f950:	e9 0b 14 00 00       	jmpq   10d60 <__intel_avx_rep_memcpy+0x17c0>
    f955:	0f 1f 40 00          	nopl   0x0(%rax)
    f959:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f960:	44 8b 0e             	mov    (%rsi),%r9d
    f963:	44 89 0f             	mov    %r9d,(%rdi)
    f966:	e9 f5 13 00 00       	jmpq   10d60 <__intel_avx_rep_memcpy+0x17c0>
    f96b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f970:	44 8b 0e             	mov    (%rsi),%r9d
    f973:	44 89 0f             	mov    %r9d,(%rdi)
    f976:	44 8b 4c 0e fc       	mov    -0x4(%rsi,%rcx,1),%r9d
    f97b:	44 89 4c 0f fc       	mov    %r9d,-0x4(%rdi,%rcx,1)
    f980:	e9 db 13 00 00       	jmpq   10d60 <__intel_avx_rep_memcpy+0x17c0>
    f985:	0f 1f 40 00          	nopl   0x0(%rax)
    f989:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f990:	4c 8b 0e             	mov    (%rsi),%r9
    f993:	4c 89 0f             	mov    %r9,(%rdi)
    f996:	e9 c5 13 00 00       	jmpq   10d60 <__intel_avx_rep_memcpy+0x17c0>
    f99b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f9a0:	4c 8b 0e             	mov    (%rsi),%r9
    f9a3:	4c 89 0f             	mov    %r9,(%rdi)
    f9a6:	4c 8b 4c 0e f8       	mov    -0x8(%rsi,%rcx,1),%r9
    f9ab:	4c 89 4c 0f f8       	mov    %r9,-0x8(%rdi,%rcx,1)
    f9b0:	e9 ab 13 00 00       	jmpq   10d60 <__intel_avx_rep_memcpy+0x17c0>
    f9b5:	0f 1f 40 00          	nopl   0x0(%rax)
    f9b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f9c0:	c5 f8 10 06          	vmovups (%rsi),%xmm0
    f9c4:	c5 f8 11 07          	vmovups %xmm0,(%rdi)
    f9c8:	e9 93 13 00 00       	jmpq   10d60 <__intel_avx_rep_memcpy+0x17c0>
    f9cd:	0f 1f 00             	nopl   (%rax)
    f9d0:	c5 f8 10 06          	vmovups (%rsi),%xmm0
    f9d4:	c5 f8 11 07          	vmovups %xmm0,(%rdi)
    f9d8:	c5 f8 10 44 0e f0    	vmovups -0x10(%rsi,%rcx,1),%xmm0
    f9de:	c5 f8 11 44 0f f0    	vmovups %xmm0,-0x10(%rdi,%rcx,1)
    f9e4:	e9 77 13 00 00       	jmpq   10d60 <__intel_avx_rep_memcpy+0x17c0>
    f9e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f9f0:	c5 fc 10 06          	vmovups (%rsi),%ymm0
    f9f4:	c5 fc 11 07          	vmovups %ymm0,(%rdi)
    f9f8:	c5 fc 10 44 0e e0    	vmovups -0x20(%rsi,%rcx,1),%ymm0
    f9fe:	c5 fc 11 44 0f e0    	vmovups %ymm0,-0x20(%rdi,%rcx,1)
    fa04:	e9 57 13 00 00       	jmpq   10d60 <__intel_avx_rep_memcpy+0x17c0>
    fa09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fa10:	c5 fc 10 06          	vmovups (%rsi),%ymm0
    fa14:	c5 fc 11 07          	vmovups %ymm0,(%rdi)
    fa18:	c5 fc 10 46 20       	vmovups 0x20(%rsi),%ymm0
    fa1d:	c5 fc 11 47 20       	vmovups %ymm0,0x20(%rdi)
    fa22:	c5 fc 10 44 0e e0    	vmovups -0x20(%rsi,%rcx,1),%ymm0
    fa28:	c5 fc 11 44 0f e0    	vmovups %ymm0,-0x20(%rdi,%rcx,1)
    fa2e:	e9 2d 13 00 00       	jmpq   10d60 <__intel_avx_rep_memcpy+0x17c0>
    fa33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fa38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fa3f:	00 
    fa40:	c5 fc 10 06          	vmovups (%rsi),%ymm0
    fa44:	c5 fc 11 07          	vmovups %ymm0,(%rdi)
    fa48:	c5 fc 10 46 20       	vmovups 0x20(%rsi),%ymm0
    fa4d:	c5 fc 11 47 20       	vmovups %ymm0,0x20(%rdi)
    fa52:	c5 fc 10 46 40       	vmovups 0x40(%rsi),%ymm0
    fa57:	c5 fc 11 47 40       	vmovups %ymm0,0x40(%rdi)
    fa5c:	c5 fc 10 44 0e e0    	vmovups -0x20(%rsi,%rcx,1),%ymm0
    fa62:	c5 fc 11 44 0f e0    	vmovups %ymm0,-0x20(%rdi,%rcx,1)
    fa68:	e9 f3 12 00 00       	jmpq   10d60 <__intel_avx_rep_memcpy+0x17c0>
    fa6d:	0f 1f 00             	nopl   (%rax)
    fa70:	c5 fc 10 06          	vmovups (%rsi),%ymm0
    fa74:	c5 fc 11 07          	vmovups %ymm0,(%rdi)
    fa78:	c5 fc 10 46 20       	vmovups 0x20(%rsi),%ymm0
    fa7d:	c5 fc 11 47 20       	vmovups %ymm0,0x20(%rdi)
    fa82:	c5 fc 10 46 40       	vmovups 0x40(%rsi),%ymm0
    fa87:	c5 fc 11 47 40       	vmovups %ymm0,0x40(%rdi)
    fa8c:	c5 fc 10 46 60       	vmovups 0x60(%rsi),%ymm0
    fa91:	c5 fc 11 47 60       	vmovups %ymm0,0x60(%rdi)
    fa96:	c5 fc 10 44 0e e0    	vmovups -0x20(%rsi,%rcx,1),%ymm0
    fa9c:	c5 fc 11 44 0f e0    	vmovups %ymm0,-0x20(%rdi,%rcx,1)
    faa2:	e9 b9 12 00 00       	jmpq   10d60 <__intel_avx_rep_memcpy+0x17c0>
    faa7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    faae:	00 00 
    fab0:	c5 fc 10 06          	vmovups (%rsi),%ymm0
    fab4:	c5 fc 11 07          	vmovups %ymm0,(%rdi)
    fab8:	c5 fc 10 46 20       	vmovups 0x20(%rsi),%ymm0
    fabd:	c5 fc 11 47 20       	vmovups %ymm0,0x20(%rdi)
    fac2:	c5 fc 10 46 40       	vmovups 0x40(%rsi),%ymm0
    fac7:	c5 fc 11 47 40       	vmovups %ymm0,0x40(%rdi)
    facc:	c5 fc 10 46 60       	vmovups 0x60(%rsi),%ymm0
    fad1:	c5 fc 11 47 60       	vmovups %ymm0,0x60(%rdi)
    fad6:	c5 fc 10 86 80 00 00 	vmovups 0x80(%rsi),%ymm0
    fadd:	00 
    fade:	c5 fc 11 87 80 00 00 	vmovups %ymm0,0x80(%rdi)
    fae5:	00 
    fae6:	c5 fc 10 44 0e e0    	vmovups -0x20(%rsi,%rcx,1),%ymm0
    faec:	c5 fc 11 44 0f e0    	vmovups %ymm0,-0x20(%rdi,%rcx,1)
    faf2:	e9 69 12 00 00       	jmpq   10d60 <__intel_avx_rep_memcpy+0x17c0>
    faf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    fafe:	00 00 
    fb00:	c5 fc 10 06          	vmovups (%rsi),%ymm0
    fb04:	c5 fc 11 07          	vmovups %ymm0,(%rdi)
    fb08:	c5 fc 10 46 20       	vmovups 0x20(%rsi),%ymm0
    fb0d:	c5 fc 11 47 20       	vmovups %ymm0,0x20(%rdi)
    fb12:	c5 fc 10 46 40       	vmovups 0x40(%rsi),%ymm0
    fb17:	c5 fc 11 47 40       	vmovups %ymm0,0x40(%rdi)
    fb1c:	c5 fc 10 46 60       	vmovups 0x60(%rsi),%ymm0
    fb21:	c5 fc 11 47 60       	vmovups %ymm0,0x60(%rdi)
    fb26:	c5 fc 10 86 80 00 00 	vmovups 0x80(%rsi),%ymm0
    fb2d:	00 
    fb2e:	c5 fc 11 87 80 00 00 	vmovups %ymm0,0x80(%rdi)
    fb35:	00 
    fb36:	c5 fc 10 86 a0 00 00 	vmovups 0xa0(%rsi),%ymm0
    fb3d:	00 
    fb3e:	c5 fc 11 87 a0 00 00 	vmovups %ymm0,0xa0(%rdi)
    fb45:	00 
    fb46:	c5 fc 10 44 0e e0    	vmovups -0x20(%rsi,%rcx,1),%ymm0
    fb4c:	c5 fc 11 44 0f e0    	vmovups %ymm0,-0x20(%rdi,%rcx,1)
    fb52:	e9 09 12 00 00       	jmpq   10d60 <__intel_avx_rep_memcpy+0x17c0>
    fb57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    fb5e:	00 00 
    fb60:	c5 fc 10 06          	vmovups (%rsi),%ymm0
    fb64:	c5 fc 11 07          	vmovups %ymm0,(%rdi)
    fb68:	c5 fc 10 46 20       	vmovups 0x20(%rsi),%ymm0
    fb6d:	c5 fc 11 47 20       	vmovups %ymm0,0x20(%rdi)
    fb72:	c5 fc 10 46 40       	vmovups 0x40(%rsi),%ymm0
    fb77:	c5 fc 11 47 40       	vmovups %ymm0,0x40(%rdi)
    fb7c:	c5 fc 10 46 60       	vmovups 0x60(%rsi),%ymm0
    fb81:	c5 fc 11 47 60       	vmovups %ymm0,0x60(%rdi)
    fb86:	c5 fc 10 86 80 00 00 	vmovups 0x80(%rsi),%ymm0
    fb8d:	00 
    fb8e:	c5 fc 11 87 80 00 00 	vmovups %ymm0,0x80(%rdi)
    fb95:	00 
    fb96:	c5 fc 10 86 a0 00 00 	vmovups 0xa0(%rsi),%ymm0
    fb9d:	00 
    fb9e:	c5 fc 11 87 a0 00 00 	vmovups %ymm0,0xa0(%rdi)
    fba5:	00 
    fba6:	c5 fc 10 86 c0 00 00 	vmovups 0xc0(%rsi),%ymm0
    fbad:	00 
    fbae:	c5 fc 11 87 c0 00 00 	vmovups %ymm0,0xc0(%rdi)
    fbb5:	00 
    fbb6:	c5 fc 10 44 0e e0    	vmovups -0x20(%rsi,%rcx,1),%ymm0
    fbbc:	c5 fc 11 44 0f e0    	vmovups %ymm0,-0x20(%rdi,%rcx,1)
    fbc2:	e9 99 11 00 00       	jmpq   10d60 <__intel_avx_rep_memcpy+0x17c0>
    fbc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    fbce:	00 00 
    fbd0:	c5 fc 10 84 0e 00 ff 	vmovups -0x100(%rsi,%rcx,1),%ymm0
    fbd7:	ff ff 
    fbd9:	c5 fc 11 84 0f 00 ff 	vmovups %ymm0,-0x100(%rdi,%rcx,1)
    fbe0:	ff ff 
    fbe2:	c5 fc 10 84 0e 20 ff 	vmovups -0xe0(%rsi,%rcx,1),%ymm0
    fbe9:	ff ff 
    fbeb:	c5 fc 11 84 0f 20 ff 	vmovups %ymm0,-0xe0(%rdi,%rcx,1)
    fbf2:	ff ff 
    fbf4:	c5 fc 10 84 0e 40 ff 	vmovups -0xc0(%rsi,%rcx,1),%ymm0
    fbfb:	ff ff 
    fbfd:	c5 fc 11 84 0f 40 ff 	vmovups %ymm0,-0xc0(%rdi,%rcx,1)
    fc04:	ff ff 
    fc06:	c5 fc 10 84 0e 60 ff 	vmovups -0xa0(%rsi,%rcx,1),%ymm0
    fc0d:	ff ff 
    fc0f:	c5 fc 11 84 0f 60 ff 	vmovups %ymm0,-0xa0(%rdi,%rcx,1)
    fc16:	ff ff 
    fc18:	c5 fc 10 44 0e 80    	vmovups -0x80(%rsi,%rcx,1),%ymm0
    fc1e:	c5 fc 11 44 0f 80    	vmovups %ymm0,-0x80(%rdi,%rcx,1)
    fc24:	c5 fc 10 44 0e a0    	vmovups -0x60(%rsi,%rcx,1),%ymm0
    fc2a:	c5 fc 11 44 0f a0    	vmovups %ymm0,-0x60(%rdi,%rcx,1)
    fc30:	c5 fc 10 44 0e c0    	vmovups -0x40(%rsi,%rcx,1),%ymm0
    fc36:	c5 fc 11 44 0f c0    	vmovups %ymm0,-0x40(%rdi,%rcx,1)
    fc3c:	c5 fc 10 44 0e e0    	vmovups -0x20(%rsi,%rcx,1),%ymm0
    fc42:	c5 fc 11 44 0f e0    	vmovups %ymm0,-0x20(%rdi,%rcx,1)
    fc48:	e9 13 11 00 00       	jmpq   10d60 <__intel_avx_rep_memcpy+0x17c0>
    fc4d:	0f 1f 00             	nopl   (%rax)
    fc50:	aa                   	stos   %al,%es:(%rdi)
    fc51:	04 00                	add    $0x0,%al
    fc53:	00 00                	add    %al,(%rax)
    fc55:	00 00                	add    %al,(%rax)
    fc57:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
    fc5d:	00 00                	add    %al,(%rax)
    fc5f:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
    fc65:	00 00                	add    %al,(%rax)
    fc67:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
    fc6d:	00 00                	add    %al,(%rax)
    fc6f:	00 70 04             	add    %dh,0x4(%rax)
    fc72:	00 00                	add    %al,(%rax)
    fc74:	00 00                	add    %al,(%rax)
    fc76:	00 00                	add    %al,(%rax)
    fc78:	60                   	(bad)  
    fc79:	04 00                	add    $0x0,%al
    fc7b:	00 00                	add    %al,(%rax)
    fc7d:	00 00                	add    %al,(%rax)
    fc7f:	00 60 04             	add    %ah,0x4(%rax)
    fc82:	00 00                	add    %al,(%rax)
    fc84:	00 00                	add    %al,(%rax)
    fc86:	00 00                	add    %al,(%rax)
    fc88:	60                   	(bad)  
    fc89:	04 00                	add    $0x0,%al
    fc8b:	00 00                	add    %al,(%rax)
    fc8d:	00 00                	add    %al,(%rax)
    fc8f:	00 40 04             	add    %al,0x4(%rax)
    fc92:	00 00                	add    %al,(%rax)
    fc94:	00 00                	add    %al,(%rax)
    fc96:	00 00                	add    %al,(%rax)
    fc98:	30 04 00             	xor    %al,(%rax,%rax,1)
    fc9b:	00 00                	add    %al,(%rax)
    fc9d:	00 00                	add    %al,(%rax)
    fc9f:	00 30                	add    %dh,(%rax)
    fca1:	04 00                	add    $0x0,%al
    fca3:	00 00                	add    %al,(%rax)
    fca5:	00 00                	add    %al,(%rax)
    fca7:	00 30                	add    %dh,(%rax)
    fca9:	04 00                	add    $0x0,%al
    fcab:	00 00                	add    %al,(%rax)
    fcad:	00 00                	add    %al,(%rax)
    fcaf:	00 30                	add    %dh,(%rax)
    fcb1:	04 00                	add    $0x0,%al
    fcb3:	00 00                	add    %al,(%rax)
    fcb5:	00 00                	add    %al,(%rax)
    fcb7:	00 30                	add    %dh,(%rax)
    fcb9:	04 00                	add    $0x0,%al
    fcbb:	00 00                	add    %al,(%rax)
    fcbd:	00 00                	add    %al,(%rax)
    fcbf:	00 30                	add    %dh,(%rax)
    fcc1:	04 00                	add    $0x0,%al
    fcc3:	00 00                	add    %al,(%rax)
    fcc5:	00 00                	add    %al,(%rax)
    fcc7:	00 30                	add    %dh,(%rax)
    fcc9:	04 00                	add    $0x0,%al
    fccb:	00 00                	add    %al,(%rax)
    fccd:	00 00                	add    %al,(%rax)
    fccf:	00 10                	add    %dl,(%rax)
    fcd1:	04 00                	add    $0x0,%al
    fcd3:	00 00                	add    %al,(%rax)
    fcd5:	00 00                	add    %al,(%rax)
    fcd7:	00 00                	add    %al,(%rax)
    fcd9:	04 00                	add    $0x0,%al
    fcdb:	00 00                	add    %al,(%rax)
    fcdd:	00 00                	add    %al,(%rax)
    fcdf:	00 00                	add    %al,(%rax)
    fce1:	04 00                	add    $0x0,%al
    fce3:	00 00                	add    %al,(%rax)
    fce5:	00 00                	add    %al,(%rax)
    fce7:	00 00                	add    %al,(%rax)
    fce9:	04 00                	add    $0x0,%al
    fceb:	00 00                	add    %al,(%rax)
    fced:	00 00                	add    %al,(%rax)
    fcef:	00 00                	add    %al,(%rax)
    fcf1:	04 00                	add    $0x0,%al
    fcf3:	00 00                	add    %al,(%rax)
    fcf5:	00 00                	add    %al,(%rax)
    fcf7:	00 00                	add    %al,(%rax)
    fcf9:	04 00                	add    $0x0,%al
    fcfb:	00 00                	add    %al,(%rax)
    fcfd:	00 00                	add    %al,(%rax)
    fcff:	00 00                	add    %al,(%rax)
    fd01:	04 00                	add    $0x0,%al
    fd03:	00 00                	add    %al,(%rax)
    fd05:	00 00                	add    %al,(%rax)
    fd07:	00 00                	add    %al,(%rax)
    fd09:	04 00                	add    $0x0,%al
    fd0b:	00 00                	add    %al,(%rax)
    fd0d:	00 00                	add    %al,(%rax)
    fd0f:	00 00                	add    %al,(%rax)
    fd11:	04 00                	add    $0x0,%al
    fd13:	00 00                	add    %al,(%rax)
    fd15:	00 00                	add    %al,(%rax)
    fd17:	00 00                	add    %al,(%rax)
    fd19:	04 00                	add    $0x0,%al
    fd1b:	00 00                	add    %al,(%rax)
    fd1d:	00 00                	add    %al,(%rax)
    fd1f:	00 00                	add    %al,(%rax)
    fd21:	04 00                	add    $0x0,%al
    fd23:	00 00                	add    %al,(%rax)
    fd25:	00 00                	add    %al,(%rax)
    fd27:	00 00                	add    %al,(%rax)
    fd29:	04 00                	add    $0x0,%al
    fd2b:	00 00                	add    %al,(%rax)
    fd2d:	00 00                	add    %al,(%rax)
    fd2f:	00 00                	add    %al,(%rax)
    fd31:	04 00                	add    $0x0,%al
    fd33:	00 00                	add    %al,(%rax)
    fd35:	00 00                	add    %al,(%rax)
    fd37:	00 00                	add    %al,(%rax)
    fd39:	04 00                	add    $0x0,%al
    fd3b:	00 00                	add    %al,(%rax)
    fd3d:	00 00                	add    %al,(%rax)
    fd3f:	00 00                	add    %al,(%rax)
    fd41:	04 00                	add    $0x0,%al
    fd43:	00 00                	add    %al,(%rax)
    fd45:	00 00                	add    %al,(%rax)
    fd47:	00 00                	add    %al,(%rax)
    fd49:	04 00                	add    $0x0,%al
    fd4b:	00 00                	add    %al,(%rax)
    fd4d:	00 00                	add    %al,(%rax)
    fd4f:	00 30                	add    %dh,(%rax)
    fd51:	04 00                	add    $0x0,%al
    fd53:	00 00                	add    %al,(%rax)
    fd55:	00 00                	add    %al,(%rax)
    fd57:	00 40 04             	add    %al,0x4(%rax)
    fd5a:	00 00                	add    %al,(%rax)
    fd5c:	00 00                	add    %al,(%rax)
    fd5e:	00 00                	add    %al,(%rax)
    fd60:	20 04 00             	and    %al,(%rax,%rax,1)
    fd63:	00 00                	add    %al,(%rax)
    fd65:	00 00                	add    %al,(%rax)
    fd67:	00 10                	add    %dl,(%rax)
    fd69:	04 00                	add    $0x0,%al
    fd6b:	00 00                	add    %al,(%rax)
    fd6d:	00 00                	add    %al,(%rax)
    fd6f:	00 f0                	add    %dh,%al
    fd71:	03 00                	add    (%rax),%eax
    fd73:	00 00                	add    %al,(%rax)
    fd75:	00 00                	add    %al,(%rax)
    fd77:	00 e0                	add    %ah,%al
    fd79:	03 00                	add    (%rax),%eax
    fd7b:	00 00                	add    %al,(%rax)
    fd7d:	00 00                	add    %al,(%rax)
    fd7f:	00 e0                	add    %ah,%al
    fd81:	03 00                	add    (%rax),%eax
    fd83:	00 00                	add    %al,(%rax)
    fd85:	00 00                	add    %al,(%rax)
    fd87:	00 e0                	add    %ah,%al
    fd89:	03 00                	add    (%rax),%eax
    fd8b:	00 00                	add    %al,(%rax)
    fd8d:	00 00                	add    %al,(%rax)
    fd8f:	00 c0                	add    %al,%al
    fd91:	03 00                	add    (%rax),%eax
    fd93:	00 00                	add    %al,(%rax)
    fd95:	00 00                	add    %al,(%rax)
    fd97:	00 b0 03 00 00 00    	add    %dh,0x3(%rax)
    fd9d:	00 00                	add    %al,(%rax)
    fd9f:	00 b0 03 00 00 00    	add    %dh,0x3(%rax)
    fda5:	00 00                	add    %al,(%rax)
    fda7:	00 b0 03 00 00 00    	add    %dh,0x3(%rax)
    fdad:	00 00                	add    %al,(%rax)
    fdaf:	00 b0 03 00 00 00    	add    %dh,0x3(%rax)
    fdb5:	00 00                	add    %al,(%rax)
    fdb7:	00 b0 03 00 00 00    	add    %dh,0x3(%rax)
    fdbd:	00 00                	add    %al,(%rax)
    fdbf:	00 b0 03 00 00 00    	add    %dh,0x3(%rax)
    fdc5:	00 00                	add    %al,(%rax)
    fdc7:	00 b0 03 00 00 00    	add    %dh,0x3(%rax)
    fdcd:	00 00                	add    %al,(%rax)
    fdcf:	00 90 03 00 00 00    	add    %dl,0x3(%rax)
    fdd5:	00 00                	add    %al,(%rax)
    fdd7:	00 80 03 00 00 00    	add    %al,0x3(%rax)
    fddd:	00 00                	add    %al,(%rax)
    fddf:	00 80 03 00 00 00    	add    %al,0x3(%rax)
    fde5:	00 00                	add    %al,(%rax)
    fde7:	00 80 03 00 00 00    	add    %al,0x3(%rax)
    fded:	00 00                	add    %al,(%rax)
    fdef:	00 80 03 00 00 00    	add    %al,0x3(%rax)
    fdf5:	00 00                	add    %al,(%rax)
    fdf7:	00 80 03 00 00 00    	add    %al,0x3(%rax)
    fdfd:	00 00                	add    %al,(%rax)
    fdff:	00 80 03 00 00 00    	add    %al,0x3(%rax)
    fe05:	00 00                	add    %al,(%rax)
    fe07:	00 80 03 00 00 00    	add    %al,0x3(%rax)
    fe0d:	00 00                	add    %al,(%rax)
    fe0f:	00 80 03 00 00 00    	add    %al,0x3(%rax)
    fe15:	00 00                	add    %al,(%rax)
    fe17:	00 80 03 00 00 00    	add    %al,0x3(%rax)
    fe1d:	00 00                	add    %al,(%rax)
    fe1f:	00 80 03 00 00 00    	add    %al,0x3(%rax)
    fe25:	00 00                	add    %al,(%rax)
    fe27:	00 80 03 00 00 00    	add    %al,0x3(%rax)
    fe2d:	00 00                	add    %al,(%rax)
    fe2f:	00 80 03 00 00 00    	add    %al,0x3(%rax)
    fe35:	00 00                	add    %al,(%rax)
    fe37:	00 80 03 00 00 00    	add    %al,0x3(%rax)
    fe3d:	00 00                	add    %al,(%rax)
    fe3f:	00 80 03 00 00 00    	add    %al,0x3(%rax)
    fe45:	00 00                	add    %al,(%rax)
    fe47:	00 80 03 00 00 00    	add    %al,0x3(%rax)
    fe4d:	00 00                	add    %al,(%rax)
    fe4f:	00 62 04             	add    %ah,0x4(%rdx)
    fe52:	00 00                	add    %al,(%rax)
    fe54:	00 00                	add    %al,(%rax)
    fe56:	00 00                	add    %al,(%rax)
    fe58:	62                   	(bad)  
    fe59:	04 00                	add    $0x0,%al
    fe5b:	00 00                	add    %al,(%rax)
    fe5d:	00 00                	add    %al,(%rax)
    fe5f:	00 62 04             	add    %ah,0x4(%rdx)
    fe62:	00 00                	add    %al,(%rax)
    fe64:	00 00                	add    %al,(%rax)
    fe66:	00 00                	add    %al,(%rax)
    fe68:	62                   	(bad)  
    fe69:	04 00                	add    $0x0,%al
    fe6b:	00 00                	add    %al,(%rax)
    fe6d:	00 00                	add    %al,(%rax)
    fe6f:	00 62 04             	add    %ah,0x4(%rdx)
    fe72:	00 00                	add    %al,(%rax)
    fe74:	00 00                	add    %al,(%rax)
    fe76:	00 00                	add    %al,(%rax)
    fe78:	62                   	(bad)  
    fe79:	04 00                	add    $0x0,%al
    fe7b:	00 00                	add    %al,(%rax)
    fe7d:	00 00                	add    %al,(%rax)
    fe7f:	00 62 04             	add    %ah,0x4(%rdx)
    fe82:	00 00                	add    %al,(%rax)
    fe84:	00 00                	add    %al,(%rax)
    fe86:	00 00                	add    %al,(%rax)
    fe88:	62                   	(bad)  
    fe89:	04 00                	add    $0x0,%al
    fe8b:	00 00                	add    %al,(%rax)
    fe8d:	00 00                	add    %al,(%rax)
    fe8f:	00 62 04             	add    %ah,0x4(%rdx)
    fe92:	00 00                	add    %al,(%rax)
    fe94:	00 00                	add    %al,(%rax)
    fe96:	00 00                	add    %al,(%rax)
    fe98:	62                   	(bad)  
    fe99:	04 00                	add    $0x0,%al
    fe9b:	00 00                	add    %al,(%rax)
    fe9d:	00 00                	add    %al,(%rax)
    fe9f:	00 62 04             	add    %ah,0x4(%rdx)
    fea2:	00 00                	add    %al,(%rax)
    fea4:	00 00                	add    %al,(%rax)
    fea6:	00 00                	add    %al,(%rax)
    fea8:	62                   	(bad)  
    fea9:	04 00                	add    $0x0,%al
    feab:	00 00                	add    %al,(%rax)
    fead:	00 00                	add    %al,(%rax)
    feaf:	00 62 04             	add    %ah,0x4(%rdx)
    feb2:	00 00                	add    %al,(%rax)
    feb4:	00 00                	add    %al,(%rax)
    feb6:	00 00                	add    %al,(%rax)
    feb8:	62                   	(bad)  
    feb9:	04 00                	add    $0x0,%al
    febb:	00 00                	add    %al,(%rax)
    febd:	00 00                	add    %al,(%rax)
    febf:	00 62 04             	add    %ah,0x4(%rdx)
    fec2:	00 00                	add    %al,(%rax)
    fec4:	00 00                	add    %al,(%rax)
    fec6:	00 00                	add    %al,(%rax)
    fec8:	62                   	(bad)  
    fec9:	04 00                	add    $0x0,%al
    fecb:	00 00                	add    %al,(%rax)
    fecd:	00 00                	add    %al,(%rax)
    fecf:	00 62 04             	add    %ah,0x4(%rdx)
    fed2:	00 00                	add    %al,(%rax)
    fed4:	00 00                	add    %al,(%rax)
    fed6:	00 00                	add    %al,(%rax)
    fed8:	62                   	(bad)  
    fed9:	04 00                	add    $0x0,%al
    fedb:	00 00                	add    %al,(%rax)
    fedd:	00 00                	add    %al,(%rax)
    fedf:	00 62 04             	add    %ah,0x4(%rdx)
    fee2:	00 00                	add    %al,(%rax)
    fee4:	00 00                	add    %al,(%rax)
    fee6:	00 00                	add    %al,(%rax)
    fee8:	62                   	(bad)  
    fee9:	04 00                	add    $0x0,%al
    feeb:	00 00                	add    %al,(%rax)
    feed:	00 00                	add    %al,(%rax)
    feef:	00 62 04             	add    %ah,0x4(%rdx)
    fef2:	00 00                	add    %al,(%rax)
    fef4:	00 00                	add    %al,(%rax)
    fef6:	00 00                	add    %al,(%rax)
    fef8:	62                   	(bad)  
    fef9:	04 00                	add    $0x0,%al
    fefb:	00 00                	add    %al,(%rax)
    fefd:	00 00                	add    %al,(%rax)
    feff:	00 62 04             	add    %ah,0x4(%rdx)
    ff02:	00 00                	add    %al,(%rax)
    ff04:	00 00                	add    %al,(%rax)
    ff06:	00 00                	add    %al,(%rax)
    ff08:	62                   	(bad)  
    ff09:	04 00                	add    $0x0,%al
    ff0b:	00 00                	add    %al,(%rax)
    ff0d:	00 00                	add    %al,(%rax)
    ff0f:	00 62 04             	add    %ah,0x4(%rdx)
    ff12:	00 00                	add    %al,(%rax)
    ff14:	00 00                	add    %al,(%rax)
    ff16:	00 00                	add    %al,(%rax)
    ff18:	62                   	(bad)  
    ff19:	04 00                	add    $0x0,%al
    ff1b:	00 00                	add    %al,(%rax)
    ff1d:	00 00                	add    %al,(%rax)
    ff1f:	00 62 04             	add    %ah,0x4(%rdx)
    ff22:	00 00                	add    %al,(%rax)
    ff24:	00 00                	add    %al,(%rax)
    ff26:	00 00                	add    %al,(%rax)
    ff28:	62                   	(bad)  
    ff29:	04 00                	add    $0x0,%al
    ff2b:	00 00                	add    %al,(%rax)
    ff2d:	00 00                	add    %al,(%rax)
    ff2f:	00 62 04             	add    %ah,0x4(%rdx)
    ff32:	00 00                	add    %al,(%rax)
    ff34:	00 00                	add    %al,(%rax)
    ff36:	00 00                	add    %al,(%rax)
    ff38:	62                   	(bad)  
    ff39:	04 00                	add    $0x0,%al
    ff3b:	00 00                	add    %al,(%rax)
    ff3d:	00 00                	add    %al,(%rax)
    ff3f:	00 62 04             	add    %ah,0x4(%rdx)
    ff42:	00 00                	add    %al,(%rax)
    ff44:	00 00                	add    %al,(%rax)
    ff46:	00 00                	add    %al,(%rax)
    ff48:	62                   	(bad)  
    ff49:	04 00                	add    $0x0,%al
    ff4b:	00 00                	add    %al,(%rax)
    ff4d:	00 00                	add    %al,(%rax)
    ff4f:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    ff53:	00 00                	add    %al,(%rax)
    ff55:	00 00                	add    %al,(%rax)
    ff57:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    ff5b:	00 00                	add    %al,(%rax)
    ff5d:	00 00                	add    %al,(%rax)
    ff5f:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    ff63:	00 00                	add    %al,(%rax)
    ff65:	00 00                	add    %al,(%rax)
    ff67:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    ff6b:	00 00                	add    %al,(%rax)
    ff6d:	00 00                	add    %al,(%rax)
    ff6f:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    ff73:	00 00                	add    %al,(%rax)
    ff75:	00 00                	add    %al,(%rax)
    ff77:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    ff7b:	00 00                	add    %al,(%rax)
    ff7d:	00 00                	add    %al,(%rax)
    ff7f:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    ff83:	00 00                	add    %al,(%rax)
    ff85:	00 00                	add    %al,(%rax)
    ff87:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    ff8b:	00 00                	add    %al,(%rax)
    ff8d:	00 00                	add    %al,(%rax)
    ff8f:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    ff93:	00 00                	add    %al,(%rax)
    ff95:	00 00                	add    %al,(%rax)
    ff97:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    ff9b:	00 00                	add    %al,(%rax)
    ff9d:	00 00                	add    %al,(%rax)
    ff9f:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    ffa3:	00 00                	add    %al,(%rax)
    ffa5:	00 00                	add    %al,(%rax)
    ffa7:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    ffab:	00 00                	add    %al,(%rax)
    ffad:	00 00                	add    %al,(%rax)
    ffaf:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    ffb3:	00 00                	add    %al,(%rax)
    ffb5:	00 00                	add    %al,(%rax)
    ffb7:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    ffbb:	00 00                	add    %al,(%rax)
    ffbd:	00 00                	add    %al,(%rax)
    ffbf:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    ffc3:	00 00                	add    %al,(%rax)
    ffc5:	00 00                	add    %al,(%rax)
    ffc7:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    ffcb:	00 00                	add    %al,(%rax)
    ffcd:	00 00                	add    %al,(%rax)
    ffcf:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    ffd3:	00 00                	add    %al,(%rax)
    ffd5:	00 00                	add    %al,(%rax)
    ffd7:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    ffdb:	00 00                	add    %al,(%rax)
    ffdd:	00 00                	add    %al,(%rax)
    ffdf:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    ffe3:	00 00                	add    %al,(%rax)
    ffe5:	00 00                	add    %al,(%rax)
    ffe7:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    ffeb:	00 00                	add    %al,(%rax)
    ffed:	00 00                	add    %al,(%rax)
    ffef:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    fff3:	00 00                	add    %al,(%rax)
    fff5:	00 00                	add    %al,(%rax)
    fff7:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
    fffb:	00 00                	add    %al,(%rax)
    fffd:	00 00                	add    %al,(%rax)
    ffff:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
   10003:	00 00                	add    %al,(%rax)
   10005:	00 00                	add    %al,(%rax)
   10007:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
   1000b:	00 00                	add    %al,(%rax)
   1000d:	00 00                	add    %al,(%rax)
   1000f:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
   10013:	00 00                	add    %al,(%rax)
   10015:	00 00                	add    %al,(%rax)
   10017:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
   1001b:	00 00                	add    %al,(%rax)
   1001d:	00 00                	add    %al,(%rax)
   1001f:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
   10023:	00 00                	add    %al,(%rax)
   10025:	00 00                	add    %al,(%rax)
   10027:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
   1002b:	00 00                	add    %al,(%rax)
   1002d:	00 00                	add    %al,(%rax)
   1002f:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
   10033:	00 00                	add    %al,(%rax)
   10035:	00 00                	add    %al,(%rax)
   10037:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
   1003b:	00 00                	add    %al,(%rax)
   1003d:	00 00                	add    %al,(%rax)
   1003f:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
   10043:	00 00                	add    %al,(%rax)
   10045:	00 00                	add    %al,(%rax)
   10047:	00 6c 04 00          	add    %ch,0x0(%rsp,%rax,1)
   1004b:	00 00                	add    %al,(%rax)
   1004d:	00 00                	add    %al,(%rax)
   1004f:	00 76 04             	add    %dh,0x4(%rsi)
   10052:	00 00                	add    %al,(%rax)
   10054:	00 00                	add    %al,(%rax)
   10056:	00 00                	add    %al,(%rax)
   10058:	76 04                	jbe    1005e <__intel_avx_rep_memcpy+0xabe>
   1005a:	00 00                	add    %al,(%rax)
   1005c:	00 00                	add    %al,(%rax)
   1005e:	00 00                	add    %al,(%rax)
   10060:	76 04                	jbe    10066 <__intel_avx_rep_memcpy+0xac6>
   10062:	00 00                	add    %al,(%rax)
   10064:	00 00                	add    %al,(%rax)
   10066:	00 00                	add    %al,(%rax)
   10068:	76 04                	jbe    1006e <__intel_avx_rep_memcpy+0xace>
   1006a:	00 00                	add    %al,(%rax)
   1006c:	00 00                	add    %al,(%rax)
   1006e:	00 00                	add    %al,(%rax)
   10070:	76 04                	jbe    10076 <__intel_avx_rep_memcpy+0xad6>
   10072:	00 00                	add    %al,(%rax)
   10074:	00 00                	add    %al,(%rax)
   10076:	00 00                	add    %al,(%rax)
   10078:	76 04                	jbe    1007e <__intel_avx_rep_memcpy+0xade>
   1007a:	00 00                	add    %al,(%rax)
   1007c:	00 00                	add    %al,(%rax)
   1007e:	00 00                	add    %al,(%rax)
   10080:	76 04                	jbe    10086 <__intel_avx_rep_memcpy+0xae6>
   10082:	00 00                	add    %al,(%rax)
   10084:	00 00                	add    %al,(%rax)
   10086:	00 00                	add    %al,(%rax)
   10088:	76 04                	jbe    1008e <__intel_avx_rep_memcpy+0xaee>
   1008a:	00 00                	add    %al,(%rax)
   1008c:	00 00                	add    %al,(%rax)
   1008e:	00 00                	add    %al,(%rax)
   10090:	76 04                	jbe    10096 <__intel_avx_rep_memcpy+0xaf6>
   10092:	00 00                	add    %al,(%rax)
   10094:	00 00                	add    %al,(%rax)
   10096:	00 00                	add    %al,(%rax)
   10098:	76 04                	jbe    1009e <__intel_avx_rep_memcpy+0xafe>
   1009a:	00 00                	add    %al,(%rax)
   1009c:	00 00                	add    %al,(%rax)
   1009e:	00 00                	add    %al,(%rax)
   100a0:	76 04                	jbe    100a6 <__intel_avx_rep_memcpy+0xb06>
   100a2:	00 00                	add    %al,(%rax)
   100a4:	00 00                	add    %al,(%rax)
   100a6:	00 00                	add    %al,(%rax)
   100a8:	76 04                	jbe    100ae <__intel_avx_rep_memcpy+0xb0e>
   100aa:	00 00                	add    %al,(%rax)
   100ac:	00 00                	add    %al,(%rax)
   100ae:	00 00                	add    %al,(%rax)
   100b0:	76 04                	jbe    100b6 <__intel_avx_rep_memcpy+0xb16>
   100b2:	00 00                	add    %al,(%rax)
   100b4:	00 00                	add    %al,(%rax)
   100b6:	00 00                	add    %al,(%rax)
   100b8:	76 04                	jbe    100be <__intel_avx_rep_memcpy+0xb1e>
   100ba:	00 00                	add    %al,(%rax)
   100bc:	00 00                	add    %al,(%rax)
   100be:	00 00                	add    %al,(%rax)
   100c0:	76 04                	jbe    100c6 <__intel_avx_rep_memcpy+0xb26>
   100c2:	00 00                	add    %al,(%rax)
   100c4:	00 00                	add    %al,(%rax)
   100c6:	00 00                	add    %al,(%rax)
   100c8:	76 04                	jbe    100ce <__intel_avx_rep_memcpy+0xb2e>
   100ca:	00 00                	add    %al,(%rax)
   100cc:	00 00                	add    %al,(%rax)
   100ce:	00 00                	add    %al,(%rax)
   100d0:	76 04                	jbe    100d6 <__intel_avx_rep_memcpy+0xb36>
   100d2:	00 00                	add    %al,(%rax)
   100d4:	00 00                	add    %al,(%rax)
   100d6:	00 00                	add    %al,(%rax)
   100d8:	76 04                	jbe    100de <__intel_avx_rep_memcpy+0xb3e>
   100da:	00 00                	add    %al,(%rax)
   100dc:	00 00                	add    %al,(%rax)
   100de:	00 00                	add    %al,(%rax)
   100e0:	76 04                	jbe    100e6 <__intel_avx_rep_memcpy+0xb46>
   100e2:	00 00                	add    %al,(%rax)
   100e4:	00 00                	add    %al,(%rax)
   100e6:	00 00                	add    %al,(%rax)
   100e8:	76 04                	jbe    100ee <__intel_avx_rep_memcpy+0xb4e>
   100ea:	00 00                	add    %al,(%rax)
   100ec:	00 00                	add    %al,(%rax)
   100ee:	00 00                	add    %al,(%rax)
   100f0:	76 04                	jbe    100f6 <__intel_avx_rep_memcpy+0xb56>
   100f2:	00 00                	add    %al,(%rax)
   100f4:	00 00                	add    %al,(%rax)
   100f6:	00 00                	add    %al,(%rax)
   100f8:	76 04                	jbe    100fe <__intel_avx_rep_memcpy+0xb5e>
   100fa:	00 00                	add    %al,(%rax)
   100fc:	00 00                	add    %al,(%rax)
   100fe:	00 00                	add    %al,(%rax)
   10100:	76 04                	jbe    10106 <__intel_avx_rep_memcpy+0xb66>
   10102:	00 00                	add    %al,(%rax)
   10104:	00 00                	add    %al,(%rax)
   10106:	00 00                	add    %al,(%rax)
   10108:	76 04                	jbe    1010e <__intel_avx_rep_memcpy+0xb6e>
   1010a:	00 00                	add    %al,(%rax)
   1010c:	00 00                	add    %al,(%rax)
   1010e:	00 00                	add    %al,(%rax)
   10110:	76 04                	jbe    10116 <__intel_avx_rep_memcpy+0xb76>
   10112:	00 00                	add    %al,(%rax)
   10114:	00 00                	add    %al,(%rax)
   10116:	00 00                	add    %al,(%rax)
   10118:	76 04                	jbe    1011e <__intel_avx_rep_memcpy+0xb7e>
   1011a:	00 00                	add    %al,(%rax)
   1011c:	00 00                	add    %al,(%rax)
   1011e:	00 00                	add    %al,(%rax)
   10120:	76 04                	jbe    10126 <__intel_avx_rep_memcpy+0xb86>
   10122:	00 00                	add    %al,(%rax)
   10124:	00 00                	add    %al,(%rax)
   10126:	00 00                	add    %al,(%rax)
   10128:	76 04                	jbe    1012e <__intel_avx_rep_memcpy+0xb8e>
   1012a:	00 00                	add    %al,(%rax)
   1012c:	00 00                	add    %al,(%rax)
   1012e:	00 00                	add    %al,(%rax)
   10130:	76 04                	jbe    10136 <__intel_avx_rep_memcpy+0xb96>
   10132:	00 00                	add    %al,(%rax)
   10134:	00 00                	add    %al,(%rax)
   10136:	00 00                	add    %al,(%rax)
   10138:	76 04                	jbe    1013e <__intel_avx_rep_memcpy+0xb9e>
   1013a:	00 00                	add    %al,(%rax)
   1013c:	00 00                	add    %al,(%rax)
   1013e:	00 00                	add    %al,(%rax)
   10140:	76 04                	jbe    10146 <__intel_avx_rep_memcpy+0xba6>
   10142:	00 00                	add    %al,(%rax)
   10144:	00 00                	add    %al,(%rax)
   10146:	00 00                	add    %al,(%rax)
   10148:	76 04                	jbe    1014e <__intel_avx_rep_memcpy+0xbae>
   1014a:	00 00                	add    %al,(%rax)
   1014c:	00 00                	add    %al,(%rax)
   1014e:	00 00                	add    %al,(%rax)
   10150:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   10154:	00 00                	add    %al,(%rax)
   10156:	00 00                	add    %al,(%rax)
   10158:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   1015c:	00 00                	add    %al,(%rax)
   1015e:	00 00                	add    %al,(%rax)
   10160:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   10164:	00 00                	add    %al,(%rax)
   10166:	00 00                	add    %al,(%rax)
   10168:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   1016c:	00 00                	add    %al,(%rax)
   1016e:	00 00                	add    %al,(%rax)
   10170:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   10174:	00 00                	add    %al,(%rax)
   10176:	00 00                	add    %al,(%rax)
   10178:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   1017c:	00 00                	add    %al,(%rax)
   1017e:	00 00                	add    %al,(%rax)
   10180:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   10184:	00 00                	add    %al,(%rax)
   10186:	00 00                	add    %al,(%rax)
   10188:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   1018c:	00 00                	add    %al,(%rax)
   1018e:	00 00                	add    %al,(%rax)
   10190:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   10194:	00 00                	add    %al,(%rax)
   10196:	00 00                	add    %al,(%rax)
   10198:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   1019c:	00 00                	add    %al,(%rax)
   1019e:	00 00                	add    %al,(%rax)
   101a0:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   101a4:	00 00                	add    %al,(%rax)
   101a6:	00 00                	add    %al,(%rax)
   101a8:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   101ac:	00 00                	add    %al,(%rax)
   101ae:	00 00                	add    %al,(%rax)
   101b0:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   101b4:	00 00                	add    %al,(%rax)
   101b6:	00 00                	add    %al,(%rax)
   101b8:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   101bc:	00 00                	add    %al,(%rax)
   101be:	00 00                	add    %al,(%rax)
   101c0:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   101c4:	00 00                	add    %al,(%rax)
   101c6:	00 00                	add    %al,(%rax)
   101c8:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   101cc:	00 00                	add    %al,(%rax)
   101ce:	00 00                	add    %al,(%rax)
   101d0:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   101d4:	00 00                	add    %al,(%rax)
   101d6:	00 00                	add    %al,(%rax)
   101d8:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   101dc:	00 00                	add    %al,(%rax)
   101de:	00 00                	add    %al,(%rax)
   101e0:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   101e4:	00 00                	add    %al,(%rax)
   101e6:	00 00                	add    %al,(%rax)
   101e8:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   101ec:	00 00                	add    %al,(%rax)
   101ee:	00 00                	add    %al,(%rax)
   101f0:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   101f4:	00 00                	add    %al,(%rax)
   101f6:	00 00                	add    %al,(%rax)
   101f8:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   101fc:	00 00                	add    %al,(%rax)
   101fe:	00 00                	add    %al,(%rax)
   10200:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   10204:	00 00                	add    %al,(%rax)
   10206:	00 00                	add    %al,(%rax)
   10208:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   1020c:	00 00                	add    %al,(%rax)
   1020e:	00 00                	add    %al,(%rax)
   10210:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   10214:	00 00                	add    %al,(%rax)
   10216:	00 00                	add    %al,(%rax)
   10218:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   1021c:	00 00                	add    %al,(%rax)
   1021e:	00 00                	add    %al,(%rax)
   10220:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   10224:	00 00                	add    %al,(%rax)
   10226:	00 00                	add    %al,(%rax)
   10228:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   1022c:	00 00                	add    %al,(%rax)
   1022e:	00 00                	add    %al,(%rax)
   10230:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   10234:	00 00                	add    %al,(%rax)
   10236:	00 00                	add    %al,(%rax)
   10238:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   1023c:	00 00                	add    %al,(%rax)
   1023e:	00 00                	add    %al,(%rax)
   10240:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   10244:	00 00                	add    %al,(%rax)
   10246:	00 00                	add    %al,(%rax)
   10248:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
   1024c:	00 00                	add    %al,(%rax)
   1024e:	00 00                	add    %al,(%rax)
   10250:	90                   	nop
   10251:	04 00                	add    $0x0,%al
   10253:	00 00                	add    %al,(%rax)
   10255:	00 00                	add    %al,(%rax)
   10257:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   1025d:	00 00                	add    %al,(%rax)
   1025f:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   10265:	00 00                	add    %al,(%rax)
   10267:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   1026d:	00 00                	add    %al,(%rax)
   1026f:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   10275:	00 00                	add    %al,(%rax)
   10277:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   1027d:	00 00                	add    %al,(%rax)
   1027f:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   10285:	00 00                	add    %al,(%rax)
   10287:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   1028d:	00 00                	add    %al,(%rax)
   1028f:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   10295:	00 00                	add    %al,(%rax)
   10297:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   1029d:	00 00                	add    %al,(%rax)
   1029f:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   102a5:	00 00                	add    %al,(%rax)
   102a7:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   102ad:	00 00                	add    %al,(%rax)
   102af:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   102b5:	00 00                	add    %al,(%rax)
   102b7:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   102bd:	00 00                	add    %al,(%rax)
   102bf:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   102c5:	00 00                	add    %al,(%rax)
   102c7:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   102cd:	00 00                	add    %al,(%rax)
   102cf:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   102d5:	00 00                	add    %al,(%rax)
   102d7:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   102dd:	00 00                	add    %al,(%rax)
   102df:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   102e5:	00 00                	add    %al,(%rax)
   102e7:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   102ed:	00 00                	add    %al,(%rax)
   102ef:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   102f5:	00 00                	add    %al,(%rax)
   102f7:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   102fd:	00 00                	add    %al,(%rax)
   102ff:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   10305:	00 00                	add    %al,(%rax)
   10307:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   1030d:	00 00                	add    %al,(%rax)
   1030f:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   10315:	00 00                	add    %al,(%rax)
   10317:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   1031d:	00 00                	add    %al,(%rax)
   1031f:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   10325:	00 00                	add    %al,(%rax)
   10327:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   1032d:	00 00                	add    %al,(%rax)
   1032f:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   10335:	00 00                	add    %al,(%rax)
   10337:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   1033d:	00 00                	add    %al,(%rax)
   1033f:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   10345:	00 00                	add    %al,(%rax)
   10347:	00 90 04 00 00 00    	add    %dl,0x4(%rax)
   1034d:	00 00                	add    %al,(%rax)
   1034f:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   10355:	00 00                	add    %al,(%rax)
   10357:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   1035d:	00 00                	add    %al,(%rax)
   1035f:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   10365:	00 00                	add    %al,(%rax)
   10367:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   1036d:	00 00                	add    %al,(%rax)
   1036f:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   10375:	00 00                	add    %al,(%rax)
   10377:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   1037d:	00 00                	add    %al,(%rax)
   1037f:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   10385:	00 00                	add    %al,(%rax)
   10387:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   1038d:	00 00                	add    %al,(%rax)
   1038f:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   10395:	00 00                	add    %al,(%rax)
   10397:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   1039d:	00 00                	add    %al,(%rax)
   1039f:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   103a5:	00 00                	add    %al,(%rax)
   103a7:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   103ad:	00 00                	add    %al,(%rax)
   103af:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   103b5:	00 00                	add    %al,(%rax)
   103b7:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   103bd:	00 00                	add    %al,(%rax)
   103bf:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   103c5:	00 00                	add    %al,(%rax)
   103c7:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   103cd:	00 00                	add    %al,(%rax)
   103cf:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   103d5:	00 00                	add    %al,(%rax)
   103d7:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   103dd:	00 00                	add    %al,(%rax)
   103df:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   103e5:	00 00                	add    %al,(%rax)
   103e7:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   103ed:	00 00                	add    %al,(%rax)
   103ef:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   103f5:	00 00                	add    %al,(%rax)
   103f7:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   103fd:	00 00                	add    %al,(%rax)
   103ff:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   10405:	00 00                	add    %al,(%rax)
   10407:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   1040d:	00 00                	add    %al,(%rax)
   1040f:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   10415:	00 00                	add    %al,(%rax)
   10417:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   1041d:	00 00                	add    %al,(%rax)
   1041f:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   10425:	00 00                	add    %al,(%rax)
   10427:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   1042d:	00 00                	add    %al,(%rax)
   1042f:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   10435:	00 00                	add    %al,(%rax)
   10437:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   1043d:	00 00                	add    %al,(%rax)
   1043f:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   10445:	00 00                	add    %al,(%rax)
   10447:	00 a0 04 00 00 00    	add    %ah,0x4(%rax)
   1044d:	00 00                	add    %al,(%rax)
   1044f:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   10455:	00 00                	add    %al,(%rax)
   10457:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   1045d:	00 00                	add    %al,(%rax)
   1045f:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   10465:	00 00                	add    %al,(%rax)
   10467:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   1046d:	00 00                	add    %al,(%rax)
   1046f:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   10475:	00 00                	add    %al,(%rax)
   10477:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   1047d:	00 00                	add    %al,(%rax)
   1047f:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   10485:	00 00                	add    %al,(%rax)
   10487:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   1048d:	00 00                	add    %al,(%rax)
   1048f:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   10495:	00 00                	add    %al,(%rax)
   10497:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   1049d:	00 00                	add    %al,(%rax)
   1049f:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   104a5:	00 00                	add    %al,(%rax)
   104a7:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   104ad:	00 00                	add    %al,(%rax)
   104af:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   104b5:	00 00                	add    %al,(%rax)
   104b7:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   104bd:	00 00                	add    %al,(%rax)
   104bf:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   104c5:	00 00                	add    %al,(%rax)
   104c7:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   104cd:	00 00                	add    %al,(%rax)
   104cf:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   104d5:	00 00                	add    %al,(%rax)
   104d7:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   104dd:	00 00                	add    %al,(%rax)
   104df:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   104e5:	00 00                	add    %al,(%rax)
   104e7:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   104ed:	00 00                	add    %al,(%rax)
   104ef:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   104f5:	00 00                	add    %al,(%rax)
   104f7:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   104fd:	00 00                	add    %al,(%rax)
   104ff:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   10505:	00 00                	add    %al,(%rax)
   10507:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   1050d:	00 00                	add    %al,(%rax)
   1050f:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   10515:	00 00                	add    %al,(%rax)
   10517:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   1051d:	00 00                	add    %al,(%rax)
   1051f:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   10525:	00 00                	add    %al,(%rax)
   10527:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   1052d:	00 00                	add    %al,(%rax)
   1052f:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   10535:	00 00                	add    %al,(%rax)
   10537:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   1053d:	00 00                	add    %al,(%rax)
   1053f:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   10545:	00 00                	add    %al,(%rax)
   10547:	00 b0 04 00 00 00    	add    %dh,0x4(%rax)
   1054d:	00 00                	add    %al,(%rax)
   1054f:	00 30                	add    %dh,(%rax)
   10551:	0c 00                	or     $0x0,%al
   10553:	00 00                	add    %al,(%rax)
   10555:	00 00                	add    %al,(%rax)
   10557:	00 40 0c             	add    %al,0xc(%rax)
   1055a:	00 00                	add    %al,(%rax)
   1055c:	00 00                	add    %al,(%rax)
   1055e:	00 00                	add    %al,(%rax)
   10560:	20 0c 00             	and    %cl,(%rax,%rax,1)
   10563:	00 00                	add    %al,(%rax)
   10565:	00 00                	add    %al,(%rax)
   10567:	00 10                	add    %dl,(%rax)
   10569:	0c 00                	or     $0x0,%al
   1056b:	00 00                	add    %al,(%rax)
   1056d:	00 00                	add    %al,(%rax)
   1056f:	00 f0                	add    %dh,%al
   10571:	0b 00                	or     (%rax),%eax
   10573:	00 00                	add    %al,(%rax)
   10575:	00 00                	add    %al,(%rax)
   10577:	00 e0                	add    %ah,%al
   10579:	0b 00                	or     (%rax),%eax
   1057b:	00 00                	add    %al,(%rax)
   1057d:	00 00                	add    %al,(%rax)
   1057f:	00 e0                	add    %ah,%al
   10581:	0b 00                	or     (%rax),%eax
   10583:	00 00                	add    %al,(%rax)
   10585:	00 00                	add    %al,(%rax)
   10587:	00 e0                	add    %ah,%al
   10589:	0b 00                	or     (%rax),%eax
   1058b:	00 00                	add    %al,(%rax)
   1058d:	00 00                	add    %al,(%rax)
   1058f:	00 c0                	add    %al,%al
   10591:	0b 00                	or     (%rax),%eax
   10593:	00 00                	add    %al,(%rax)
   10595:	00 00                	add    %al,(%rax)
   10597:	00 b0 0b 00 00 00    	add    %dh,0xb(%rax)
   1059d:	00 00                	add    %al,(%rax)
   1059f:	00 b0 0b 00 00 00    	add    %dh,0xb(%rax)
   105a5:	00 00                	add    %al,(%rax)
   105a7:	00 b0 0b 00 00 00    	add    %dh,0xb(%rax)
   105ad:	00 00                	add    %al,(%rax)
   105af:	00 b0 0b 00 00 00    	add    %dh,0xb(%rax)
   105b5:	00 00                	add    %al,(%rax)
   105b7:	00 b0 0b 00 00 00    	add    %dh,0xb(%rax)
   105bd:	00 00                	add    %al,(%rax)
   105bf:	00 b0 0b 00 00 00    	add    %dh,0xb(%rax)
   105c5:	00 00                	add    %al,(%rax)
   105c7:	00 b0 0b 00 00 00    	add    %dh,0xb(%rax)
   105cd:	00 00                	add    %al,(%rax)
   105cf:	00 90 0b 00 00 00    	add    %dl,0xb(%rax)
   105d5:	00 00                	add    %al,(%rax)
   105d7:	00 80 0b 00 00 00    	add    %al,0xb(%rax)
   105dd:	00 00                	add    %al,(%rax)
   105df:	00 80 0b 00 00 00    	add    %al,0xb(%rax)
   105e5:	00 00                	add    %al,(%rax)
   105e7:	00 80 0b 00 00 00    	add    %al,0xb(%rax)
   105ed:	00 00                	add    %al,(%rax)
   105ef:	00 80 0b 00 00 00    	add    %al,0xb(%rax)
   105f5:	00 00                	add    %al,(%rax)
   105f7:	00 80 0b 00 00 00    	add    %al,0xb(%rax)
   105fd:	00 00                	add    %al,(%rax)
   105ff:	00 80 0b 00 00 00    	add    %al,0xb(%rax)
   10605:	00 00                	add    %al,(%rax)
   10607:	00 80 0b 00 00 00    	add    %al,0xb(%rax)
   1060d:	00 00                	add    %al,(%rax)
   1060f:	00 80 0b 00 00 00    	add    %al,0xb(%rax)
   10615:	00 00                	add    %al,(%rax)
   10617:	00 80 0b 00 00 00    	add    %al,0xb(%rax)
   1061d:	00 00                	add    %al,(%rax)
   1061f:	00 80 0b 00 00 00    	add    %al,0xb(%rax)
   10625:	00 00                	add    %al,(%rax)
   10627:	00 80 0b 00 00 00    	add    %al,0xb(%rax)
   1062d:	00 00                	add    %al,(%rax)
   1062f:	00 80 0b 00 00 00    	add    %al,0xb(%rax)
   10635:	00 00                	add    %al,(%rax)
   10637:	00 80 0b 00 00 00    	add    %al,0xb(%rax)
   1063d:	00 00                	add    %al,(%rax)
   1063f:	00 80 0b 00 00 00    	add    %al,0xb(%rax)
   10645:	00 00                	add    %al,(%rax)
   10647:	00 80 0b 00 00 00    	add    %al,0xb(%rax)
   1064d:	00 00                	add    %al,(%rax)
   1064f:	00 14 09             	add    %dl,(%rcx,%rcx,1)
   10652:	00 00                	add    %al,(%rax)
   10654:	00 00                	add    %al,(%rax)
   10656:	00 00                	add    %al,(%rax)
   10658:	60                   	(bad)  
   10659:	0b 00                	or     (%rax),%eax
   1065b:	00 00                	add    %al,(%rax)
   1065d:	00 00                	add    %al,(%rax)
   1065f:	00 60 0b             	add    %ah,0xb(%rax)
   10662:	00 00                	add    %al,(%rax)
   10664:	00 00                	add    %al,(%rax)
   10666:	00 00                	add    %al,(%rax)
   10668:	60                   	(bad)  
   10669:	0b 00                	or     (%rax),%eax
   1066b:	00 00                	add    %al,(%rax)
   1066d:	00 00                	add    %al,(%rax)
   1066f:	00 60 0b             	add    %ah,0xb(%rax)
   10672:	00 00                	add    %al,(%rax)
   10674:	00 00                	add    %al,(%rax)
   10676:	00 00                	add    %al,(%rax)
   10678:	60                   	(bad)  
   10679:	0b 00                	or     (%rax),%eax
   1067b:	00 00                	add    %al,(%rax)
   1067d:	00 00                	add    %al,(%rax)
   1067f:	00 60 0b             	add    %ah,0xb(%rax)
   10682:	00 00                	add    %al,(%rax)
   10684:	00 00                	add    %al,(%rax)
   10686:	00 00                	add    %al,(%rax)
   10688:	60                   	(bad)  
   10689:	0b 00                	or     (%rax),%eax
   1068b:	00 00                	add    %al,(%rax)
   1068d:	00 00                	add    %al,(%rax)
   1068f:	00 60 0b             	add    %ah,0xb(%rax)
   10692:	00 00                	add    %al,(%rax)
   10694:	00 00                	add    %al,(%rax)
   10696:	00 00                	add    %al,(%rax)
   10698:	60                   	(bad)  
   10699:	0b 00                	or     (%rax),%eax
   1069b:	00 00                	add    %al,(%rax)
   1069d:	00 00                	add    %al,(%rax)
   1069f:	00 60 0b             	add    %ah,0xb(%rax)
   106a2:	00 00                	add    %al,(%rax)
   106a4:	00 00                	add    %al,(%rax)
   106a6:	00 00                	add    %al,(%rax)
   106a8:	60                   	(bad)  
   106a9:	0b 00                	or     (%rax),%eax
   106ab:	00 00                	add    %al,(%rax)
   106ad:	00 00                	add    %al,(%rax)
   106af:	00 60 0b             	add    %ah,0xb(%rax)
   106b2:	00 00                	add    %al,(%rax)
   106b4:	00 00                	add    %al,(%rax)
   106b6:	00 00                	add    %al,(%rax)
   106b8:	60                   	(bad)  
   106b9:	0b 00                	or     (%rax),%eax
   106bb:	00 00                	add    %al,(%rax)
   106bd:	00 00                	add    %al,(%rax)
   106bf:	00 60 0b             	add    %ah,0xb(%rax)
   106c2:	00 00                	add    %al,(%rax)
   106c4:	00 00                	add    %al,(%rax)
   106c6:	00 00                	add    %al,(%rax)
   106c8:	60                   	(bad)  
   106c9:	0b 00                	or     (%rax),%eax
   106cb:	00 00                	add    %al,(%rax)
   106cd:	00 00                	add    %al,(%rax)
   106cf:	00 60 0b             	add    %ah,0xb(%rax)
   106d2:	00 00                	add    %al,(%rax)
   106d4:	00 00                	add    %al,(%rax)
   106d6:	00 00                	add    %al,(%rax)
   106d8:	60                   	(bad)  
   106d9:	0b 00                	or     (%rax),%eax
   106db:	00 00                	add    %al,(%rax)
   106dd:	00 00                	add    %al,(%rax)
   106df:	00 60 0b             	add    %ah,0xb(%rax)
   106e2:	00 00                	add    %al,(%rax)
   106e4:	00 00                	add    %al,(%rax)
   106e6:	00 00                	add    %al,(%rax)
   106e8:	60                   	(bad)  
   106e9:	0b 00                	or     (%rax),%eax
   106eb:	00 00                	add    %al,(%rax)
   106ed:	00 00                	add    %al,(%rax)
   106ef:	00 60 0b             	add    %ah,0xb(%rax)
   106f2:	00 00                	add    %al,(%rax)
   106f4:	00 00                	add    %al,(%rax)
   106f6:	00 00                	add    %al,(%rax)
   106f8:	60                   	(bad)  
   106f9:	0b 00                	or     (%rax),%eax
   106fb:	00 00                	add    %al,(%rax)
   106fd:	00 00                	add    %al,(%rax)
   106ff:	00 60 0b             	add    %ah,0xb(%rax)
   10702:	00 00                	add    %al,(%rax)
   10704:	00 00                	add    %al,(%rax)
   10706:	00 00                	add    %al,(%rax)
   10708:	60                   	(bad)  
   10709:	0b 00                	or     (%rax),%eax
   1070b:	00 00                	add    %al,(%rax)
   1070d:	00 00                	add    %al,(%rax)
   1070f:	00 60 0b             	add    %ah,0xb(%rax)
   10712:	00 00                	add    %al,(%rax)
   10714:	00 00                	add    %al,(%rax)
   10716:	00 00                	add    %al,(%rax)
   10718:	60                   	(bad)  
   10719:	0b 00                	or     (%rax),%eax
   1071b:	00 00                	add    %al,(%rax)
   1071d:	00 00                	add    %al,(%rax)
   1071f:	00 60 0b             	add    %ah,0xb(%rax)
   10722:	00 00                	add    %al,(%rax)
   10724:	00 00                	add    %al,(%rax)
   10726:	00 00                	add    %al,(%rax)
   10728:	60                   	(bad)  
   10729:	0b 00                	or     (%rax),%eax
   1072b:	00 00                	add    %al,(%rax)
   1072d:	00 00                	add    %al,(%rax)
   1072f:	00 60 0b             	add    %ah,0xb(%rax)
   10732:	00 00                	add    %al,(%rax)
   10734:	00 00                	add    %al,(%rax)
   10736:	00 00                	add    %al,(%rax)
   10738:	60                   	(bad)  
   10739:	0b 00                	or     (%rax),%eax
   1073b:	00 00                	add    %al,(%rax)
   1073d:	00 00                	add    %al,(%rax)
   1073f:	00 60 0b             	add    %ah,0xb(%rax)
   10742:	00 00                	add    %al,(%rax)
   10744:	00 00                	add    %al,(%rax)
   10746:	00 00                	add    %al,(%rax)
   10748:	60                   	(bad)  
   10749:	0b 00                	or     (%rax),%eax
   1074b:	00 00                	add    %al,(%rax)
   1074d:	00 00                	add    %al,(%rax)
   1074f:	00 20                	add    %ah,(%rax)
   10751:	09 00                	or     %eax,(%rax)
   10753:	00 00                	add    %al,(%rax)
   10755:	00 00                	add    %al,(%rax)
   10757:	00 40 0b             	add    %al,0xb(%rax)
   1075a:	00 00                	add    %al,(%rax)
   1075c:	00 00                	add    %al,(%rax)
   1075e:	00 00                	add    %al,(%rax)
   10760:	40 0b 00             	rex or (%rax),%eax
   10763:	00 00                	add    %al,(%rax)
   10765:	00 00                	add    %al,(%rax)
   10767:	00 40 0b             	add    %al,0xb(%rax)
   1076a:	00 00                	add    %al,(%rax)
   1076c:	00 00                	add    %al,(%rax)
   1076e:	00 00                	add    %al,(%rax)
   10770:	40 0b 00             	rex or (%rax),%eax
   10773:	00 00                	add    %al,(%rax)
   10775:	00 00                	add    %al,(%rax)
   10777:	00 40 0b             	add    %al,0xb(%rax)
   1077a:	00 00                	add    %al,(%rax)
   1077c:	00 00                	add    %al,(%rax)
   1077e:	00 00                	add    %al,(%rax)
   10780:	40 0b 00             	rex or (%rax),%eax
   10783:	00 00                	add    %al,(%rax)
   10785:	00 00                	add    %al,(%rax)
   10787:	00 40 0b             	add    %al,0xb(%rax)
   1078a:	00 00                	add    %al,(%rax)
   1078c:	00 00                	add    %al,(%rax)
   1078e:	00 00                	add    %al,(%rax)
   10790:	40 0b 00             	rex or (%rax),%eax
   10793:	00 00                	add    %al,(%rax)
   10795:	00 00                	add    %al,(%rax)
   10797:	00 40 0b             	add    %al,0xb(%rax)
   1079a:	00 00                	add    %al,(%rax)
   1079c:	00 00                	add    %al,(%rax)
   1079e:	00 00                	add    %al,(%rax)
   107a0:	40 0b 00             	rex or (%rax),%eax
   107a3:	00 00                	add    %al,(%rax)
   107a5:	00 00                	add    %al,(%rax)
   107a7:	00 40 0b             	add    %al,0xb(%rax)
   107aa:	00 00                	add    %al,(%rax)
   107ac:	00 00                	add    %al,(%rax)
   107ae:	00 00                	add    %al,(%rax)
   107b0:	40 0b 00             	rex or (%rax),%eax
   107b3:	00 00                	add    %al,(%rax)
   107b5:	00 00                	add    %al,(%rax)
   107b7:	00 40 0b             	add    %al,0xb(%rax)
   107ba:	00 00                	add    %al,(%rax)
   107bc:	00 00                	add    %al,(%rax)
   107be:	00 00                	add    %al,(%rax)
   107c0:	40 0b 00             	rex or (%rax),%eax
   107c3:	00 00                	add    %al,(%rax)
   107c5:	00 00                	add    %al,(%rax)
   107c7:	00 40 0b             	add    %al,0xb(%rax)
   107ca:	00 00                	add    %al,(%rax)
   107cc:	00 00                	add    %al,(%rax)
   107ce:	00 00                	add    %al,(%rax)
   107d0:	40 0b 00             	rex or (%rax),%eax
   107d3:	00 00                	add    %al,(%rax)
   107d5:	00 00                	add    %al,(%rax)
   107d7:	00 40 0b             	add    %al,0xb(%rax)
   107da:	00 00                	add    %al,(%rax)
   107dc:	00 00                	add    %al,(%rax)
   107de:	00 00                	add    %al,(%rax)
   107e0:	40 0b 00             	rex or (%rax),%eax
   107e3:	00 00                	add    %al,(%rax)
   107e5:	00 00                	add    %al,(%rax)
   107e7:	00 40 0b             	add    %al,0xb(%rax)
   107ea:	00 00                	add    %al,(%rax)
   107ec:	00 00                	add    %al,(%rax)
   107ee:	00 00                	add    %al,(%rax)
   107f0:	40 0b 00             	rex or (%rax),%eax
   107f3:	00 00                	add    %al,(%rax)
   107f5:	00 00                	add    %al,(%rax)
   107f7:	00 40 0b             	add    %al,0xb(%rax)
   107fa:	00 00                	add    %al,(%rax)
   107fc:	00 00                	add    %al,(%rax)
   107fe:	00 00                	add    %al,(%rax)
   10800:	40 0b 00             	rex or (%rax),%eax
   10803:	00 00                	add    %al,(%rax)
   10805:	00 00                	add    %al,(%rax)
   10807:	00 40 0b             	add    %al,0xb(%rax)
   1080a:	00 00                	add    %al,(%rax)
   1080c:	00 00                	add    %al,(%rax)
   1080e:	00 00                	add    %al,(%rax)
   10810:	40 0b 00             	rex or (%rax),%eax
   10813:	00 00                	add    %al,(%rax)
   10815:	00 00                	add    %al,(%rax)
   10817:	00 40 0b             	add    %al,0xb(%rax)
   1081a:	00 00                	add    %al,(%rax)
   1081c:	00 00                	add    %al,(%rax)
   1081e:	00 00                	add    %al,(%rax)
   10820:	40 0b 00             	rex or (%rax),%eax
   10823:	00 00                	add    %al,(%rax)
   10825:	00 00                	add    %al,(%rax)
   10827:	00 40 0b             	add    %al,0xb(%rax)
   1082a:	00 00                	add    %al,(%rax)
   1082c:	00 00                	add    %al,(%rax)
   1082e:	00 00                	add    %al,(%rax)
   10830:	40 0b 00             	rex or (%rax),%eax
   10833:	00 00                	add    %al,(%rax)
   10835:	00 00                	add    %al,(%rax)
   10837:	00 40 0b             	add    %al,0xb(%rax)
   1083a:	00 00                	add    %al,(%rax)
   1083c:	00 00                	add    %al,(%rax)
   1083e:	00 00                	add    %al,(%rax)
   10840:	40 0b 00             	rex or (%rax),%eax
   10843:	00 00                	add    %al,(%rax)
   10845:	00 00                	add    %al,(%rax)
   10847:	00 40 0b             	add    %al,0xb(%rax)
   1084a:	00 00                	add    %al,(%rax)
   1084c:	00 00                	add    %al,(%rax)
   1084e:	00 00                	add    %al,(%rax)
   10850:	2c 09                	sub    $0x9,%al
   10852:	00 00                	add    %al,(%rax)
   10854:	00 00                	add    %al,(%rax)
   10856:	00 00                	add    %al,(%rax)
   10858:	10 0b                	adc    %cl,(%rbx)
   1085a:	00 00                	add    %al,(%rax)
   1085c:	00 00                	add    %al,(%rax)
   1085e:	00 00                	add    %al,(%rax)
   10860:	10 0b                	adc    %cl,(%rbx)
   10862:	00 00                	add    %al,(%rax)
   10864:	00 00                	add    %al,(%rax)
   10866:	00 00                	add    %al,(%rax)
   10868:	10 0b                	adc    %cl,(%rbx)
   1086a:	00 00                	add    %al,(%rax)
   1086c:	00 00                	add    %al,(%rax)
   1086e:	00 00                	add    %al,(%rax)
   10870:	10 0b                	adc    %cl,(%rbx)
   10872:	00 00                	add    %al,(%rax)
   10874:	00 00                	add    %al,(%rax)
   10876:	00 00                	add    %al,(%rax)
   10878:	10 0b                	adc    %cl,(%rbx)
   1087a:	00 00                	add    %al,(%rax)
   1087c:	00 00                	add    %al,(%rax)
   1087e:	00 00                	add    %al,(%rax)
   10880:	10 0b                	adc    %cl,(%rbx)
   10882:	00 00                	add    %al,(%rax)
   10884:	00 00                	add    %al,(%rax)
   10886:	00 00                	add    %al,(%rax)
   10888:	10 0b                	adc    %cl,(%rbx)
   1088a:	00 00                	add    %al,(%rax)
   1088c:	00 00                	add    %al,(%rax)
   1088e:	00 00                	add    %al,(%rax)
   10890:	10 0b                	adc    %cl,(%rbx)
   10892:	00 00                	add    %al,(%rax)
   10894:	00 00                	add    %al,(%rax)
   10896:	00 00                	add    %al,(%rax)
   10898:	10 0b                	adc    %cl,(%rbx)
   1089a:	00 00                	add    %al,(%rax)
   1089c:	00 00                	add    %al,(%rax)
   1089e:	00 00                	add    %al,(%rax)
   108a0:	10 0b                	adc    %cl,(%rbx)
   108a2:	00 00                	add    %al,(%rax)
   108a4:	00 00                	add    %al,(%rax)
   108a6:	00 00                	add    %al,(%rax)
   108a8:	10 0b                	adc    %cl,(%rbx)
   108aa:	00 00                	add    %al,(%rax)
   108ac:	00 00                	add    %al,(%rax)
   108ae:	00 00                	add    %al,(%rax)
   108b0:	10 0b                	adc    %cl,(%rbx)
   108b2:	00 00                	add    %al,(%rax)
   108b4:	00 00                	add    %al,(%rax)
   108b6:	00 00                	add    %al,(%rax)
   108b8:	10 0b                	adc    %cl,(%rbx)
   108ba:	00 00                	add    %al,(%rax)
   108bc:	00 00                	add    %al,(%rax)
   108be:	00 00                	add    %al,(%rax)
   108c0:	10 0b                	adc    %cl,(%rbx)
   108c2:	00 00                	add    %al,(%rax)
   108c4:	00 00                	add    %al,(%rax)
   108c6:	00 00                	add    %al,(%rax)
   108c8:	10 0b                	adc    %cl,(%rbx)
   108ca:	00 00                	add    %al,(%rax)
   108cc:	00 00                	add    %al,(%rax)
   108ce:	00 00                	add    %al,(%rax)
   108d0:	10 0b                	adc    %cl,(%rbx)
   108d2:	00 00                	add    %al,(%rax)
   108d4:	00 00                	add    %al,(%rax)
   108d6:	00 00                	add    %al,(%rax)
   108d8:	10 0b                	adc    %cl,(%rbx)
   108da:	00 00                	add    %al,(%rax)
   108dc:	00 00                	add    %al,(%rax)
   108de:	00 00                	add    %al,(%rax)
   108e0:	10 0b                	adc    %cl,(%rbx)
   108e2:	00 00                	add    %al,(%rax)
   108e4:	00 00                	add    %al,(%rax)
   108e6:	00 00                	add    %al,(%rax)
   108e8:	10 0b                	adc    %cl,(%rbx)
   108ea:	00 00                	add    %al,(%rax)
   108ec:	00 00                	add    %al,(%rax)
   108ee:	00 00                	add    %al,(%rax)
   108f0:	10 0b                	adc    %cl,(%rbx)
   108f2:	00 00                	add    %al,(%rax)
   108f4:	00 00                	add    %al,(%rax)
   108f6:	00 00                	add    %al,(%rax)
   108f8:	10 0b                	adc    %cl,(%rbx)
   108fa:	00 00                	add    %al,(%rax)
   108fc:	00 00                	add    %al,(%rax)
   108fe:	00 00                	add    %al,(%rax)
   10900:	10 0b                	adc    %cl,(%rbx)
   10902:	00 00                	add    %al,(%rax)
   10904:	00 00                	add    %al,(%rax)
   10906:	00 00                	add    %al,(%rax)
   10908:	10 0b                	adc    %cl,(%rbx)
   1090a:	00 00                	add    %al,(%rax)
   1090c:	00 00                	add    %al,(%rax)
   1090e:	00 00                	add    %al,(%rax)
   10910:	10 0b                	adc    %cl,(%rbx)
   10912:	00 00                	add    %al,(%rax)
   10914:	00 00                	add    %al,(%rax)
   10916:	00 00                	add    %al,(%rax)
   10918:	10 0b                	adc    %cl,(%rbx)
   1091a:	00 00                	add    %al,(%rax)
   1091c:	00 00                	add    %al,(%rax)
   1091e:	00 00                	add    %al,(%rax)
   10920:	10 0b                	adc    %cl,(%rbx)
   10922:	00 00                	add    %al,(%rax)
   10924:	00 00                	add    %al,(%rax)
   10926:	00 00                	add    %al,(%rax)
   10928:	10 0b                	adc    %cl,(%rbx)
   1092a:	00 00                	add    %al,(%rax)
   1092c:	00 00                	add    %al,(%rax)
   1092e:	00 00                	add    %al,(%rax)
   10930:	10 0b                	adc    %cl,(%rbx)
   10932:	00 00                	add    %al,(%rax)
   10934:	00 00                	add    %al,(%rax)
   10936:	00 00                	add    %al,(%rax)
   10938:	10 0b                	adc    %cl,(%rbx)
   1093a:	00 00                	add    %al,(%rax)
   1093c:	00 00                	add    %al,(%rax)
   1093e:	00 00                	add    %al,(%rax)
   10940:	10 0b                	adc    %cl,(%rbx)
   10942:	00 00                	add    %al,(%rax)
   10944:	00 00                	add    %al,(%rax)
   10946:	00 00                	add    %al,(%rax)
   10948:	10 0b                	adc    %cl,(%rbx)
   1094a:	00 00                	add    %al,(%rax)
   1094c:	00 00                	add    %al,(%rax)
   1094e:	00 00                	add    %al,(%rax)
   10950:	38 09                	cmp    %cl,(%rcx)
   10952:	00 00                	add    %al,(%rax)
   10954:	00 00                	add    %al,(%rax)
   10956:	00 00                	add    %al,(%rax)
   10958:	e0 0a                	loopne 10964 <__intel_avx_rep_memcpy+0x13c4>
   1095a:	00 00                	add    %al,(%rax)
   1095c:	00 00                	add    %al,(%rax)
   1095e:	00 00                	add    %al,(%rax)
   10960:	e0 0a                	loopne 1096c <__intel_avx_rep_memcpy+0x13cc>
   10962:	00 00                	add    %al,(%rax)
   10964:	00 00                	add    %al,(%rax)
   10966:	00 00                	add    %al,(%rax)
   10968:	e0 0a                	loopne 10974 <__intel_avx_rep_memcpy+0x13d4>
   1096a:	00 00                	add    %al,(%rax)
   1096c:	00 00                	add    %al,(%rax)
   1096e:	00 00                	add    %al,(%rax)
   10970:	e0 0a                	loopne 1097c <__intel_avx_rep_memcpy+0x13dc>
   10972:	00 00                	add    %al,(%rax)
   10974:	00 00                	add    %al,(%rax)
   10976:	00 00                	add    %al,(%rax)
   10978:	e0 0a                	loopne 10984 <__intel_avx_rep_memcpy+0x13e4>
   1097a:	00 00                	add    %al,(%rax)
   1097c:	00 00                	add    %al,(%rax)
   1097e:	00 00                	add    %al,(%rax)
   10980:	e0 0a                	loopne 1098c <__intel_avx_rep_memcpy+0x13ec>
   10982:	00 00                	add    %al,(%rax)
   10984:	00 00                	add    %al,(%rax)
   10986:	00 00                	add    %al,(%rax)
   10988:	e0 0a                	loopne 10994 <__intel_avx_rep_memcpy+0x13f4>
   1098a:	00 00                	add    %al,(%rax)
   1098c:	00 00                	add    %al,(%rax)
   1098e:	00 00                	add    %al,(%rax)
   10990:	e0 0a                	loopne 1099c <__intel_avx_rep_memcpy+0x13fc>
   10992:	00 00                	add    %al,(%rax)
   10994:	00 00                	add    %al,(%rax)
   10996:	00 00                	add    %al,(%rax)
   10998:	e0 0a                	loopne 109a4 <__intel_avx_rep_memcpy+0x1404>
   1099a:	00 00                	add    %al,(%rax)
   1099c:	00 00                	add    %al,(%rax)
   1099e:	00 00                	add    %al,(%rax)
   109a0:	e0 0a                	loopne 109ac <__intel_avx_rep_memcpy+0x140c>
   109a2:	00 00                	add    %al,(%rax)
   109a4:	00 00                	add    %al,(%rax)
   109a6:	00 00                	add    %al,(%rax)
   109a8:	e0 0a                	loopne 109b4 <__intel_avx_rep_memcpy+0x1414>
   109aa:	00 00                	add    %al,(%rax)
   109ac:	00 00                	add    %al,(%rax)
   109ae:	00 00                	add    %al,(%rax)
   109b0:	e0 0a                	loopne 109bc <__intel_avx_rep_memcpy+0x141c>
   109b2:	00 00                	add    %al,(%rax)
   109b4:	00 00                	add    %al,(%rax)
   109b6:	00 00                	add    %al,(%rax)
   109b8:	e0 0a                	loopne 109c4 <__intel_avx_rep_memcpy+0x1424>
   109ba:	00 00                	add    %al,(%rax)
   109bc:	00 00                	add    %al,(%rax)
   109be:	00 00                	add    %al,(%rax)
   109c0:	e0 0a                	loopne 109cc <__intel_avx_rep_memcpy+0x142c>
   109c2:	00 00                	add    %al,(%rax)
   109c4:	00 00                	add    %al,(%rax)
   109c6:	00 00                	add    %al,(%rax)
   109c8:	e0 0a                	loopne 109d4 <__intel_avx_rep_memcpy+0x1434>
   109ca:	00 00                	add    %al,(%rax)
   109cc:	00 00                	add    %al,(%rax)
   109ce:	00 00                	add    %al,(%rax)
   109d0:	e0 0a                	loopne 109dc <__intel_avx_rep_memcpy+0x143c>
   109d2:	00 00                	add    %al,(%rax)
   109d4:	00 00                	add    %al,(%rax)
   109d6:	00 00                	add    %al,(%rax)
   109d8:	e0 0a                	loopne 109e4 <__intel_avx_rep_memcpy+0x1444>
   109da:	00 00                	add    %al,(%rax)
   109dc:	00 00                	add    %al,(%rax)
   109de:	00 00                	add    %al,(%rax)
   109e0:	e0 0a                	loopne 109ec <__intel_avx_rep_memcpy+0x144c>
   109e2:	00 00                	add    %al,(%rax)
   109e4:	00 00                	add    %al,(%rax)
   109e6:	00 00                	add    %al,(%rax)
   109e8:	e0 0a                	loopne 109f4 <__intel_avx_rep_memcpy+0x1454>
   109ea:	00 00                	add    %al,(%rax)
   109ec:	00 00                	add    %al,(%rax)
   109ee:	00 00                	add    %al,(%rax)
   109f0:	e0 0a                	loopne 109fc <__intel_avx_rep_memcpy+0x145c>
   109f2:	00 00                	add    %al,(%rax)
   109f4:	00 00                	add    %al,(%rax)
   109f6:	00 00                	add    %al,(%rax)
   109f8:	e0 0a                	loopne 10a04 <__intel_avx_rep_memcpy+0x1464>
   109fa:	00 00                	add    %al,(%rax)
   109fc:	00 00                	add    %al,(%rax)
   109fe:	00 00                	add    %al,(%rax)
   10a00:	e0 0a                	loopne 10a0c <__intel_avx_rep_memcpy+0x146c>
   10a02:	00 00                	add    %al,(%rax)
   10a04:	00 00                	add    %al,(%rax)
   10a06:	00 00                	add    %al,(%rax)
   10a08:	e0 0a                	loopne 10a14 <__intel_avx_rep_memcpy+0x1474>
   10a0a:	00 00                	add    %al,(%rax)
   10a0c:	00 00                	add    %al,(%rax)
   10a0e:	00 00                	add    %al,(%rax)
   10a10:	e0 0a                	loopne 10a1c <__intel_avx_rep_memcpy+0x147c>
   10a12:	00 00                	add    %al,(%rax)
   10a14:	00 00                	add    %al,(%rax)
   10a16:	00 00                	add    %al,(%rax)
   10a18:	e0 0a                	loopne 10a24 <__intel_avx_rep_memcpy+0x1484>
   10a1a:	00 00                	add    %al,(%rax)
   10a1c:	00 00                	add    %al,(%rax)
   10a1e:	00 00                	add    %al,(%rax)
   10a20:	e0 0a                	loopne 10a2c <__intel_avx_rep_memcpy+0x148c>
   10a22:	00 00                	add    %al,(%rax)
   10a24:	00 00                	add    %al,(%rax)
   10a26:	00 00                	add    %al,(%rax)
   10a28:	e0 0a                	loopne 10a34 <__intel_avx_rep_memcpy+0x1494>
   10a2a:	00 00                	add    %al,(%rax)
   10a2c:	00 00                	add    %al,(%rax)
   10a2e:	00 00                	add    %al,(%rax)
   10a30:	e0 0a                	loopne 10a3c <__intel_avx_rep_memcpy+0x149c>
   10a32:	00 00                	add    %al,(%rax)
   10a34:	00 00                	add    %al,(%rax)
   10a36:	00 00                	add    %al,(%rax)
   10a38:	e0 0a                	loopne 10a44 <__intel_avx_rep_memcpy+0x14a4>
   10a3a:	00 00                	add    %al,(%rax)
   10a3c:	00 00                	add    %al,(%rax)
   10a3e:	00 00                	add    %al,(%rax)
   10a40:	e0 0a                	loopne 10a4c <__intel_avx_rep_memcpy+0x14ac>
   10a42:	00 00                	add    %al,(%rax)
   10a44:	00 00                	add    %al,(%rax)
   10a46:	00 00                	add    %al,(%rax)
   10a48:	e0 0a                	loopne 10a54 <__intel_avx_rep_memcpy+0x14b4>
   10a4a:	00 00                	add    %al,(%rax)
   10a4c:	00 00                	add    %al,(%rax)
   10a4e:	00 00                	add    %al,(%rax)
   10a50:	4a 09 00             	rex.WX or %rax,(%rax)
   10a53:	00 00                	add    %al,(%rax)
   10a55:	00 00                	add    %al,(%rax)
   10a57:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10a5d:	00 00                	add    %al,(%rax)
   10a5f:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10a65:	00 00                	add    %al,(%rax)
   10a67:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10a6d:	00 00                	add    %al,(%rax)
   10a6f:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10a75:	00 00                	add    %al,(%rax)
   10a77:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10a7d:	00 00                	add    %al,(%rax)
   10a7f:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10a85:	00 00                	add    %al,(%rax)
   10a87:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10a8d:	00 00                	add    %al,(%rax)
   10a8f:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10a95:	00 00                	add    %al,(%rax)
   10a97:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10a9d:	00 00                	add    %al,(%rax)
   10a9f:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10aa5:	00 00                	add    %al,(%rax)
   10aa7:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10aad:	00 00                	add    %al,(%rax)
   10aaf:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10ab5:	00 00                	add    %al,(%rax)
   10ab7:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10abd:	00 00                	add    %al,(%rax)
   10abf:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10ac5:	00 00                	add    %al,(%rax)
   10ac7:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10acd:	00 00                	add    %al,(%rax)
   10acf:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10ad5:	00 00                	add    %al,(%rax)
   10ad7:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10add:	00 00                	add    %al,(%rax)
   10adf:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10ae5:	00 00                	add    %al,(%rax)
   10ae7:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10aed:	00 00                	add    %al,(%rax)
   10aef:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10af5:	00 00                	add    %al,(%rax)
   10af7:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10afd:	00 00                	add    %al,(%rax)
   10aff:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10b05:	00 00                	add    %al,(%rax)
   10b07:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10b0d:	00 00                	add    %al,(%rax)
   10b0f:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10b15:	00 00                	add    %al,(%rax)
   10b17:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10b1d:	00 00                	add    %al,(%rax)
   10b1f:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10b25:	00 00                	add    %al,(%rax)
   10b27:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10b2d:	00 00                	add    %al,(%rax)
   10b2f:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10b35:	00 00                	add    %al,(%rax)
   10b37:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10b3d:	00 00                	add    %al,(%rax)
   10b3f:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10b45:	00 00                	add    %al,(%rax)
   10b47:	00 a0 0a 00 00 00    	add    %ah,0xa(%rax)
   10b4d:	00 00                	add    %al,(%rax)
   10b4f:	00 5c 09 00          	add    %bl,0x0(%rcx,%rcx,1)
   10b53:	00 00                	add    %al,(%rax)
   10b55:	00 00                	add    %al,(%rax)
   10b57:	00 50 0a             	add    %dl,0xa(%rax)
   10b5a:	00 00                	add    %al,(%rax)
   10b5c:	00 00                	add    %al,(%rax)
   10b5e:	00 00                	add    %al,(%rax)
   10b60:	50                   	push   %rax
   10b61:	0a 00                	or     (%rax),%al
   10b63:	00 00                	add    %al,(%rax)
   10b65:	00 00                	add    %al,(%rax)
   10b67:	00 50 0a             	add    %dl,0xa(%rax)
   10b6a:	00 00                	add    %al,(%rax)
   10b6c:	00 00                	add    %al,(%rax)
   10b6e:	00 00                	add    %al,(%rax)
   10b70:	50                   	push   %rax
   10b71:	0a 00                	or     (%rax),%al
   10b73:	00 00                	add    %al,(%rax)
   10b75:	00 00                	add    %al,(%rax)
   10b77:	00 50 0a             	add    %dl,0xa(%rax)
   10b7a:	00 00                	add    %al,(%rax)
   10b7c:	00 00                	add    %al,(%rax)
   10b7e:	00 00                	add    %al,(%rax)
   10b80:	50                   	push   %rax
   10b81:	0a 00                	or     (%rax),%al
   10b83:	00 00                	add    %al,(%rax)
   10b85:	00 00                	add    %al,(%rax)
   10b87:	00 50 0a             	add    %dl,0xa(%rax)
   10b8a:	00 00                	add    %al,(%rax)
   10b8c:	00 00                	add    %al,(%rax)
   10b8e:	00 00                	add    %al,(%rax)
   10b90:	50                   	push   %rax
   10b91:	0a 00                	or     (%rax),%al
   10b93:	00 00                	add    %al,(%rax)
   10b95:	00 00                	add    %al,(%rax)
   10b97:	00 50 0a             	add    %dl,0xa(%rax)
   10b9a:	00 00                	add    %al,(%rax)
   10b9c:	00 00                	add    %al,(%rax)
   10b9e:	00 00                	add    %al,(%rax)
   10ba0:	50                   	push   %rax
   10ba1:	0a 00                	or     (%rax),%al
   10ba3:	00 00                	add    %al,(%rax)
   10ba5:	00 00                	add    %al,(%rax)
   10ba7:	00 50 0a             	add    %dl,0xa(%rax)
   10baa:	00 00                	add    %al,(%rax)
   10bac:	00 00                	add    %al,(%rax)
   10bae:	00 00                	add    %al,(%rax)
   10bb0:	50                   	push   %rax
   10bb1:	0a 00                	or     (%rax),%al
   10bb3:	00 00                	add    %al,(%rax)
   10bb5:	00 00                	add    %al,(%rax)
   10bb7:	00 50 0a             	add    %dl,0xa(%rax)
   10bba:	00 00                	add    %al,(%rax)
   10bbc:	00 00                	add    %al,(%rax)
   10bbe:	00 00                	add    %al,(%rax)
   10bc0:	50                   	push   %rax
   10bc1:	0a 00                	or     (%rax),%al
   10bc3:	00 00                	add    %al,(%rax)
   10bc5:	00 00                	add    %al,(%rax)
   10bc7:	00 50 0a             	add    %dl,0xa(%rax)
   10bca:	00 00                	add    %al,(%rax)
   10bcc:	00 00                	add    %al,(%rax)
   10bce:	00 00                	add    %al,(%rax)
   10bd0:	50                   	push   %rax
   10bd1:	0a 00                	or     (%rax),%al
   10bd3:	00 00                	add    %al,(%rax)
   10bd5:	00 00                	add    %al,(%rax)
   10bd7:	00 50 0a             	add    %dl,0xa(%rax)
   10bda:	00 00                	add    %al,(%rax)
   10bdc:	00 00                	add    %al,(%rax)
   10bde:	00 00                	add    %al,(%rax)
   10be0:	50                   	push   %rax
   10be1:	0a 00                	or     (%rax),%al
   10be3:	00 00                	add    %al,(%rax)
   10be5:	00 00                	add    %al,(%rax)
   10be7:	00 50 0a             	add    %dl,0xa(%rax)
   10bea:	00 00                	add    %al,(%rax)
   10bec:	00 00                	add    %al,(%rax)
   10bee:	00 00                	add    %al,(%rax)
   10bf0:	50                   	push   %rax
   10bf1:	0a 00                	or     (%rax),%al
   10bf3:	00 00                	add    %al,(%rax)
   10bf5:	00 00                	add    %al,(%rax)
   10bf7:	00 50 0a             	add    %dl,0xa(%rax)
   10bfa:	00 00                	add    %al,(%rax)
   10bfc:	00 00                	add    %al,(%rax)
   10bfe:	00 00                	add    %al,(%rax)
   10c00:	50                   	push   %rax
   10c01:	0a 00                	or     (%rax),%al
   10c03:	00 00                	add    %al,(%rax)
   10c05:	00 00                	add    %al,(%rax)
   10c07:	00 50 0a             	add    %dl,0xa(%rax)
   10c0a:	00 00                	add    %al,(%rax)
   10c0c:	00 00                	add    %al,(%rax)
   10c0e:	00 00                	add    %al,(%rax)
   10c10:	50                   	push   %rax
   10c11:	0a 00                	or     (%rax),%al
   10c13:	00 00                	add    %al,(%rax)
   10c15:	00 00                	add    %al,(%rax)
   10c17:	00 50 0a             	add    %dl,0xa(%rax)
   10c1a:	00 00                	add    %al,(%rax)
   10c1c:	00 00                	add    %al,(%rax)
   10c1e:	00 00                	add    %al,(%rax)
   10c20:	50                   	push   %rax
   10c21:	0a 00                	or     (%rax),%al
   10c23:	00 00                	add    %al,(%rax)
   10c25:	00 00                	add    %al,(%rax)
   10c27:	00 50 0a             	add    %dl,0xa(%rax)
   10c2a:	00 00                	add    %al,(%rax)
   10c2c:	00 00                	add    %al,(%rax)
   10c2e:	00 00                	add    %al,(%rax)
   10c30:	50                   	push   %rax
   10c31:	0a 00                	or     (%rax),%al
   10c33:	00 00                	add    %al,(%rax)
   10c35:	00 00                	add    %al,(%rax)
   10c37:	00 50 0a             	add    %dl,0xa(%rax)
   10c3a:	00 00                	add    %al,(%rax)
   10c3c:	00 00                	add    %al,(%rax)
   10c3e:	00 00                	add    %al,(%rax)
   10c40:	50                   	push   %rax
   10c41:	0a 00                	or     (%rax),%al
   10c43:	00 00                	add    %al,(%rax)
   10c45:	00 00                	add    %al,(%rax)
   10c47:	00 50 0a             	add    %dl,0xa(%rax)
   10c4a:	00 00                	add    %al,(%rax)
   10c4c:	00 00                	add    %al,(%rax)
   10c4e:	00 00                	add    %al,(%rax)
   10c50:	6e                   	outsb  %ds:(%rsi),(%dx)
   10c51:	09 00                	or     %eax,(%rax)
   10c53:	00 00                	add    %al,(%rax)
   10c55:	00 00                	add    %al,(%rax)
   10c57:	00 f0                	add    %dh,%al
   10c59:	09 00                	or     %eax,(%rax)
   10c5b:	00 00                	add    %al,(%rax)
   10c5d:	00 00                	add    %al,(%rax)
   10c5f:	00 f0                	add    %dh,%al
   10c61:	09 00                	or     %eax,(%rax)
   10c63:	00 00                	add    %al,(%rax)
   10c65:	00 00                	add    %al,(%rax)
   10c67:	00 f0                	add    %dh,%al
   10c69:	09 00                	or     %eax,(%rax)
   10c6b:	00 00                	add    %al,(%rax)
   10c6d:	00 00                	add    %al,(%rax)
   10c6f:	00 f0                	add    %dh,%al
   10c71:	09 00                	or     %eax,(%rax)
   10c73:	00 00                	add    %al,(%rax)
   10c75:	00 00                	add    %al,(%rax)
   10c77:	00 f0                	add    %dh,%al
   10c79:	09 00                	or     %eax,(%rax)
   10c7b:	00 00                	add    %al,(%rax)
   10c7d:	00 00                	add    %al,(%rax)
   10c7f:	00 f0                	add    %dh,%al
   10c81:	09 00                	or     %eax,(%rax)
   10c83:	00 00                	add    %al,(%rax)
   10c85:	00 00                	add    %al,(%rax)
   10c87:	00 f0                	add    %dh,%al
   10c89:	09 00                	or     %eax,(%rax)
   10c8b:	00 00                	add    %al,(%rax)
   10c8d:	00 00                	add    %al,(%rax)
   10c8f:	00 f0                	add    %dh,%al
   10c91:	09 00                	or     %eax,(%rax)
   10c93:	00 00                	add    %al,(%rax)
   10c95:	00 00                	add    %al,(%rax)
   10c97:	00 f0                	add    %dh,%al
   10c99:	09 00                	or     %eax,(%rax)
   10c9b:	00 00                	add    %al,(%rax)
   10c9d:	00 00                	add    %al,(%rax)
   10c9f:	00 f0                	add    %dh,%al
   10ca1:	09 00                	or     %eax,(%rax)
   10ca3:	00 00                	add    %al,(%rax)
   10ca5:	00 00                	add    %al,(%rax)
   10ca7:	00 f0                	add    %dh,%al
   10ca9:	09 00                	or     %eax,(%rax)
   10cab:	00 00                	add    %al,(%rax)
   10cad:	00 00                	add    %al,(%rax)
   10caf:	00 f0                	add    %dh,%al
   10cb1:	09 00                	or     %eax,(%rax)
   10cb3:	00 00                	add    %al,(%rax)
   10cb5:	00 00                	add    %al,(%rax)
   10cb7:	00 f0                	add    %dh,%al
   10cb9:	09 00                	or     %eax,(%rax)
   10cbb:	00 00                	add    %al,(%rax)
   10cbd:	00 00                	add    %al,(%rax)
   10cbf:	00 f0                	add    %dh,%al
   10cc1:	09 00                	or     %eax,(%rax)
   10cc3:	00 00                	add    %al,(%rax)
   10cc5:	00 00                	add    %al,(%rax)
   10cc7:	00 f0                	add    %dh,%al
   10cc9:	09 00                	or     %eax,(%rax)
   10ccb:	00 00                	add    %al,(%rax)
   10ccd:	00 00                	add    %al,(%rax)
   10ccf:	00 f0                	add    %dh,%al
   10cd1:	09 00                	or     %eax,(%rax)
   10cd3:	00 00                	add    %al,(%rax)
   10cd5:	00 00                	add    %al,(%rax)
   10cd7:	00 f0                	add    %dh,%al
   10cd9:	09 00                	or     %eax,(%rax)
   10cdb:	00 00                	add    %al,(%rax)
   10cdd:	00 00                	add    %al,(%rax)
   10cdf:	00 f0                	add    %dh,%al
   10ce1:	09 00                	or     %eax,(%rax)
   10ce3:	00 00                	add    %al,(%rax)
   10ce5:	00 00                	add    %al,(%rax)
   10ce7:	00 f0                	add    %dh,%al
   10ce9:	09 00                	or     %eax,(%rax)
   10ceb:	00 00                	add    %al,(%rax)
   10ced:	00 00                	add    %al,(%rax)
   10cef:	00 f0                	add    %dh,%al
   10cf1:	09 00                	or     %eax,(%rax)
   10cf3:	00 00                	add    %al,(%rax)
   10cf5:	00 00                	add    %al,(%rax)
   10cf7:	00 f0                	add    %dh,%al
   10cf9:	09 00                	or     %eax,(%rax)
   10cfb:	00 00                	add    %al,(%rax)
   10cfd:	00 00                	add    %al,(%rax)
   10cff:	00 f0                	add    %dh,%al
   10d01:	09 00                	or     %eax,(%rax)
   10d03:	00 00                	add    %al,(%rax)
   10d05:	00 00                	add    %al,(%rax)
   10d07:	00 f0                	add    %dh,%al
   10d09:	09 00                	or     %eax,(%rax)
   10d0b:	00 00                	add    %al,(%rax)
   10d0d:	00 00                	add    %al,(%rax)
   10d0f:	00 f0                	add    %dh,%al
   10d11:	09 00                	or     %eax,(%rax)
   10d13:	00 00                	add    %al,(%rax)
   10d15:	00 00                	add    %al,(%rax)
   10d17:	00 f0                	add    %dh,%al
   10d19:	09 00                	or     %eax,(%rax)
   10d1b:	00 00                	add    %al,(%rax)
   10d1d:	00 00                	add    %al,(%rax)
   10d1f:	00 f0                	add    %dh,%al
   10d21:	09 00                	or     %eax,(%rax)
   10d23:	00 00                	add    %al,(%rax)
   10d25:	00 00                	add    %al,(%rax)
   10d27:	00 f0                	add    %dh,%al
   10d29:	09 00                	or     %eax,(%rax)
   10d2b:	00 00                	add    %al,(%rax)
   10d2d:	00 00                	add    %al,(%rax)
   10d2f:	00 f0                	add    %dh,%al
   10d31:	09 00                	or     %eax,(%rax)
   10d33:	00 00                	add    %al,(%rax)
   10d35:	00 00                	add    %al,(%rax)
   10d37:	00 f0                	add    %dh,%al
   10d39:	09 00                	or     %eax,(%rax)
   10d3b:	00 00                	add    %al,(%rax)
   10d3d:	00 00                	add    %al,(%rax)
   10d3f:	00 f0                	add    %dh,%al
   10d41:	09 00                	or     %eax,(%rax)
   10d43:	00 00                	add    %al,(%rax)
   10d45:	00 00                	add    %al,(%rax)
   10d47:	00 f0                	add    %dh,%al
   10d49:	09 00                	or     %eax,(%rax)
   10d4b:	00 00                	add    %al,(%rax)
   10d4d:	00 00                	add    %al,(%rax)
   10d4f:	00 80 09 00 00 00    	add    %al,0x9(%rax)
   10d55:	00 00                	add    %al,(%rax)
   10d57:	00 0f                	add    %cl,(%rdi)
   10d59:	1f                   	(bad)  
   10d5a:	84 00                	test   %al,(%rax)
   10d5c:	00 00                	add    %al,(%rax)
   10d5e:	00 00                	add    %al,(%rax)
   10d60:	c5 f8 77             	vzeroupper 
   10d63:	41 5c                	pop    %r12
   10d65:	c3                   	retq   
   10d66:	0f 1f 00             	nopl   (%rax)
   10d69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010d70 <__intel_avx_rep_memset>:
   10d70:	f3 0f 1e fa          	repz nop %edx
   10d74:	49 89 f8             	mov    %rdi,%r8
   10d77:	49 89 d3             	mov    %rdx,%r11
   10d7a:	4d 89 c2             	mov    %r8,%r10
   10d7d:	48 8d 15 08 1b 21 00 	lea    0x211b08(%rip),%rdx        # 22288c <__libirc_data_cache_size>
   10d84:	48 b8 01 01 01 01 01 	movabs $0x101010101010101,%rax
   10d8b:	01 01 01 
   10d8e:	4c 0f b6 ce          	movzbq %sil,%r9
   10d92:	4c 0f af c8          	imul   %rax,%r9
   10d96:	48 8d 35 f3 0b 00 00 	lea    0xbf3(%rip),%rsi        # 11990 <__intel_avx_rep_memset+0xc20>
   10d9d:	c4 c1 f9 6e c1       	vmovq  %r9,%xmm0
   10da2:	c4 e2 7d 58 c0       	vpbroadcastd %xmm0,%ymm0
   10da7:	49 81 fb 80 00 00 00 	cmp    $0x80,%r11
   10dae:	77 10                	ja     10dc0 <__intel_avx_rep_memset+0x50>
   10db0:	4c 89 d7             	mov    %r10,%rdi
   10db3:	49 03 fb             	add    %r11,%rdi
   10db6:	4a 2b 34 de          	sub    (%rsi,%r11,8),%rsi
   10dba:	3e ff e6             	ds jmpq *%rsi
   10dbd:	0f 1f 00             	nopl   (%rax)
   10dc0:	48 8d 35 c9 02 00 00 	lea    0x2c9(%rip),%rsi        # 11090 <__intel_avx_rep_memset+0x320>
   10dc7:	4c 89 d1             	mov    %r10,%rcx
   10dca:	48 83 e1 1f          	and    $0x1f,%rcx
   10dce:	74 23                	je     10df3 <__intel_avx_rep_memset+0x83>
   10dd0:	48 f7 d9             	neg    %rcx
   10dd3:	48 83 c1 20          	add    $0x20,%rcx
   10dd7:	4c 2b d9             	sub    %rcx,%r11
   10dda:	4c 89 d7             	mov    %r10,%rdi
   10ddd:	48 03 f9             	add    %rcx,%rdi
   10de0:	48 2b 34 ce          	sub    (%rsi,%rcx,8),%rsi
   10de4:	3e ff e6             	ds jmpq *%rsi
   10de7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   10dee:	00 00 
   10df0:	4c 03 d1             	add    %rcx,%r10
   10df3:	49 81 fb 00 01 00 00 	cmp    $0x100,%r11
   10dfa:	0f 8c 10 01 00 00    	jl     10f10 <__intel_avx_rep_memset+0x1a0>
   10e00:	8b 0a                	mov    (%rdx),%ecx
   10e02:	48 89 cf             	mov    %rcx,%rdi
   10e05:	48 c1 e9 04          	shr    $0x4,%rcx
   10e09:	48 2b f9             	sub    %rcx,%rdi
   10e0c:	4c 3b df             	cmp    %rdi,%r11
   10e0f:	73 4f                	jae    10e60 <__intel_avx_rep_memset+0xf0>
   10e11:	c4 c1 7d 7f 02       	vmovdqa %ymm0,(%r10)
   10e16:	c4 c1 7d 7f 42 20    	vmovdqa %ymm0,0x20(%r10)
   10e1c:	c4 c1 7d 7f 42 40    	vmovdqa %ymm0,0x40(%r10)
   10e22:	c4 c1 7d 7f 42 60    	vmovdqa %ymm0,0x60(%r10)
   10e28:	49 81 c2 00 01 00 00 	add    $0x100,%r10
   10e2f:	49 81 eb 00 01 00 00 	sub    $0x100,%r11
   10e36:	c4 c1 7d 7f 42 80    	vmovdqa %ymm0,-0x80(%r10)
   10e3c:	c4 c1 7d 7f 42 a0    	vmovdqa %ymm0,-0x60(%r10)
   10e42:	c4 c1 7d 7f 42 c0    	vmovdqa %ymm0,-0x40(%r10)
   10e48:	c4 c1 7d 7f 42 e0    	vmovdqa %ymm0,-0x20(%r10)
   10e4e:	49 81 fb 00 01 00 00 	cmp    $0x100,%r11
   10e55:	7d ba                	jge    10e11 <__intel_avx_rep_memset+0xa1>
   10e57:	e9 b4 00 00 00       	jmpq   10f10 <__intel_avx_rep_memset+0x1a0>
   10e5c:	0f 1f 40 00          	nopl   0x0(%rax)
   10e60:	4c 89 d7             	mov    %r10,%rdi
   10e63:	4c 89 c8             	mov    %r9,%rax
   10e66:	4c 89 d9             	mov    %r11,%rcx
   10e69:	fc                   	cld    
   10e6a:	f3 aa                	rep stos %al,%es:(%rdi)
   10e6c:	e9 2f 0f 00 00       	jmpq   11da0 <__intel_avx_rep_memset+0x1030>
   10e71:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10e78:	00 
   10e79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10e80:	45 88 0a             	mov    %r9b,(%r10)
   10e83:	e9 68 ff ff ff       	jmpq   10df0 <__intel_avx_rep_memset+0x80>
   10e88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10e8f:	00 
   10e90:	66 45 89 0a          	mov    %r9w,(%r10)
   10e94:	e9 57 ff ff ff       	jmpq   10df0 <__intel_avx_rep_memset+0x80>
   10e99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10ea0:	66 45 89 0a          	mov    %r9w,(%r10)
   10ea4:	45 88 4a 02          	mov    %r9b,0x2(%r10)
   10ea8:	e9 43 ff ff ff       	jmpq   10df0 <__intel_avx_rep_memset+0x80>
   10ead:	0f 1f 00             	nopl   (%rax)
   10eb0:	45 89 0a             	mov    %r9d,(%r10)
   10eb3:	e9 38 ff ff ff       	jmpq   10df0 <__intel_avx_rep_memset+0x80>
   10eb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10ebf:	00 
   10ec0:	45 89 0a             	mov    %r9d,(%r10)
   10ec3:	44 89 4f fc          	mov    %r9d,-0x4(%rdi)
   10ec7:	e9 24 ff ff ff       	jmpq   10df0 <__intel_avx_rep_memset+0x80>
   10ecc:	0f 1f 40 00          	nopl   0x0(%rax)
   10ed0:	4d 89 0a             	mov    %r9,(%r10)
   10ed3:	e9 18 ff ff ff       	jmpq   10df0 <__intel_avx_rep_memset+0x80>
   10ed8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10edf:	00 
   10ee0:	4d 89 0a             	mov    %r9,(%r10)
   10ee3:	4c 89 4f f8          	mov    %r9,-0x8(%rdi)
   10ee7:	e9 04 ff ff ff       	jmpq   10df0 <__intel_avx_rep_memset+0x80>
   10eec:	0f 1f 40 00          	nopl   0x0(%rax)
   10ef0:	c4 c1 78 11 02       	vmovups %xmm0,(%r10)
   10ef5:	e9 f6 fe ff ff       	jmpq   10df0 <__intel_avx_rep_memset+0x80>
   10efa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10f00:	c4 c1 78 11 02       	vmovups %xmm0,(%r10)
   10f05:	c5 f8 11 47 f0       	vmovups %xmm0,-0x10(%rdi)
   10f0a:	e9 e1 fe ff ff       	jmpq   10df0 <__intel_avx_rep_memset+0x80>
   10f0f:	90                   	nop
   10f10:	4d 03 d3             	add    %r11,%r10
   10f13:	4c 89 d7             	mov    %r10,%rdi
   10f16:	49 83 e2 e0          	and    $0xffffffffffffffe0,%r10
   10f1a:	48 8d 35 6f 02 00 00 	lea    0x26f(%rip),%rsi        # 11190 <__intel_avx_rep_memset+0x420>
   10f21:	4a 2b 34 de          	sub    (%rsi,%r11,8),%rsi
   10f25:	3e ff e6             	ds jmpq *%rsi
   10f28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10f2f:	00 
   10f30:	c4 c1 7c 29 82 20 ff 	vmovaps %ymm0,-0xe0(%r10)
   10f37:	ff ff 
   10f39:	c4 c1 7c 29 82 40 ff 	vmovaps %ymm0,-0xc0(%r10)
   10f40:	ff ff 
   10f42:	c4 c1 7c 29 82 60 ff 	vmovaps %ymm0,-0xa0(%r10)
   10f49:	ff ff 
   10f4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10f50:	c4 c1 7c 29 42 80    	vmovaps %ymm0,-0x80(%r10)
   10f56:	c4 c1 7c 29 42 a0    	vmovaps %ymm0,-0x60(%r10)
   10f5c:	c4 c1 7c 29 42 c0    	vmovaps %ymm0,-0x40(%r10)
   10f62:	c4 c1 7c 29 42 e0    	vmovaps %ymm0,-0x20(%r10)
   10f68:	49 89 fb             	mov    %rdi,%r11
   10f6b:	49 83 e3 1f          	and    $0x1f,%r11
   10f6f:	48 8d 35 1a 02 00 00 	lea    0x21a(%rip),%rsi        # 11190 <__intel_avx_rep_memset+0x420>
   10f76:	4a 2b 34 de          	sub    (%rsi,%r11,8),%rsi
   10f7a:	3e ff e6             	ds jmpq *%rsi
   10f7d:	0f 1f 00             	nopl   (%rax)
   10f80:	45 88 0a             	mov    %r9b,(%r10)
   10f83:	e9 18 0e 00 00       	jmpq   11da0 <__intel_avx_rep_memset+0x1030>
   10f88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10f8f:	00 
   10f90:	e9 0b 0e 00 00       	jmpq   11da0 <__intel_avx_rep_memset+0x1030>
   10f95:	0f 1f 40 00          	nopl   0x0(%rax)
   10f99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10fa0:	66 45 89 0a          	mov    %r9w,(%r10)
   10fa4:	e9 f7 0d 00 00       	jmpq   11da0 <__intel_avx_rep_memset+0x1030>
   10fa9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10fb0:	66 45 89 0a          	mov    %r9w,(%r10)
   10fb4:	45 88 4a 02          	mov    %r9b,0x2(%r10)
   10fb8:	e9 e3 0d 00 00       	jmpq   11da0 <__intel_avx_rep_memset+0x1030>
   10fbd:	0f 1f 00             	nopl   (%rax)
   10fc0:	45 89 0a             	mov    %r9d,(%r10)
   10fc3:	e9 d8 0d 00 00       	jmpq   11da0 <__intel_avx_rep_memset+0x1030>
   10fc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10fcf:	00 
   10fd0:	45 89 0a             	mov    %r9d,(%r10)
   10fd3:	44 89 4f fc          	mov    %r9d,-0x4(%rdi)
   10fd7:	e9 c4 0d 00 00       	jmpq   11da0 <__intel_avx_rep_memset+0x1030>
   10fdc:	0f 1f 40 00          	nopl   0x0(%rax)
   10fe0:	4d 89 0a             	mov    %r9,(%r10)
   10fe3:	e9 b8 0d 00 00       	jmpq   11da0 <__intel_avx_rep_memset+0x1030>
   10fe8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10fef:	00 
   10ff0:	4d 89 0a             	mov    %r9,(%r10)
   10ff3:	4c 89 4f f8          	mov    %r9,-0x8(%rdi)
   10ff7:	e9 a4 0d 00 00       	jmpq   11da0 <__intel_avx_rep_memset+0x1030>
   10ffc:	0f 1f 40 00          	nopl   0x0(%rax)
   11000:	c4 c1 78 11 02       	vmovups %xmm0,(%r10)
   11005:	e9 96 0d 00 00       	jmpq   11da0 <__intel_avx_rep_memset+0x1030>
   1100a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11010:	c4 c1 78 11 02       	vmovups %xmm0,(%r10)
   11015:	c5 f8 11 47 f0       	vmovups %xmm0,-0x10(%rdi)
   1101a:	e9 81 0d 00 00       	jmpq   11da0 <__intel_avx_rep_memset+0x1030>
   1101f:	90                   	nop
   11020:	c4 c1 7c 11 02       	vmovups %ymm0,(%r10)
   11025:	e9 76 0d 00 00       	jmpq   11da0 <__intel_avx_rep_memset+0x1030>
   1102a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11030:	c4 c1 7c 11 02       	vmovups %ymm0,(%r10)
   11035:	c5 fc 11 47 e0       	vmovups %ymm0,-0x20(%rdi)
   1103a:	e9 61 0d 00 00       	jmpq   11da0 <__intel_avx_rep_memset+0x1030>
   1103f:	90                   	nop
   11040:	c4 c1 7c 11 02       	vmovups %ymm0,(%r10)
   11045:	c4 c1 7c 11 42 20    	vmovups %ymm0,0x20(%r10)
   1104b:	e9 50 0d 00 00       	jmpq   11da0 <__intel_avx_rep_memset+0x1030>
   11050:	c4 c1 7c 11 02       	vmovups %ymm0,(%r10)
   11055:	c4 c1 7c 11 42 20    	vmovups %ymm0,0x20(%r10)
   1105b:	c5 fc 11 47 e0       	vmovups %ymm0,-0x20(%rdi)
   11060:	c5 fc 11 47 c0       	vmovups %ymm0,-0x40(%rdi)
   11065:	e9 36 0d 00 00       	jmpq   11da0 <__intel_avx_rep_memset+0x1030>
   1106a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11070:	c4 c1 7c 11 02       	vmovups %ymm0,(%r10)
   11075:	c4 c1 7c 11 42 20    	vmovups %ymm0,0x20(%r10)
   1107b:	c4 c1 7c 11 42 40    	vmovups %ymm0,0x40(%r10)
   11081:	c4 c1 7c 11 42 60    	vmovups %ymm0,0x60(%r10)
   11087:	e9 14 0d 00 00       	jmpq   11da0 <__intel_avx_rep_memset+0x1030>
   1108c:	0f 1f 40 00          	nopl   0x0(%rax)
   11090:	0d 02 00 00 00       	or     $0x2,%eax
   11095:	00 00                	add    %al,(%rax)
   11097:	00 10                	add    %dl,(%rax)
   11099:	02 00                	add    (%rax),%al
   1109b:	00 00                	add    %al,(%rax)
   1109d:	00 00                	add    %al,(%rax)
   1109f:	00 00                	add    %al,(%rax)
   110a1:	02 00                	add    (%rax),%al
   110a3:	00 00                	add    %al,(%rax)
   110a5:	00 00                	add    %al,(%rax)
   110a7:	00 f0                	add    %dh,%al
   110a9:	01 00                	add    %eax,(%rax)
   110ab:	00 00                	add    %al,(%rax)
   110ad:	00 00                	add    %al,(%rax)
   110af:	00 e0                	add    %ah,%al
   110b1:	01 00                	add    %eax,(%rax)
   110b3:	00 00                	add    %al,(%rax)
   110b5:	00 00                	add    %al,(%rax)
   110b7:	00 d0                	add    %dl,%al
   110b9:	01 00                	add    %eax,(%rax)
   110bb:	00 00                	add    %al,(%rax)
   110bd:	00 00                	add    %al,(%rax)
   110bf:	00 d0                	add    %dl,%al
   110c1:	01 00                	add    %eax,(%rax)
   110c3:	00 00                	add    %al,(%rax)
   110c5:	00 00                	add    %al,(%rax)
   110c7:	00 d0                	add    %dl,%al
   110c9:	01 00                	add    %eax,(%rax)
   110cb:	00 00                	add    %al,(%rax)
   110cd:	00 00                	add    %al,(%rax)
   110cf:	00 c0                	add    %al,%al
   110d1:	01 00                	add    %eax,(%rax)
   110d3:	00 00                	add    %al,(%rax)
   110d5:	00 00                	add    %al,(%rax)
   110d7:	00 b0 01 00 00 00    	add    %dh,0x1(%rax)
   110dd:	00 00                	add    %al,(%rax)
   110df:	00 b0 01 00 00 00    	add    %dh,0x1(%rax)
   110e5:	00 00                	add    %al,(%rax)
   110e7:	00 b0 01 00 00 00    	add    %dh,0x1(%rax)
   110ed:	00 00                	add    %al,(%rax)
   110ef:	00 b0 01 00 00 00    	add    %dh,0x1(%rax)
   110f5:	00 00                	add    %al,(%rax)
   110f7:	00 b0 01 00 00 00    	add    %dh,0x1(%rax)
   110fd:	00 00                	add    %al,(%rax)
   110ff:	00 b0 01 00 00 00    	add    %dh,0x1(%rax)
   11105:	00 00                	add    %al,(%rax)
   11107:	00 b0 01 00 00 00    	add    %dh,0x1(%rax)
   1110d:	00 00                	add    %al,(%rax)
   1110f:	00 a0 01 00 00 00    	add    %ah,0x1(%rax)
   11115:	00 00                	add    %al,(%rax)
   11117:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
   1111d:	00 00                	add    %al,(%rax)
   1111f:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
   11125:	00 00                	add    %al,(%rax)
   11127:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
   1112d:	00 00                	add    %al,(%rax)
   1112f:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
   11135:	00 00                	add    %al,(%rax)
   11137:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
   1113d:	00 00                	add    %al,(%rax)
   1113f:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
   11145:	00 00                	add    %al,(%rax)
   11147:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
   1114d:	00 00                	add    %al,(%rax)
   1114f:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
   11155:	00 00                	add    %al,(%rax)
   11157:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
   1115d:	00 00                	add    %al,(%rax)
   1115f:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
   11165:	00 00                	add    %al,(%rax)
   11167:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
   1116d:	00 00                	add    %al,(%rax)
   1116f:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
   11175:	00 00                	add    %al,(%rax)
   11177:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
   1117d:	00 00                	add    %al,(%rax)
   1117f:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
   11185:	00 00                	add    %al,(%rax)
   11187:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
   1118d:	00 00                	add    %al,(%rax)
   1118f:	00 00                	add    %al,(%rax)
   11191:	02 00                	add    (%rax),%al
   11193:	00 00                	add    %al,(%rax)
   11195:	00 00                	add    %al,(%rax)
   11197:	00 10                	add    %dl,(%rax)
   11199:	02 00                	add    (%rax),%al
   1119b:	00 00                	add    %al,(%rax)
   1119d:	00 00                	add    %al,(%rax)
   1119f:	00 f0                	add    %dh,%al
   111a1:	01 00                	add    %eax,(%rax)
   111a3:	00 00                	add    %al,(%rax)
   111a5:	00 00                	add    %al,(%rax)
   111a7:	00 e0                	add    %ah,%al
   111a9:	01 00                	add    %eax,(%rax)
   111ab:	00 00                	add    %al,(%rax)
   111ad:	00 00                	add    %al,(%rax)
   111af:	00 d0                	add    %dl,%al
   111b1:	01 00                	add    %eax,(%rax)
   111b3:	00 00                	add    %al,(%rax)
   111b5:	00 00                	add    %al,(%rax)
   111b7:	00 c0                	add    %al,%al
   111b9:	01 00                	add    %eax,(%rax)
   111bb:	00 00                	add    %al,(%rax)
   111bd:	00 00                	add    %al,(%rax)
   111bf:	00 c0                	add    %al,%al
   111c1:	01 00                	add    %eax,(%rax)
   111c3:	00 00                	add    %al,(%rax)
   111c5:	00 00                	add    %al,(%rax)
   111c7:	00 c0                	add    %al,%al
   111c9:	01 00                	add    %eax,(%rax)
   111cb:	00 00                	add    %al,(%rax)
   111cd:	00 00                	add    %al,(%rax)
   111cf:	00 b0 01 00 00 00    	add    %dh,0x1(%rax)
   111d5:	00 00                	add    %al,(%rax)
   111d7:	00 a0 01 00 00 00    	add    %ah,0x1(%rax)
   111dd:	00 00                	add    %al,(%rax)
   111df:	00 a0 01 00 00 00    	add    %ah,0x1(%rax)
   111e5:	00 00                	add    %al,(%rax)
   111e7:	00 a0 01 00 00 00    	add    %ah,0x1(%rax)
   111ed:	00 00                	add    %al,(%rax)
   111ef:	00 a0 01 00 00 00    	add    %ah,0x1(%rax)
   111f5:	00 00                	add    %al,(%rax)
   111f7:	00 a0 01 00 00 00    	add    %ah,0x1(%rax)
   111fd:	00 00                	add    %al,(%rax)
   111ff:	00 a0 01 00 00 00    	add    %ah,0x1(%rax)
   11205:	00 00                	add    %al,(%rax)
   11207:	00 a0 01 00 00 00    	add    %ah,0x1(%rax)
   1120d:	00 00                	add    %al,(%rax)
   1120f:	00 90 01 00 00 00    	add    %dl,0x1(%rax)
   11215:	00 00                	add    %al,(%rax)
   11217:	00 80 01 00 00 00    	add    %al,0x1(%rax)
   1121d:	00 00                	add    %al,(%rax)
   1121f:	00 80 01 00 00 00    	add    %al,0x1(%rax)
   11225:	00 00                	add    %al,(%rax)
   11227:	00 80 01 00 00 00    	add    %al,0x1(%rax)
   1122d:	00 00                	add    %al,(%rax)
   1122f:	00 80 01 00 00 00    	add    %al,0x1(%rax)
   11235:	00 00                	add    %al,(%rax)
   11237:	00 80 01 00 00 00    	add    %al,0x1(%rax)
   1123d:	00 00                	add    %al,(%rax)
   1123f:	00 80 01 00 00 00    	add    %al,0x1(%rax)
   11245:	00 00                	add    %al,(%rax)
   11247:	00 80 01 00 00 00    	add    %al,0x1(%rax)
   1124d:	00 00                	add    %al,(%rax)
   1124f:	00 80 01 00 00 00    	add    %al,0x1(%rax)
   11255:	00 00                	add    %al,(%rax)
   11257:	00 80 01 00 00 00    	add    %al,0x1(%rax)
   1125d:	00 00                	add    %al,(%rax)
   1125f:	00 80 01 00 00 00    	add    %al,0x1(%rax)
   11265:	00 00                	add    %al,(%rax)
   11267:	00 80 01 00 00 00    	add    %al,0x1(%rax)
   1126d:	00 00                	add    %al,(%rax)
   1126f:	00 80 01 00 00 00    	add    %al,0x1(%rax)
   11275:	00 00                	add    %al,(%rax)
   11277:	00 80 01 00 00 00    	add    %al,0x1(%rax)
   1127d:	00 00                	add    %al,(%rax)
   1127f:	00 80 01 00 00 00    	add    %al,0x1(%rax)
   11285:	00 00                	add    %al,(%rax)
   11287:	00 80 01 00 00 00    	add    %al,0x1(%rax)
   1128d:	00 00                	add    %al,(%rax)
   1128f:	00 2e                	add    %ch,(%rsi)
   11291:	02 00                	add    (%rax),%al
   11293:	00 00                	add    %al,(%rax)
   11295:	00 00                	add    %al,(%rax)
   11297:	00 2e                	add    %ch,(%rsi)
   11299:	02 00                	add    (%rax),%al
   1129b:	00 00                	add    %al,(%rax)
   1129d:	00 00                	add    %al,(%rax)
   1129f:	00 2e                	add    %ch,(%rsi)
   112a1:	02 00                	add    (%rax),%al
   112a3:	00 00                	add    %al,(%rax)
   112a5:	00 00                	add    %al,(%rax)
   112a7:	00 2e                	add    %ch,(%rsi)
   112a9:	02 00                	add    (%rax),%al
   112ab:	00 00                	add    %al,(%rax)
   112ad:	00 00                	add    %al,(%rax)
   112af:	00 2e                	add    %ch,(%rsi)
   112b1:	02 00                	add    (%rax),%al
   112b3:	00 00                	add    %al,(%rax)
   112b5:	00 00                	add    %al,(%rax)
   112b7:	00 2e                	add    %ch,(%rsi)
   112b9:	02 00                	add    (%rax),%al
   112bb:	00 00                	add    %al,(%rax)
   112bd:	00 00                	add    %al,(%rax)
   112bf:	00 2e                	add    %ch,(%rsi)
   112c1:	02 00                	add    (%rax),%al
   112c3:	00 00                	add    %al,(%rax)
   112c5:	00 00                	add    %al,(%rax)
   112c7:	00 2e                	add    %ch,(%rsi)
   112c9:	02 00                	add    (%rax),%al
   112cb:	00 00                	add    %al,(%rax)
   112cd:	00 00                	add    %al,(%rax)
   112cf:	00 2e                	add    %ch,(%rsi)
   112d1:	02 00                	add    (%rax),%al
   112d3:	00 00                	add    %al,(%rax)
   112d5:	00 00                	add    %al,(%rax)
   112d7:	00 2e                	add    %ch,(%rsi)
   112d9:	02 00                	add    (%rax),%al
   112db:	00 00                	add    %al,(%rax)
   112dd:	00 00                	add    %al,(%rax)
   112df:	00 2e                	add    %ch,(%rsi)
   112e1:	02 00                	add    (%rax),%al
   112e3:	00 00                	add    %al,(%rax)
   112e5:	00 00                	add    %al,(%rax)
   112e7:	00 2e                	add    %ch,(%rsi)
   112e9:	02 00                	add    (%rax),%al
   112eb:	00 00                	add    %al,(%rax)
   112ed:	00 00                	add    %al,(%rax)
   112ef:	00 2e                	add    %ch,(%rsi)
   112f1:	02 00                	add    (%rax),%al
   112f3:	00 00                	add    %al,(%rax)
   112f5:	00 00                	add    %al,(%rax)
   112f7:	00 2e                	add    %ch,(%rsi)
   112f9:	02 00                	add    (%rax),%al
   112fb:	00 00                	add    %al,(%rax)
   112fd:	00 00                	add    %al,(%rax)
   112ff:	00 2e                	add    %ch,(%rsi)
   11301:	02 00                	add    (%rax),%al
   11303:	00 00                	add    %al,(%rax)
   11305:	00 00                	add    %al,(%rax)
   11307:	00 2e                	add    %ch,(%rsi)
   11309:	02 00                	add    (%rax),%al
   1130b:	00 00                	add    %al,(%rax)
   1130d:	00 00                	add    %al,(%rax)
   1130f:	00 2e                	add    %ch,(%rsi)
   11311:	02 00                	add    (%rax),%al
   11313:	00 00                	add    %al,(%rax)
   11315:	00 00                	add    %al,(%rax)
   11317:	00 2e                	add    %ch,(%rsi)
   11319:	02 00                	add    (%rax),%al
   1131b:	00 00                	add    %al,(%rax)
   1131d:	00 00                	add    %al,(%rax)
   1131f:	00 2e                	add    %ch,(%rsi)
   11321:	02 00                	add    (%rax),%al
   11323:	00 00                	add    %al,(%rax)
   11325:	00 00                	add    %al,(%rax)
   11327:	00 2e                	add    %ch,(%rsi)
   11329:	02 00                	add    (%rax),%al
   1132b:	00 00                	add    %al,(%rax)
   1132d:	00 00                	add    %al,(%rax)
   1132f:	00 2e                	add    %ch,(%rsi)
   11331:	02 00                	add    (%rax),%al
   11333:	00 00                	add    %al,(%rax)
   11335:	00 00                	add    %al,(%rax)
   11337:	00 2e                	add    %ch,(%rsi)
   11339:	02 00                	add    (%rax),%al
   1133b:	00 00                	add    %al,(%rax)
   1133d:	00 00                	add    %al,(%rax)
   1133f:	00 2e                	add    %ch,(%rsi)
   11341:	02 00                	add    (%rax),%al
   11343:	00 00                	add    %al,(%rax)
   11345:	00 00                	add    %al,(%rax)
   11347:	00 2e                	add    %ch,(%rsi)
   11349:	02 00                	add    (%rax),%al
   1134b:	00 00                	add    %al,(%rax)
   1134d:	00 00                	add    %al,(%rax)
   1134f:	00 2e                	add    %ch,(%rsi)
   11351:	02 00                	add    (%rax),%al
   11353:	00 00                	add    %al,(%rax)
   11355:	00 00                	add    %al,(%rax)
   11357:	00 2e                	add    %ch,(%rsi)
   11359:	02 00                	add    (%rax),%al
   1135b:	00 00                	add    %al,(%rax)
   1135d:	00 00                	add    %al,(%rax)
   1135f:	00 2e                	add    %ch,(%rsi)
   11361:	02 00                	add    (%rax),%al
   11363:	00 00                	add    %al,(%rax)
   11365:	00 00                	add    %al,(%rax)
   11367:	00 2e                	add    %ch,(%rsi)
   11369:	02 00                	add    (%rax),%al
   1136b:	00 00                	add    %al,(%rax)
   1136d:	00 00                	add    %al,(%rax)
   1136f:	00 2e                	add    %ch,(%rsi)
   11371:	02 00                	add    (%rax),%al
   11373:	00 00                	add    %al,(%rax)
   11375:	00 00                	add    %al,(%rax)
   11377:	00 2e                	add    %ch,(%rsi)
   11379:	02 00                	add    (%rax),%al
   1137b:	00 00                	add    %al,(%rax)
   1137d:	00 00                	add    %al,(%rax)
   1137f:	00 2e                	add    %ch,(%rsi)
   11381:	02 00                	add    (%rax),%al
   11383:	00 00                	add    %al,(%rax)
   11385:	00 00                	add    %al,(%rax)
   11387:	00 2e                	add    %ch,(%rsi)
   11389:	02 00                	add    (%rax),%al
   1138b:	00 00                	add    %al,(%rax)
   1138d:	00 00                	add    %al,(%rax)
   1138f:	00 34 02             	add    %dh,(%rdx,%rax,1)
   11392:	00 00                	add    %al,(%rax)
   11394:	00 00                	add    %al,(%rax)
   11396:	00 00                	add    %al,(%rax)
   11398:	34 02                	xor    $0x2,%al
   1139a:	00 00                	add    %al,(%rax)
   1139c:	00 00                	add    %al,(%rax)
   1139e:	00 00                	add    %al,(%rax)
   113a0:	34 02                	xor    $0x2,%al
   113a2:	00 00                	add    %al,(%rax)
   113a4:	00 00                	add    %al,(%rax)
   113a6:	00 00                	add    %al,(%rax)
   113a8:	34 02                	xor    $0x2,%al
   113aa:	00 00                	add    %al,(%rax)
   113ac:	00 00                	add    %al,(%rax)
   113ae:	00 00                	add    %al,(%rax)
   113b0:	34 02                	xor    $0x2,%al
   113b2:	00 00                	add    %al,(%rax)
   113b4:	00 00                	add    %al,(%rax)
   113b6:	00 00                	add    %al,(%rax)
   113b8:	34 02                	xor    $0x2,%al
   113ba:	00 00                	add    %al,(%rax)
   113bc:	00 00                	add    %al,(%rax)
   113be:	00 00                	add    %al,(%rax)
   113c0:	34 02                	xor    $0x2,%al
   113c2:	00 00                	add    %al,(%rax)
   113c4:	00 00                	add    %al,(%rax)
   113c6:	00 00                	add    %al,(%rax)
   113c8:	34 02                	xor    $0x2,%al
   113ca:	00 00                	add    %al,(%rax)
   113cc:	00 00                	add    %al,(%rax)
   113ce:	00 00                	add    %al,(%rax)
   113d0:	34 02                	xor    $0x2,%al
   113d2:	00 00                	add    %al,(%rax)
   113d4:	00 00                	add    %al,(%rax)
   113d6:	00 00                	add    %al,(%rax)
   113d8:	34 02                	xor    $0x2,%al
   113da:	00 00                	add    %al,(%rax)
   113dc:	00 00                	add    %al,(%rax)
   113de:	00 00                	add    %al,(%rax)
   113e0:	34 02                	xor    $0x2,%al
   113e2:	00 00                	add    %al,(%rax)
   113e4:	00 00                	add    %al,(%rax)
   113e6:	00 00                	add    %al,(%rax)
   113e8:	34 02                	xor    $0x2,%al
   113ea:	00 00                	add    %al,(%rax)
   113ec:	00 00                	add    %al,(%rax)
   113ee:	00 00                	add    %al,(%rax)
   113f0:	34 02                	xor    $0x2,%al
   113f2:	00 00                	add    %al,(%rax)
   113f4:	00 00                	add    %al,(%rax)
   113f6:	00 00                	add    %al,(%rax)
   113f8:	34 02                	xor    $0x2,%al
   113fa:	00 00                	add    %al,(%rax)
   113fc:	00 00                	add    %al,(%rax)
   113fe:	00 00                	add    %al,(%rax)
   11400:	34 02                	xor    $0x2,%al
   11402:	00 00                	add    %al,(%rax)
   11404:	00 00                	add    %al,(%rax)
   11406:	00 00                	add    %al,(%rax)
   11408:	34 02                	xor    $0x2,%al
   1140a:	00 00                	add    %al,(%rax)
   1140c:	00 00                	add    %al,(%rax)
   1140e:	00 00                	add    %al,(%rax)
   11410:	34 02                	xor    $0x2,%al
   11412:	00 00                	add    %al,(%rax)
   11414:	00 00                	add    %al,(%rax)
   11416:	00 00                	add    %al,(%rax)
   11418:	34 02                	xor    $0x2,%al
   1141a:	00 00                	add    %al,(%rax)
   1141c:	00 00                	add    %al,(%rax)
   1141e:	00 00                	add    %al,(%rax)
   11420:	34 02                	xor    $0x2,%al
   11422:	00 00                	add    %al,(%rax)
   11424:	00 00                	add    %al,(%rax)
   11426:	00 00                	add    %al,(%rax)
   11428:	34 02                	xor    $0x2,%al
   1142a:	00 00                	add    %al,(%rax)
   1142c:	00 00                	add    %al,(%rax)
   1142e:	00 00                	add    %al,(%rax)
   11430:	34 02                	xor    $0x2,%al
   11432:	00 00                	add    %al,(%rax)
   11434:	00 00                	add    %al,(%rax)
   11436:	00 00                	add    %al,(%rax)
   11438:	34 02                	xor    $0x2,%al
   1143a:	00 00                	add    %al,(%rax)
   1143c:	00 00                	add    %al,(%rax)
   1143e:	00 00                	add    %al,(%rax)
   11440:	34 02                	xor    $0x2,%al
   11442:	00 00                	add    %al,(%rax)
   11444:	00 00                	add    %al,(%rax)
   11446:	00 00                	add    %al,(%rax)
   11448:	34 02                	xor    $0x2,%al
   1144a:	00 00                	add    %al,(%rax)
   1144c:	00 00                	add    %al,(%rax)
   1144e:	00 00                	add    %al,(%rax)
   11450:	34 02                	xor    $0x2,%al
   11452:	00 00                	add    %al,(%rax)
   11454:	00 00                	add    %al,(%rax)
   11456:	00 00                	add    %al,(%rax)
   11458:	34 02                	xor    $0x2,%al
   1145a:	00 00                	add    %al,(%rax)
   1145c:	00 00                	add    %al,(%rax)
   1145e:	00 00                	add    %al,(%rax)
   11460:	34 02                	xor    $0x2,%al
   11462:	00 00                	add    %al,(%rax)
   11464:	00 00                	add    %al,(%rax)
   11466:	00 00                	add    %al,(%rax)
   11468:	34 02                	xor    $0x2,%al
   1146a:	00 00                	add    %al,(%rax)
   1146c:	00 00                	add    %al,(%rax)
   1146e:	00 00                	add    %al,(%rax)
   11470:	34 02                	xor    $0x2,%al
   11472:	00 00                	add    %al,(%rax)
   11474:	00 00                	add    %al,(%rax)
   11476:	00 00                	add    %al,(%rax)
   11478:	34 02                	xor    $0x2,%al
   1147a:	00 00                	add    %al,(%rax)
   1147c:	00 00                	add    %al,(%rax)
   1147e:	00 00                	add    %al,(%rax)
   11480:	34 02                	xor    $0x2,%al
   11482:	00 00                	add    %al,(%rax)
   11484:	00 00                	add    %al,(%rax)
   11486:	00 00                	add    %al,(%rax)
   11488:	34 02                	xor    $0x2,%al
   1148a:	00 00                	add    %al,(%rax)
   1148c:	00 00                	add    %al,(%rax)
   1148e:	00 00                	add    %al,(%rax)
   11490:	3a 02                	cmp    (%rdx),%al
   11492:	00 00                	add    %al,(%rax)
   11494:	00 00                	add    %al,(%rax)
   11496:	00 00                	add    %al,(%rax)
   11498:	3a 02                	cmp    (%rdx),%al
   1149a:	00 00                	add    %al,(%rax)
   1149c:	00 00                	add    %al,(%rax)
   1149e:	00 00                	add    %al,(%rax)
   114a0:	3a 02                	cmp    (%rdx),%al
   114a2:	00 00                	add    %al,(%rax)
   114a4:	00 00                	add    %al,(%rax)
   114a6:	00 00                	add    %al,(%rax)
   114a8:	3a 02                	cmp    (%rdx),%al
   114aa:	00 00                	add    %al,(%rax)
   114ac:	00 00                	add    %al,(%rax)
   114ae:	00 00                	add    %al,(%rax)
   114b0:	3a 02                	cmp    (%rdx),%al
   114b2:	00 00                	add    %al,(%rax)
   114b4:	00 00                	add    %al,(%rax)
   114b6:	00 00                	add    %al,(%rax)
   114b8:	3a 02                	cmp    (%rdx),%al
   114ba:	00 00                	add    %al,(%rax)
   114bc:	00 00                	add    %al,(%rax)
   114be:	00 00                	add    %al,(%rax)
   114c0:	3a 02                	cmp    (%rdx),%al
   114c2:	00 00                	add    %al,(%rax)
   114c4:	00 00                	add    %al,(%rax)
   114c6:	00 00                	add    %al,(%rax)
   114c8:	3a 02                	cmp    (%rdx),%al
   114ca:	00 00                	add    %al,(%rax)
   114cc:	00 00                	add    %al,(%rax)
   114ce:	00 00                	add    %al,(%rax)
   114d0:	3a 02                	cmp    (%rdx),%al
   114d2:	00 00                	add    %al,(%rax)
   114d4:	00 00                	add    %al,(%rax)
   114d6:	00 00                	add    %al,(%rax)
   114d8:	3a 02                	cmp    (%rdx),%al
   114da:	00 00                	add    %al,(%rax)
   114dc:	00 00                	add    %al,(%rax)
   114de:	00 00                	add    %al,(%rax)
   114e0:	3a 02                	cmp    (%rdx),%al
   114e2:	00 00                	add    %al,(%rax)
   114e4:	00 00                	add    %al,(%rax)
   114e6:	00 00                	add    %al,(%rax)
   114e8:	3a 02                	cmp    (%rdx),%al
   114ea:	00 00                	add    %al,(%rax)
   114ec:	00 00                	add    %al,(%rax)
   114ee:	00 00                	add    %al,(%rax)
   114f0:	3a 02                	cmp    (%rdx),%al
   114f2:	00 00                	add    %al,(%rax)
   114f4:	00 00                	add    %al,(%rax)
   114f6:	00 00                	add    %al,(%rax)
   114f8:	3a 02                	cmp    (%rdx),%al
   114fa:	00 00                	add    %al,(%rax)
   114fc:	00 00                	add    %al,(%rax)
   114fe:	00 00                	add    %al,(%rax)
   11500:	3a 02                	cmp    (%rdx),%al
   11502:	00 00                	add    %al,(%rax)
   11504:	00 00                	add    %al,(%rax)
   11506:	00 00                	add    %al,(%rax)
   11508:	3a 02                	cmp    (%rdx),%al
   1150a:	00 00                	add    %al,(%rax)
   1150c:	00 00                	add    %al,(%rax)
   1150e:	00 00                	add    %al,(%rax)
   11510:	3a 02                	cmp    (%rdx),%al
   11512:	00 00                	add    %al,(%rax)
   11514:	00 00                	add    %al,(%rax)
   11516:	00 00                	add    %al,(%rax)
   11518:	3a 02                	cmp    (%rdx),%al
   1151a:	00 00                	add    %al,(%rax)
   1151c:	00 00                	add    %al,(%rax)
   1151e:	00 00                	add    %al,(%rax)
   11520:	3a 02                	cmp    (%rdx),%al
   11522:	00 00                	add    %al,(%rax)
   11524:	00 00                	add    %al,(%rax)
   11526:	00 00                	add    %al,(%rax)
   11528:	3a 02                	cmp    (%rdx),%al
   1152a:	00 00                	add    %al,(%rax)
   1152c:	00 00                	add    %al,(%rax)
   1152e:	00 00                	add    %al,(%rax)
   11530:	3a 02                	cmp    (%rdx),%al
   11532:	00 00                	add    %al,(%rax)
   11534:	00 00                	add    %al,(%rax)
   11536:	00 00                	add    %al,(%rax)
   11538:	3a 02                	cmp    (%rdx),%al
   1153a:	00 00                	add    %al,(%rax)
   1153c:	00 00                	add    %al,(%rax)
   1153e:	00 00                	add    %al,(%rax)
   11540:	3a 02                	cmp    (%rdx),%al
   11542:	00 00                	add    %al,(%rax)
   11544:	00 00                	add    %al,(%rax)
   11546:	00 00                	add    %al,(%rax)
   11548:	3a 02                	cmp    (%rdx),%al
   1154a:	00 00                	add    %al,(%rax)
   1154c:	00 00                	add    %al,(%rax)
   1154e:	00 00                	add    %al,(%rax)
   11550:	3a 02                	cmp    (%rdx),%al
   11552:	00 00                	add    %al,(%rax)
   11554:	00 00                	add    %al,(%rax)
   11556:	00 00                	add    %al,(%rax)
   11558:	3a 02                	cmp    (%rdx),%al
   1155a:	00 00                	add    %al,(%rax)
   1155c:	00 00                	add    %al,(%rax)
   1155e:	00 00                	add    %al,(%rax)
   11560:	3a 02                	cmp    (%rdx),%al
   11562:	00 00                	add    %al,(%rax)
   11564:	00 00                	add    %al,(%rax)
   11566:	00 00                	add    %al,(%rax)
   11568:	3a 02                	cmp    (%rdx),%al
   1156a:	00 00                	add    %al,(%rax)
   1156c:	00 00                	add    %al,(%rax)
   1156e:	00 00                	add    %al,(%rax)
   11570:	3a 02                	cmp    (%rdx),%al
   11572:	00 00                	add    %al,(%rax)
   11574:	00 00                	add    %al,(%rax)
   11576:	00 00                	add    %al,(%rax)
   11578:	3a 02                	cmp    (%rdx),%al
   1157a:	00 00                	add    %al,(%rax)
   1157c:	00 00                	add    %al,(%rax)
   1157e:	00 00                	add    %al,(%rax)
   11580:	3a 02                	cmp    (%rdx),%al
   11582:	00 00                	add    %al,(%rax)
   11584:	00 00                	add    %al,(%rax)
   11586:	00 00                	add    %al,(%rax)
   11588:	3a 02                	cmp    (%rdx),%al
   1158a:	00 00                	add    %al,(%rax)
   1158c:	00 00                	add    %al,(%rax)
   1158e:	00 00                	add    %al,(%rax)
   11590:	40 02 00             	add    (%rax),%al
   11593:	00 00                	add    %al,(%rax)
   11595:	00 00                	add    %al,(%rax)
   11597:	00 40 02             	add    %al,0x2(%rax)
   1159a:	00 00                	add    %al,(%rax)
   1159c:	00 00                	add    %al,(%rax)
   1159e:	00 00                	add    %al,(%rax)
   115a0:	40 02 00             	add    (%rax),%al
   115a3:	00 00                	add    %al,(%rax)
   115a5:	00 00                	add    %al,(%rax)
   115a7:	00 40 02             	add    %al,0x2(%rax)
   115aa:	00 00                	add    %al,(%rax)
   115ac:	00 00                	add    %al,(%rax)
   115ae:	00 00                	add    %al,(%rax)
   115b0:	40 02 00             	add    (%rax),%al
   115b3:	00 00                	add    %al,(%rax)
   115b5:	00 00                	add    %al,(%rax)
   115b7:	00 40 02             	add    %al,0x2(%rax)
   115ba:	00 00                	add    %al,(%rax)
   115bc:	00 00                	add    %al,(%rax)
   115be:	00 00                	add    %al,(%rax)
   115c0:	40 02 00             	add    (%rax),%al
   115c3:	00 00                	add    %al,(%rax)
   115c5:	00 00                	add    %al,(%rax)
   115c7:	00 40 02             	add    %al,0x2(%rax)
   115ca:	00 00                	add    %al,(%rax)
   115cc:	00 00                	add    %al,(%rax)
   115ce:	00 00                	add    %al,(%rax)
   115d0:	40 02 00             	add    (%rax),%al
   115d3:	00 00                	add    %al,(%rax)
   115d5:	00 00                	add    %al,(%rax)
   115d7:	00 40 02             	add    %al,0x2(%rax)
   115da:	00 00                	add    %al,(%rax)
   115dc:	00 00                	add    %al,(%rax)
   115de:	00 00                	add    %al,(%rax)
   115e0:	40 02 00             	add    (%rax),%al
   115e3:	00 00                	add    %al,(%rax)
   115e5:	00 00                	add    %al,(%rax)
   115e7:	00 40 02             	add    %al,0x2(%rax)
   115ea:	00 00                	add    %al,(%rax)
   115ec:	00 00                	add    %al,(%rax)
   115ee:	00 00                	add    %al,(%rax)
   115f0:	40 02 00             	add    (%rax),%al
   115f3:	00 00                	add    %al,(%rax)
   115f5:	00 00                	add    %al,(%rax)
   115f7:	00 40 02             	add    %al,0x2(%rax)
   115fa:	00 00                	add    %al,(%rax)
   115fc:	00 00                	add    %al,(%rax)
   115fe:	00 00                	add    %al,(%rax)
   11600:	40 02 00             	add    (%rax),%al
   11603:	00 00                	add    %al,(%rax)
   11605:	00 00                	add    %al,(%rax)
   11607:	00 40 02             	add    %al,0x2(%rax)
   1160a:	00 00                	add    %al,(%rax)
   1160c:	00 00                	add    %al,(%rax)
   1160e:	00 00                	add    %al,(%rax)
   11610:	40 02 00             	add    (%rax),%al
   11613:	00 00                	add    %al,(%rax)
   11615:	00 00                	add    %al,(%rax)
   11617:	00 40 02             	add    %al,0x2(%rax)
   1161a:	00 00                	add    %al,(%rax)
   1161c:	00 00                	add    %al,(%rax)
   1161e:	00 00                	add    %al,(%rax)
   11620:	40 02 00             	add    (%rax),%al
   11623:	00 00                	add    %al,(%rax)
   11625:	00 00                	add    %al,(%rax)
   11627:	00 40 02             	add    %al,0x2(%rax)
   1162a:	00 00                	add    %al,(%rax)
   1162c:	00 00                	add    %al,(%rax)
   1162e:	00 00                	add    %al,(%rax)
   11630:	40 02 00             	add    (%rax),%al
   11633:	00 00                	add    %al,(%rax)
   11635:	00 00                	add    %al,(%rax)
   11637:	00 40 02             	add    %al,0x2(%rax)
   1163a:	00 00                	add    %al,(%rax)
   1163c:	00 00                	add    %al,(%rax)
   1163e:	00 00                	add    %al,(%rax)
   11640:	40 02 00             	add    (%rax),%al
   11643:	00 00                	add    %al,(%rax)
   11645:	00 00                	add    %al,(%rax)
   11647:	00 40 02             	add    %al,0x2(%rax)
   1164a:	00 00                	add    %al,(%rax)
   1164c:	00 00                	add    %al,(%rax)
   1164e:	00 00                	add    %al,(%rax)
   11650:	40 02 00             	add    (%rax),%al
   11653:	00 00                	add    %al,(%rax)
   11655:	00 00                	add    %al,(%rax)
   11657:	00 40 02             	add    %al,0x2(%rax)
   1165a:	00 00                	add    %al,(%rax)
   1165c:	00 00                	add    %al,(%rax)
   1165e:	00 00                	add    %al,(%rax)
   11660:	40 02 00             	add    (%rax),%al
   11663:	00 00                	add    %al,(%rax)
   11665:	00 00                	add    %al,(%rax)
   11667:	00 40 02             	add    %al,0x2(%rax)
   1166a:	00 00                	add    %al,(%rax)
   1166c:	00 00                	add    %al,(%rax)
   1166e:	00 00                	add    %al,(%rax)
   11670:	40 02 00             	add    (%rax),%al
   11673:	00 00                	add    %al,(%rax)
   11675:	00 00                	add    %al,(%rax)
   11677:	00 40 02             	add    %al,0x2(%rax)
   1167a:	00 00                	add    %al,(%rax)
   1167c:	00 00                	add    %al,(%rax)
   1167e:	00 00                	add    %al,(%rax)
   11680:	40 02 00             	add    (%rax),%al
   11683:	00 00                	add    %al,(%rax)
   11685:	00 00                	add    %al,(%rax)
   11687:	00 40 02             	add    %al,0x2(%rax)
   1168a:	00 00                	add    %al,(%rax)
   1168c:	00 00                	add    %al,(%rax)
   1168e:	00 00                	add    %al,(%rax)
   11690:	4e 02 00             	rex.WRX add (%rax),%r8b
   11693:	00 00                	add    %al,(%rax)
   11695:	00 00                	add    %al,(%rax)
   11697:	00 4e 02             	add    %cl,0x2(%rsi)
   1169a:	00 00                	add    %al,(%rax)
   1169c:	00 00                	add    %al,(%rax)
   1169e:	00 00                	add    %al,(%rax)
   116a0:	4e 02 00             	rex.WRX add (%rax),%r8b
   116a3:	00 00                	add    %al,(%rax)
   116a5:	00 00                	add    %al,(%rax)
   116a7:	00 4e 02             	add    %cl,0x2(%rsi)
   116aa:	00 00                	add    %al,(%rax)
   116ac:	00 00                	add    %al,(%rax)
   116ae:	00 00                	add    %al,(%rax)
   116b0:	4e 02 00             	rex.WRX add (%rax),%r8b
   116b3:	00 00                	add    %al,(%rax)
   116b5:	00 00                	add    %al,(%rax)
   116b7:	00 4e 02             	add    %cl,0x2(%rsi)
   116ba:	00 00                	add    %al,(%rax)
   116bc:	00 00                	add    %al,(%rax)
   116be:	00 00                	add    %al,(%rax)
   116c0:	4e 02 00             	rex.WRX add (%rax),%r8b
   116c3:	00 00                	add    %al,(%rax)
   116c5:	00 00                	add    %al,(%rax)
   116c7:	00 4e 02             	add    %cl,0x2(%rsi)
   116ca:	00 00                	add    %al,(%rax)
   116cc:	00 00                	add    %al,(%rax)
   116ce:	00 00                	add    %al,(%rax)
   116d0:	4e 02 00             	rex.WRX add (%rax),%r8b
   116d3:	00 00                	add    %al,(%rax)
   116d5:	00 00                	add    %al,(%rax)
   116d7:	00 4e 02             	add    %cl,0x2(%rsi)
   116da:	00 00                	add    %al,(%rax)
   116dc:	00 00                	add    %al,(%rax)
   116de:	00 00                	add    %al,(%rax)
   116e0:	4e 02 00             	rex.WRX add (%rax),%r8b
   116e3:	00 00                	add    %al,(%rax)
   116e5:	00 00                	add    %al,(%rax)
   116e7:	00 4e 02             	add    %cl,0x2(%rsi)
   116ea:	00 00                	add    %al,(%rax)
   116ec:	00 00                	add    %al,(%rax)
   116ee:	00 00                	add    %al,(%rax)
   116f0:	4e 02 00             	rex.WRX add (%rax),%r8b
   116f3:	00 00                	add    %al,(%rax)
   116f5:	00 00                	add    %al,(%rax)
   116f7:	00 4e 02             	add    %cl,0x2(%rsi)
   116fa:	00 00                	add    %al,(%rax)
   116fc:	00 00                	add    %al,(%rax)
   116fe:	00 00                	add    %al,(%rax)
   11700:	4e 02 00             	rex.WRX add (%rax),%r8b
   11703:	00 00                	add    %al,(%rax)
   11705:	00 00                	add    %al,(%rax)
   11707:	00 4e 02             	add    %cl,0x2(%rsi)
   1170a:	00 00                	add    %al,(%rax)
   1170c:	00 00                	add    %al,(%rax)
   1170e:	00 00                	add    %al,(%rax)
   11710:	4e 02 00             	rex.WRX add (%rax),%r8b
   11713:	00 00                	add    %al,(%rax)
   11715:	00 00                	add    %al,(%rax)
   11717:	00 4e 02             	add    %cl,0x2(%rsi)
   1171a:	00 00                	add    %al,(%rax)
   1171c:	00 00                	add    %al,(%rax)
   1171e:	00 00                	add    %al,(%rax)
   11720:	4e 02 00             	rex.WRX add (%rax),%r8b
   11723:	00 00                	add    %al,(%rax)
   11725:	00 00                	add    %al,(%rax)
   11727:	00 4e 02             	add    %cl,0x2(%rsi)
   1172a:	00 00                	add    %al,(%rax)
   1172c:	00 00                	add    %al,(%rax)
   1172e:	00 00                	add    %al,(%rax)
   11730:	4e 02 00             	rex.WRX add (%rax),%r8b
   11733:	00 00                	add    %al,(%rax)
   11735:	00 00                	add    %al,(%rax)
   11737:	00 4e 02             	add    %cl,0x2(%rsi)
   1173a:	00 00                	add    %al,(%rax)
   1173c:	00 00                	add    %al,(%rax)
   1173e:	00 00                	add    %al,(%rax)
   11740:	4e 02 00             	rex.WRX add (%rax),%r8b
   11743:	00 00                	add    %al,(%rax)
   11745:	00 00                	add    %al,(%rax)
   11747:	00 4e 02             	add    %cl,0x2(%rsi)
   1174a:	00 00                	add    %al,(%rax)
   1174c:	00 00                	add    %al,(%rax)
   1174e:	00 00                	add    %al,(%rax)
   11750:	4e 02 00             	rex.WRX add (%rax),%r8b
   11753:	00 00                	add    %al,(%rax)
   11755:	00 00                	add    %al,(%rax)
   11757:	00 4e 02             	add    %cl,0x2(%rsi)
   1175a:	00 00                	add    %al,(%rax)
   1175c:	00 00                	add    %al,(%rax)
   1175e:	00 00                	add    %al,(%rax)
   11760:	4e 02 00             	rex.WRX add (%rax),%r8b
   11763:	00 00                	add    %al,(%rax)
   11765:	00 00                	add    %al,(%rax)
   11767:	00 4e 02             	add    %cl,0x2(%rsi)
   1176a:	00 00                	add    %al,(%rax)
   1176c:	00 00                	add    %al,(%rax)
   1176e:	00 00                	add    %al,(%rax)
   11770:	4e 02 00             	rex.WRX add (%rax),%r8b
   11773:	00 00                	add    %al,(%rax)
   11775:	00 00                	add    %al,(%rax)
   11777:	00 4e 02             	add    %cl,0x2(%rsi)
   1177a:	00 00                	add    %al,(%rax)
   1177c:	00 00                	add    %al,(%rax)
   1177e:	00 00                	add    %al,(%rax)
   11780:	4e 02 00             	rex.WRX add (%rax),%r8b
   11783:	00 00                	add    %al,(%rax)
   11785:	00 00                	add    %al,(%rax)
   11787:	00 4e 02             	add    %cl,0x2(%rsi)
   1178a:	00 00                	add    %al,(%rax)
   1178c:	00 00                	add    %al,(%rax)
   1178e:	00 00                	add    %al,(%rax)
   11790:	57                   	push   %rdi
   11791:	02 00                	add    (%rax),%al
   11793:	00 00                	add    %al,(%rax)
   11795:	00 00                	add    %al,(%rax)
   11797:	00 57 02             	add    %dl,0x2(%rdi)
   1179a:	00 00                	add    %al,(%rax)
   1179c:	00 00                	add    %al,(%rax)
   1179e:	00 00                	add    %al,(%rax)
   117a0:	57                   	push   %rdi
   117a1:	02 00                	add    (%rax),%al
   117a3:	00 00                	add    %al,(%rax)
   117a5:	00 00                	add    %al,(%rax)
   117a7:	00 57 02             	add    %dl,0x2(%rdi)
   117aa:	00 00                	add    %al,(%rax)
   117ac:	00 00                	add    %al,(%rax)
   117ae:	00 00                	add    %al,(%rax)
   117b0:	57                   	push   %rdi
   117b1:	02 00                	add    (%rax),%al
   117b3:	00 00                	add    %al,(%rax)
   117b5:	00 00                	add    %al,(%rax)
   117b7:	00 57 02             	add    %dl,0x2(%rdi)
   117ba:	00 00                	add    %al,(%rax)
   117bc:	00 00                	add    %al,(%rax)
   117be:	00 00                	add    %al,(%rax)
   117c0:	57                   	push   %rdi
   117c1:	02 00                	add    (%rax),%al
   117c3:	00 00                	add    %al,(%rax)
   117c5:	00 00                	add    %al,(%rax)
   117c7:	00 57 02             	add    %dl,0x2(%rdi)
   117ca:	00 00                	add    %al,(%rax)
   117cc:	00 00                	add    %al,(%rax)
   117ce:	00 00                	add    %al,(%rax)
   117d0:	57                   	push   %rdi
   117d1:	02 00                	add    (%rax),%al
   117d3:	00 00                	add    %al,(%rax)
   117d5:	00 00                	add    %al,(%rax)
   117d7:	00 57 02             	add    %dl,0x2(%rdi)
   117da:	00 00                	add    %al,(%rax)
   117dc:	00 00                	add    %al,(%rax)
   117de:	00 00                	add    %al,(%rax)
   117e0:	57                   	push   %rdi
   117e1:	02 00                	add    (%rax),%al
   117e3:	00 00                	add    %al,(%rax)
   117e5:	00 00                	add    %al,(%rax)
   117e7:	00 57 02             	add    %dl,0x2(%rdi)
   117ea:	00 00                	add    %al,(%rax)
   117ec:	00 00                	add    %al,(%rax)
   117ee:	00 00                	add    %al,(%rax)
   117f0:	57                   	push   %rdi
   117f1:	02 00                	add    (%rax),%al
   117f3:	00 00                	add    %al,(%rax)
   117f5:	00 00                	add    %al,(%rax)
   117f7:	00 57 02             	add    %dl,0x2(%rdi)
   117fa:	00 00                	add    %al,(%rax)
   117fc:	00 00                	add    %al,(%rax)
   117fe:	00 00                	add    %al,(%rax)
   11800:	57                   	push   %rdi
   11801:	02 00                	add    (%rax),%al
   11803:	00 00                	add    %al,(%rax)
   11805:	00 00                	add    %al,(%rax)
   11807:	00 57 02             	add    %dl,0x2(%rdi)
   1180a:	00 00                	add    %al,(%rax)
   1180c:	00 00                	add    %al,(%rax)
   1180e:	00 00                	add    %al,(%rax)
   11810:	57                   	push   %rdi
   11811:	02 00                	add    (%rax),%al
   11813:	00 00                	add    %al,(%rax)
   11815:	00 00                	add    %al,(%rax)
   11817:	00 57 02             	add    %dl,0x2(%rdi)
   1181a:	00 00                	add    %al,(%rax)
   1181c:	00 00                	add    %al,(%rax)
   1181e:	00 00                	add    %al,(%rax)
   11820:	57                   	push   %rdi
   11821:	02 00                	add    (%rax),%al
   11823:	00 00                	add    %al,(%rax)
   11825:	00 00                	add    %al,(%rax)
   11827:	00 57 02             	add    %dl,0x2(%rdi)
   1182a:	00 00                	add    %al,(%rax)
   1182c:	00 00                	add    %al,(%rax)
   1182e:	00 00                	add    %al,(%rax)
   11830:	57                   	push   %rdi
   11831:	02 00                	add    (%rax),%al
   11833:	00 00                	add    %al,(%rax)
   11835:	00 00                	add    %al,(%rax)
   11837:	00 57 02             	add    %dl,0x2(%rdi)
   1183a:	00 00                	add    %al,(%rax)
   1183c:	00 00                	add    %al,(%rax)
   1183e:	00 00                	add    %al,(%rax)
   11840:	57                   	push   %rdi
   11841:	02 00                	add    (%rax),%al
   11843:	00 00                	add    %al,(%rax)
   11845:	00 00                	add    %al,(%rax)
   11847:	00 57 02             	add    %dl,0x2(%rdi)
   1184a:	00 00                	add    %al,(%rax)
   1184c:	00 00                	add    %al,(%rax)
   1184e:	00 00                	add    %al,(%rax)
   11850:	57                   	push   %rdi
   11851:	02 00                	add    (%rax),%al
   11853:	00 00                	add    %al,(%rax)
   11855:	00 00                	add    %al,(%rax)
   11857:	00 57 02             	add    %dl,0x2(%rdi)
   1185a:	00 00                	add    %al,(%rax)
   1185c:	00 00                	add    %al,(%rax)
   1185e:	00 00                	add    %al,(%rax)
   11860:	57                   	push   %rdi
   11861:	02 00                	add    (%rax),%al
   11863:	00 00                	add    %al,(%rax)
   11865:	00 00                	add    %al,(%rax)
   11867:	00 57 02             	add    %dl,0x2(%rdi)
   1186a:	00 00                	add    %al,(%rax)
   1186c:	00 00                	add    %al,(%rax)
   1186e:	00 00                	add    %al,(%rax)
   11870:	57                   	push   %rdi
   11871:	02 00                	add    (%rax),%al
   11873:	00 00                	add    %al,(%rax)
   11875:	00 00                	add    %al,(%rax)
   11877:	00 57 02             	add    %dl,0x2(%rdi)
   1187a:	00 00                	add    %al,(%rax)
   1187c:	00 00                	add    %al,(%rax)
   1187e:	00 00                	add    %al,(%rax)
   11880:	57                   	push   %rdi
   11881:	02 00                	add    (%rax),%al
   11883:	00 00                	add    %al,(%rax)
   11885:	00 00                	add    %al,(%rax)
   11887:	00 57 02             	add    %dl,0x2(%rdi)
   1188a:	00 00                	add    %al,(%rax)
   1188c:	00 00                	add    %al,(%rax)
   1188e:	00 00                	add    %al,(%rax)
   11890:	60                   	(bad)  
   11891:	02 00                	add    (%rax),%al
   11893:	00 00                	add    %al,(%rax)
   11895:	00 00                	add    %al,(%rax)
   11897:	00 60 02             	add    %ah,0x2(%rax)
   1189a:	00 00                	add    %al,(%rax)
   1189c:	00 00                	add    %al,(%rax)
   1189e:	00 00                	add    %al,(%rax)
   118a0:	60                   	(bad)  
   118a1:	02 00                	add    (%rax),%al
   118a3:	00 00                	add    %al,(%rax)
   118a5:	00 00                	add    %al,(%rax)
   118a7:	00 60 02             	add    %ah,0x2(%rax)
   118aa:	00 00                	add    %al,(%rax)
   118ac:	00 00                	add    %al,(%rax)
   118ae:	00 00                	add    %al,(%rax)
   118b0:	60                   	(bad)  
   118b1:	02 00                	add    (%rax),%al
   118b3:	00 00                	add    %al,(%rax)
   118b5:	00 00                	add    %al,(%rax)
   118b7:	00 60 02             	add    %ah,0x2(%rax)
   118ba:	00 00                	add    %al,(%rax)
   118bc:	00 00                	add    %al,(%rax)
   118be:	00 00                	add    %al,(%rax)
   118c0:	60                   	(bad)  
   118c1:	02 00                	add    (%rax),%al
   118c3:	00 00                	add    %al,(%rax)
   118c5:	00 00                	add    %al,(%rax)
   118c7:	00 60 02             	add    %ah,0x2(%rax)
   118ca:	00 00                	add    %al,(%rax)
   118cc:	00 00                	add    %al,(%rax)
   118ce:	00 00                	add    %al,(%rax)
   118d0:	60                   	(bad)  
   118d1:	02 00                	add    (%rax),%al
   118d3:	00 00                	add    %al,(%rax)
   118d5:	00 00                	add    %al,(%rax)
   118d7:	00 60 02             	add    %ah,0x2(%rax)
   118da:	00 00                	add    %al,(%rax)
   118dc:	00 00                	add    %al,(%rax)
   118de:	00 00                	add    %al,(%rax)
   118e0:	60                   	(bad)  
   118e1:	02 00                	add    (%rax),%al
   118e3:	00 00                	add    %al,(%rax)
   118e5:	00 00                	add    %al,(%rax)
   118e7:	00 60 02             	add    %ah,0x2(%rax)
   118ea:	00 00                	add    %al,(%rax)
   118ec:	00 00                	add    %al,(%rax)
   118ee:	00 00                	add    %al,(%rax)
   118f0:	60                   	(bad)  
   118f1:	02 00                	add    (%rax),%al
   118f3:	00 00                	add    %al,(%rax)
   118f5:	00 00                	add    %al,(%rax)
   118f7:	00 60 02             	add    %ah,0x2(%rax)
   118fa:	00 00                	add    %al,(%rax)
   118fc:	00 00                	add    %al,(%rax)
   118fe:	00 00                	add    %al,(%rax)
   11900:	60                   	(bad)  
   11901:	02 00                	add    (%rax),%al
   11903:	00 00                	add    %al,(%rax)
   11905:	00 00                	add    %al,(%rax)
   11907:	00 60 02             	add    %ah,0x2(%rax)
   1190a:	00 00                	add    %al,(%rax)
   1190c:	00 00                	add    %al,(%rax)
   1190e:	00 00                	add    %al,(%rax)
   11910:	60                   	(bad)  
   11911:	02 00                	add    (%rax),%al
   11913:	00 00                	add    %al,(%rax)
   11915:	00 00                	add    %al,(%rax)
   11917:	00 60 02             	add    %ah,0x2(%rax)
   1191a:	00 00                	add    %al,(%rax)
   1191c:	00 00                	add    %al,(%rax)
   1191e:	00 00                	add    %al,(%rax)
   11920:	60                   	(bad)  
   11921:	02 00                	add    (%rax),%al
   11923:	00 00                	add    %al,(%rax)
   11925:	00 00                	add    %al,(%rax)
   11927:	00 60 02             	add    %ah,0x2(%rax)
   1192a:	00 00                	add    %al,(%rax)
   1192c:	00 00                	add    %al,(%rax)
   1192e:	00 00                	add    %al,(%rax)
   11930:	60                   	(bad)  
   11931:	02 00                	add    (%rax),%al
   11933:	00 00                	add    %al,(%rax)
   11935:	00 00                	add    %al,(%rax)
   11937:	00 60 02             	add    %ah,0x2(%rax)
   1193a:	00 00                	add    %al,(%rax)
   1193c:	00 00                	add    %al,(%rax)
   1193e:	00 00                	add    %al,(%rax)
   11940:	60                   	(bad)  
   11941:	02 00                	add    (%rax),%al
   11943:	00 00                	add    %al,(%rax)
   11945:	00 00                	add    %al,(%rax)
   11947:	00 60 02             	add    %ah,0x2(%rax)
   1194a:	00 00                	add    %al,(%rax)
   1194c:	00 00                	add    %al,(%rax)
   1194e:	00 00                	add    %al,(%rax)
   11950:	60                   	(bad)  
   11951:	02 00                	add    (%rax),%al
   11953:	00 00                	add    %al,(%rax)
   11955:	00 00                	add    %al,(%rax)
   11957:	00 60 02             	add    %ah,0x2(%rax)
   1195a:	00 00                	add    %al,(%rax)
   1195c:	00 00                	add    %al,(%rax)
   1195e:	00 00                	add    %al,(%rax)
   11960:	60                   	(bad)  
   11961:	02 00                	add    (%rax),%al
   11963:	00 00                	add    %al,(%rax)
   11965:	00 00                	add    %al,(%rax)
   11967:	00 60 02             	add    %ah,0x2(%rax)
   1196a:	00 00                	add    %al,(%rax)
   1196c:	00 00                	add    %al,(%rax)
   1196e:	00 00                	add    %al,(%rax)
   11970:	60                   	(bad)  
   11971:	02 00                	add    (%rax),%al
   11973:	00 00                	add    %al,(%rax)
   11975:	00 00                	add    %al,(%rax)
   11977:	00 60 02             	add    %ah,0x2(%rax)
   1197a:	00 00                	add    %al,(%rax)
   1197c:	00 00                	add    %al,(%rax)
   1197e:	00 00                	add    %al,(%rax)
   11980:	60                   	(bad)  
   11981:	02 00                	add    (%rax),%al
   11983:	00 00                	add    %al,(%rax)
   11985:	00 00                	add    %al,(%rax)
   11987:	00 60 02             	add    %ah,0x2(%rax)
   1198a:	00 00                	add    %al,(%rax)
   1198c:	00 00                	add    %al,(%rax)
   1198e:	00 00                	add    %al,(%rax)
   11990:	00 0a                	add    %cl,(%rdx)
   11992:	00 00                	add    %al,(%rax)
   11994:	00 00                	add    %al,(%rax)
   11996:	00 00                	add    %al,(%rax)
   11998:	10 0a                	adc    %cl,(%rdx)
   1199a:	00 00                	add    %al,(%rax)
   1199c:	00 00                	add    %al,(%rax)
   1199e:	00 00                	add    %al,(%rax)
   119a0:	f0 09 00             	lock or %eax,(%rax)
   119a3:	00 00                	add    %al,(%rax)
   119a5:	00 00                	add    %al,(%rax)
   119a7:	00 e0                	add    %ah,%al
   119a9:	09 00                	or     %eax,(%rax)
   119ab:	00 00                	add    %al,(%rax)
   119ad:	00 00                	add    %al,(%rax)
   119af:	00 d0                	add    %dl,%al
   119b1:	09 00                	or     %eax,(%rax)
   119b3:	00 00                	add    %al,(%rax)
   119b5:	00 00                	add    %al,(%rax)
   119b7:	00 c0                	add    %al,%al
   119b9:	09 00                	or     %eax,(%rax)
   119bb:	00 00                	add    %al,(%rax)
   119bd:	00 00                	add    %al,(%rax)
   119bf:	00 c0                	add    %al,%al
   119c1:	09 00                	or     %eax,(%rax)
   119c3:	00 00                	add    %al,(%rax)
   119c5:	00 00                	add    %al,(%rax)
   119c7:	00 c0                	add    %al,%al
   119c9:	09 00                	or     %eax,(%rax)
   119cb:	00 00                	add    %al,(%rax)
   119cd:	00 00                	add    %al,(%rax)
   119cf:	00 b0 09 00 00 00    	add    %dh,0x9(%rax)
   119d5:	00 00                	add    %al,(%rax)
   119d7:	00 a0 09 00 00 00    	add    %ah,0x9(%rax)
   119dd:	00 00                	add    %al,(%rax)
   119df:	00 a0 09 00 00 00    	add    %ah,0x9(%rax)
   119e5:	00 00                	add    %al,(%rax)
   119e7:	00 a0 09 00 00 00    	add    %ah,0x9(%rax)
   119ed:	00 00                	add    %al,(%rax)
   119ef:	00 a0 09 00 00 00    	add    %ah,0x9(%rax)
   119f5:	00 00                	add    %al,(%rax)
   119f7:	00 a0 09 00 00 00    	add    %ah,0x9(%rax)
   119fd:	00 00                	add    %al,(%rax)
   119ff:	00 a0 09 00 00 00    	add    %ah,0x9(%rax)
   11a05:	00 00                	add    %al,(%rax)
   11a07:	00 a0 09 00 00 00    	add    %ah,0x9(%rax)
   11a0d:	00 00                	add    %al,(%rax)
   11a0f:	00 90 09 00 00 00    	add    %dl,0x9(%rax)
   11a15:	00 00                	add    %al,(%rax)
   11a17:	00 80 09 00 00 00    	add    %al,0x9(%rax)
   11a1d:	00 00                	add    %al,(%rax)
   11a1f:	00 80 09 00 00 00    	add    %al,0x9(%rax)
   11a25:	00 00                	add    %al,(%rax)
   11a27:	00 80 09 00 00 00    	add    %al,0x9(%rax)
   11a2d:	00 00                	add    %al,(%rax)
   11a2f:	00 80 09 00 00 00    	add    %al,0x9(%rax)
   11a35:	00 00                	add    %al,(%rax)
   11a37:	00 80 09 00 00 00    	add    %al,0x9(%rax)
   11a3d:	00 00                	add    %al,(%rax)
   11a3f:	00 80 09 00 00 00    	add    %al,0x9(%rax)
   11a45:	00 00                	add    %al,(%rax)
   11a47:	00 80 09 00 00 00    	add    %al,0x9(%rax)
   11a4d:	00 00                	add    %al,(%rax)
   11a4f:	00 80 09 00 00 00    	add    %al,0x9(%rax)
   11a55:	00 00                	add    %al,(%rax)
   11a57:	00 80 09 00 00 00    	add    %al,0x9(%rax)
   11a5d:	00 00                	add    %al,(%rax)
   11a5f:	00 80 09 00 00 00    	add    %al,0x9(%rax)
   11a65:	00 00                	add    %al,(%rax)
   11a67:	00 80 09 00 00 00    	add    %al,0x9(%rax)
   11a6d:	00 00                	add    %al,(%rax)
   11a6f:	00 80 09 00 00 00    	add    %al,0x9(%rax)
   11a75:	00 00                	add    %al,(%rax)
   11a77:	00 80 09 00 00 00    	add    %al,0x9(%rax)
   11a7d:	00 00                	add    %al,(%rax)
   11a7f:	00 80 09 00 00 00    	add    %al,0x9(%rax)
   11a85:	00 00                	add    %al,(%rax)
   11a87:	00 80 09 00 00 00    	add    %al,0x9(%rax)
   11a8d:	00 00                	add    %al,(%rax)
   11a8f:	00 70 09             	add    %dh,0x9(%rax)
   11a92:	00 00                	add    %al,(%rax)
   11a94:	00 00                	add    %al,(%rax)
   11a96:	00 00                	add    %al,(%rax)
   11a98:	60                   	(bad)  
   11a99:	09 00                	or     %eax,(%rax)
   11a9b:	00 00                	add    %al,(%rax)
   11a9d:	00 00                	add    %al,(%rax)
   11a9f:	00 60 09             	add    %ah,0x9(%rax)
   11aa2:	00 00                	add    %al,(%rax)
   11aa4:	00 00                	add    %al,(%rax)
   11aa6:	00 00                	add    %al,(%rax)
   11aa8:	60                   	(bad)  
   11aa9:	09 00                	or     %eax,(%rax)
   11aab:	00 00                	add    %al,(%rax)
   11aad:	00 00                	add    %al,(%rax)
   11aaf:	00 60 09             	add    %ah,0x9(%rax)
   11ab2:	00 00                	add    %al,(%rax)
   11ab4:	00 00                	add    %al,(%rax)
   11ab6:	00 00                	add    %al,(%rax)
   11ab8:	60                   	(bad)  
   11ab9:	09 00                	or     %eax,(%rax)
   11abb:	00 00                	add    %al,(%rax)
   11abd:	00 00                	add    %al,(%rax)
   11abf:	00 60 09             	add    %ah,0x9(%rax)
   11ac2:	00 00                	add    %al,(%rax)
   11ac4:	00 00                	add    %al,(%rax)
   11ac6:	00 00                	add    %al,(%rax)
   11ac8:	60                   	(bad)  
   11ac9:	09 00                	or     %eax,(%rax)
   11acb:	00 00                	add    %al,(%rax)
   11acd:	00 00                	add    %al,(%rax)
   11acf:	00 60 09             	add    %ah,0x9(%rax)
   11ad2:	00 00                	add    %al,(%rax)
   11ad4:	00 00                	add    %al,(%rax)
   11ad6:	00 00                	add    %al,(%rax)
   11ad8:	60                   	(bad)  
   11ad9:	09 00                	or     %eax,(%rax)
   11adb:	00 00                	add    %al,(%rax)
   11add:	00 00                	add    %al,(%rax)
   11adf:	00 60 09             	add    %ah,0x9(%rax)
   11ae2:	00 00                	add    %al,(%rax)
   11ae4:	00 00                	add    %al,(%rax)
   11ae6:	00 00                	add    %al,(%rax)
   11ae8:	60                   	(bad)  
   11ae9:	09 00                	or     %eax,(%rax)
   11aeb:	00 00                	add    %al,(%rax)
   11aed:	00 00                	add    %al,(%rax)
   11aef:	00 60 09             	add    %ah,0x9(%rax)
   11af2:	00 00                	add    %al,(%rax)
   11af4:	00 00                	add    %al,(%rax)
   11af6:	00 00                	add    %al,(%rax)
   11af8:	60                   	(bad)  
   11af9:	09 00                	or     %eax,(%rax)
   11afb:	00 00                	add    %al,(%rax)
   11afd:	00 00                	add    %al,(%rax)
   11aff:	00 60 09             	add    %ah,0x9(%rax)
   11b02:	00 00                	add    %al,(%rax)
   11b04:	00 00                	add    %al,(%rax)
   11b06:	00 00                	add    %al,(%rax)
   11b08:	60                   	(bad)  
   11b09:	09 00                	or     %eax,(%rax)
   11b0b:	00 00                	add    %al,(%rax)
   11b0d:	00 00                	add    %al,(%rax)
   11b0f:	00 60 09             	add    %ah,0x9(%rax)
   11b12:	00 00                	add    %al,(%rax)
   11b14:	00 00                	add    %al,(%rax)
   11b16:	00 00                	add    %al,(%rax)
   11b18:	60                   	(bad)  
   11b19:	09 00                	or     %eax,(%rax)
   11b1b:	00 00                	add    %al,(%rax)
   11b1d:	00 00                	add    %al,(%rax)
   11b1f:	00 60 09             	add    %ah,0x9(%rax)
   11b22:	00 00                	add    %al,(%rax)
   11b24:	00 00                	add    %al,(%rax)
   11b26:	00 00                	add    %al,(%rax)
   11b28:	60                   	(bad)  
   11b29:	09 00                	or     %eax,(%rax)
   11b2b:	00 00                	add    %al,(%rax)
   11b2d:	00 00                	add    %al,(%rax)
   11b2f:	00 60 09             	add    %ah,0x9(%rax)
   11b32:	00 00                	add    %al,(%rax)
   11b34:	00 00                	add    %al,(%rax)
   11b36:	00 00                	add    %al,(%rax)
   11b38:	60                   	(bad)  
   11b39:	09 00                	or     %eax,(%rax)
   11b3b:	00 00                	add    %al,(%rax)
   11b3d:	00 00                	add    %al,(%rax)
   11b3f:	00 60 09             	add    %ah,0x9(%rax)
   11b42:	00 00                	add    %al,(%rax)
   11b44:	00 00                	add    %al,(%rax)
   11b46:	00 00                	add    %al,(%rax)
   11b48:	60                   	(bad)  
   11b49:	09 00                	or     %eax,(%rax)
   11b4b:	00 00                	add    %al,(%rax)
   11b4d:	00 00                	add    %al,(%rax)
   11b4f:	00 60 09             	add    %ah,0x9(%rax)
   11b52:	00 00                	add    %al,(%rax)
   11b54:	00 00                	add    %al,(%rax)
   11b56:	00 00                	add    %al,(%rax)
   11b58:	60                   	(bad)  
   11b59:	09 00                	or     %eax,(%rax)
   11b5b:	00 00                	add    %al,(%rax)
   11b5d:	00 00                	add    %al,(%rax)
   11b5f:	00 60 09             	add    %ah,0x9(%rax)
   11b62:	00 00                	add    %al,(%rax)
   11b64:	00 00                	add    %al,(%rax)
   11b66:	00 00                	add    %al,(%rax)
   11b68:	60                   	(bad)  
   11b69:	09 00                	or     %eax,(%rax)
   11b6b:	00 00                	add    %al,(%rax)
   11b6d:	00 00                	add    %al,(%rax)
   11b6f:	00 60 09             	add    %ah,0x9(%rax)
   11b72:	00 00                	add    %al,(%rax)
   11b74:	00 00                	add    %al,(%rax)
   11b76:	00 00                	add    %al,(%rax)
   11b78:	60                   	(bad)  
   11b79:	09 00                	or     %eax,(%rax)
   11b7b:	00 00                	add    %al,(%rax)
   11b7d:	00 00                	add    %al,(%rax)
   11b7f:	00 60 09             	add    %ah,0x9(%rax)
   11b82:	00 00                	add    %al,(%rax)
   11b84:	00 00                	add    %al,(%rax)
   11b86:	00 00                	add    %al,(%rax)
   11b88:	60                   	(bad)  
   11b89:	09 00                	or     %eax,(%rax)
   11b8b:	00 00                	add    %al,(%rax)
   11b8d:	00 00                	add    %al,(%rax)
   11b8f:	00 50 09             	add    %dl,0x9(%rax)
   11b92:	00 00                	add    %al,(%rax)
   11b94:	00 00                	add    %al,(%rax)
   11b96:	00 00                	add    %al,(%rax)
   11b98:	40 09 00             	rex or %eax,(%rax)
   11b9b:	00 00                	add    %al,(%rax)
   11b9d:	00 00                	add    %al,(%rax)
   11b9f:	00 40 09             	add    %al,0x9(%rax)
   11ba2:	00 00                	add    %al,(%rax)
   11ba4:	00 00                	add    %al,(%rax)
   11ba6:	00 00                	add    %al,(%rax)
   11ba8:	40 09 00             	rex or %eax,(%rax)
   11bab:	00 00                	add    %al,(%rax)
   11bad:	00 00                	add    %al,(%rax)
   11baf:	00 40 09             	add    %al,0x9(%rax)
   11bb2:	00 00                	add    %al,(%rax)
   11bb4:	00 00                	add    %al,(%rax)
   11bb6:	00 00                	add    %al,(%rax)
   11bb8:	40 09 00             	rex or %eax,(%rax)
   11bbb:	00 00                	add    %al,(%rax)
   11bbd:	00 00                	add    %al,(%rax)
   11bbf:	00 40 09             	add    %al,0x9(%rax)
   11bc2:	00 00                	add    %al,(%rax)
   11bc4:	00 00                	add    %al,(%rax)
   11bc6:	00 00                	add    %al,(%rax)
   11bc8:	40 09 00             	rex or %eax,(%rax)
   11bcb:	00 00                	add    %al,(%rax)
   11bcd:	00 00                	add    %al,(%rax)
   11bcf:	00 40 09             	add    %al,0x9(%rax)
   11bd2:	00 00                	add    %al,(%rax)
   11bd4:	00 00                	add    %al,(%rax)
   11bd6:	00 00                	add    %al,(%rax)
   11bd8:	40 09 00             	rex or %eax,(%rax)
   11bdb:	00 00                	add    %al,(%rax)
   11bdd:	00 00                	add    %al,(%rax)
   11bdf:	00 40 09             	add    %al,0x9(%rax)
   11be2:	00 00                	add    %al,(%rax)
   11be4:	00 00                	add    %al,(%rax)
   11be6:	00 00                	add    %al,(%rax)
   11be8:	40 09 00             	rex or %eax,(%rax)
   11beb:	00 00                	add    %al,(%rax)
   11bed:	00 00                	add    %al,(%rax)
   11bef:	00 40 09             	add    %al,0x9(%rax)
   11bf2:	00 00                	add    %al,(%rax)
   11bf4:	00 00                	add    %al,(%rax)
   11bf6:	00 00                	add    %al,(%rax)
   11bf8:	40 09 00             	rex or %eax,(%rax)
   11bfb:	00 00                	add    %al,(%rax)
   11bfd:	00 00                	add    %al,(%rax)
   11bff:	00 40 09             	add    %al,0x9(%rax)
   11c02:	00 00                	add    %al,(%rax)
   11c04:	00 00                	add    %al,(%rax)
   11c06:	00 00                	add    %al,(%rax)
   11c08:	40 09 00             	rex or %eax,(%rax)
   11c0b:	00 00                	add    %al,(%rax)
   11c0d:	00 00                	add    %al,(%rax)
   11c0f:	00 40 09             	add    %al,0x9(%rax)
   11c12:	00 00                	add    %al,(%rax)
   11c14:	00 00                	add    %al,(%rax)
   11c16:	00 00                	add    %al,(%rax)
   11c18:	40 09 00             	rex or %eax,(%rax)
   11c1b:	00 00                	add    %al,(%rax)
   11c1d:	00 00                	add    %al,(%rax)
   11c1f:	00 40 09             	add    %al,0x9(%rax)
   11c22:	00 00                	add    %al,(%rax)
   11c24:	00 00                	add    %al,(%rax)
   11c26:	00 00                	add    %al,(%rax)
   11c28:	40 09 00             	rex or %eax,(%rax)
   11c2b:	00 00                	add    %al,(%rax)
   11c2d:	00 00                	add    %al,(%rax)
   11c2f:	00 40 09             	add    %al,0x9(%rax)
   11c32:	00 00                	add    %al,(%rax)
   11c34:	00 00                	add    %al,(%rax)
   11c36:	00 00                	add    %al,(%rax)
   11c38:	40 09 00             	rex or %eax,(%rax)
   11c3b:	00 00                	add    %al,(%rax)
   11c3d:	00 00                	add    %al,(%rax)
   11c3f:	00 40 09             	add    %al,0x9(%rax)
   11c42:	00 00                	add    %al,(%rax)
   11c44:	00 00                	add    %al,(%rax)
   11c46:	00 00                	add    %al,(%rax)
   11c48:	40 09 00             	rex or %eax,(%rax)
   11c4b:	00 00                	add    %al,(%rax)
   11c4d:	00 00                	add    %al,(%rax)
   11c4f:	00 40 09             	add    %al,0x9(%rax)
   11c52:	00 00                	add    %al,(%rax)
   11c54:	00 00                	add    %al,(%rax)
   11c56:	00 00                	add    %al,(%rax)
   11c58:	40 09 00             	rex or %eax,(%rax)
   11c5b:	00 00                	add    %al,(%rax)
   11c5d:	00 00                	add    %al,(%rax)
   11c5f:	00 40 09             	add    %al,0x9(%rax)
   11c62:	00 00                	add    %al,(%rax)
   11c64:	00 00                	add    %al,(%rax)
   11c66:	00 00                	add    %al,(%rax)
   11c68:	40 09 00             	rex or %eax,(%rax)
   11c6b:	00 00                	add    %al,(%rax)
   11c6d:	00 00                	add    %al,(%rax)
   11c6f:	00 40 09             	add    %al,0x9(%rax)
   11c72:	00 00                	add    %al,(%rax)
   11c74:	00 00                	add    %al,(%rax)
   11c76:	00 00                	add    %al,(%rax)
   11c78:	40 09 00             	rex or %eax,(%rax)
   11c7b:	00 00                	add    %al,(%rax)
   11c7d:	00 00                	add    %al,(%rax)
   11c7f:	00 40 09             	add    %al,0x9(%rax)
   11c82:	00 00                	add    %al,(%rax)
   11c84:	00 00                	add    %al,(%rax)
   11c86:	00 00                	add    %al,(%rax)
   11c88:	40 09 00             	rex or %eax,(%rax)
   11c8b:	00 00                	add    %al,(%rax)
   11c8d:	00 00                	add    %al,(%rax)
   11c8f:	00 40 09             	add    %al,0x9(%rax)
   11c92:	00 00                	add    %al,(%rax)
   11c94:	00 00                	add    %al,(%rax)
   11c96:	00 00                	add    %al,(%rax)
   11c98:	40 09 00             	rex or %eax,(%rax)
   11c9b:	00 00                	add    %al,(%rax)
   11c9d:	00 00                	add    %al,(%rax)
   11c9f:	00 40 09             	add    %al,0x9(%rax)
   11ca2:	00 00                	add    %al,(%rax)
   11ca4:	00 00                	add    %al,(%rax)
   11ca6:	00 00                	add    %al,(%rax)
   11ca8:	40 09 00             	rex or %eax,(%rax)
   11cab:	00 00                	add    %al,(%rax)
   11cad:	00 00                	add    %al,(%rax)
   11caf:	00 40 09             	add    %al,0x9(%rax)
   11cb2:	00 00                	add    %al,(%rax)
   11cb4:	00 00                	add    %al,(%rax)
   11cb6:	00 00                	add    %al,(%rax)
   11cb8:	40 09 00             	rex or %eax,(%rax)
   11cbb:	00 00                	add    %al,(%rax)
   11cbd:	00 00                	add    %al,(%rax)
   11cbf:	00 40 09             	add    %al,0x9(%rax)
   11cc2:	00 00                	add    %al,(%rax)
   11cc4:	00 00                	add    %al,(%rax)
   11cc6:	00 00                	add    %al,(%rax)
   11cc8:	40 09 00             	rex or %eax,(%rax)
   11ccb:	00 00                	add    %al,(%rax)
   11ccd:	00 00                	add    %al,(%rax)
   11ccf:	00 40 09             	add    %al,0x9(%rax)
   11cd2:	00 00                	add    %al,(%rax)
   11cd4:	00 00                	add    %al,(%rax)
   11cd6:	00 00                	add    %al,(%rax)
   11cd8:	40 09 00             	rex or %eax,(%rax)
   11cdb:	00 00                	add    %al,(%rax)
   11cdd:	00 00                	add    %al,(%rax)
   11cdf:	00 40 09             	add    %al,0x9(%rax)
   11ce2:	00 00                	add    %al,(%rax)
   11ce4:	00 00                	add    %al,(%rax)
   11ce6:	00 00                	add    %al,(%rax)
   11ce8:	40 09 00             	rex or %eax,(%rax)
   11ceb:	00 00                	add    %al,(%rax)
   11ced:	00 00                	add    %al,(%rax)
   11cef:	00 40 09             	add    %al,0x9(%rax)
   11cf2:	00 00                	add    %al,(%rax)
   11cf4:	00 00                	add    %al,(%rax)
   11cf6:	00 00                	add    %al,(%rax)
   11cf8:	40 09 00             	rex or %eax,(%rax)
   11cfb:	00 00                	add    %al,(%rax)
   11cfd:	00 00                	add    %al,(%rax)
   11cff:	00 40 09             	add    %al,0x9(%rax)
   11d02:	00 00                	add    %al,(%rax)
   11d04:	00 00                	add    %al,(%rax)
   11d06:	00 00                	add    %al,(%rax)
   11d08:	40 09 00             	rex or %eax,(%rax)
   11d0b:	00 00                	add    %al,(%rax)
   11d0d:	00 00                	add    %al,(%rax)
   11d0f:	00 40 09             	add    %al,0x9(%rax)
   11d12:	00 00                	add    %al,(%rax)
   11d14:	00 00                	add    %al,(%rax)
   11d16:	00 00                	add    %al,(%rax)
   11d18:	40 09 00             	rex or %eax,(%rax)
   11d1b:	00 00                	add    %al,(%rax)
   11d1d:	00 00                	add    %al,(%rax)
   11d1f:	00 40 09             	add    %al,0x9(%rax)
   11d22:	00 00                	add    %al,(%rax)
   11d24:	00 00                	add    %al,(%rax)
   11d26:	00 00                	add    %al,(%rax)
   11d28:	40 09 00             	rex or %eax,(%rax)
   11d2b:	00 00                	add    %al,(%rax)
   11d2d:	00 00                	add    %al,(%rax)
   11d2f:	00 40 09             	add    %al,0x9(%rax)
   11d32:	00 00                	add    %al,(%rax)
   11d34:	00 00                	add    %al,(%rax)
   11d36:	00 00                	add    %al,(%rax)
   11d38:	40 09 00             	rex or %eax,(%rax)
   11d3b:	00 00                	add    %al,(%rax)
   11d3d:	00 00                	add    %al,(%rax)
   11d3f:	00 40 09             	add    %al,0x9(%rax)
   11d42:	00 00                	add    %al,(%rax)
   11d44:	00 00                	add    %al,(%rax)
   11d46:	00 00                	add    %al,(%rax)
   11d48:	40 09 00             	rex or %eax,(%rax)
   11d4b:	00 00                	add    %al,(%rax)
   11d4d:	00 00                	add    %al,(%rax)
   11d4f:	00 40 09             	add    %al,0x9(%rax)
   11d52:	00 00                	add    %al,(%rax)
   11d54:	00 00                	add    %al,(%rax)
   11d56:	00 00                	add    %al,(%rax)
   11d58:	40 09 00             	rex or %eax,(%rax)
   11d5b:	00 00                	add    %al,(%rax)
   11d5d:	00 00                	add    %al,(%rax)
   11d5f:	00 40 09             	add    %al,0x9(%rax)
   11d62:	00 00                	add    %al,(%rax)
   11d64:	00 00                	add    %al,(%rax)
   11d66:	00 00                	add    %al,(%rax)
   11d68:	40 09 00             	rex or %eax,(%rax)
   11d6b:	00 00                	add    %al,(%rax)
   11d6d:	00 00                	add    %al,(%rax)
   11d6f:	00 40 09             	add    %al,0x9(%rax)
   11d72:	00 00                	add    %al,(%rax)
   11d74:	00 00                	add    %al,(%rax)
   11d76:	00 00                	add    %al,(%rax)
   11d78:	40 09 00             	rex or %eax,(%rax)
   11d7b:	00 00                	add    %al,(%rax)
   11d7d:	00 00                	add    %al,(%rax)
   11d7f:	00 40 09             	add    %al,0x9(%rax)
   11d82:	00 00                	add    %al,(%rax)
   11d84:	00 00                	add    %al,(%rax)
   11d86:	00 00                	add    %al,(%rax)
   11d88:	40 09 00             	rex or %eax,(%rax)
   11d8b:	00 00                	add    %al,(%rax)
   11d8d:	00 00                	add    %al,(%rax)
   11d8f:	00 20                	add    %ah,(%rax)
   11d91:	09 00                	or     %eax,(%rax)
   11d93:	00 00                	add    %al,(%rax)
   11d95:	00 00                	add    %al,(%rax)
   11d97:	00 20                	add    %ah,(%rax)
   11d99:	09 00                	or     %eax,(%rax)
   11d9b:	00 00                	add    %al,(%rax)
   11d9d:	00 00                	add    %al,(%rax)
   11d9f:	00 c5                	add    %al,%ch
   11da1:	f8                   	clc    
   11da2:	77 4c                	ja     11df0 <__intel_mic_avx512f_memcpy+0x30>
   11da4:	89 c0                	mov    %eax,%eax
   11da6:	c3                   	retq   
   11da7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11dae:	00 00 
   11db0:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11db7:	00 00 00 
   11dba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000011dc0 <__intel_mic_avx512f_memcpy>:
   11dc0:	f3 0f 1e fa          	repz nop %edx
   11dc4:	41 56                	push   %r14
   11dc6:	48 89 f8             	mov    %rdi,%rax
   11dc9:	4c 8d 05 b8 0a 21 00 	lea    0x210ab8(%rip),%r8        # 222888 <__libirc_largest_cache_size_half>
   11dd0:	49 89 c6             	mov    %rax,%r14
   11dd3:	48 8d 0d b6 0a 21 00 	lea    0x210ab6(%rip),%rcx        # 222890 <__libirc_data_cache_size_half>
   11dda:	4c 8d 0d 1f 17 00 00 	lea    0x171f(%rip),%r9        # 13500 <__intel_mic_avx512f_memcpy+0x1740>
   11de1:	48 81 fa 80 00 00 00 	cmp    $0x80,%rdx
   11de8:	7d 13                	jge    11dfd <__intel_mic_avx512f_memcpy+0x3d>
   11dea:	4c 89 f7             	mov    %r14,%rdi
   11ded:	48 03 fa             	add    %rdx,%rdi
   11df0:	49 89 f3             	mov    %rsi,%r11
   11df3:	4c 03 da             	add    %rdx,%r11
   11df6:	4d 2b 0c d1          	sub    (%r9,%rdx,8),%r9
   11dfa:	41 ff e1             	jmpq   *%r9
   11dfd:	4c 8d 0d fc 04 00 00 	lea    0x4fc(%rip),%r9        # 12300 <__intel_mic_avx512f_memcpy+0x540>
   11e04:	4d 89 f2             	mov    %r14,%r10
   11e07:	49 f7 da             	neg    %r10
   11e0a:	49 83 c2 40          	add    $0x40,%r10
   11e0e:	49 83 e2 3f          	and    $0x3f,%r10
   11e12:	74 1c                	je     11e30 <__intel_mic_avx512f_memcpy+0x70>
   11e14:	49 2b d2             	sub    %r10,%rdx
   11e17:	4c 89 f7             	mov    %r14,%rdi
   11e1a:	49 03 fa             	add    %r10,%rdi
   11e1d:	49 89 f3             	mov    %rsi,%r11
   11e20:	4d 03 da             	add    %r10,%r11
   11e23:	4f 2b 0c d1          	sub    (%r9,%r10,8),%r9
   11e27:	41 ff e1             	jmpq   *%r9
   11e2a:	4d 03 f2             	add    %r10,%r14
   11e2d:	49 03 f2             	add    %r10,%rsi
   11e30:	48 81 fa 00 02 00 00 	cmp    $0x200,%rdx
   11e37:	0f 8c 01 03 00 00    	jl     1213e <__intel_mic_avx512f_memcpy+0x37e>
   11e3d:	45 8b 08             	mov    (%r8),%r9d
   11e40:	49 3b d1             	cmp    %r9,%rdx
   11e43:	0f 83 cd 00 00 00    	jae    11f16 <__intel_mic_avx512f_memcpy+0x156>
   11e49:	62 f1 fe 48 6f 06    	vmovdqu64 (%rsi),%zmm0
   11e4f:	0f 18 96 00 06 00 00 	prefetcht1 0x600(%rsi)
   11e56:	62 d1 7c 48 29 06    	vmovaps %zmm0,(%r14)
   11e5c:	62 f1 fe 48 6f 46 01 	vmovdqu64 0x40(%rsi),%zmm0
   11e63:	0f 18 96 40 06 00 00 	prefetcht1 0x640(%rsi)
   11e6a:	62 d1 7c 48 29 46 01 	vmovaps %zmm0,0x40(%r14)
   11e71:	62 f1 fe 48 6f 46 02 	vmovdqu64 0x80(%rsi),%zmm0
   11e78:	0f 18 96 80 06 00 00 	prefetcht1 0x680(%rsi)
   11e7f:	62 d1 7c 48 29 46 02 	vmovaps %zmm0,0x80(%r14)
   11e86:	62 f1 fe 48 6f 46 03 	vmovdqu64 0xc0(%rsi),%zmm0
   11e8d:	0f 18 96 c0 06 00 00 	prefetcht1 0x6c0(%rsi)
   11e94:	62 d1 7c 48 29 46 03 	vmovaps %zmm0,0xc0(%r14)
   11e9b:	4d 8d b6 00 02 00 00 	lea    0x200(%r14),%r14
   11ea2:	48 8d b6 00 02 00 00 	lea    0x200(%rsi),%rsi
   11ea9:	48 81 ea 00 02 00 00 	sub    $0x200,%rdx
   11eb0:	62 f1 fe 48 6f 46 fc 	vmovdqu64 -0x100(%rsi),%zmm0
   11eb7:	0f 18 96 00 05 00 00 	prefetcht1 0x500(%rsi)
   11ebe:	62 d1 7c 48 29 46 fc 	vmovaps %zmm0,-0x100(%r14)
   11ec5:	62 f1 fe 48 6f 46 fd 	vmovdqu64 -0xc0(%rsi),%zmm0
   11ecc:	0f 18 96 40 05 00 00 	prefetcht1 0x540(%rsi)
   11ed3:	62 d1 7c 48 29 46 fd 	vmovaps %zmm0,-0xc0(%r14)
   11eda:	62 f1 fe 48 6f 46 fe 	vmovdqu64 -0x80(%rsi),%zmm0
   11ee1:	0f 18 96 80 05 00 00 	prefetcht1 0x580(%rsi)
   11ee8:	62 d1 7c 48 29 46 fe 	vmovaps %zmm0,-0x80(%r14)
   11eef:	62 f1 fe 48 6f 46 ff 	vmovdqu64 -0x40(%rsi),%zmm0
   11ef6:	0f 18 96 c0 05 00 00 	prefetcht1 0x5c0(%rsi)
   11efd:	62 d1 7c 48 29 46 ff 	vmovaps %zmm0,-0x40(%r14)
   11f04:	48 81 fa 00 02 00 00 	cmp    $0x200,%rdx
   11f0b:	0f 8d 38 ff ff ff    	jge    11e49 <__intel_mic_avx512f_memcpy+0x89>
   11f11:	e9 28 02 00 00       	jmpq   1213e <__intel_mic_avx512f_memcpy+0x37e>
   11f16:	0f 18 16             	prefetcht1 (%rsi)
   11f19:	0f 18 56 40          	prefetcht1 0x40(%rsi)
   11f1d:	0f 18 96 80 00 00 00 	prefetcht1 0x80(%rsi)
   11f24:	0f 18 96 c0 00 00 00 	prefetcht1 0xc0(%rsi)
   11f2b:	0f 18 96 00 01 00 00 	prefetcht1 0x100(%rsi)
   11f32:	0f 18 96 40 01 00 00 	prefetcht1 0x140(%rsi)
   11f39:	0f 18 96 80 01 00 00 	prefetcht1 0x180(%rsi)
   11f40:	0f 18 96 c0 01 00 00 	prefetcht1 0x1c0(%rsi)
   11f47:	0f 18 96 00 02 00 00 	prefetcht1 0x200(%rsi)
   11f4e:	0f 18 96 40 02 00 00 	prefetcht1 0x240(%rsi)
   11f55:	0f 18 96 80 02 00 00 	prefetcht1 0x280(%rsi)
   11f5c:	0f 18 96 c0 02 00 00 	prefetcht1 0x2c0(%rsi)
   11f63:	0f 18 96 00 03 00 00 	prefetcht1 0x300(%rsi)
   11f6a:	0f 18 96 40 03 00 00 	prefetcht1 0x340(%rsi)
   11f71:	0f 18 96 80 03 00 00 	prefetcht1 0x380(%rsi)
   11f78:	0f 18 96 c0 03 00 00 	prefetcht1 0x3c0(%rsi)
   11f7f:	0f 18 96 00 04 00 00 	prefetcht1 0x400(%rsi)
   11f86:	0f 18 96 40 04 00 00 	prefetcht1 0x440(%rsi)
   11f8d:	0f 18 96 80 04 00 00 	prefetcht1 0x480(%rsi)
   11f94:	0f 18 96 c0 04 00 00 	prefetcht1 0x4c0(%rsi)
   11f9b:	0f 18 96 00 05 00 00 	prefetcht1 0x500(%rsi)
   11fa2:	0f 18 96 40 05 00 00 	prefetcht1 0x540(%rsi)
   11fa9:	0f 18 96 80 05 00 00 	prefetcht1 0x580(%rsi)
   11fb0:	0f 18 96 c0 05 00 00 	prefetcht1 0x5c0(%rsi)
   11fb7:	62 f1 fe 48 6f 06    	vmovdqu64 (%rsi),%zmm0
   11fbd:	0f 18 96 00 06 00 00 	prefetcht1 0x600(%rsi)
   11fc4:	62 d1 7d 48 e7 06    	vmovntdq %zmm0,(%r14)
   11fca:	62 f1 fe 48 6f 46 01 	vmovdqu64 0x40(%rsi),%zmm0
   11fd1:	0f 18 96 40 06 00 00 	prefetcht1 0x640(%rsi)
   11fd8:	62 d1 7d 48 e7 46 01 	vmovntdq %zmm0,0x40(%r14)
   11fdf:	62 f1 fe 48 6f 46 02 	vmovdqu64 0x80(%rsi),%zmm0
   11fe6:	0f 18 96 80 06 00 00 	prefetcht1 0x680(%rsi)
   11fed:	62 d1 7d 48 e7 46 02 	vmovntdq %zmm0,0x80(%r14)
   11ff4:	62 f1 fe 48 6f 46 03 	vmovdqu64 0xc0(%rsi),%zmm0
   11ffb:	0f 18 96 c0 06 00 00 	prefetcht1 0x6c0(%rsi)
   12002:	62 d1 7d 48 e7 46 03 	vmovntdq %zmm0,0xc0(%r14)
   12009:	4d 8d b6 00 02 00 00 	lea    0x200(%r14),%r14
   12010:	48 8d b6 00 02 00 00 	lea    0x200(%rsi),%rsi
   12017:	48 81 ea 00 02 00 00 	sub    $0x200,%rdx
   1201e:	62 f1 fe 48 6f 46 fc 	vmovdqu64 -0x100(%rsi),%zmm0
   12025:	0f 18 96 00 05 00 00 	prefetcht1 0x500(%rsi)
   1202c:	62 d1 7d 48 e7 46 fc 	vmovntdq %zmm0,-0x100(%r14)
   12033:	62 f1 fe 48 6f 46 fd 	vmovdqu64 -0xc0(%rsi),%zmm0
   1203a:	0f 18 96 40 05 00 00 	prefetcht1 0x540(%rsi)
   12041:	62 d1 7d 48 e7 46 fd 	vmovntdq %zmm0,-0xc0(%r14)
   12048:	62 f1 fe 48 6f 46 fe 	vmovdqu64 -0x80(%rsi),%zmm0
   1204f:	0f 18 96 80 05 00 00 	prefetcht1 0x580(%rsi)
   12056:	62 d1 7d 48 e7 46 fe 	vmovntdq %zmm0,-0x80(%r14)
   1205d:	62 f1 fe 48 6f 46 ff 	vmovdqu64 -0x40(%rsi),%zmm0
   12064:	0f 18 96 c0 05 00 00 	prefetcht1 0x5c0(%rsi)
   1206b:	62 d1 7d 48 e7 46 ff 	vmovntdq %zmm0,-0x40(%r14)
   12072:	48 81 fa 00 02 00 00 	cmp    $0x200,%rdx
   12079:	0f 8d 38 ff ff ff    	jge    11fb7 <__intel_mic_avx512f_memcpy+0x1f7>
   1207f:	0f ae f8             	sfence 
   12082:	e9 b7 00 00 00       	jmpq   1213e <__intel_mic_avx512f_memcpy+0x37e>
   12087:	44 8a 0e             	mov    (%rsi),%r9b
   1208a:	45 88 0e             	mov    %r9b,(%r14)
   1208d:	e9 98 fd ff ff       	jmpq   11e2a <__intel_mic_avx512f_memcpy+0x6a>
   12092:	66 44 8b 0e          	mov    (%rsi),%r9w
   12096:	66 45 89 0e          	mov    %r9w,(%r14)
   1209a:	e9 8b fd ff ff       	jmpq   11e2a <__intel_mic_avx512f_memcpy+0x6a>
   1209f:	66 44 8b 0e          	mov    (%rsi),%r9w
   120a3:	66 45 89 0e          	mov    %r9w,(%r14)
   120a7:	44 8a 4e 02          	mov    0x2(%rsi),%r9b
   120ab:	45 88 4e 02          	mov    %r9b,0x2(%r14)
   120af:	e9 76 fd ff ff       	jmpq   11e2a <__intel_mic_avx512f_memcpy+0x6a>
   120b4:	44 8b 0e             	mov    (%rsi),%r9d
   120b7:	45 89 0e             	mov    %r9d,(%r14)
   120ba:	e9 6b fd ff ff       	jmpq   11e2a <__intel_mic_avx512f_memcpy+0x6a>
   120bf:	44 8b 0e             	mov    (%rsi),%r9d
   120c2:	45 89 0e             	mov    %r9d,(%r14)
   120c5:	45 8b 4b fc          	mov    -0x4(%r11),%r9d
   120c9:	44 89 4f fc          	mov    %r9d,-0x4(%rdi)
   120cd:	e9 58 fd ff ff       	jmpq   11e2a <__intel_mic_avx512f_memcpy+0x6a>
   120d2:	4c 8b 0e             	mov    (%rsi),%r9
   120d5:	4d 89 0e             	mov    %r9,(%r14)
   120d8:	e9 4d fd ff ff       	jmpq   11e2a <__intel_mic_avx512f_memcpy+0x6a>
   120dd:	4c 8b 0e             	mov    (%rsi),%r9
   120e0:	4d 89 0e             	mov    %r9,(%r14)
   120e3:	4d 8b 4b f8          	mov    -0x8(%r11),%r9
   120e7:	4c 89 4f f8          	mov    %r9,-0x8(%rdi)
   120eb:	e9 3a fd ff ff       	jmpq   11e2a <__intel_mic_avx512f_memcpy+0x6a>
   120f0:	c5 f8 10 06          	vmovups (%rsi),%xmm0
   120f4:	c4 c1 78 11 06       	vmovups %xmm0,(%r14)
   120f9:	e9 2c fd ff ff       	jmpq   11e2a <__intel_mic_avx512f_memcpy+0x6a>
   120fe:	c5 f8 10 06          	vmovups (%rsi),%xmm0
   12102:	c4 c1 78 11 06       	vmovups %xmm0,(%r14)
   12107:	c4 c1 78 10 43 f0    	vmovups -0x10(%r11),%xmm0
   1210d:	c5 f8 11 47 f0       	vmovups %xmm0,-0x10(%rdi)
   12112:	e9 13 fd ff ff       	jmpq   11e2a <__intel_mic_avx512f_memcpy+0x6a>
   12117:	c5 fc 10 06          	vmovups (%rsi),%ymm0
   1211b:	c4 c1 7c 11 06       	vmovups %ymm0,(%r14)
   12120:	e9 05 fd ff ff       	jmpq   11e2a <__intel_mic_avx512f_memcpy+0x6a>
   12125:	c5 fc 10 06          	vmovups (%rsi),%ymm0
   12129:	c4 c1 7c 11 06       	vmovups %ymm0,(%r14)
   1212e:	c4 c1 7c 10 43 e0    	vmovups -0x20(%r11),%ymm0
   12134:	c5 fc 11 47 e0       	vmovups %ymm0,-0x20(%rdi)
   12139:	e9 ec fc ff ff       	jmpq   11e2a <__intel_mic_avx512f_memcpy+0x6a>
   1213e:	4c 89 f7             	mov    %r14,%rdi
   12141:	48 03 fa             	add    %rdx,%rdi
   12144:	49 89 fa             	mov    %rdi,%r10
   12147:	4c 03 f2             	add    %rdx,%r14
   1214a:	49 83 e6 c0          	and    $0xffffffffffffffc0,%r14
   1214e:	49 89 f3             	mov    %rsi,%r11
   12151:	4c 03 da             	add    %rdx,%r11
   12154:	4d 2b d6             	sub    %r14,%r10
   12157:	4c 89 de             	mov    %r11,%rsi
   1215a:	49 2b f2             	sub    %r10,%rsi
   1215d:	4c 8d 0d 9c 03 00 00 	lea    0x39c(%rip),%r9        # 12500 <__intel_mic_avx512f_memcpy+0x740>
   12164:	4d 2b 0c d1          	sub    (%r9,%rdx,8),%r9
   12168:	41 ff e1             	jmpq   *%r9
   1216b:	62 f1 7c 48 10 46 f9 	vmovups -0x1c0(%rsi),%zmm0
   12172:	62 d1 7c 48 29 46 f9 	vmovaps %zmm0,-0x1c0(%r14)
   12179:	62 f1 7c 48 10 46 fa 	vmovups -0x180(%rsi),%zmm0
   12180:	62 d1 7c 48 29 46 fa 	vmovaps %zmm0,-0x180(%r14)
   12187:	62 f1 7c 48 10 46 fb 	vmovups -0x140(%rsi),%zmm0
   1218e:	62 d1 7c 48 29 46 fb 	vmovaps %zmm0,-0x140(%r14)
   12195:	62 f1 7c 48 10 46 fc 	vmovups -0x100(%rsi),%zmm0
   1219c:	62 d1 7c 48 29 46 fc 	vmovaps %zmm0,-0x100(%r14)
   121a3:	62 f1 7c 48 10 46 fd 	vmovups -0xc0(%rsi),%zmm0
   121aa:	62 d1 7c 48 29 46 fd 	vmovaps %zmm0,-0xc0(%r14)
   121b1:	62 f1 7c 48 10 46 fe 	vmovups -0x80(%rsi),%zmm0
   121b8:	62 d1 7c 48 29 46 fe 	vmovaps %zmm0,-0x80(%r14)
   121bf:	62 f1 7c 48 10 46 ff 	vmovups -0x40(%rsi),%zmm0
   121c6:	62 d1 7c 48 29 46 ff 	vmovaps %zmm0,-0x40(%r14)
   121cd:	4c 8d 0d 2c 03 00 00 	lea    0x32c(%rip),%r9        # 12500 <__intel_mic_avx512f_memcpy+0x740>
   121d4:	4f 2b 0c d1          	sub    (%r9,%r10,8),%r9
   121d8:	41 ff e1             	jmpq   *%r9
   121db:	44 8a 0e             	mov    (%rsi),%r9b
   121de:	45 88 0e             	mov    %r9b,(%r14)
   121e1:	e9 1a 17 00 00       	jmpq   13900 <__intel_mic_avx512f_memcpy+0x1b40>
   121e6:	e9 15 17 00 00       	jmpq   13900 <__intel_mic_avx512f_memcpy+0x1b40>
   121eb:	66 44 8b 0e          	mov    (%rsi),%r9w
   121ef:	66 45 89 0e          	mov    %r9w,(%r14)
   121f3:	e9 08 17 00 00       	jmpq   13900 <__intel_mic_avx512f_memcpy+0x1b40>
   121f8:	66 44 8b 0e          	mov    (%rsi),%r9w
   121fc:	66 45 89 0e          	mov    %r9w,(%r14)
   12200:	44 8a 4e 02          	mov    0x2(%rsi),%r9b
   12204:	45 88 4e 02          	mov    %r9b,0x2(%r14)
   12208:	e9 f3 16 00 00       	jmpq   13900 <__intel_mic_avx512f_memcpy+0x1b40>
   1220d:	44 8b 0e             	mov    (%rsi),%r9d
   12210:	45 89 0e             	mov    %r9d,(%r14)
   12213:	e9 e8 16 00 00       	jmpq   13900 <__intel_mic_avx512f_memcpy+0x1b40>
   12218:	44 8b 0e             	mov    (%rsi),%r9d
   1221b:	45 89 0e             	mov    %r9d,(%r14)
   1221e:	45 8b 4b fc          	mov    -0x4(%r11),%r9d
   12222:	44 89 4f fc          	mov    %r9d,-0x4(%rdi)
   12226:	e9 d5 16 00 00       	jmpq   13900 <__intel_mic_avx512f_memcpy+0x1b40>
   1222b:	4c 8b 0e             	mov    (%rsi),%r9
   1222e:	4d 89 0e             	mov    %r9,(%r14)
   12231:	e9 ca 16 00 00       	jmpq   13900 <__intel_mic_avx512f_memcpy+0x1b40>
   12236:	4c 8b 0e             	mov    (%rsi),%r9
   12239:	4d 89 0e             	mov    %r9,(%r14)
   1223c:	4d 8b 4b f8          	mov    -0x8(%r11),%r9
   12240:	4c 89 4f f8          	mov    %r9,-0x8(%rdi)
   12244:	e9 b7 16 00 00       	jmpq   13900 <__intel_mic_avx512f_memcpy+0x1b40>
   12249:	c5 f8 10 06          	vmovups (%rsi),%xmm0
   1224d:	c4 c1 78 11 06       	vmovups %xmm0,(%r14)
   12252:	e9 a9 16 00 00       	jmpq   13900 <__intel_mic_avx512f_memcpy+0x1b40>
   12257:	c5 f8 10 06          	vmovups (%rsi),%xmm0
   1225b:	c4 c1 78 11 06       	vmovups %xmm0,(%r14)
   12260:	c4 c1 78 10 43 f0    	vmovups -0x10(%r11),%xmm0
   12266:	c5 f8 11 47 f0       	vmovups %xmm0,-0x10(%rdi)
   1226b:	e9 90 16 00 00       	jmpq   13900 <__intel_mic_avx512f_memcpy+0x1b40>
   12270:	c5 fc 10 06          	vmovups (%rsi),%ymm0
   12274:	c4 c1 7c 11 06       	vmovups %ymm0,(%r14)
   12279:	e9 82 16 00 00       	jmpq   13900 <__intel_mic_avx512f_memcpy+0x1b40>
   1227e:	c5 fc 10 06          	vmovups (%rsi),%ymm0
   12282:	c4 c1 7c 11 06       	vmovups %ymm0,(%r14)
   12287:	c4 c1 7c 10 43 e0    	vmovups -0x20(%r11),%ymm0
   1228d:	c5 fc 11 47 e0       	vmovups %ymm0,-0x20(%rdi)
   12292:	e9 69 16 00 00       	jmpq   13900 <__intel_mic_avx512f_memcpy+0x1b40>
   12297:	62 f1 7c 48 10 06    	vmovups (%rsi),%zmm0
   1229d:	62 d1 7c 48 11 06    	vmovups %zmm0,(%r14)
   122a3:	e9 58 16 00 00       	jmpq   13900 <__intel_mic_avx512f_memcpy+0x1b40>
   122a8:	62 f1 7c 48 10 06    	vmovups (%rsi),%zmm0
   122ae:	62 d1 7c 48 11 06    	vmovups %zmm0,(%r14)
   122b4:	62 d1 7c 48 10 43 ff 	vmovups -0x40(%r11),%zmm0
   122bb:	62 f1 7c 48 11 47 ff 	vmovups %zmm0,-0x40(%rdi)
   122c2:	e9 39 16 00 00       	jmpq   13900 <__intel_mic_avx512f_memcpy+0x1b40>
   122c7:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   122ce:	00 
   122cf:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   122d6:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   122dd:	00 
   122de:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   122e5:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   122ec:	00 
   122ed:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   122f4:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   122f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12300:	73 02                	jae    12304 <__intel_mic_avx512f_memcpy+0x544>
   12302:	00 00                	add    %al,(%rax)
   12304:	00 00                	add    %al,(%rax)
   12306:	00 00                	add    %al,(%rax)
   12308:	79 02                	jns    1230c <__intel_mic_avx512f_memcpy+0x54c>
   1230a:	00 00                	add    %al,(%rax)
   1230c:	00 00                	add    %al,(%rax)
   1230e:	00 00                	add    %al,(%rax)
   12310:	6e                   	outsb  %ds:(%rsi),(%dx)
   12311:	02 00                	add    (%rax),%al
   12313:	00 00                	add    %al,(%rax)
   12315:	00 00                	add    %al,(%rax)
   12317:	00 61 02             	add    %ah,0x2(%rcx)
   1231a:	00 00                	add    %al,(%rax)
   1231c:	00 00                	add    %al,(%rax)
   1231e:	00 00                	add    %al,(%rax)
   12320:	4c 02 00             	rex.WR add (%rax),%r8b
   12323:	00 00                	add    %al,(%rax)
   12325:	00 00                	add    %al,(%rax)
   12327:	00 41 02             	add    %al,0x2(%rcx)
   1232a:	00 00                	add    %al,(%rax)
   1232c:	00 00                	add    %al,(%rax)
   1232e:	00 00                	add    %al,(%rax)
   12330:	41 02 00             	add    (%r8),%al
   12333:	00 00                	add    %al,(%rax)
   12335:	00 00                	add    %al,(%rax)
   12337:	00 41 02             	add    %al,0x2(%rcx)
   1233a:	00 00                	add    %al,(%rax)
   1233c:	00 00                	add    %al,(%rax)
   1233e:	00 00                	add    %al,(%rax)
   12340:	2e 02 00             	add    %cs:(%rax),%al
   12343:	00 00                	add    %al,(%rax)
   12345:	00 00                	add    %al,(%rax)
   12347:	00 23                	add    %ah,(%rbx)
   12349:	02 00                	add    (%rax),%al
   1234b:	00 00                	add    %al,(%rax)
   1234d:	00 00                	add    %al,(%rax)
   1234f:	00 23                	add    %ah,(%rbx)
   12351:	02 00                	add    (%rax),%al
   12353:	00 00                	add    %al,(%rax)
   12355:	00 00                	add    %al,(%rax)
   12357:	00 23                	add    %ah,(%rbx)
   12359:	02 00                	add    (%rax),%al
   1235b:	00 00                	add    %al,(%rax)
   1235d:	00 00                	add    %al,(%rax)
   1235f:	00 23                	add    %ah,(%rbx)
   12361:	02 00                	add    (%rax),%al
   12363:	00 00                	add    %al,(%rax)
   12365:	00 00                	add    %al,(%rax)
   12367:	00 23                	add    %ah,(%rbx)
   12369:	02 00                	add    (%rax),%al
   1236b:	00 00                	add    %al,(%rax)
   1236d:	00 00                	add    %al,(%rax)
   1236f:	00 23                	add    %ah,(%rbx)
   12371:	02 00                	add    (%rax),%al
   12373:	00 00                	add    %al,(%rax)
   12375:	00 00                	add    %al,(%rax)
   12377:	00 23                	add    %ah,(%rbx)
   12379:	02 00                	add    (%rax),%al
   1237b:	00 00                	add    %al,(%rax)
   1237d:	00 00                	add    %al,(%rax)
   1237f:	00 10                	add    %dl,(%rax)
   12381:	02 00                	add    (%rax),%al
   12383:	00 00                	add    %al,(%rax)
   12385:	00 00                	add    %al,(%rax)
   12387:	00 02                	add    %al,(%rdx)
   12389:	02 00                	add    (%rax),%al
   1238b:	00 00                	add    %al,(%rax)
   1238d:	00 00                	add    %al,(%rax)
   1238f:	00 02                	add    %al,(%rdx)
   12391:	02 00                	add    (%rax),%al
   12393:	00 00                	add    %al,(%rax)
   12395:	00 00                	add    %al,(%rax)
   12397:	00 02                	add    %al,(%rdx)
   12399:	02 00                	add    (%rax),%al
   1239b:	00 00                	add    %al,(%rax)
   1239d:	00 00                	add    %al,(%rax)
   1239f:	00 02                	add    %al,(%rdx)
   123a1:	02 00                	add    (%rax),%al
   123a3:	00 00                	add    %al,(%rax)
   123a5:	00 00                	add    %al,(%rax)
   123a7:	00 02                	add    %al,(%rdx)
   123a9:	02 00                	add    (%rax),%al
   123ab:	00 00                	add    %al,(%rax)
   123ad:	00 00                	add    %al,(%rax)
   123af:	00 02                	add    %al,(%rdx)
   123b1:	02 00                	add    (%rax),%al
   123b3:	00 00                	add    %al,(%rax)
   123b5:	00 00                	add    %al,(%rax)
   123b7:	00 02                	add    %al,(%rdx)
   123b9:	02 00                	add    (%rax),%al
   123bb:	00 00                	add    %al,(%rax)
   123bd:	00 00                	add    %al,(%rax)
   123bf:	00 02                	add    %al,(%rdx)
   123c1:	02 00                	add    (%rax),%al
   123c3:	00 00                	add    %al,(%rax)
   123c5:	00 00                	add    %al,(%rax)
   123c7:	00 02                	add    %al,(%rdx)
   123c9:	02 00                	add    (%rax),%al
   123cb:	00 00                	add    %al,(%rax)
   123cd:	00 00                	add    %al,(%rax)
   123cf:	00 02                	add    %al,(%rdx)
   123d1:	02 00                	add    (%rax),%al
   123d3:	00 00                	add    %al,(%rax)
   123d5:	00 00                	add    %al,(%rax)
   123d7:	00 02                	add    %al,(%rdx)
   123d9:	02 00                	add    (%rax),%al
   123db:	00 00                	add    %al,(%rax)
   123dd:	00 00                	add    %al,(%rax)
   123df:	00 02                	add    %al,(%rdx)
   123e1:	02 00                	add    (%rax),%al
   123e3:	00 00                	add    %al,(%rax)
   123e5:	00 00                	add    %al,(%rax)
   123e7:	00 02                	add    %al,(%rdx)
   123e9:	02 00                	add    (%rax),%al
   123eb:	00 00                	add    %al,(%rax)
   123ed:	00 00                	add    %al,(%rax)
   123ef:	00 02                	add    %al,(%rdx)
   123f1:	02 00                	add    (%rax),%al
   123f3:	00 00                	add    %al,(%rax)
   123f5:	00 00                	add    %al,(%rax)
   123f7:	00 02                	add    %al,(%rdx)
   123f9:	02 00                	add    (%rax),%al
   123fb:	00 00                	add    %al,(%rax)
   123fd:	00 00                	add    %al,(%rax)
   123ff:	00 e9                	add    %ch,%cl
   12401:	01 00                	add    %eax,(%rax)
   12403:	00 00                	add    %al,(%rax)
   12405:	00 00                	add    %al,(%rax)
   12407:	00 db                	add    %bl,%bl
   12409:	01 00                	add    %eax,(%rax)
   1240b:	00 00                	add    %al,(%rax)
   1240d:	00 00                	add    %al,(%rax)
   1240f:	00 db                	add    %bl,%bl
   12411:	01 00                	add    %eax,(%rax)
   12413:	00 00                	add    %al,(%rax)
   12415:	00 00                	add    %al,(%rax)
   12417:	00 db                	add    %bl,%bl
   12419:	01 00                	add    %eax,(%rax)
   1241b:	00 00                	add    %al,(%rax)
   1241d:	00 00                	add    %al,(%rax)
   1241f:	00 db                	add    %bl,%bl
   12421:	01 00                	add    %eax,(%rax)
   12423:	00 00                	add    %al,(%rax)
   12425:	00 00                	add    %al,(%rax)
   12427:	00 db                	add    %bl,%bl
   12429:	01 00                	add    %eax,(%rax)
   1242b:	00 00                	add    %al,(%rax)
   1242d:	00 00                	add    %al,(%rax)
   1242f:	00 db                	add    %bl,%bl
   12431:	01 00                	add    %eax,(%rax)
   12433:	00 00                	add    %al,(%rax)
   12435:	00 00                	add    %al,(%rax)
   12437:	00 db                	add    %bl,%bl
   12439:	01 00                	add    %eax,(%rax)
   1243b:	00 00                	add    %al,(%rax)
   1243d:	00 00                	add    %al,(%rax)
   1243f:	00 db                	add    %bl,%bl
   12441:	01 00                	add    %eax,(%rax)
   12443:	00 00                	add    %al,(%rax)
   12445:	00 00                	add    %al,(%rax)
   12447:	00 db                	add    %bl,%bl
   12449:	01 00                	add    %eax,(%rax)
   1244b:	00 00                	add    %al,(%rax)
   1244d:	00 00                	add    %al,(%rax)
   1244f:	00 db                	add    %bl,%bl
   12451:	01 00                	add    %eax,(%rax)
   12453:	00 00                	add    %al,(%rax)
   12455:	00 00                	add    %al,(%rax)
   12457:	00 db                	add    %bl,%bl
   12459:	01 00                	add    %eax,(%rax)
   1245b:	00 00                	add    %al,(%rax)
   1245d:	00 00                	add    %al,(%rax)
   1245f:	00 db                	add    %bl,%bl
   12461:	01 00                	add    %eax,(%rax)
   12463:	00 00                	add    %al,(%rax)
   12465:	00 00                	add    %al,(%rax)
   12467:	00 db                	add    %bl,%bl
   12469:	01 00                	add    %eax,(%rax)
   1246b:	00 00                	add    %al,(%rax)
   1246d:	00 00                	add    %al,(%rax)
   1246f:	00 db                	add    %bl,%bl
   12471:	01 00                	add    %eax,(%rax)
   12473:	00 00                	add    %al,(%rax)
   12475:	00 00                	add    %al,(%rax)
   12477:	00 db                	add    %bl,%bl
   12479:	01 00                	add    %eax,(%rax)
   1247b:	00 00                	add    %al,(%rax)
   1247d:	00 00                	add    %al,(%rax)
   1247f:	00 db                	add    %bl,%bl
   12481:	01 00                	add    %eax,(%rax)
   12483:	00 00                	add    %al,(%rax)
   12485:	00 00                	add    %al,(%rax)
   12487:	00 db                	add    %bl,%bl
   12489:	01 00                	add    %eax,(%rax)
   1248b:	00 00                	add    %al,(%rax)
   1248d:	00 00                	add    %al,(%rax)
   1248f:	00 db                	add    %bl,%bl
   12491:	01 00                	add    %eax,(%rax)
   12493:	00 00                	add    %al,(%rax)
   12495:	00 00                	add    %al,(%rax)
   12497:	00 db                	add    %bl,%bl
   12499:	01 00                	add    %eax,(%rax)
   1249b:	00 00                	add    %al,(%rax)
   1249d:	00 00                	add    %al,(%rax)
   1249f:	00 db                	add    %bl,%bl
   124a1:	01 00                	add    %eax,(%rax)
   124a3:	00 00                	add    %al,(%rax)
   124a5:	00 00                	add    %al,(%rax)
   124a7:	00 db                	add    %bl,%bl
   124a9:	01 00                	add    %eax,(%rax)
   124ab:	00 00                	add    %al,(%rax)
   124ad:	00 00                	add    %al,(%rax)
   124af:	00 db                	add    %bl,%bl
   124b1:	01 00                	add    %eax,(%rax)
   124b3:	00 00                	add    %al,(%rax)
   124b5:	00 00                	add    %al,(%rax)
   124b7:	00 db                	add    %bl,%bl
   124b9:	01 00                	add    %eax,(%rax)
   124bb:	00 00                	add    %al,(%rax)
   124bd:	00 00                	add    %al,(%rax)
   124bf:	00 db                	add    %bl,%bl
   124c1:	01 00                	add    %eax,(%rax)
   124c3:	00 00                	add    %al,(%rax)
   124c5:	00 00                	add    %al,(%rax)
   124c7:	00 db                	add    %bl,%bl
   124c9:	01 00                	add    %eax,(%rax)
   124cb:	00 00                	add    %al,(%rax)
   124cd:	00 00                	add    %al,(%rax)
   124cf:	00 db                	add    %bl,%bl
   124d1:	01 00                	add    %eax,(%rax)
   124d3:	00 00                	add    %al,(%rax)
   124d5:	00 00                	add    %al,(%rax)
   124d7:	00 db                	add    %bl,%bl
   124d9:	01 00                	add    %eax,(%rax)
   124db:	00 00                	add    %al,(%rax)
   124dd:	00 00                	add    %al,(%rax)
   124df:	00 db                	add    %bl,%bl
   124e1:	01 00                	add    %eax,(%rax)
   124e3:	00 00                	add    %al,(%rax)
   124e5:	00 00                	add    %al,(%rax)
   124e7:	00 db                	add    %bl,%bl
   124e9:	01 00                	add    %eax,(%rax)
   124eb:	00 00                	add    %al,(%rax)
   124ed:	00 00                	add    %al,(%rax)
   124ef:	00 db                	add    %bl,%bl
   124f1:	01 00                	add    %eax,(%rax)
   124f3:	00 00                	add    %al,(%rax)
   124f5:	00 00                	add    %al,(%rax)
   124f7:	00 db                	add    %bl,%bl
   124f9:	01 00                	add    %eax,(%rax)
   124fb:	00 00                	add    %al,(%rax)
   124fd:	00 00                	add    %al,(%rax)
   124ff:	00 1a                	add    %bl,(%rdx)
   12501:	03 00                	add    (%rax),%eax
   12503:	00 00                	add    %al,(%rax)
   12505:	00 00                	add    %al,(%rax)
   12507:	00 25 03 00 00 00    	add    %ah,0x3(%rip)        # 12510 <__intel_mic_avx512f_memcpy+0x750>
   1250d:	00 00                	add    %al,(%rax)
   1250f:	00 15 03 00 00 00    	add    %dl,0x3(%rip)        # 12518 <__intel_mic_avx512f_memcpy+0x758>
   12515:	00 00                	add    %al,(%rax)
   12517:	00 08                	add    %cl,(%rax)
   12519:	03 00                	add    (%rax),%eax
   1251b:	00 00                	add    %al,(%rax)
   1251d:	00 00                	add    %al,(%rax)
   1251f:	00 f3                	add    %dh,%bl
   12521:	02 00                	add    (%rax),%al
   12523:	00 00                	add    %al,(%rax)
   12525:	00 00                	add    %al,(%rax)
   12527:	00 e8                	add    %ch,%al
   12529:	02 00                	add    (%rax),%al
   1252b:	00 00                	add    %al,(%rax)
   1252d:	00 00                	add    %al,(%rax)
   1252f:	00 e8                	add    %ch,%al
   12531:	02 00                	add    (%rax),%al
   12533:	00 00                	add    %al,(%rax)
   12535:	00 00                	add    %al,(%rax)
   12537:	00 e8                	add    %ch,%al
   12539:	02 00                	add    (%rax),%al
   1253b:	00 00                	add    %al,(%rax)
   1253d:	00 00                	add    %al,(%rax)
   1253f:	00 d5                	add    %dl,%ch
   12541:	02 00                	add    (%rax),%al
   12543:	00 00                	add    %al,(%rax)
   12545:	00 00                	add    %al,(%rax)
   12547:	00 ca                	add    %cl,%dl
   12549:	02 00                	add    (%rax),%al
   1254b:	00 00                	add    %al,(%rax)
   1254d:	00 00                	add    %al,(%rax)
   1254f:	00 ca                	add    %cl,%dl
   12551:	02 00                	add    (%rax),%al
   12553:	00 00                	add    %al,(%rax)
   12555:	00 00                	add    %al,(%rax)
   12557:	00 ca                	add    %cl,%dl
   12559:	02 00                	add    (%rax),%al
   1255b:	00 00                	add    %al,(%rax)
   1255d:	00 00                	add    %al,(%rax)
   1255f:	00 ca                	add    %cl,%dl
   12561:	02 00                	add    (%rax),%al
   12563:	00 00                	add    %al,(%rax)
   12565:	00 00                	add    %al,(%rax)
   12567:	00 ca                	add    %cl,%dl
   12569:	02 00                	add    (%rax),%al
   1256b:	00 00                	add    %al,(%rax)
   1256d:	00 00                	add    %al,(%rax)
   1256f:	00 ca                	add    %cl,%dl
   12571:	02 00                	add    (%rax),%al
   12573:	00 00                	add    %al,(%rax)
   12575:	00 00                	add    %al,(%rax)
   12577:	00 ca                	add    %cl,%dl
   12579:	02 00                	add    (%rax),%al
   1257b:	00 00                	add    %al,(%rax)
   1257d:	00 00                	add    %al,(%rax)
   1257f:	00 b7 02 00 00 00    	add    %dh,0x2(%rdi)
   12585:	00 00                	add    %al,(%rax)
   12587:	00 a9 02 00 00 00    	add    %ch,0x2(%rcx)
   1258d:	00 00                	add    %al,(%rax)
   1258f:	00 a9 02 00 00 00    	add    %ch,0x2(%rcx)
   12595:	00 00                	add    %al,(%rax)
   12597:	00 a9 02 00 00 00    	add    %ch,0x2(%rcx)
   1259d:	00 00                	add    %al,(%rax)
   1259f:	00 a9 02 00 00 00    	add    %ch,0x2(%rcx)
   125a5:	00 00                	add    %al,(%rax)
   125a7:	00 a9 02 00 00 00    	add    %ch,0x2(%rcx)
   125ad:	00 00                	add    %al,(%rax)
   125af:	00 a9 02 00 00 00    	add    %ch,0x2(%rcx)
   125b5:	00 00                	add    %al,(%rax)
   125b7:	00 a9 02 00 00 00    	add    %ch,0x2(%rcx)
   125bd:	00 00                	add    %al,(%rax)
   125bf:	00 a9 02 00 00 00    	add    %ch,0x2(%rcx)
   125c5:	00 00                	add    %al,(%rax)
   125c7:	00 a9 02 00 00 00    	add    %ch,0x2(%rcx)
   125cd:	00 00                	add    %al,(%rax)
   125cf:	00 a9 02 00 00 00    	add    %ch,0x2(%rcx)
   125d5:	00 00                	add    %al,(%rax)
   125d7:	00 a9 02 00 00 00    	add    %ch,0x2(%rcx)
   125dd:	00 00                	add    %al,(%rax)
   125df:	00 a9 02 00 00 00    	add    %ch,0x2(%rcx)
   125e5:	00 00                	add    %al,(%rax)
   125e7:	00 a9 02 00 00 00    	add    %ch,0x2(%rcx)
   125ed:	00 00                	add    %al,(%rax)
   125ef:	00 a9 02 00 00 00    	add    %ch,0x2(%rcx)
   125f5:	00 00                	add    %al,(%rax)
   125f7:	00 a9 02 00 00 00    	add    %ch,0x2(%rcx)
   125fd:	00 00                	add    %al,(%rax)
   125ff:	00 90 02 00 00 00    	add    %dl,0x2(%rax)
   12605:	00 00                	add    %al,(%rax)
   12607:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   1260d:	00 00                	add    %al,(%rax)
   1260f:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   12615:	00 00                	add    %al,(%rax)
   12617:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   1261d:	00 00                	add    %al,(%rax)
   1261f:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   12625:	00 00                	add    %al,(%rax)
   12627:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   1262d:	00 00                	add    %al,(%rax)
   1262f:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   12635:	00 00                	add    %al,(%rax)
   12637:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   1263d:	00 00                	add    %al,(%rax)
   1263f:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   12645:	00 00                	add    %al,(%rax)
   12647:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   1264d:	00 00                	add    %al,(%rax)
   1264f:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   12655:	00 00                	add    %al,(%rax)
   12657:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   1265d:	00 00                	add    %al,(%rax)
   1265f:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   12665:	00 00                	add    %al,(%rax)
   12667:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   1266d:	00 00                	add    %al,(%rax)
   1266f:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   12675:	00 00                	add    %al,(%rax)
   12677:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   1267d:	00 00                	add    %al,(%rax)
   1267f:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   12685:	00 00                	add    %al,(%rax)
   12687:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   1268d:	00 00                	add    %al,(%rax)
   1268f:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   12695:	00 00                	add    %al,(%rax)
   12697:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   1269d:	00 00                	add    %al,(%rax)
   1269f:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   126a5:	00 00                	add    %al,(%rax)
   126a7:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   126ad:	00 00                	add    %al,(%rax)
   126af:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   126b5:	00 00                	add    %al,(%rax)
   126b7:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   126bd:	00 00                	add    %al,(%rax)
   126bf:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   126c5:	00 00                	add    %al,(%rax)
   126c7:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   126cd:	00 00                	add    %al,(%rax)
   126cf:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   126d5:	00 00                	add    %al,(%rax)
   126d7:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   126dd:	00 00                	add    %al,(%rax)
   126df:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   126e5:	00 00                	add    %al,(%rax)
   126e7:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   126ed:	00 00                	add    %al,(%rax)
   126ef:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   126f5:	00 00                	add    %al,(%rax)
   126f7:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   126fd:	00 00                	add    %al,(%rax)
   126ff:	00 41 03             	add    %al,0x3(%rcx)
   12702:	00 00                	add    %al,(%rax)
   12704:	00 00                	add    %al,(%rax)
   12706:	00 00                	add    %al,(%rax)
   12708:	41 03 00             	add    (%r8),%eax
   1270b:	00 00                	add    %al,(%rax)
   1270d:	00 00                	add    %al,(%rax)
   1270f:	00 41 03             	add    %al,0x3(%rcx)
   12712:	00 00                	add    %al,(%rax)
   12714:	00 00                	add    %al,(%rax)
   12716:	00 00                	add    %al,(%rax)
   12718:	41 03 00             	add    (%r8),%eax
   1271b:	00 00                	add    %al,(%rax)
   1271d:	00 00                	add    %al,(%rax)
   1271f:	00 41 03             	add    %al,0x3(%rcx)
   12722:	00 00                	add    %al,(%rax)
   12724:	00 00                	add    %al,(%rax)
   12726:	00 00                	add    %al,(%rax)
   12728:	41 03 00             	add    (%r8),%eax
   1272b:	00 00                	add    %al,(%rax)
   1272d:	00 00                	add    %al,(%rax)
   1272f:	00 41 03             	add    %al,0x3(%rcx)
   12732:	00 00                	add    %al,(%rax)
   12734:	00 00                	add    %al,(%rax)
   12736:	00 00                	add    %al,(%rax)
   12738:	41 03 00             	add    (%r8),%eax
   1273b:	00 00                	add    %al,(%rax)
   1273d:	00 00                	add    %al,(%rax)
   1273f:	00 41 03             	add    %al,0x3(%rcx)
   12742:	00 00                	add    %al,(%rax)
   12744:	00 00                	add    %al,(%rax)
   12746:	00 00                	add    %al,(%rax)
   12748:	41 03 00             	add    (%r8),%eax
   1274b:	00 00                	add    %al,(%rax)
   1274d:	00 00                	add    %al,(%rax)
   1274f:	00 41 03             	add    %al,0x3(%rcx)
   12752:	00 00                	add    %al,(%rax)
   12754:	00 00                	add    %al,(%rax)
   12756:	00 00                	add    %al,(%rax)
   12758:	41 03 00             	add    (%r8),%eax
   1275b:	00 00                	add    %al,(%rax)
   1275d:	00 00                	add    %al,(%rax)
   1275f:	00 41 03             	add    %al,0x3(%rcx)
   12762:	00 00                	add    %al,(%rax)
   12764:	00 00                	add    %al,(%rax)
   12766:	00 00                	add    %al,(%rax)
   12768:	41 03 00             	add    (%r8),%eax
   1276b:	00 00                	add    %al,(%rax)
   1276d:	00 00                	add    %al,(%rax)
   1276f:	00 41 03             	add    %al,0x3(%rcx)
   12772:	00 00                	add    %al,(%rax)
   12774:	00 00                	add    %al,(%rax)
   12776:	00 00                	add    %al,(%rax)
   12778:	41 03 00             	add    (%r8),%eax
   1277b:	00 00                	add    %al,(%rax)
   1277d:	00 00                	add    %al,(%rax)
   1277f:	00 41 03             	add    %al,0x3(%rcx)
   12782:	00 00                	add    %al,(%rax)
   12784:	00 00                	add    %al,(%rax)
   12786:	00 00                	add    %al,(%rax)
   12788:	41 03 00             	add    (%r8),%eax
   1278b:	00 00                	add    %al,(%rax)
   1278d:	00 00                	add    %al,(%rax)
   1278f:	00 41 03             	add    %al,0x3(%rcx)
   12792:	00 00                	add    %al,(%rax)
   12794:	00 00                	add    %al,(%rax)
   12796:	00 00                	add    %al,(%rax)
   12798:	41 03 00             	add    (%r8),%eax
   1279b:	00 00                	add    %al,(%rax)
   1279d:	00 00                	add    %al,(%rax)
   1279f:	00 41 03             	add    %al,0x3(%rcx)
   127a2:	00 00                	add    %al,(%rax)
   127a4:	00 00                	add    %al,(%rax)
   127a6:	00 00                	add    %al,(%rax)
   127a8:	41 03 00             	add    (%r8),%eax
   127ab:	00 00                	add    %al,(%rax)
   127ad:	00 00                	add    %al,(%rax)
   127af:	00 41 03             	add    %al,0x3(%rcx)
   127b2:	00 00                	add    %al,(%rax)
   127b4:	00 00                	add    %al,(%rax)
   127b6:	00 00                	add    %al,(%rax)
   127b8:	41 03 00             	add    (%r8),%eax
   127bb:	00 00                	add    %al,(%rax)
   127bd:	00 00                	add    %al,(%rax)
   127bf:	00 41 03             	add    %al,0x3(%rcx)
   127c2:	00 00                	add    %al,(%rax)
   127c4:	00 00                	add    %al,(%rax)
   127c6:	00 00                	add    %al,(%rax)
   127c8:	41 03 00             	add    (%r8),%eax
   127cb:	00 00                	add    %al,(%rax)
   127cd:	00 00                	add    %al,(%rax)
   127cf:	00 41 03             	add    %al,0x3(%rcx)
   127d2:	00 00                	add    %al,(%rax)
   127d4:	00 00                	add    %al,(%rax)
   127d6:	00 00                	add    %al,(%rax)
   127d8:	41 03 00             	add    (%r8),%eax
   127db:	00 00                	add    %al,(%rax)
   127dd:	00 00                	add    %al,(%rax)
   127df:	00 41 03             	add    %al,0x3(%rcx)
   127e2:	00 00                	add    %al,(%rax)
   127e4:	00 00                	add    %al,(%rax)
   127e6:	00 00                	add    %al,(%rax)
   127e8:	41 03 00             	add    (%r8),%eax
   127eb:	00 00                	add    %al,(%rax)
   127ed:	00 00                	add    %al,(%rax)
   127ef:	00 41 03             	add    %al,0x3(%rcx)
   127f2:	00 00                	add    %al,(%rax)
   127f4:	00 00                	add    %al,(%rax)
   127f6:	00 00                	add    %al,(%rax)
   127f8:	41 03 00             	add    (%r8),%eax
   127fb:	00 00                	add    %al,(%rax)
   127fd:	00 00                	add    %al,(%rax)
   127ff:	00 41 03             	add    %al,0x3(%rcx)
   12802:	00 00                	add    %al,(%rax)
   12804:	00 00                	add    %al,(%rax)
   12806:	00 00                	add    %al,(%rax)
   12808:	41 03 00             	add    (%r8),%eax
   1280b:	00 00                	add    %al,(%rax)
   1280d:	00 00                	add    %al,(%rax)
   1280f:	00 41 03             	add    %al,0x3(%rcx)
   12812:	00 00                	add    %al,(%rax)
   12814:	00 00                	add    %al,(%rax)
   12816:	00 00                	add    %al,(%rax)
   12818:	41 03 00             	add    (%r8),%eax
   1281b:	00 00                	add    %al,(%rax)
   1281d:	00 00                	add    %al,(%rax)
   1281f:	00 41 03             	add    %al,0x3(%rcx)
   12822:	00 00                	add    %al,(%rax)
   12824:	00 00                	add    %al,(%rax)
   12826:	00 00                	add    %al,(%rax)
   12828:	41 03 00             	add    (%r8),%eax
   1282b:	00 00                	add    %al,(%rax)
   1282d:	00 00                	add    %al,(%rax)
   1282f:	00 41 03             	add    %al,0x3(%rcx)
   12832:	00 00                	add    %al,(%rax)
   12834:	00 00                	add    %al,(%rax)
   12836:	00 00                	add    %al,(%rax)
   12838:	41 03 00             	add    (%r8),%eax
   1283b:	00 00                	add    %al,(%rax)
   1283d:	00 00                	add    %al,(%rax)
   1283f:	00 41 03             	add    %al,0x3(%rcx)
   12842:	00 00                	add    %al,(%rax)
   12844:	00 00                	add    %al,(%rax)
   12846:	00 00                	add    %al,(%rax)
   12848:	41 03 00             	add    (%r8),%eax
   1284b:	00 00                	add    %al,(%rax)
   1284d:	00 00                	add    %al,(%rax)
   1284f:	00 41 03             	add    %al,0x3(%rcx)
   12852:	00 00                	add    %al,(%rax)
   12854:	00 00                	add    %al,(%rax)
   12856:	00 00                	add    %al,(%rax)
   12858:	41 03 00             	add    (%r8),%eax
   1285b:	00 00                	add    %al,(%rax)
   1285d:	00 00                	add    %al,(%rax)
   1285f:	00 41 03             	add    %al,0x3(%rcx)
   12862:	00 00                	add    %al,(%rax)
   12864:	00 00                	add    %al,(%rax)
   12866:	00 00                	add    %al,(%rax)
   12868:	41 03 00             	add    (%r8),%eax
   1286b:	00 00                	add    %al,(%rax)
   1286d:	00 00                	add    %al,(%rax)
   1286f:	00 41 03             	add    %al,0x3(%rcx)
   12872:	00 00                	add    %al,(%rax)
   12874:	00 00                	add    %al,(%rax)
   12876:	00 00                	add    %al,(%rax)
   12878:	41 03 00             	add    (%r8),%eax
   1287b:	00 00                	add    %al,(%rax)
   1287d:	00 00                	add    %al,(%rax)
   1287f:	00 41 03             	add    %al,0x3(%rcx)
   12882:	00 00                	add    %al,(%rax)
   12884:	00 00                	add    %al,(%rax)
   12886:	00 00                	add    %al,(%rax)
   12888:	41 03 00             	add    (%r8),%eax
   1288b:	00 00                	add    %al,(%rax)
   1288d:	00 00                	add    %al,(%rax)
   1288f:	00 41 03             	add    %al,0x3(%rcx)
   12892:	00 00                	add    %al,(%rax)
   12894:	00 00                	add    %al,(%rax)
   12896:	00 00                	add    %al,(%rax)
   12898:	41 03 00             	add    (%r8),%eax
   1289b:	00 00                	add    %al,(%rax)
   1289d:	00 00                	add    %al,(%rax)
   1289f:	00 41 03             	add    %al,0x3(%rcx)
   128a2:	00 00                	add    %al,(%rax)
   128a4:	00 00                	add    %al,(%rax)
   128a6:	00 00                	add    %al,(%rax)
   128a8:	41 03 00             	add    (%r8),%eax
   128ab:	00 00                	add    %al,(%rax)
   128ad:	00 00                	add    %al,(%rax)
   128af:	00 41 03             	add    %al,0x3(%rcx)
   128b2:	00 00                	add    %al,(%rax)
   128b4:	00 00                	add    %al,(%rax)
   128b6:	00 00                	add    %al,(%rax)
   128b8:	41 03 00             	add    (%r8),%eax
   128bb:	00 00                	add    %al,(%rax)
   128bd:	00 00                	add    %al,(%rax)
   128bf:	00 41 03             	add    %al,0x3(%rcx)
   128c2:	00 00                	add    %al,(%rax)
   128c4:	00 00                	add    %al,(%rax)
   128c6:	00 00                	add    %al,(%rax)
   128c8:	41 03 00             	add    (%r8),%eax
   128cb:	00 00                	add    %al,(%rax)
   128cd:	00 00                	add    %al,(%rax)
   128cf:	00 41 03             	add    %al,0x3(%rcx)
   128d2:	00 00                	add    %al,(%rax)
   128d4:	00 00                	add    %al,(%rax)
   128d6:	00 00                	add    %al,(%rax)
   128d8:	41 03 00             	add    (%r8),%eax
   128db:	00 00                	add    %al,(%rax)
   128dd:	00 00                	add    %al,(%rax)
   128df:	00 41 03             	add    %al,0x3(%rcx)
   128e2:	00 00                	add    %al,(%rax)
   128e4:	00 00                	add    %al,(%rax)
   128e6:	00 00                	add    %al,(%rax)
   128e8:	41 03 00             	add    (%r8),%eax
   128eb:	00 00                	add    %al,(%rax)
   128ed:	00 00                	add    %al,(%rax)
   128ef:	00 41 03             	add    %al,0x3(%rcx)
   128f2:	00 00                	add    %al,(%rax)
   128f4:	00 00                	add    %al,(%rax)
   128f6:	00 00                	add    %al,(%rax)
   128f8:	41 03 00             	add    (%r8),%eax
   128fb:	00 00                	add    %al,(%rax)
   128fd:	00 00                	add    %al,(%rax)
   128ff:	00 4f 03             	add    %cl,0x3(%rdi)
   12902:	00 00                	add    %al,(%rax)
   12904:	00 00                	add    %al,(%rax)
   12906:	00 00                	add    %al,(%rax)
   12908:	4f 03 00             	rex.WRXB add (%r8),%r8
   1290b:	00 00                	add    %al,(%rax)
   1290d:	00 00                	add    %al,(%rax)
   1290f:	00 4f 03             	add    %cl,0x3(%rdi)
   12912:	00 00                	add    %al,(%rax)
   12914:	00 00                	add    %al,(%rax)
   12916:	00 00                	add    %al,(%rax)
   12918:	4f 03 00             	rex.WRXB add (%r8),%r8
   1291b:	00 00                	add    %al,(%rax)
   1291d:	00 00                	add    %al,(%rax)
   1291f:	00 4f 03             	add    %cl,0x3(%rdi)
   12922:	00 00                	add    %al,(%rax)
   12924:	00 00                	add    %al,(%rax)
   12926:	00 00                	add    %al,(%rax)
   12928:	4f 03 00             	rex.WRXB add (%r8),%r8
   1292b:	00 00                	add    %al,(%rax)
   1292d:	00 00                	add    %al,(%rax)
   1292f:	00 4f 03             	add    %cl,0x3(%rdi)
   12932:	00 00                	add    %al,(%rax)
   12934:	00 00                	add    %al,(%rax)
   12936:	00 00                	add    %al,(%rax)
   12938:	4f 03 00             	rex.WRXB add (%r8),%r8
   1293b:	00 00                	add    %al,(%rax)
   1293d:	00 00                	add    %al,(%rax)
   1293f:	00 4f 03             	add    %cl,0x3(%rdi)
   12942:	00 00                	add    %al,(%rax)
   12944:	00 00                	add    %al,(%rax)
   12946:	00 00                	add    %al,(%rax)
   12948:	4f 03 00             	rex.WRXB add (%r8),%r8
   1294b:	00 00                	add    %al,(%rax)
   1294d:	00 00                	add    %al,(%rax)
   1294f:	00 4f 03             	add    %cl,0x3(%rdi)
   12952:	00 00                	add    %al,(%rax)
   12954:	00 00                	add    %al,(%rax)
   12956:	00 00                	add    %al,(%rax)
   12958:	4f 03 00             	rex.WRXB add (%r8),%r8
   1295b:	00 00                	add    %al,(%rax)
   1295d:	00 00                	add    %al,(%rax)
   1295f:	00 4f 03             	add    %cl,0x3(%rdi)
   12962:	00 00                	add    %al,(%rax)
   12964:	00 00                	add    %al,(%rax)
   12966:	00 00                	add    %al,(%rax)
   12968:	4f 03 00             	rex.WRXB add (%r8),%r8
   1296b:	00 00                	add    %al,(%rax)
   1296d:	00 00                	add    %al,(%rax)
   1296f:	00 4f 03             	add    %cl,0x3(%rdi)
   12972:	00 00                	add    %al,(%rax)
   12974:	00 00                	add    %al,(%rax)
   12976:	00 00                	add    %al,(%rax)
   12978:	4f 03 00             	rex.WRXB add (%r8),%r8
   1297b:	00 00                	add    %al,(%rax)
   1297d:	00 00                	add    %al,(%rax)
   1297f:	00 4f 03             	add    %cl,0x3(%rdi)
   12982:	00 00                	add    %al,(%rax)
   12984:	00 00                	add    %al,(%rax)
   12986:	00 00                	add    %al,(%rax)
   12988:	4f 03 00             	rex.WRXB add (%r8),%r8
   1298b:	00 00                	add    %al,(%rax)
   1298d:	00 00                	add    %al,(%rax)
   1298f:	00 4f 03             	add    %cl,0x3(%rdi)
   12992:	00 00                	add    %al,(%rax)
   12994:	00 00                	add    %al,(%rax)
   12996:	00 00                	add    %al,(%rax)
   12998:	4f 03 00             	rex.WRXB add (%r8),%r8
   1299b:	00 00                	add    %al,(%rax)
   1299d:	00 00                	add    %al,(%rax)
   1299f:	00 4f 03             	add    %cl,0x3(%rdi)
   129a2:	00 00                	add    %al,(%rax)
   129a4:	00 00                	add    %al,(%rax)
   129a6:	00 00                	add    %al,(%rax)
   129a8:	4f 03 00             	rex.WRXB add (%r8),%r8
   129ab:	00 00                	add    %al,(%rax)
   129ad:	00 00                	add    %al,(%rax)
   129af:	00 4f 03             	add    %cl,0x3(%rdi)
   129b2:	00 00                	add    %al,(%rax)
   129b4:	00 00                	add    %al,(%rax)
   129b6:	00 00                	add    %al,(%rax)
   129b8:	4f 03 00             	rex.WRXB add (%r8),%r8
   129bb:	00 00                	add    %al,(%rax)
   129bd:	00 00                	add    %al,(%rax)
   129bf:	00 4f 03             	add    %cl,0x3(%rdi)
   129c2:	00 00                	add    %al,(%rax)
   129c4:	00 00                	add    %al,(%rax)
   129c6:	00 00                	add    %al,(%rax)
   129c8:	4f 03 00             	rex.WRXB add (%r8),%r8
   129cb:	00 00                	add    %al,(%rax)
   129cd:	00 00                	add    %al,(%rax)
   129cf:	00 4f 03             	add    %cl,0x3(%rdi)
   129d2:	00 00                	add    %al,(%rax)
   129d4:	00 00                	add    %al,(%rax)
   129d6:	00 00                	add    %al,(%rax)
   129d8:	4f 03 00             	rex.WRXB add (%r8),%r8
   129db:	00 00                	add    %al,(%rax)
   129dd:	00 00                	add    %al,(%rax)
   129df:	00 4f 03             	add    %cl,0x3(%rdi)
   129e2:	00 00                	add    %al,(%rax)
   129e4:	00 00                	add    %al,(%rax)
   129e6:	00 00                	add    %al,(%rax)
   129e8:	4f 03 00             	rex.WRXB add (%r8),%r8
   129eb:	00 00                	add    %al,(%rax)
   129ed:	00 00                	add    %al,(%rax)
   129ef:	00 4f 03             	add    %cl,0x3(%rdi)
   129f2:	00 00                	add    %al,(%rax)
   129f4:	00 00                	add    %al,(%rax)
   129f6:	00 00                	add    %al,(%rax)
   129f8:	4f 03 00             	rex.WRXB add (%r8),%r8
   129fb:	00 00                	add    %al,(%rax)
   129fd:	00 00                	add    %al,(%rax)
   129ff:	00 4f 03             	add    %cl,0x3(%rdi)
   12a02:	00 00                	add    %al,(%rax)
   12a04:	00 00                	add    %al,(%rax)
   12a06:	00 00                	add    %al,(%rax)
   12a08:	4f 03 00             	rex.WRXB add (%r8),%r8
   12a0b:	00 00                	add    %al,(%rax)
   12a0d:	00 00                	add    %al,(%rax)
   12a0f:	00 4f 03             	add    %cl,0x3(%rdi)
   12a12:	00 00                	add    %al,(%rax)
   12a14:	00 00                	add    %al,(%rax)
   12a16:	00 00                	add    %al,(%rax)
   12a18:	4f 03 00             	rex.WRXB add (%r8),%r8
   12a1b:	00 00                	add    %al,(%rax)
   12a1d:	00 00                	add    %al,(%rax)
   12a1f:	00 4f 03             	add    %cl,0x3(%rdi)
   12a22:	00 00                	add    %al,(%rax)
   12a24:	00 00                	add    %al,(%rax)
   12a26:	00 00                	add    %al,(%rax)
   12a28:	4f 03 00             	rex.WRXB add (%r8),%r8
   12a2b:	00 00                	add    %al,(%rax)
   12a2d:	00 00                	add    %al,(%rax)
   12a2f:	00 4f 03             	add    %cl,0x3(%rdi)
   12a32:	00 00                	add    %al,(%rax)
   12a34:	00 00                	add    %al,(%rax)
   12a36:	00 00                	add    %al,(%rax)
   12a38:	4f 03 00             	rex.WRXB add (%r8),%r8
   12a3b:	00 00                	add    %al,(%rax)
   12a3d:	00 00                	add    %al,(%rax)
   12a3f:	00 4f 03             	add    %cl,0x3(%rdi)
   12a42:	00 00                	add    %al,(%rax)
   12a44:	00 00                	add    %al,(%rax)
   12a46:	00 00                	add    %al,(%rax)
   12a48:	4f 03 00             	rex.WRXB add (%r8),%r8
   12a4b:	00 00                	add    %al,(%rax)
   12a4d:	00 00                	add    %al,(%rax)
   12a4f:	00 4f 03             	add    %cl,0x3(%rdi)
   12a52:	00 00                	add    %al,(%rax)
   12a54:	00 00                	add    %al,(%rax)
   12a56:	00 00                	add    %al,(%rax)
   12a58:	4f 03 00             	rex.WRXB add (%r8),%r8
   12a5b:	00 00                	add    %al,(%rax)
   12a5d:	00 00                	add    %al,(%rax)
   12a5f:	00 4f 03             	add    %cl,0x3(%rdi)
   12a62:	00 00                	add    %al,(%rax)
   12a64:	00 00                	add    %al,(%rax)
   12a66:	00 00                	add    %al,(%rax)
   12a68:	4f 03 00             	rex.WRXB add (%r8),%r8
   12a6b:	00 00                	add    %al,(%rax)
   12a6d:	00 00                	add    %al,(%rax)
   12a6f:	00 4f 03             	add    %cl,0x3(%rdi)
   12a72:	00 00                	add    %al,(%rax)
   12a74:	00 00                	add    %al,(%rax)
   12a76:	00 00                	add    %al,(%rax)
   12a78:	4f 03 00             	rex.WRXB add (%r8),%r8
   12a7b:	00 00                	add    %al,(%rax)
   12a7d:	00 00                	add    %al,(%rax)
   12a7f:	00 4f 03             	add    %cl,0x3(%rdi)
   12a82:	00 00                	add    %al,(%rax)
   12a84:	00 00                	add    %al,(%rax)
   12a86:	00 00                	add    %al,(%rax)
   12a88:	4f 03 00             	rex.WRXB add (%r8),%r8
   12a8b:	00 00                	add    %al,(%rax)
   12a8d:	00 00                	add    %al,(%rax)
   12a8f:	00 4f 03             	add    %cl,0x3(%rdi)
   12a92:	00 00                	add    %al,(%rax)
   12a94:	00 00                	add    %al,(%rax)
   12a96:	00 00                	add    %al,(%rax)
   12a98:	4f 03 00             	rex.WRXB add (%r8),%r8
   12a9b:	00 00                	add    %al,(%rax)
   12a9d:	00 00                	add    %al,(%rax)
   12a9f:	00 4f 03             	add    %cl,0x3(%rdi)
   12aa2:	00 00                	add    %al,(%rax)
   12aa4:	00 00                	add    %al,(%rax)
   12aa6:	00 00                	add    %al,(%rax)
   12aa8:	4f 03 00             	rex.WRXB add (%r8),%r8
   12aab:	00 00                	add    %al,(%rax)
   12aad:	00 00                	add    %al,(%rax)
   12aaf:	00 4f 03             	add    %cl,0x3(%rdi)
   12ab2:	00 00                	add    %al,(%rax)
   12ab4:	00 00                	add    %al,(%rax)
   12ab6:	00 00                	add    %al,(%rax)
   12ab8:	4f 03 00             	rex.WRXB add (%r8),%r8
   12abb:	00 00                	add    %al,(%rax)
   12abd:	00 00                	add    %al,(%rax)
   12abf:	00 4f 03             	add    %cl,0x3(%rdi)
   12ac2:	00 00                	add    %al,(%rax)
   12ac4:	00 00                	add    %al,(%rax)
   12ac6:	00 00                	add    %al,(%rax)
   12ac8:	4f 03 00             	rex.WRXB add (%r8),%r8
   12acb:	00 00                	add    %al,(%rax)
   12acd:	00 00                	add    %al,(%rax)
   12acf:	00 4f 03             	add    %cl,0x3(%rdi)
   12ad2:	00 00                	add    %al,(%rax)
   12ad4:	00 00                	add    %al,(%rax)
   12ad6:	00 00                	add    %al,(%rax)
   12ad8:	4f 03 00             	rex.WRXB add (%r8),%r8
   12adb:	00 00                	add    %al,(%rax)
   12add:	00 00                	add    %al,(%rax)
   12adf:	00 4f 03             	add    %cl,0x3(%rdi)
   12ae2:	00 00                	add    %al,(%rax)
   12ae4:	00 00                	add    %al,(%rax)
   12ae6:	00 00                	add    %al,(%rax)
   12ae8:	4f 03 00             	rex.WRXB add (%r8),%r8
   12aeb:	00 00                	add    %al,(%rax)
   12aed:	00 00                	add    %al,(%rax)
   12aef:	00 4f 03             	add    %cl,0x3(%rdi)
   12af2:	00 00                	add    %al,(%rax)
   12af4:	00 00                	add    %al,(%rax)
   12af6:	00 00                	add    %al,(%rax)
   12af8:	4f 03 00             	rex.WRXB add (%r8),%r8
   12afb:	00 00                	add    %al,(%rax)
   12afd:	00 00                	add    %al,(%rax)
   12aff:	00 5d 03             	add    %bl,0x3(%rbp)
   12b02:	00 00                	add    %al,(%rax)
   12b04:	00 00                	add    %al,(%rax)
   12b06:	00 00                	add    %al,(%rax)
   12b08:	5d                   	pop    %rbp
   12b09:	03 00                	add    (%rax),%eax
   12b0b:	00 00                	add    %al,(%rax)
   12b0d:	00 00                	add    %al,(%rax)
   12b0f:	00 5d 03             	add    %bl,0x3(%rbp)
   12b12:	00 00                	add    %al,(%rax)
   12b14:	00 00                	add    %al,(%rax)
   12b16:	00 00                	add    %al,(%rax)
   12b18:	5d                   	pop    %rbp
   12b19:	03 00                	add    (%rax),%eax
   12b1b:	00 00                	add    %al,(%rax)
   12b1d:	00 00                	add    %al,(%rax)
   12b1f:	00 5d 03             	add    %bl,0x3(%rbp)
   12b22:	00 00                	add    %al,(%rax)
   12b24:	00 00                	add    %al,(%rax)
   12b26:	00 00                	add    %al,(%rax)
   12b28:	5d                   	pop    %rbp
   12b29:	03 00                	add    (%rax),%eax
   12b2b:	00 00                	add    %al,(%rax)
   12b2d:	00 00                	add    %al,(%rax)
   12b2f:	00 5d 03             	add    %bl,0x3(%rbp)
   12b32:	00 00                	add    %al,(%rax)
   12b34:	00 00                	add    %al,(%rax)
   12b36:	00 00                	add    %al,(%rax)
   12b38:	5d                   	pop    %rbp
   12b39:	03 00                	add    (%rax),%eax
   12b3b:	00 00                	add    %al,(%rax)
   12b3d:	00 00                	add    %al,(%rax)
   12b3f:	00 5d 03             	add    %bl,0x3(%rbp)
   12b42:	00 00                	add    %al,(%rax)
   12b44:	00 00                	add    %al,(%rax)
   12b46:	00 00                	add    %al,(%rax)
   12b48:	5d                   	pop    %rbp
   12b49:	03 00                	add    (%rax),%eax
   12b4b:	00 00                	add    %al,(%rax)
   12b4d:	00 00                	add    %al,(%rax)
   12b4f:	00 5d 03             	add    %bl,0x3(%rbp)
   12b52:	00 00                	add    %al,(%rax)
   12b54:	00 00                	add    %al,(%rax)
   12b56:	00 00                	add    %al,(%rax)
   12b58:	5d                   	pop    %rbp
   12b59:	03 00                	add    (%rax),%eax
   12b5b:	00 00                	add    %al,(%rax)
   12b5d:	00 00                	add    %al,(%rax)
   12b5f:	00 5d 03             	add    %bl,0x3(%rbp)
   12b62:	00 00                	add    %al,(%rax)
   12b64:	00 00                	add    %al,(%rax)
   12b66:	00 00                	add    %al,(%rax)
   12b68:	5d                   	pop    %rbp
   12b69:	03 00                	add    (%rax),%eax
   12b6b:	00 00                	add    %al,(%rax)
   12b6d:	00 00                	add    %al,(%rax)
   12b6f:	00 5d 03             	add    %bl,0x3(%rbp)
   12b72:	00 00                	add    %al,(%rax)
   12b74:	00 00                	add    %al,(%rax)
   12b76:	00 00                	add    %al,(%rax)
   12b78:	5d                   	pop    %rbp
   12b79:	03 00                	add    (%rax),%eax
   12b7b:	00 00                	add    %al,(%rax)
   12b7d:	00 00                	add    %al,(%rax)
   12b7f:	00 5d 03             	add    %bl,0x3(%rbp)
   12b82:	00 00                	add    %al,(%rax)
   12b84:	00 00                	add    %al,(%rax)
   12b86:	00 00                	add    %al,(%rax)
   12b88:	5d                   	pop    %rbp
   12b89:	03 00                	add    (%rax),%eax
   12b8b:	00 00                	add    %al,(%rax)
   12b8d:	00 00                	add    %al,(%rax)
   12b8f:	00 5d 03             	add    %bl,0x3(%rbp)
   12b92:	00 00                	add    %al,(%rax)
   12b94:	00 00                	add    %al,(%rax)
   12b96:	00 00                	add    %al,(%rax)
   12b98:	5d                   	pop    %rbp
   12b99:	03 00                	add    (%rax),%eax
   12b9b:	00 00                	add    %al,(%rax)
   12b9d:	00 00                	add    %al,(%rax)
   12b9f:	00 5d 03             	add    %bl,0x3(%rbp)
   12ba2:	00 00                	add    %al,(%rax)
   12ba4:	00 00                	add    %al,(%rax)
   12ba6:	00 00                	add    %al,(%rax)
   12ba8:	5d                   	pop    %rbp
   12ba9:	03 00                	add    (%rax),%eax
   12bab:	00 00                	add    %al,(%rax)
   12bad:	00 00                	add    %al,(%rax)
   12baf:	00 5d 03             	add    %bl,0x3(%rbp)
   12bb2:	00 00                	add    %al,(%rax)
   12bb4:	00 00                	add    %al,(%rax)
   12bb6:	00 00                	add    %al,(%rax)
   12bb8:	5d                   	pop    %rbp
   12bb9:	03 00                	add    (%rax),%eax
   12bbb:	00 00                	add    %al,(%rax)
   12bbd:	00 00                	add    %al,(%rax)
   12bbf:	00 5d 03             	add    %bl,0x3(%rbp)
   12bc2:	00 00                	add    %al,(%rax)
   12bc4:	00 00                	add    %al,(%rax)
   12bc6:	00 00                	add    %al,(%rax)
   12bc8:	5d                   	pop    %rbp
   12bc9:	03 00                	add    (%rax),%eax
   12bcb:	00 00                	add    %al,(%rax)
   12bcd:	00 00                	add    %al,(%rax)
   12bcf:	00 5d 03             	add    %bl,0x3(%rbp)
   12bd2:	00 00                	add    %al,(%rax)
   12bd4:	00 00                	add    %al,(%rax)
   12bd6:	00 00                	add    %al,(%rax)
   12bd8:	5d                   	pop    %rbp
   12bd9:	03 00                	add    (%rax),%eax
   12bdb:	00 00                	add    %al,(%rax)
   12bdd:	00 00                	add    %al,(%rax)
   12bdf:	00 5d 03             	add    %bl,0x3(%rbp)
   12be2:	00 00                	add    %al,(%rax)
   12be4:	00 00                	add    %al,(%rax)
   12be6:	00 00                	add    %al,(%rax)
   12be8:	5d                   	pop    %rbp
   12be9:	03 00                	add    (%rax),%eax
   12beb:	00 00                	add    %al,(%rax)
   12bed:	00 00                	add    %al,(%rax)
   12bef:	00 5d 03             	add    %bl,0x3(%rbp)
   12bf2:	00 00                	add    %al,(%rax)
   12bf4:	00 00                	add    %al,(%rax)
   12bf6:	00 00                	add    %al,(%rax)
   12bf8:	5d                   	pop    %rbp
   12bf9:	03 00                	add    (%rax),%eax
   12bfb:	00 00                	add    %al,(%rax)
   12bfd:	00 00                	add    %al,(%rax)
   12bff:	00 5d 03             	add    %bl,0x3(%rbp)
   12c02:	00 00                	add    %al,(%rax)
   12c04:	00 00                	add    %al,(%rax)
   12c06:	00 00                	add    %al,(%rax)
   12c08:	5d                   	pop    %rbp
   12c09:	03 00                	add    (%rax),%eax
   12c0b:	00 00                	add    %al,(%rax)
   12c0d:	00 00                	add    %al,(%rax)
   12c0f:	00 5d 03             	add    %bl,0x3(%rbp)
   12c12:	00 00                	add    %al,(%rax)
   12c14:	00 00                	add    %al,(%rax)
   12c16:	00 00                	add    %al,(%rax)
   12c18:	5d                   	pop    %rbp
   12c19:	03 00                	add    (%rax),%eax
   12c1b:	00 00                	add    %al,(%rax)
   12c1d:	00 00                	add    %al,(%rax)
   12c1f:	00 5d 03             	add    %bl,0x3(%rbp)
   12c22:	00 00                	add    %al,(%rax)
   12c24:	00 00                	add    %al,(%rax)
   12c26:	00 00                	add    %al,(%rax)
   12c28:	5d                   	pop    %rbp
   12c29:	03 00                	add    (%rax),%eax
   12c2b:	00 00                	add    %al,(%rax)
   12c2d:	00 00                	add    %al,(%rax)
   12c2f:	00 5d 03             	add    %bl,0x3(%rbp)
   12c32:	00 00                	add    %al,(%rax)
   12c34:	00 00                	add    %al,(%rax)
   12c36:	00 00                	add    %al,(%rax)
   12c38:	5d                   	pop    %rbp
   12c39:	03 00                	add    (%rax),%eax
   12c3b:	00 00                	add    %al,(%rax)
   12c3d:	00 00                	add    %al,(%rax)
   12c3f:	00 5d 03             	add    %bl,0x3(%rbp)
   12c42:	00 00                	add    %al,(%rax)
   12c44:	00 00                	add    %al,(%rax)
   12c46:	00 00                	add    %al,(%rax)
   12c48:	5d                   	pop    %rbp
   12c49:	03 00                	add    (%rax),%eax
   12c4b:	00 00                	add    %al,(%rax)
   12c4d:	00 00                	add    %al,(%rax)
   12c4f:	00 5d 03             	add    %bl,0x3(%rbp)
   12c52:	00 00                	add    %al,(%rax)
   12c54:	00 00                	add    %al,(%rax)
   12c56:	00 00                	add    %al,(%rax)
   12c58:	5d                   	pop    %rbp
   12c59:	03 00                	add    (%rax),%eax
   12c5b:	00 00                	add    %al,(%rax)
   12c5d:	00 00                	add    %al,(%rax)
   12c5f:	00 5d 03             	add    %bl,0x3(%rbp)
   12c62:	00 00                	add    %al,(%rax)
   12c64:	00 00                	add    %al,(%rax)
   12c66:	00 00                	add    %al,(%rax)
   12c68:	5d                   	pop    %rbp
   12c69:	03 00                	add    (%rax),%eax
   12c6b:	00 00                	add    %al,(%rax)
   12c6d:	00 00                	add    %al,(%rax)
   12c6f:	00 5d 03             	add    %bl,0x3(%rbp)
   12c72:	00 00                	add    %al,(%rax)
   12c74:	00 00                	add    %al,(%rax)
   12c76:	00 00                	add    %al,(%rax)
   12c78:	5d                   	pop    %rbp
   12c79:	03 00                	add    (%rax),%eax
   12c7b:	00 00                	add    %al,(%rax)
   12c7d:	00 00                	add    %al,(%rax)
   12c7f:	00 5d 03             	add    %bl,0x3(%rbp)
   12c82:	00 00                	add    %al,(%rax)
   12c84:	00 00                	add    %al,(%rax)
   12c86:	00 00                	add    %al,(%rax)
   12c88:	5d                   	pop    %rbp
   12c89:	03 00                	add    (%rax),%eax
   12c8b:	00 00                	add    %al,(%rax)
   12c8d:	00 00                	add    %al,(%rax)
   12c8f:	00 5d 03             	add    %bl,0x3(%rbp)
   12c92:	00 00                	add    %al,(%rax)
   12c94:	00 00                	add    %al,(%rax)
   12c96:	00 00                	add    %al,(%rax)
   12c98:	5d                   	pop    %rbp
   12c99:	03 00                	add    (%rax),%eax
   12c9b:	00 00                	add    %al,(%rax)
   12c9d:	00 00                	add    %al,(%rax)
   12c9f:	00 5d 03             	add    %bl,0x3(%rbp)
   12ca2:	00 00                	add    %al,(%rax)
   12ca4:	00 00                	add    %al,(%rax)
   12ca6:	00 00                	add    %al,(%rax)
   12ca8:	5d                   	pop    %rbp
   12ca9:	03 00                	add    (%rax),%eax
   12cab:	00 00                	add    %al,(%rax)
   12cad:	00 00                	add    %al,(%rax)
   12caf:	00 5d 03             	add    %bl,0x3(%rbp)
   12cb2:	00 00                	add    %al,(%rax)
   12cb4:	00 00                	add    %al,(%rax)
   12cb6:	00 00                	add    %al,(%rax)
   12cb8:	5d                   	pop    %rbp
   12cb9:	03 00                	add    (%rax),%eax
   12cbb:	00 00                	add    %al,(%rax)
   12cbd:	00 00                	add    %al,(%rax)
   12cbf:	00 5d 03             	add    %bl,0x3(%rbp)
   12cc2:	00 00                	add    %al,(%rax)
   12cc4:	00 00                	add    %al,(%rax)
   12cc6:	00 00                	add    %al,(%rax)
   12cc8:	5d                   	pop    %rbp
   12cc9:	03 00                	add    (%rax),%eax
   12ccb:	00 00                	add    %al,(%rax)
   12ccd:	00 00                	add    %al,(%rax)
   12ccf:	00 5d 03             	add    %bl,0x3(%rbp)
   12cd2:	00 00                	add    %al,(%rax)
   12cd4:	00 00                	add    %al,(%rax)
   12cd6:	00 00                	add    %al,(%rax)
   12cd8:	5d                   	pop    %rbp
   12cd9:	03 00                	add    (%rax),%eax
   12cdb:	00 00                	add    %al,(%rax)
   12cdd:	00 00                	add    %al,(%rax)
   12cdf:	00 5d 03             	add    %bl,0x3(%rbp)
   12ce2:	00 00                	add    %al,(%rax)
   12ce4:	00 00                	add    %al,(%rax)
   12ce6:	00 00                	add    %al,(%rax)
   12ce8:	5d                   	pop    %rbp
   12ce9:	03 00                	add    (%rax),%eax
   12ceb:	00 00                	add    %al,(%rax)
   12ced:	00 00                	add    %al,(%rax)
   12cef:	00 5d 03             	add    %bl,0x3(%rbp)
   12cf2:	00 00                	add    %al,(%rax)
   12cf4:	00 00                	add    %al,(%rax)
   12cf6:	00 00                	add    %al,(%rax)
   12cf8:	5d                   	pop    %rbp
   12cf9:	03 00                	add    (%rax),%eax
   12cfb:	00 00                	add    %al,(%rax)
   12cfd:	00 00                	add    %al,(%rax)
   12cff:	00 6b 03             	add    %ch,0x3(%rbx)
   12d02:	00 00                	add    %al,(%rax)
   12d04:	00 00                	add    %al,(%rax)
   12d06:	00 00                	add    %al,(%rax)
   12d08:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12d0b:	00 00                	add    %al,(%rax)
   12d0d:	00 00                	add    %al,(%rax)
   12d0f:	00 6b 03             	add    %ch,0x3(%rbx)
   12d12:	00 00                	add    %al,(%rax)
   12d14:	00 00                	add    %al,(%rax)
   12d16:	00 00                	add    %al,(%rax)
   12d18:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12d1b:	00 00                	add    %al,(%rax)
   12d1d:	00 00                	add    %al,(%rax)
   12d1f:	00 6b 03             	add    %ch,0x3(%rbx)
   12d22:	00 00                	add    %al,(%rax)
   12d24:	00 00                	add    %al,(%rax)
   12d26:	00 00                	add    %al,(%rax)
   12d28:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12d2b:	00 00                	add    %al,(%rax)
   12d2d:	00 00                	add    %al,(%rax)
   12d2f:	00 6b 03             	add    %ch,0x3(%rbx)
   12d32:	00 00                	add    %al,(%rax)
   12d34:	00 00                	add    %al,(%rax)
   12d36:	00 00                	add    %al,(%rax)
   12d38:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12d3b:	00 00                	add    %al,(%rax)
   12d3d:	00 00                	add    %al,(%rax)
   12d3f:	00 6b 03             	add    %ch,0x3(%rbx)
   12d42:	00 00                	add    %al,(%rax)
   12d44:	00 00                	add    %al,(%rax)
   12d46:	00 00                	add    %al,(%rax)
   12d48:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12d4b:	00 00                	add    %al,(%rax)
   12d4d:	00 00                	add    %al,(%rax)
   12d4f:	00 6b 03             	add    %ch,0x3(%rbx)
   12d52:	00 00                	add    %al,(%rax)
   12d54:	00 00                	add    %al,(%rax)
   12d56:	00 00                	add    %al,(%rax)
   12d58:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12d5b:	00 00                	add    %al,(%rax)
   12d5d:	00 00                	add    %al,(%rax)
   12d5f:	00 6b 03             	add    %ch,0x3(%rbx)
   12d62:	00 00                	add    %al,(%rax)
   12d64:	00 00                	add    %al,(%rax)
   12d66:	00 00                	add    %al,(%rax)
   12d68:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12d6b:	00 00                	add    %al,(%rax)
   12d6d:	00 00                	add    %al,(%rax)
   12d6f:	00 6b 03             	add    %ch,0x3(%rbx)
   12d72:	00 00                	add    %al,(%rax)
   12d74:	00 00                	add    %al,(%rax)
   12d76:	00 00                	add    %al,(%rax)
   12d78:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12d7b:	00 00                	add    %al,(%rax)
   12d7d:	00 00                	add    %al,(%rax)
   12d7f:	00 6b 03             	add    %ch,0x3(%rbx)
   12d82:	00 00                	add    %al,(%rax)
   12d84:	00 00                	add    %al,(%rax)
   12d86:	00 00                	add    %al,(%rax)
   12d88:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12d8b:	00 00                	add    %al,(%rax)
   12d8d:	00 00                	add    %al,(%rax)
   12d8f:	00 6b 03             	add    %ch,0x3(%rbx)
   12d92:	00 00                	add    %al,(%rax)
   12d94:	00 00                	add    %al,(%rax)
   12d96:	00 00                	add    %al,(%rax)
   12d98:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12d9b:	00 00                	add    %al,(%rax)
   12d9d:	00 00                	add    %al,(%rax)
   12d9f:	00 6b 03             	add    %ch,0x3(%rbx)
   12da2:	00 00                	add    %al,(%rax)
   12da4:	00 00                	add    %al,(%rax)
   12da6:	00 00                	add    %al,(%rax)
   12da8:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12dab:	00 00                	add    %al,(%rax)
   12dad:	00 00                	add    %al,(%rax)
   12daf:	00 6b 03             	add    %ch,0x3(%rbx)
   12db2:	00 00                	add    %al,(%rax)
   12db4:	00 00                	add    %al,(%rax)
   12db6:	00 00                	add    %al,(%rax)
   12db8:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12dbb:	00 00                	add    %al,(%rax)
   12dbd:	00 00                	add    %al,(%rax)
   12dbf:	00 6b 03             	add    %ch,0x3(%rbx)
   12dc2:	00 00                	add    %al,(%rax)
   12dc4:	00 00                	add    %al,(%rax)
   12dc6:	00 00                	add    %al,(%rax)
   12dc8:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12dcb:	00 00                	add    %al,(%rax)
   12dcd:	00 00                	add    %al,(%rax)
   12dcf:	00 6b 03             	add    %ch,0x3(%rbx)
   12dd2:	00 00                	add    %al,(%rax)
   12dd4:	00 00                	add    %al,(%rax)
   12dd6:	00 00                	add    %al,(%rax)
   12dd8:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12ddb:	00 00                	add    %al,(%rax)
   12ddd:	00 00                	add    %al,(%rax)
   12ddf:	00 6b 03             	add    %ch,0x3(%rbx)
   12de2:	00 00                	add    %al,(%rax)
   12de4:	00 00                	add    %al,(%rax)
   12de6:	00 00                	add    %al,(%rax)
   12de8:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12deb:	00 00                	add    %al,(%rax)
   12ded:	00 00                	add    %al,(%rax)
   12def:	00 6b 03             	add    %ch,0x3(%rbx)
   12df2:	00 00                	add    %al,(%rax)
   12df4:	00 00                	add    %al,(%rax)
   12df6:	00 00                	add    %al,(%rax)
   12df8:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12dfb:	00 00                	add    %al,(%rax)
   12dfd:	00 00                	add    %al,(%rax)
   12dff:	00 6b 03             	add    %ch,0x3(%rbx)
   12e02:	00 00                	add    %al,(%rax)
   12e04:	00 00                	add    %al,(%rax)
   12e06:	00 00                	add    %al,(%rax)
   12e08:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12e0b:	00 00                	add    %al,(%rax)
   12e0d:	00 00                	add    %al,(%rax)
   12e0f:	00 6b 03             	add    %ch,0x3(%rbx)
   12e12:	00 00                	add    %al,(%rax)
   12e14:	00 00                	add    %al,(%rax)
   12e16:	00 00                	add    %al,(%rax)
   12e18:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12e1b:	00 00                	add    %al,(%rax)
   12e1d:	00 00                	add    %al,(%rax)
   12e1f:	00 6b 03             	add    %ch,0x3(%rbx)
   12e22:	00 00                	add    %al,(%rax)
   12e24:	00 00                	add    %al,(%rax)
   12e26:	00 00                	add    %al,(%rax)
   12e28:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12e2b:	00 00                	add    %al,(%rax)
   12e2d:	00 00                	add    %al,(%rax)
   12e2f:	00 6b 03             	add    %ch,0x3(%rbx)
   12e32:	00 00                	add    %al,(%rax)
   12e34:	00 00                	add    %al,(%rax)
   12e36:	00 00                	add    %al,(%rax)
   12e38:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12e3b:	00 00                	add    %al,(%rax)
   12e3d:	00 00                	add    %al,(%rax)
   12e3f:	00 6b 03             	add    %ch,0x3(%rbx)
   12e42:	00 00                	add    %al,(%rax)
   12e44:	00 00                	add    %al,(%rax)
   12e46:	00 00                	add    %al,(%rax)
   12e48:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12e4b:	00 00                	add    %al,(%rax)
   12e4d:	00 00                	add    %al,(%rax)
   12e4f:	00 6b 03             	add    %ch,0x3(%rbx)
   12e52:	00 00                	add    %al,(%rax)
   12e54:	00 00                	add    %al,(%rax)
   12e56:	00 00                	add    %al,(%rax)
   12e58:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12e5b:	00 00                	add    %al,(%rax)
   12e5d:	00 00                	add    %al,(%rax)
   12e5f:	00 6b 03             	add    %ch,0x3(%rbx)
   12e62:	00 00                	add    %al,(%rax)
   12e64:	00 00                	add    %al,(%rax)
   12e66:	00 00                	add    %al,(%rax)
   12e68:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12e6b:	00 00                	add    %al,(%rax)
   12e6d:	00 00                	add    %al,(%rax)
   12e6f:	00 6b 03             	add    %ch,0x3(%rbx)
   12e72:	00 00                	add    %al,(%rax)
   12e74:	00 00                	add    %al,(%rax)
   12e76:	00 00                	add    %al,(%rax)
   12e78:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12e7b:	00 00                	add    %al,(%rax)
   12e7d:	00 00                	add    %al,(%rax)
   12e7f:	00 6b 03             	add    %ch,0x3(%rbx)
   12e82:	00 00                	add    %al,(%rax)
   12e84:	00 00                	add    %al,(%rax)
   12e86:	00 00                	add    %al,(%rax)
   12e88:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12e8b:	00 00                	add    %al,(%rax)
   12e8d:	00 00                	add    %al,(%rax)
   12e8f:	00 6b 03             	add    %ch,0x3(%rbx)
   12e92:	00 00                	add    %al,(%rax)
   12e94:	00 00                	add    %al,(%rax)
   12e96:	00 00                	add    %al,(%rax)
   12e98:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12e9b:	00 00                	add    %al,(%rax)
   12e9d:	00 00                	add    %al,(%rax)
   12e9f:	00 6b 03             	add    %ch,0x3(%rbx)
   12ea2:	00 00                	add    %al,(%rax)
   12ea4:	00 00                	add    %al,(%rax)
   12ea6:	00 00                	add    %al,(%rax)
   12ea8:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12eab:	00 00                	add    %al,(%rax)
   12ead:	00 00                	add    %al,(%rax)
   12eaf:	00 6b 03             	add    %ch,0x3(%rbx)
   12eb2:	00 00                	add    %al,(%rax)
   12eb4:	00 00                	add    %al,(%rax)
   12eb6:	00 00                	add    %al,(%rax)
   12eb8:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12ebb:	00 00                	add    %al,(%rax)
   12ebd:	00 00                	add    %al,(%rax)
   12ebf:	00 6b 03             	add    %ch,0x3(%rbx)
   12ec2:	00 00                	add    %al,(%rax)
   12ec4:	00 00                	add    %al,(%rax)
   12ec6:	00 00                	add    %al,(%rax)
   12ec8:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12ecb:	00 00                	add    %al,(%rax)
   12ecd:	00 00                	add    %al,(%rax)
   12ecf:	00 6b 03             	add    %ch,0x3(%rbx)
   12ed2:	00 00                	add    %al,(%rax)
   12ed4:	00 00                	add    %al,(%rax)
   12ed6:	00 00                	add    %al,(%rax)
   12ed8:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12edb:	00 00                	add    %al,(%rax)
   12edd:	00 00                	add    %al,(%rax)
   12edf:	00 6b 03             	add    %ch,0x3(%rbx)
   12ee2:	00 00                	add    %al,(%rax)
   12ee4:	00 00                	add    %al,(%rax)
   12ee6:	00 00                	add    %al,(%rax)
   12ee8:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12eeb:	00 00                	add    %al,(%rax)
   12eed:	00 00                	add    %al,(%rax)
   12eef:	00 6b 03             	add    %ch,0x3(%rbx)
   12ef2:	00 00                	add    %al,(%rax)
   12ef4:	00 00                	add    %al,(%rax)
   12ef6:	00 00                	add    %al,(%rax)
   12ef8:	6b 03 00             	imul   $0x0,(%rbx),%eax
   12efb:	00 00                	add    %al,(%rax)
   12efd:	00 00                	add    %al,(%rax)
   12eff:	00 79 03             	add    %bh,0x3(%rcx)
   12f02:	00 00                	add    %al,(%rax)
   12f04:	00 00                	add    %al,(%rax)
   12f06:	00 00                	add    %al,(%rax)
   12f08:	79 03                	jns    12f0d <__intel_mic_avx512f_memcpy+0x114d>
   12f0a:	00 00                	add    %al,(%rax)
   12f0c:	00 00                	add    %al,(%rax)
   12f0e:	00 00                	add    %al,(%rax)
   12f10:	79 03                	jns    12f15 <__intel_mic_avx512f_memcpy+0x1155>
   12f12:	00 00                	add    %al,(%rax)
   12f14:	00 00                	add    %al,(%rax)
   12f16:	00 00                	add    %al,(%rax)
   12f18:	79 03                	jns    12f1d <__intel_mic_avx512f_memcpy+0x115d>
   12f1a:	00 00                	add    %al,(%rax)
   12f1c:	00 00                	add    %al,(%rax)
   12f1e:	00 00                	add    %al,(%rax)
   12f20:	79 03                	jns    12f25 <__intel_mic_avx512f_memcpy+0x1165>
   12f22:	00 00                	add    %al,(%rax)
   12f24:	00 00                	add    %al,(%rax)
   12f26:	00 00                	add    %al,(%rax)
   12f28:	79 03                	jns    12f2d <__intel_mic_avx512f_memcpy+0x116d>
   12f2a:	00 00                	add    %al,(%rax)
   12f2c:	00 00                	add    %al,(%rax)
   12f2e:	00 00                	add    %al,(%rax)
   12f30:	79 03                	jns    12f35 <__intel_mic_avx512f_memcpy+0x1175>
   12f32:	00 00                	add    %al,(%rax)
   12f34:	00 00                	add    %al,(%rax)
   12f36:	00 00                	add    %al,(%rax)
   12f38:	79 03                	jns    12f3d <__intel_mic_avx512f_memcpy+0x117d>
   12f3a:	00 00                	add    %al,(%rax)
   12f3c:	00 00                	add    %al,(%rax)
   12f3e:	00 00                	add    %al,(%rax)
   12f40:	79 03                	jns    12f45 <__intel_mic_avx512f_memcpy+0x1185>
   12f42:	00 00                	add    %al,(%rax)
   12f44:	00 00                	add    %al,(%rax)
   12f46:	00 00                	add    %al,(%rax)
   12f48:	79 03                	jns    12f4d <__intel_mic_avx512f_memcpy+0x118d>
   12f4a:	00 00                	add    %al,(%rax)
   12f4c:	00 00                	add    %al,(%rax)
   12f4e:	00 00                	add    %al,(%rax)
   12f50:	79 03                	jns    12f55 <__intel_mic_avx512f_memcpy+0x1195>
   12f52:	00 00                	add    %al,(%rax)
   12f54:	00 00                	add    %al,(%rax)
   12f56:	00 00                	add    %al,(%rax)
   12f58:	79 03                	jns    12f5d <__intel_mic_avx512f_memcpy+0x119d>
   12f5a:	00 00                	add    %al,(%rax)
   12f5c:	00 00                	add    %al,(%rax)
   12f5e:	00 00                	add    %al,(%rax)
   12f60:	79 03                	jns    12f65 <__intel_mic_avx512f_memcpy+0x11a5>
   12f62:	00 00                	add    %al,(%rax)
   12f64:	00 00                	add    %al,(%rax)
   12f66:	00 00                	add    %al,(%rax)
   12f68:	79 03                	jns    12f6d <__intel_mic_avx512f_memcpy+0x11ad>
   12f6a:	00 00                	add    %al,(%rax)
   12f6c:	00 00                	add    %al,(%rax)
   12f6e:	00 00                	add    %al,(%rax)
   12f70:	79 03                	jns    12f75 <__intel_mic_avx512f_memcpy+0x11b5>
   12f72:	00 00                	add    %al,(%rax)
   12f74:	00 00                	add    %al,(%rax)
   12f76:	00 00                	add    %al,(%rax)
   12f78:	79 03                	jns    12f7d <__intel_mic_avx512f_memcpy+0x11bd>
   12f7a:	00 00                	add    %al,(%rax)
   12f7c:	00 00                	add    %al,(%rax)
   12f7e:	00 00                	add    %al,(%rax)
   12f80:	79 03                	jns    12f85 <__intel_mic_avx512f_memcpy+0x11c5>
   12f82:	00 00                	add    %al,(%rax)
   12f84:	00 00                	add    %al,(%rax)
   12f86:	00 00                	add    %al,(%rax)
   12f88:	79 03                	jns    12f8d <__intel_mic_avx512f_memcpy+0x11cd>
   12f8a:	00 00                	add    %al,(%rax)
   12f8c:	00 00                	add    %al,(%rax)
   12f8e:	00 00                	add    %al,(%rax)
   12f90:	79 03                	jns    12f95 <__intel_mic_avx512f_memcpy+0x11d5>
   12f92:	00 00                	add    %al,(%rax)
   12f94:	00 00                	add    %al,(%rax)
   12f96:	00 00                	add    %al,(%rax)
   12f98:	79 03                	jns    12f9d <__intel_mic_avx512f_memcpy+0x11dd>
   12f9a:	00 00                	add    %al,(%rax)
   12f9c:	00 00                	add    %al,(%rax)
   12f9e:	00 00                	add    %al,(%rax)
   12fa0:	79 03                	jns    12fa5 <__intel_mic_avx512f_memcpy+0x11e5>
   12fa2:	00 00                	add    %al,(%rax)
   12fa4:	00 00                	add    %al,(%rax)
   12fa6:	00 00                	add    %al,(%rax)
   12fa8:	79 03                	jns    12fad <__intel_mic_avx512f_memcpy+0x11ed>
   12faa:	00 00                	add    %al,(%rax)
   12fac:	00 00                	add    %al,(%rax)
   12fae:	00 00                	add    %al,(%rax)
   12fb0:	79 03                	jns    12fb5 <__intel_mic_avx512f_memcpy+0x11f5>
   12fb2:	00 00                	add    %al,(%rax)
   12fb4:	00 00                	add    %al,(%rax)
   12fb6:	00 00                	add    %al,(%rax)
   12fb8:	79 03                	jns    12fbd <__intel_mic_avx512f_memcpy+0x11fd>
   12fba:	00 00                	add    %al,(%rax)
   12fbc:	00 00                	add    %al,(%rax)
   12fbe:	00 00                	add    %al,(%rax)
   12fc0:	79 03                	jns    12fc5 <__intel_mic_avx512f_memcpy+0x1205>
   12fc2:	00 00                	add    %al,(%rax)
   12fc4:	00 00                	add    %al,(%rax)
   12fc6:	00 00                	add    %al,(%rax)
   12fc8:	79 03                	jns    12fcd <__intel_mic_avx512f_memcpy+0x120d>
   12fca:	00 00                	add    %al,(%rax)
   12fcc:	00 00                	add    %al,(%rax)
   12fce:	00 00                	add    %al,(%rax)
   12fd0:	79 03                	jns    12fd5 <__intel_mic_avx512f_memcpy+0x1215>
   12fd2:	00 00                	add    %al,(%rax)
   12fd4:	00 00                	add    %al,(%rax)
   12fd6:	00 00                	add    %al,(%rax)
   12fd8:	79 03                	jns    12fdd <__intel_mic_avx512f_memcpy+0x121d>
   12fda:	00 00                	add    %al,(%rax)
   12fdc:	00 00                	add    %al,(%rax)
   12fde:	00 00                	add    %al,(%rax)
   12fe0:	79 03                	jns    12fe5 <__intel_mic_avx512f_memcpy+0x1225>
   12fe2:	00 00                	add    %al,(%rax)
   12fe4:	00 00                	add    %al,(%rax)
   12fe6:	00 00                	add    %al,(%rax)
   12fe8:	79 03                	jns    12fed <__intel_mic_avx512f_memcpy+0x122d>
   12fea:	00 00                	add    %al,(%rax)
   12fec:	00 00                	add    %al,(%rax)
   12fee:	00 00                	add    %al,(%rax)
   12ff0:	79 03                	jns    12ff5 <__intel_mic_avx512f_memcpy+0x1235>
   12ff2:	00 00                	add    %al,(%rax)
   12ff4:	00 00                	add    %al,(%rax)
   12ff6:	00 00                	add    %al,(%rax)
   12ff8:	79 03                	jns    12ffd <__intel_mic_avx512f_memcpy+0x123d>
   12ffa:	00 00                	add    %al,(%rax)
   12ffc:	00 00                	add    %al,(%rax)
   12ffe:	00 00                	add    %al,(%rax)
   13000:	79 03                	jns    13005 <__intel_mic_avx512f_memcpy+0x1245>
   13002:	00 00                	add    %al,(%rax)
   13004:	00 00                	add    %al,(%rax)
   13006:	00 00                	add    %al,(%rax)
   13008:	79 03                	jns    1300d <__intel_mic_avx512f_memcpy+0x124d>
   1300a:	00 00                	add    %al,(%rax)
   1300c:	00 00                	add    %al,(%rax)
   1300e:	00 00                	add    %al,(%rax)
   13010:	79 03                	jns    13015 <__intel_mic_avx512f_memcpy+0x1255>
   13012:	00 00                	add    %al,(%rax)
   13014:	00 00                	add    %al,(%rax)
   13016:	00 00                	add    %al,(%rax)
   13018:	79 03                	jns    1301d <__intel_mic_avx512f_memcpy+0x125d>
   1301a:	00 00                	add    %al,(%rax)
   1301c:	00 00                	add    %al,(%rax)
   1301e:	00 00                	add    %al,(%rax)
   13020:	79 03                	jns    13025 <__intel_mic_avx512f_memcpy+0x1265>
   13022:	00 00                	add    %al,(%rax)
   13024:	00 00                	add    %al,(%rax)
   13026:	00 00                	add    %al,(%rax)
   13028:	79 03                	jns    1302d <__intel_mic_avx512f_memcpy+0x126d>
   1302a:	00 00                	add    %al,(%rax)
   1302c:	00 00                	add    %al,(%rax)
   1302e:	00 00                	add    %al,(%rax)
   13030:	79 03                	jns    13035 <__intel_mic_avx512f_memcpy+0x1275>
   13032:	00 00                	add    %al,(%rax)
   13034:	00 00                	add    %al,(%rax)
   13036:	00 00                	add    %al,(%rax)
   13038:	79 03                	jns    1303d <__intel_mic_avx512f_memcpy+0x127d>
   1303a:	00 00                	add    %al,(%rax)
   1303c:	00 00                	add    %al,(%rax)
   1303e:	00 00                	add    %al,(%rax)
   13040:	79 03                	jns    13045 <__intel_mic_avx512f_memcpy+0x1285>
   13042:	00 00                	add    %al,(%rax)
   13044:	00 00                	add    %al,(%rax)
   13046:	00 00                	add    %al,(%rax)
   13048:	79 03                	jns    1304d <__intel_mic_avx512f_memcpy+0x128d>
   1304a:	00 00                	add    %al,(%rax)
   1304c:	00 00                	add    %al,(%rax)
   1304e:	00 00                	add    %al,(%rax)
   13050:	79 03                	jns    13055 <__intel_mic_avx512f_memcpy+0x1295>
   13052:	00 00                	add    %al,(%rax)
   13054:	00 00                	add    %al,(%rax)
   13056:	00 00                	add    %al,(%rax)
   13058:	79 03                	jns    1305d <__intel_mic_avx512f_memcpy+0x129d>
   1305a:	00 00                	add    %al,(%rax)
   1305c:	00 00                	add    %al,(%rax)
   1305e:	00 00                	add    %al,(%rax)
   13060:	79 03                	jns    13065 <__intel_mic_avx512f_memcpy+0x12a5>
   13062:	00 00                	add    %al,(%rax)
   13064:	00 00                	add    %al,(%rax)
   13066:	00 00                	add    %al,(%rax)
   13068:	79 03                	jns    1306d <__intel_mic_avx512f_memcpy+0x12ad>
   1306a:	00 00                	add    %al,(%rax)
   1306c:	00 00                	add    %al,(%rax)
   1306e:	00 00                	add    %al,(%rax)
   13070:	79 03                	jns    13075 <__intel_mic_avx512f_memcpy+0x12b5>
   13072:	00 00                	add    %al,(%rax)
   13074:	00 00                	add    %al,(%rax)
   13076:	00 00                	add    %al,(%rax)
   13078:	79 03                	jns    1307d <__intel_mic_avx512f_memcpy+0x12bd>
   1307a:	00 00                	add    %al,(%rax)
   1307c:	00 00                	add    %al,(%rax)
   1307e:	00 00                	add    %al,(%rax)
   13080:	79 03                	jns    13085 <__intel_mic_avx512f_memcpy+0x12c5>
   13082:	00 00                	add    %al,(%rax)
   13084:	00 00                	add    %al,(%rax)
   13086:	00 00                	add    %al,(%rax)
   13088:	79 03                	jns    1308d <__intel_mic_avx512f_memcpy+0x12cd>
   1308a:	00 00                	add    %al,(%rax)
   1308c:	00 00                	add    %al,(%rax)
   1308e:	00 00                	add    %al,(%rax)
   13090:	79 03                	jns    13095 <__intel_mic_avx512f_memcpy+0x12d5>
   13092:	00 00                	add    %al,(%rax)
   13094:	00 00                	add    %al,(%rax)
   13096:	00 00                	add    %al,(%rax)
   13098:	79 03                	jns    1309d <__intel_mic_avx512f_memcpy+0x12dd>
   1309a:	00 00                	add    %al,(%rax)
   1309c:	00 00                	add    %al,(%rax)
   1309e:	00 00                	add    %al,(%rax)
   130a0:	79 03                	jns    130a5 <__intel_mic_avx512f_memcpy+0x12e5>
   130a2:	00 00                	add    %al,(%rax)
   130a4:	00 00                	add    %al,(%rax)
   130a6:	00 00                	add    %al,(%rax)
   130a8:	79 03                	jns    130ad <__intel_mic_avx512f_memcpy+0x12ed>
   130aa:	00 00                	add    %al,(%rax)
   130ac:	00 00                	add    %al,(%rax)
   130ae:	00 00                	add    %al,(%rax)
   130b0:	79 03                	jns    130b5 <__intel_mic_avx512f_memcpy+0x12f5>
   130b2:	00 00                	add    %al,(%rax)
   130b4:	00 00                	add    %al,(%rax)
   130b6:	00 00                	add    %al,(%rax)
   130b8:	79 03                	jns    130bd <__intel_mic_avx512f_memcpy+0x12fd>
   130ba:	00 00                	add    %al,(%rax)
   130bc:	00 00                	add    %al,(%rax)
   130be:	00 00                	add    %al,(%rax)
   130c0:	79 03                	jns    130c5 <__intel_mic_avx512f_memcpy+0x1305>
   130c2:	00 00                	add    %al,(%rax)
   130c4:	00 00                	add    %al,(%rax)
   130c6:	00 00                	add    %al,(%rax)
   130c8:	79 03                	jns    130cd <__intel_mic_avx512f_memcpy+0x130d>
   130ca:	00 00                	add    %al,(%rax)
   130cc:	00 00                	add    %al,(%rax)
   130ce:	00 00                	add    %al,(%rax)
   130d0:	79 03                	jns    130d5 <__intel_mic_avx512f_memcpy+0x1315>
   130d2:	00 00                	add    %al,(%rax)
   130d4:	00 00                	add    %al,(%rax)
   130d6:	00 00                	add    %al,(%rax)
   130d8:	79 03                	jns    130dd <__intel_mic_avx512f_memcpy+0x131d>
   130da:	00 00                	add    %al,(%rax)
   130dc:	00 00                	add    %al,(%rax)
   130de:	00 00                	add    %al,(%rax)
   130e0:	79 03                	jns    130e5 <__intel_mic_avx512f_memcpy+0x1325>
   130e2:	00 00                	add    %al,(%rax)
   130e4:	00 00                	add    %al,(%rax)
   130e6:	00 00                	add    %al,(%rax)
   130e8:	79 03                	jns    130ed <__intel_mic_avx512f_memcpy+0x132d>
   130ea:	00 00                	add    %al,(%rax)
   130ec:	00 00                	add    %al,(%rax)
   130ee:	00 00                	add    %al,(%rax)
   130f0:	79 03                	jns    130f5 <__intel_mic_avx512f_memcpy+0x1335>
   130f2:	00 00                	add    %al,(%rax)
   130f4:	00 00                	add    %al,(%rax)
   130f6:	00 00                	add    %al,(%rax)
   130f8:	79 03                	jns    130fd <__intel_mic_avx512f_memcpy+0x133d>
   130fa:	00 00                	add    %al,(%rax)
   130fc:	00 00                	add    %al,(%rax)
   130fe:	00 00                	add    %al,(%rax)
   13100:	87 03                	xchg   %eax,(%rbx)
   13102:	00 00                	add    %al,(%rax)
   13104:	00 00                	add    %al,(%rax)
   13106:	00 00                	add    %al,(%rax)
   13108:	87 03                	xchg   %eax,(%rbx)
   1310a:	00 00                	add    %al,(%rax)
   1310c:	00 00                	add    %al,(%rax)
   1310e:	00 00                	add    %al,(%rax)
   13110:	87 03                	xchg   %eax,(%rbx)
   13112:	00 00                	add    %al,(%rax)
   13114:	00 00                	add    %al,(%rax)
   13116:	00 00                	add    %al,(%rax)
   13118:	87 03                	xchg   %eax,(%rbx)
   1311a:	00 00                	add    %al,(%rax)
   1311c:	00 00                	add    %al,(%rax)
   1311e:	00 00                	add    %al,(%rax)
   13120:	87 03                	xchg   %eax,(%rbx)
   13122:	00 00                	add    %al,(%rax)
   13124:	00 00                	add    %al,(%rax)
   13126:	00 00                	add    %al,(%rax)
   13128:	87 03                	xchg   %eax,(%rbx)
   1312a:	00 00                	add    %al,(%rax)
   1312c:	00 00                	add    %al,(%rax)
   1312e:	00 00                	add    %al,(%rax)
   13130:	87 03                	xchg   %eax,(%rbx)
   13132:	00 00                	add    %al,(%rax)
   13134:	00 00                	add    %al,(%rax)
   13136:	00 00                	add    %al,(%rax)
   13138:	87 03                	xchg   %eax,(%rbx)
   1313a:	00 00                	add    %al,(%rax)
   1313c:	00 00                	add    %al,(%rax)
   1313e:	00 00                	add    %al,(%rax)
   13140:	87 03                	xchg   %eax,(%rbx)
   13142:	00 00                	add    %al,(%rax)
   13144:	00 00                	add    %al,(%rax)
   13146:	00 00                	add    %al,(%rax)
   13148:	87 03                	xchg   %eax,(%rbx)
   1314a:	00 00                	add    %al,(%rax)
   1314c:	00 00                	add    %al,(%rax)
   1314e:	00 00                	add    %al,(%rax)
   13150:	87 03                	xchg   %eax,(%rbx)
   13152:	00 00                	add    %al,(%rax)
   13154:	00 00                	add    %al,(%rax)
   13156:	00 00                	add    %al,(%rax)
   13158:	87 03                	xchg   %eax,(%rbx)
   1315a:	00 00                	add    %al,(%rax)
   1315c:	00 00                	add    %al,(%rax)
   1315e:	00 00                	add    %al,(%rax)
   13160:	87 03                	xchg   %eax,(%rbx)
   13162:	00 00                	add    %al,(%rax)
   13164:	00 00                	add    %al,(%rax)
   13166:	00 00                	add    %al,(%rax)
   13168:	87 03                	xchg   %eax,(%rbx)
   1316a:	00 00                	add    %al,(%rax)
   1316c:	00 00                	add    %al,(%rax)
   1316e:	00 00                	add    %al,(%rax)
   13170:	87 03                	xchg   %eax,(%rbx)
   13172:	00 00                	add    %al,(%rax)
   13174:	00 00                	add    %al,(%rax)
   13176:	00 00                	add    %al,(%rax)
   13178:	87 03                	xchg   %eax,(%rbx)
   1317a:	00 00                	add    %al,(%rax)
   1317c:	00 00                	add    %al,(%rax)
   1317e:	00 00                	add    %al,(%rax)
   13180:	87 03                	xchg   %eax,(%rbx)
   13182:	00 00                	add    %al,(%rax)
   13184:	00 00                	add    %al,(%rax)
   13186:	00 00                	add    %al,(%rax)
   13188:	87 03                	xchg   %eax,(%rbx)
   1318a:	00 00                	add    %al,(%rax)
   1318c:	00 00                	add    %al,(%rax)
   1318e:	00 00                	add    %al,(%rax)
   13190:	87 03                	xchg   %eax,(%rbx)
   13192:	00 00                	add    %al,(%rax)
   13194:	00 00                	add    %al,(%rax)
   13196:	00 00                	add    %al,(%rax)
   13198:	87 03                	xchg   %eax,(%rbx)
   1319a:	00 00                	add    %al,(%rax)
   1319c:	00 00                	add    %al,(%rax)
   1319e:	00 00                	add    %al,(%rax)
   131a0:	87 03                	xchg   %eax,(%rbx)
   131a2:	00 00                	add    %al,(%rax)
   131a4:	00 00                	add    %al,(%rax)
   131a6:	00 00                	add    %al,(%rax)
   131a8:	87 03                	xchg   %eax,(%rbx)
   131aa:	00 00                	add    %al,(%rax)
   131ac:	00 00                	add    %al,(%rax)
   131ae:	00 00                	add    %al,(%rax)
   131b0:	87 03                	xchg   %eax,(%rbx)
   131b2:	00 00                	add    %al,(%rax)
   131b4:	00 00                	add    %al,(%rax)
   131b6:	00 00                	add    %al,(%rax)
   131b8:	87 03                	xchg   %eax,(%rbx)
   131ba:	00 00                	add    %al,(%rax)
   131bc:	00 00                	add    %al,(%rax)
   131be:	00 00                	add    %al,(%rax)
   131c0:	87 03                	xchg   %eax,(%rbx)
   131c2:	00 00                	add    %al,(%rax)
   131c4:	00 00                	add    %al,(%rax)
   131c6:	00 00                	add    %al,(%rax)
   131c8:	87 03                	xchg   %eax,(%rbx)
   131ca:	00 00                	add    %al,(%rax)
   131cc:	00 00                	add    %al,(%rax)
   131ce:	00 00                	add    %al,(%rax)
   131d0:	87 03                	xchg   %eax,(%rbx)
   131d2:	00 00                	add    %al,(%rax)
   131d4:	00 00                	add    %al,(%rax)
   131d6:	00 00                	add    %al,(%rax)
   131d8:	87 03                	xchg   %eax,(%rbx)
   131da:	00 00                	add    %al,(%rax)
   131dc:	00 00                	add    %al,(%rax)
   131de:	00 00                	add    %al,(%rax)
   131e0:	87 03                	xchg   %eax,(%rbx)
   131e2:	00 00                	add    %al,(%rax)
   131e4:	00 00                	add    %al,(%rax)
   131e6:	00 00                	add    %al,(%rax)
   131e8:	87 03                	xchg   %eax,(%rbx)
   131ea:	00 00                	add    %al,(%rax)
   131ec:	00 00                	add    %al,(%rax)
   131ee:	00 00                	add    %al,(%rax)
   131f0:	87 03                	xchg   %eax,(%rbx)
   131f2:	00 00                	add    %al,(%rax)
   131f4:	00 00                	add    %al,(%rax)
   131f6:	00 00                	add    %al,(%rax)
   131f8:	87 03                	xchg   %eax,(%rbx)
   131fa:	00 00                	add    %al,(%rax)
   131fc:	00 00                	add    %al,(%rax)
   131fe:	00 00                	add    %al,(%rax)
   13200:	87 03                	xchg   %eax,(%rbx)
   13202:	00 00                	add    %al,(%rax)
   13204:	00 00                	add    %al,(%rax)
   13206:	00 00                	add    %al,(%rax)
   13208:	87 03                	xchg   %eax,(%rbx)
   1320a:	00 00                	add    %al,(%rax)
   1320c:	00 00                	add    %al,(%rax)
   1320e:	00 00                	add    %al,(%rax)
   13210:	87 03                	xchg   %eax,(%rbx)
   13212:	00 00                	add    %al,(%rax)
   13214:	00 00                	add    %al,(%rax)
   13216:	00 00                	add    %al,(%rax)
   13218:	87 03                	xchg   %eax,(%rbx)
   1321a:	00 00                	add    %al,(%rax)
   1321c:	00 00                	add    %al,(%rax)
   1321e:	00 00                	add    %al,(%rax)
   13220:	87 03                	xchg   %eax,(%rbx)
   13222:	00 00                	add    %al,(%rax)
   13224:	00 00                	add    %al,(%rax)
   13226:	00 00                	add    %al,(%rax)
   13228:	87 03                	xchg   %eax,(%rbx)
   1322a:	00 00                	add    %al,(%rax)
   1322c:	00 00                	add    %al,(%rax)
   1322e:	00 00                	add    %al,(%rax)
   13230:	87 03                	xchg   %eax,(%rbx)
   13232:	00 00                	add    %al,(%rax)
   13234:	00 00                	add    %al,(%rax)
   13236:	00 00                	add    %al,(%rax)
   13238:	87 03                	xchg   %eax,(%rbx)
   1323a:	00 00                	add    %al,(%rax)
   1323c:	00 00                	add    %al,(%rax)
   1323e:	00 00                	add    %al,(%rax)
   13240:	87 03                	xchg   %eax,(%rbx)
   13242:	00 00                	add    %al,(%rax)
   13244:	00 00                	add    %al,(%rax)
   13246:	00 00                	add    %al,(%rax)
   13248:	87 03                	xchg   %eax,(%rbx)
   1324a:	00 00                	add    %al,(%rax)
   1324c:	00 00                	add    %al,(%rax)
   1324e:	00 00                	add    %al,(%rax)
   13250:	87 03                	xchg   %eax,(%rbx)
   13252:	00 00                	add    %al,(%rax)
   13254:	00 00                	add    %al,(%rax)
   13256:	00 00                	add    %al,(%rax)
   13258:	87 03                	xchg   %eax,(%rbx)
   1325a:	00 00                	add    %al,(%rax)
   1325c:	00 00                	add    %al,(%rax)
   1325e:	00 00                	add    %al,(%rax)
   13260:	87 03                	xchg   %eax,(%rbx)
   13262:	00 00                	add    %al,(%rax)
   13264:	00 00                	add    %al,(%rax)
   13266:	00 00                	add    %al,(%rax)
   13268:	87 03                	xchg   %eax,(%rbx)
   1326a:	00 00                	add    %al,(%rax)
   1326c:	00 00                	add    %al,(%rax)
   1326e:	00 00                	add    %al,(%rax)
   13270:	87 03                	xchg   %eax,(%rbx)
   13272:	00 00                	add    %al,(%rax)
   13274:	00 00                	add    %al,(%rax)
   13276:	00 00                	add    %al,(%rax)
   13278:	87 03                	xchg   %eax,(%rbx)
   1327a:	00 00                	add    %al,(%rax)
   1327c:	00 00                	add    %al,(%rax)
   1327e:	00 00                	add    %al,(%rax)
   13280:	87 03                	xchg   %eax,(%rbx)
   13282:	00 00                	add    %al,(%rax)
   13284:	00 00                	add    %al,(%rax)
   13286:	00 00                	add    %al,(%rax)
   13288:	87 03                	xchg   %eax,(%rbx)
   1328a:	00 00                	add    %al,(%rax)
   1328c:	00 00                	add    %al,(%rax)
   1328e:	00 00                	add    %al,(%rax)
   13290:	87 03                	xchg   %eax,(%rbx)
   13292:	00 00                	add    %al,(%rax)
   13294:	00 00                	add    %al,(%rax)
   13296:	00 00                	add    %al,(%rax)
   13298:	87 03                	xchg   %eax,(%rbx)
   1329a:	00 00                	add    %al,(%rax)
   1329c:	00 00                	add    %al,(%rax)
   1329e:	00 00                	add    %al,(%rax)
   132a0:	87 03                	xchg   %eax,(%rbx)
   132a2:	00 00                	add    %al,(%rax)
   132a4:	00 00                	add    %al,(%rax)
   132a6:	00 00                	add    %al,(%rax)
   132a8:	87 03                	xchg   %eax,(%rbx)
   132aa:	00 00                	add    %al,(%rax)
   132ac:	00 00                	add    %al,(%rax)
   132ae:	00 00                	add    %al,(%rax)
   132b0:	87 03                	xchg   %eax,(%rbx)
   132b2:	00 00                	add    %al,(%rax)
   132b4:	00 00                	add    %al,(%rax)
   132b6:	00 00                	add    %al,(%rax)
   132b8:	87 03                	xchg   %eax,(%rbx)
   132ba:	00 00                	add    %al,(%rax)
   132bc:	00 00                	add    %al,(%rax)
   132be:	00 00                	add    %al,(%rax)
   132c0:	87 03                	xchg   %eax,(%rbx)
   132c2:	00 00                	add    %al,(%rax)
   132c4:	00 00                	add    %al,(%rax)
   132c6:	00 00                	add    %al,(%rax)
   132c8:	87 03                	xchg   %eax,(%rbx)
   132ca:	00 00                	add    %al,(%rax)
   132cc:	00 00                	add    %al,(%rax)
   132ce:	00 00                	add    %al,(%rax)
   132d0:	87 03                	xchg   %eax,(%rbx)
   132d2:	00 00                	add    %al,(%rax)
   132d4:	00 00                	add    %al,(%rax)
   132d6:	00 00                	add    %al,(%rax)
   132d8:	87 03                	xchg   %eax,(%rbx)
   132da:	00 00                	add    %al,(%rax)
   132dc:	00 00                	add    %al,(%rax)
   132de:	00 00                	add    %al,(%rax)
   132e0:	87 03                	xchg   %eax,(%rbx)
   132e2:	00 00                	add    %al,(%rax)
   132e4:	00 00                	add    %al,(%rax)
   132e6:	00 00                	add    %al,(%rax)
   132e8:	87 03                	xchg   %eax,(%rbx)
   132ea:	00 00                	add    %al,(%rax)
   132ec:	00 00                	add    %al,(%rax)
   132ee:	00 00                	add    %al,(%rax)
   132f0:	87 03                	xchg   %eax,(%rbx)
   132f2:	00 00                	add    %al,(%rax)
   132f4:	00 00                	add    %al,(%rax)
   132f6:	00 00                	add    %al,(%rax)
   132f8:	87 03                	xchg   %eax,(%rbx)
   132fa:	00 00                	add    %al,(%rax)
   132fc:	00 00                	add    %al,(%rax)
   132fe:	00 00                	add    %al,(%rax)
   13300:	95                   	xchg   %eax,%ebp
   13301:	03 00                	add    (%rax),%eax
   13303:	00 00                	add    %al,(%rax)
   13305:	00 00                	add    %al,(%rax)
   13307:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   1330d:	00 00                	add    %al,(%rax)
   1330f:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   13315:	00 00                	add    %al,(%rax)
   13317:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   1331d:	00 00                	add    %al,(%rax)
   1331f:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   13325:	00 00                	add    %al,(%rax)
   13327:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   1332d:	00 00                	add    %al,(%rax)
   1332f:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   13335:	00 00                	add    %al,(%rax)
   13337:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   1333d:	00 00                	add    %al,(%rax)
   1333f:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   13345:	00 00                	add    %al,(%rax)
   13347:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   1334d:	00 00                	add    %al,(%rax)
   1334f:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   13355:	00 00                	add    %al,(%rax)
   13357:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   1335d:	00 00                	add    %al,(%rax)
   1335f:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   13365:	00 00                	add    %al,(%rax)
   13367:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   1336d:	00 00                	add    %al,(%rax)
   1336f:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   13375:	00 00                	add    %al,(%rax)
   13377:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   1337d:	00 00                	add    %al,(%rax)
   1337f:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   13385:	00 00                	add    %al,(%rax)
   13387:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   1338d:	00 00                	add    %al,(%rax)
   1338f:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   13395:	00 00                	add    %al,(%rax)
   13397:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   1339d:	00 00                	add    %al,(%rax)
   1339f:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   133a5:	00 00                	add    %al,(%rax)
   133a7:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   133ad:	00 00                	add    %al,(%rax)
   133af:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   133b5:	00 00                	add    %al,(%rax)
   133b7:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   133bd:	00 00                	add    %al,(%rax)
   133bf:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   133c5:	00 00                	add    %al,(%rax)
   133c7:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   133cd:	00 00                	add    %al,(%rax)
   133cf:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   133d5:	00 00                	add    %al,(%rax)
   133d7:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   133dd:	00 00                	add    %al,(%rax)
   133df:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   133e5:	00 00                	add    %al,(%rax)
   133e7:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   133ed:	00 00                	add    %al,(%rax)
   133ef:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   133f5:	00 00                	add    %al,(%rax)
   133f7:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   133fd:	00 00                	add    %al,(%rax)
   133ff:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   13405:	00 00                	add    %al,(%rax)
   13407:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   1340d:	00 00                	add    %al,(%rax)
   1340f:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   13415:	00 00                	add    %al,(%rax)
   13417:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   1341d:	00 00                	add    %al,(%rax)
   1341f:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   13425:	00 00                	add    %al,(%rax)
   13427:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   1342d:	00 00                	add    %al,(%rax)
   1342f:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   13435:	00 00                	add    %al,(%rax)
   13437:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   1343d:	00 00                	add    %al,(%rax)
   1343f:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   13445:	00 00                	add    %al,(%rax)
   13447:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   1344d:	00 00                	add    %al,(%rax)
   1344f:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   13455:	00 00                	add    %al,(%rax)
   13457:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   1345d:	00 00                	add    %al,(%rax)
   1345f:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   13465:	00 00                	add    %al,(%rax)
   13467:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   1346d:	00 00                	add    %al,(%rax)
   1346f:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   13475:	00 00                	add    %al,(%rax)
   13477:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   1347d:	00 00                	add    %al,(%rax)
   1347f:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   13485:	00 00                	add    %al,(%rax)
   13487:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   1348d:	00 00                	add    %al,(%rax)
   1348f:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   13495:	00 00                	add    %al,(%rax)
   13497:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   1349d:	00 00                	add    %al,(%rax)
   1349f:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   134a5:	00 00                	add    %al,(%rax)
   134a7:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   134ad:	00 00                	add    %al,(%rax)
   134af:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   134b5:	00 00                	add    %al,(%rax)
   134b7:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   134bd:	00 00                	add    %al,(%rax)
   134bf:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   134c5:	00 00                	add    %al,(%rax)
   134c7:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   134cd:	00 00                	add    %al,(%rax)
   134cf:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   134d5:	00 00                	add    %al,(%rax)
   134d7:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   134dd:	00 00                	add    %al,(%rax)
   134df:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   134e5:	00 00                	add    %al,(%rax)
   134e7:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   134ed:	00 00                	add    %al,(%rax)
   134ef:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   134f5:	00 00                	add    %al,(%rax)
   134f7:	00 95 03 00 00 00    	add    %dl,0x3(%rbp)
   134fd:	00 00                	add    %al,(%rax)
   134ff:	00 1a                	add    %bl,(%rdx)
   13501:	13 00                	adc    (%rax),%eax
   13503:	00 00                	add    %al,(%rax)
   13505:	00 00                	add    %al,(%rax)
   13507:	00 25 13 00 00 00    	add    %ah,0x13(%rip)        # 13520 <__intel_mic_avx512f_memcpy+0x1760>
   1350d:	00 00                	add    %al,(%rax)
   1350f:	00 15 13 00 00 00    	add    %dl,0x13(%rip)        # 13528 <__intel_mic_avx512f_memcpy+0x1768>
   13515:	00 00                	add    %al,(%rax)
   13517:	00 08                	add    %cl,(%rax)
   13519:	13 00                	adc    (%rax),%eax
   1351b:	00 00                	add    %al,(%rax)
   1351d:	00 00                	add    %al,(%rax)
   1351f:	00 f3                	add    %dh,%bl
   13521:	12 00                	adc    (%rax),%al
   13523:	00 00                	add    %al,(%rax)
   13525:	00 00                	add    %al,(%rax)
   13527:	00 e8                	add    %ch,%al
   13529:	12 00                	adc    (%rax),%al
   1352b:	00 00                	add    %al,(%rax)
   1352d:	00 00                	add    %al,(%rax)
   1352f:	00 e8                	add    %ch,%al
   13531:	12 00                	adc    (%rax),%al
   13533:	00 00                	add    %al,(%rax)
   13535:	00 00                	add    %al,(%rax)
   13537:	00 e8                	add    %ch,%al
   13539:	12 00                	adc    (%rax),%al
   1353b:	00 00                	add    %al,(%rax)
   1353d:	00 00                	add    %al,(%rax)
   1353f:	00 d5                	add    %dl,%ch
   13541:	12 00                	adc    (%rax),%al
   13543:	00 00                	add    %al,(%rax)
   13545:	00 00                	add    %al,(%rax)
   13547:	00 ca                	add    %cl,%dl
   13549:	12 00                	adc    (%rax),%al
   1354b:	00 00                	add    %al,(%rax)
   1354d:	00 00                	add    %al,(%rax)
   1354f:	00 ca                	add    %cl,%dl
   13551:	12 00                	adc    (%rax),%al
   13553:	00 00                	add    %al,(%rax)
   13555:	00 00                	add    %al,(%rax)
   13557:	00 ca                	add    %cl,%dl
   13559:	12 00                	adc    (%rax),%al
   1355b:	00 00                	add    %al,(%rax)
   1355d:	00 00                	add    %al,(%rax)
   1355f:	00 ca                	add    %cl,%dl
   13561:	12 00                	adc    (%rax),%al
   13563:	00 00                	add    %al,(%rax)
   13565:	00 00                	add    %al,(%rax)
   13567:	00 ca                	add    %cl,%dl
   13569:	12 00                	adc    (%rax),%al
   1356b:	00 00                	add    %al,(%rax)
   1356d:	00 00                	add    %al,(%rax)
   1356f:	00 ca                	add    %cl,%dl
   13571:	12 00                	adc    (%rax),%al
   13573:	00 00                	add    %al,(%rax)
   13575:	00 00                	add    %al,(%rax)
   13577:	00 ca                	add    %cl,%dl
   13579:	12 00                	adc    (%rax),%al
   1357b:	00 00                	add    %al,(%rax)
   1357d:	00 00                	add    %al,(%rax)
   1357f:	00 b7 12 00 00 00    	add    %dh,0x12(%rdi)
   13585:	00 00                	add    %al,(%rax)
   13587:	00 a9 12 00 00 00    	add    %ch,0x12(%rcx)
   1358d:	00 00                	add    %al,(%rax)
   1358f:	00 a9 12 00 00 00    	add    %ch,0x12(%rcx)
   13595:	00 00                	add    %al,(%rax)
   13597:	00 a9 12 00 00 00    	add    %ch,0x12(%rcx)
   1359d:	00 00                	add    %al,(%rax)
   1359f:	00 a9 12 00 00 00    	add    %ch,0x12(%rcx)
   135a5:	00 00                	add    %al,(%rax)
   135a7:	00 a9 12 00 00 00    	add    %ch,0x12(%rcx)
   135ad:	00 00                	add    %al,(%rax)
   135af:	00 a9 12 00 00 00    	add    %ch,0x12(%rcx)
   135b5:	00 00                	add    %al,(%rax)
   135b7:	00 a9 12 00 00 00    	add    %ch,0x12(%rcx)
   135bd:	00 00                	add    %al,(%rax)
   135bf:	00 a9 12 00 00 00    	add    %ch,0x12(%rcx)
   135c5:	00 00                	add    %al,(%rax)
   135c7:	00 a9 12 00 00 00    	add    %ch,0x12(%rcx)
   135cd:	00 00                	add    %al,(%rax)
   135cf:	00 a9 12 00 00 00    	add    %ch,0x12(%rcx)
   135d5:	00 00                	add    %al,(%rax)
   135d7:	00 a9 12 00 00 00    	add    %ch,0x12(%rcx)
   135dd:	00 00                	add    %al,(%rax)
   135df:	00 a9 12 00 00 00    	add    %ch,0x12(%rcx)
   135e5:	00 00                	add    %al,(%rax)
   135e7:	00 a9 12 00 00 00    	add    %ch,0x12(%rcx)
   135ed:	00 00                	add    %al,(%rax)
   135ef:	00 a9 12 00 00 00    	add    %ch,0x12(%rcx)
   135f5:	00 00                	add    %al,(%rax)
   135f7:	00 a9 12 00 00 00    	add    %ch,0x12(%rcx)
   135fd:	00 00                	add    %al,(%rax)
   135ff:	00 90 12 00 00 00    	add    %dl,0x12(%rax)
   13605:	00 00                	add    %al,(%rax)
   13607:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   1360d:	00 00                	add    %al,(%rax)
   1360f:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   13615:	00 00                	add    %al,(%rax)
   13617:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   1361d:	00 00                	add    %al,(%rax)
   1361f:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   13625:	00 00                	add    %al,(%rax)
   13627:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   1362d:	00 00                	add    %al,(%rax)
   1362f:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   13635:	00 00                	add    %al,(%rax)
   13637:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   1363d:	00 00                	add    %al,(%rax)
   1363f:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   13645:	00 00                	add    %al,(%rax)
   13647:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   1364d:	00 00                	add    %al,(%rax)
   1364f:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   13655:	00 00                	add    %al,(%rax)
   13657:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   1365d:	00 00                	add    %al,(%rax)
   1365f:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   13665:	00 00                	add    %al,(%rax)
   13667:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   1366d:	00 00                	add    %al,(%rax)
   1366f:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   13675:	00 00                	add    %al,(%rax)
   13677:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   1367d:	00 00                	add    %al,(%rax)
   1367f:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   13685:	00 00                	add    %al,(%rax)
   13687:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   1368d:	00 00                	add    %al,(%rax)
   1368f:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   13695:	00 00                	add    %al,(%rax)
   13697:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   1369d:	00 00                	add    %al,(%rax)
   1369f:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   136a5:	00 00                	add    %al,(%rax)
   136a7:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   136ad:	00 00                	add    %al,(%rax)
   136af:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   136b5:	00 00                	add    %al,(%rax)
   136b7:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   136bd:	00 00                	add    %al,(%rax)
   136bf:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   136c5:	00 00                	add    %al,(%rax)
   136c7:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   136cd:	00 00                	add    %al,(%rax)
   136cf:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   136d5:	00 00                	add    %al,(%rax)
   136d7:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   136dd:	00 00                	add    %al,(%rax)
   136df:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   136e5:	00 00                	add    %al,(%rax)
   136e7:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   136ed:	00 00                	add    %al,(%rax)
   136ef:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   136f5:	00 00                	add    %al,(%rax)
   136f7:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   136fd:	00 00                	add    %al,(%rax)
   136ff:	00 69 12             	add    %ch,0x12(%rcx)
   13702:	00 00                	add    %al,(%rax)
   13704:	00 00                	add    %al,(%rax)
   13706:	00 00                	add    %al,(%rax)
   13708:	58                   	pop    %rax
   13709:	12 00                	adc    (%rax),%al
   1370b:	00 00                	add    %al,(%rax)
   1370d:	00 00                	add    %al,(%rax)
   1370f:	00 58 12             	add    %bl,0x12(%rax)
   13712:	00 00                	add    %al,(%rax)
   13714:	00 00                	add    %al,(%rax)
   13716:	00 00                	add    %al,(%rax)
   13718:	58                   	pop    %rax
   13719:	12 00                	adc    (%rax),%al
   1371b:	00 00                	add    %al,(%rax)
   1371d:	00 00                	add    %al,(%rax)
   1371f:	00 58 12             	add    %bl,0x12(%rax)
   13722:	00 00                	add    %al,(%rax)
   13724:	00 00                	add    %al,(%rax)
   13726:	00 00                	add    %al,(%rax)
   13728:	58                   	pop    %rax
   13729:	12 00                	adc    (%rax),%al
   1372b:	00 00                	add    %al,(%rax)
   1372d:	00 00                	add    %al,(%rax)
   1372f:	00 58 12             	add    %bl,0x12(%rax)
   13732:	00 00                	add    %al,(%rax)
   13734:	00 00                	add    %al,(%rax)
   13736:	00 00                	add    %al,(%rax)
   13738:	58                   	pop    %rax
   13739:	12 00                	adc    (%rax),%al
   1373b:	00 00                	add    %al,(%rax)
   1373d:	00 00                	add    %al,(%rax)
   1373f:	00 58 12             	add    %bl,0x12(%rax)
   13742:	00 00                	add    %al,(%rax)
   13744:	00 00                	add    %al,(%rax)
   13746:	00 00                	add    %al,(%rax)
   13748:	58                   	pop    %rax
   13749:	12 00                	adc    (%rax),%al
   1374b:	00 00                	add    %al,(%rax)
   1374d:	00 00                	add    %al,(%rax)
   1374f:	00 58 12             	add    %bl,0x12(%rax)
   13752:	00 00                	add    %al,(%rax)
   13754:	00 00                	add    %al,(%rax)
   13756:	00 00                	add    %al,(%rax)
   13758:	58                   	pop    %rax
   13759:	12 00                	adc    (%rax),%al
   1375b:	00 00                	add    %al,(%rax)
   1375d:	00 00                	add    %al,(%rax)
   1375f:	00 58 12             	add    %bl,0x12(%rax)
   13762:	00 00                	add    %al,(%rax)
   13764:	00 00                	add    %al,(%rax)
   13766:	00 00                	add    %al,(%rax)
   13768:	58                   	pop    %rax
   13769:	12 00                	adc    (%rax),%al
   1376b:	00 00                	add    %al,(%rax)
   1376d:	00 00                	add    %al,(%rax)
   1376f:	00 58 12             	add    %bl,0x12(%rax)
   13772:	00 00                	add    %al,(%rax)
   13774:	00 00                	add    %al,(%rax)
   13776:	00 00                	add    %al,(%rax)
   13778:	58                   	pop    %rax
   13779:	12 00                	adc    (%rax),%al
   1377b:	00 00                	add    %al,(%rax)
   1377d:	00 00                	add    %al,(%rax)
   1377f:	00 58 12             	add    %bl,0x12(%rax)
   13782:	00 00                	add    %al,(%rax)
   13784:	00 00                	add    %al,(%rax)
   13786:	00 00                	add    %al,(%rax)
   13788:	58                   	pop    %rax
   13789:	12 00                	adc    (%rax),%al
   1378b:	00 00                	add    %al,(%rax)
   1378d:	00 00                	add    %al,(%rax)
   1378f:	00 58 12             	add    %bl,0x12(%rax)
   13792:	00 00                	add    %al,(%rax)
   13794:	00 00                	add    %al,(%rax)
   13796:	00 00                	add    %al,(%rax)
   13798:	58                   	pop    %rax
   13799:	12 00                	adc    (%rax),%al
   1379b:	00 00                	add    %al,(%rax)
   1379d:	00 00                	add    %al,(%rax)
   1379f:	00 58 12             	add    %bl,0x12(%rax)
   137a2:	00 00                	add    %al,(%rax)
   137a4:	00 00                	add    %al,(%rax)
   137a6:	00 00                	add    %al,(%rax)
   137a8:	58                   	pop    %rax
   137a9:	12 00                	adc    (%rax),%al
   137ab:	00 00                	add    %al,(%rax)
   137ad:	00 00                	add    %al,(%rax)
   137af:	00 58 12             	add    %bl,0x12(%rax)
   137b2:	00 00                	add    %al,(%rax)
   137b4:	00 00                	add    %al,(%rax)
   137b6:	00 00                	add    %al,(%rax)
   137b8:	58                   	pop    %rax
   137b9:	12 00                	adc    (%rax),%al
   137bb:	00 00                	add    %al,(%rax)
   137bd:	00 00                	add    %al,(%rax)
   137bf:	00 58 12             	add    %bl,0x12(%rax)
   137c2:	00 00                	add    %al,(%rax)
   137c4:	00 00                	add    %al,(%rax)
   137c6:	00 00                	add    %al,(%rax)
   137c8:	58                   	pop    %rax
   137c9:	12 00                	adc    (%rax),%al
   137cb:	00 00                	add    %al,(%rax)
   137cd:	00 00                	add    %al,(%rax)
   137cf:	00 58 12             	add    %bl,0x12(%rax)
   137d2:	00 00                	add    %al,(%rax)
   137d4:	00 00                	add    %al,(%rax)
   137d6:	00 00                	add    %al,(%rax)
   137d8:	58                   	pop    %rax
   137d9:	12 00                	adc    (%rax),%al
   137db:	00 00                	add    %al,(%rax)
   137dd:	00 00                	add    %al,(%rax)
   137df:	00 58 12             	add    %bl,0x12(%rax)
   137e2:	00 00                	add    %al,(%rax)
   137e4:	00 00                	add    %al,(%rax)
   137e6:	00 00                	add    %al,(%rax)
   137e8:	58                   	pop    %rax
   137e9:	12 00                	adc    (%rax),%al
   137eb:	00 00                	add    %al,(%rax)
   137ed:	00 00                	add    %al,(%rax)
   137ef:	00 58 12             	add    %bl,0x12(%rax)
   137f2:	00 00                	add    %al,(%rax)
   137f4:	00 00                	add    %al,(%rax)
   137f6:	00 00                	add    %al,(%rax)
   137f8:	58                   	pop    %rax
   137f9:	12 00                	adc    (%rax),%al
   137fb:	00 00                	add    %al,(%rax)
   137fd:	00 00                	add    %al,(%rax)
   137ff:	00 58 12             	add    %bl,0x12(%rax)
   13802:	00 00                	add    %al,(%rax)
   13804:	00 00                	add    %al,(%rax)
   13806:	00 00                	add    %al,(%rax)
   13808:	58                   	pop    %rax
   13809:	12 00                	adc    (%rax),%al
   1380b:	00 00                	add    %al,(%rax)
   1380d:	00 00                	add    %al,(%rax)
   1380f:	00 58 12             	add    %bl,0x12(%rax)
   13812:	00 00                	add    %al,(%rax)
   13814:	00 00                	add    %al,(%rax)
   13816:	00 00                	add    %al,(%rax)
   13818:	58                   	pop    %rax
   13819:	12 00                	adc    (%rax),%al
   1381b:	00 00                	add    %al,(%rax)
   1381d:	00 00                	add    %al,(%rax)
   1381f:	00 58 12             	add    %bl,0x12(%rax)
   13822:	00 00                	add    %al,(%rax)
   13824:	00 00                	add    %al,(%rax)
   13826:	00 00                	add    %al,(%rax)
   13828:	58                   	pop    %rax
   13829:	12 00                	adc    (%rax),%al
   1382b:	00 00                	add    %al,(%rax)
   1382d:	00 00                	add    %al,(%rax)
   1382f:	00 58 12             	add    %bl,0x12(%rax)
   13832:	00 00                	add    %al,(%rax)
   13834:	00 00                	add    %al,(%rax)
   13836:	00 00                	add    %al,(%rax)
   13838:	58                   	pop    %rax
   13839:	12 00                	adc    (%rax),%al
   1383b:	00 00                	add    %al,(%rax)
   1383d:	00 00                	add    %al,(%rax)
   1383f:	00 58 12             	add    %bl,0x12(%rax)
   13842:	00 00                	add    %al,(%rax)
   13844:	00 00                	add    %al,(%rax)
   13846:	00 00                	add    %al,(%rax)
   13848:	58                   	pop    %rax
   13849:	12 00                	adc    (%rax),%al
   1384b:	00 00                	add    %al,(%rax)
   1384d:	00 00                	add    %al,(%rax)
   1384f:	00 58 12             	add    %bl,0x12(%rax)
   13852:	00 00                	add    %al,(%rax)
   13854:	00 00                	add    %al,(%rax)
   13856:	00 00                	add    %al,(%rax)
   13858:	58                   	pop    %rax
   13859:	12 00                	adc    (%rax),%al
   1385b:	00 00                	add    %al,(%rax)
   1385d:	00 00                	add    %al,(%rax)
   1385f:	00 58 12             	add    %bl,0x12(%rax)
   13862:	00 00                	add    %al,(%rax)
   13864:	00 00                	add    %al,(%rax)
   13866:	00 00                	add    %al,(%rax)
   13868:	58                   	pop    %rax
   13869:	12 00                	adc    (%rax),%al
   1386b:	00 00                	add    %al,(%rax)
   1386d:	00 00                	add    %al,(%rax)
   1386f:	00 58 12             	add    %bl,0x12(%rax)
   13872:	00 00                	add    %al,(%rax)
   13874:	00 00                	add    %al,(%rax)
   13876:	00 00                	add    %al,(%rax)
   13878:	58                   	pop    %rax
   13879:	12 00                	adc    (%rax),%al
   1387b:	00 00                	add    %al,(%rax)
   1387d:	00 00                	add    %al,(%rax)
   1387f:	00 58 12             	add    %bl,0x12(%rax)
   13882:	00 00                	add    %al,(%rax)
   13884:	00 00                	add    %al,(%rax)
   13886:	00 00                	add    %al,(%rax)
   13888:	58                   	pop    %rax
   13889:	12 00                	adc    (%rax),%al
   1388b:	00 00                	add    %al,(%rax)
   1388d:	00 00                	add    %al,(%rax)
   1388f:	00 58 12             	add    %bl,0x12(%rax)
   13892:	00 00                	add    %al,(%rax)
   13894:	00 00                	add    %al,(%rax)
   13896:	00 00                	add    %al,(%rax)
   13898:	58                   	pop    %rax
   13899:	12 00                	adc    (%rax),%al
   1389b:	00 00                	add    %al,(%rax)
   1389d:	00 00                	add    %al,(%rax)
   1389f:	00 58 12             	add    %bl,0x12(%rax)
   138a2:	00 00                	add    %al,(%rax)
   138a4:	00 00                	add    %al,(%rax)
   138a6:	00 00                	add    %al,(%rax)
   138a8:	58                   	pop    %rax
   138a9:	12 00                	adc    (%rax),%al
   138ab:	00 00                	add    %al,(%rax)
   138ad:	00 00                	add    %al,(%rax)
   138af:	00 58 12             	add    %bl,0x12(%rax)
   138b2:	00 00                	add    %al,(%rax)
   138b4:	00 00                	add    %al,(%rax)
   138b6:	00 00                	add    %al,(%rax)
   138b8:	58                   	pop    %rax
   138b9:	12 00                	adc    (%rax),%al
   138bb:	00 00                	add    %al,(%rax)
   138bd:	00 00                	add    %al,(%rax)
   138bf:	00 58 12             	add    %bl,0x12(%rax)
   138c2:	00 00                	add    %al,(%rax)
   138c4:	00 00                	add    %al,(%rax)
   138c6:	00 00                	add    %al,(%rax)
   138c8:	58                   	pop    %rax
   138c9:	12 00                	adc    (%rax),%al
   138cb:	00 00                	add    %al,(%rax)
   138cd:	00 00                	add    %al,(%rax)
   138cf:	00 58 12             	add    %bl,0x12(%rax)
   138d2:	00 00                	add    %al,(%rax)
   138d4:	00 00                	add    %al,(%rax)
   138d6:	00 00                	add    %al,(%rax)
   138d8:	58                   	pop    %rax
   138d9:	12 00                	adc    (%rax),%al
   138db:	00 00                	add    %al,(%rax)
   138dd:	00 00                	add    %al,(%rax)
   138df:	00 58 12             	add    %bl,0x12(%rax)
   138e2:	00 00                	add    %al,(%rax)
   138e4:	00 00                	add    %al,(%rax)
   138e6:	00 00                	add    %al,(%rax)
   138e8:	58                   	pop    %rax
   138e9:	12 00                	adc    (%rax),%al
   138eb:	00 00                	add    %al,(%rax)
   138ed:	00 00                	add    %al,(%rax)
   138ef:	00 58 12             	add    %bl,0x12(%rax)
   138f2:	00 00                	add    %al,(%rax)
   138f4:	00 00                	add    %al,(%rax)
   138f6:	00 00                	add    %al,(%rax)
   138f8:	58                   	pop    %rax
   138f9:	12 00                	adc    (%rax),%al
   138fb:	00 00                	add    %al,(%rax)
   138fd:	00 00                	add    %al,(%rax)
   138ff:	00 41 5e             	add    %al,0x5e(%rcx)
   13902:	c3                   	retq   
   13903:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13908:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1390f:	00 
   13910:	90                   	nop
   13911:	90                   	nop
   13912:	90                   	nop
   13913:	90                   	nop
   13914:	90                   	nop
   13915:	90                   	nop
   13916:	90                   	nop
   13917:	90                   	nop
   13918:	90                   	nop
   13919:	90                   	nop
   1391a:	90                   	nop
   1391b:	90                   	nop
   1391c:	90                   	nop
   1391d:	90                   	nop
   1391e:	90                   	nop
   1391f:	90                   	nop
   13920:	90                   	nop
   13921:	90                   	nop
   13922:	90                   	nop
   13923:	90                   	nop
   13924:	90                   	nop
   13925:	90                   	nop
   13926:	90                   	nop
   13927:	90                   	nop
   13928:	90                   	nop
   13929:	90                   	nop
   1392a:	90                   	nop
   1392b:	90                   	nop
   1392c:	90                   	nop
   1392d:	90                   	nop
   1392e:	90                   	nop
   1392f:	90                   	nop
   13930:	90                   	nop
   13931:	90                   	nop
   13932:	90                   	nop
   13933:	90                   	nop
   13934:	90                   	nop
   13935:	90                   	nop
   13936:	90                   	nop
   13937:	90                   	nop
   13938:	90                   	nop
   13939:	90                   	nop
   1393a:	90                   	nop
   1393b:	90                   	nop
   1393c:	90                   	nop
   1393d:	90                   	nop
   1393e:	90                   	nop
   1393f:	90                   	nop

0000000000013940 <__intel_mic_avx512f_memset>:
   13940:	f3 0f 1e fa          	repz nop %edx
   13944:	49 89 fb             	mov    %rdi,%r11
   13947:	48 8d 0d 46 ef 20 00 	lea    0x20ef46(%rip),%rcx        # 222894 <__libirc_largest_cache_size_quoter>
   1394e:	48 89 f8             	mov    %rdi,%rax
   13951:	49 ba 01 01 01 01 01 	movabs $0x101010101010101,%r10
   13958:	01 01 01 
   1395b:	4c 0f b6 ce          	movzbq %sil,%r9
   1395f:	4d 0f af ca          	imul   %r10,%r9
   13963:	48 8d 35 96 14 00 00 	lea    0x1496(%rip),%rsi        # 14e00 <__intel_mic_avx512f_memset+0x14c0>
   1396a:	62 d2 7d 48 7c c1    	vpbroadcastd %r9d,%zmm0
   13970:	48 81 fa 80 00 00 00 	cmp    $0x80,%rdx
   13977:	7d 0c                	jge    13985 <__intel_mic_avx512f_memset+0x45>
   13979:	4d 89 da             	mov    %r11,%r10
   1397c:	4c 03 d2             	add    %rdx,%r10
   1397f:	48 2b 34 d6          	sub    (%rsi,%rdx,8),%rsi
   13983:	ff e6                	jmpq   *%rsi
   13985:	48 8d 35 74 02 00 00 	lea    0x274(%rip),%rsi        # 13c00 <__intel_mic_avx512f_memset+0x2c0>
   1398c:	4d 89 d8             	mov    %r11,%r8
   1398f:	49 f7 d8             	neg    %r8
   13992:	49 83 c0 40          	add    $0x40,%r8
   13996:	49 83 e0 3f          	and    $0x3f,%r8
   1399a:	74 12                	je     139ae <__intel_mic_avx512f_memset+0x6e>
   1399c:	49 2b d0             	sub    %r8,%rdx
   1399f:	4d 89 da             	mov    %r11,%r10
   139a2:	4d 03 d0             	add    %r8,%r10
   139a5:	4a 2b 34 c6          	sub    (%rsi,%r8,8),%rsi
   139a9:	ff e6                	jmpq   *%rsi
   139ab:	4d 03 d8             	add    %r8,%r11
   139ae:	48 81 fa 00 02 00 00 	cmp    $0x200,%rdx
   139b5:	0f 8c 25 01 00 00    	jl     13ae0 <__intel_mic_avx512f_memset+0x1a0>
   139bb:	48 3b 11             	cmp    (%rcx),%rdx
   139be:	73 53                	jae    13a13 <__intel_mic_avx512f_memset+0xd3>
   139c0:	62 d1 7c 48 29 03    	vmovaps %zmm0,(%r11)
   139c6:	62 d1 7c 48 29 43 01 	vmovaps %zmm0,0x40(%r11)
   139cd:	62 d1 7c 48 29 43 02 	vmovaps %zmm0,0x80(%r11)
   139d4:	62 d1 7c 48 29 43 03 	vmovaps %zmm0,0xc0(%r11)
   139db:	4d 8d 9b 00 02 00 00 	lea    0x200(%r11),%r11
   139e2:	48 81 ea 00 02 00 00 	sub    $0x200,%rdx
   139e9:	62 d1 7c 48 29 43 fc 	vmovaps %zmm0,-0x100(%r11)
   139f0:	62 d1 7c 48 29 43 fd 	vmovaps %zmm0,-0xc0(%r11)
   139f7:	62 d1 7c 48 29 43 fe 	vmovaps %zmm0,-0x80(%r11)
   139fe:	62 d1 7c 48 29 43 ff 	vmovaps %zmm0,-0x40(%r11)
   13a05:	48 81 fa 00 02 00 00 	cmp    $0x200,%rdx
   13a0c:	7d b2                	jge    139c0 <__intel_mic_avx512f_memset+0x80>
   13a0e:	e9 cd 00 00 00       	jmpq   13ae0 <__intel_mic_avx512f_memset+0x1a0>
   13a13:	62 d1 7d 48 e7 03    	vmovntdq %zmm0,(%r11)
   13a19:	62 d1 7d 48 e7 43 01 	vmovntdq %zmm0,0x40(%r11)
   13a20:	62 d1 7d 48 e7 43 02 	vmovntdq %zmm0,0x80(%r11)
   13a27:	62 d1 7d 48 e7 43 03 	vmovntdq %zmm0,0xc0(%r11)
   13a2e:	4d 8d 9b 00 02 00 00 	lea    0x200(%r11),%r11
   13a35:	48 81 ea 00 02 00 00 	sub    $0x200,%rdx
   13a3c:	62 d1 7d 48 e7 43 fc 	vmovntdq %zmm0,-0x100(%r11)
   13a43:	62 d1 7d 48 e7 43 fd 	vmovntdq %zmm0,-0xc0(%r11)
   13a4a:	62 d1 7d 48 e7 43 fe 	vmovntdq %zmm0,-0x80(%r11)
   13a51:	62 d1 7d 48 e7 43 ff 	vmovntdq %zmm0,-0x40(%r11)
   13a58:	48 81 fa 00 02 00 00 	cmp    $0x200,%rdx
   13a5f:	7d b2                	jge    13a13 <__intel_mic_avx512f_memset+0xd3>
   13a61:	0f ae f8             	sfence 
   13a64:	eb 7a                	jmp    13ae0 <__intel_mic_avx512f_memset+0x1a0>
   13a66:	45 88 0b             	mov    %r9b,(%r11)
   13a69:	e9 3d ff ff ff       	jmpq   139ab <__intel_mic_avx512f_memset+0x6b>
   13a6e:	66 45 89 0b          	mov    %r9w,(%r11)
   13a72:	e9 34 ff ff ff       	jmpq   139ab <__intel_mic_avx512f_memset+0x6b>
   13a77:	66 45 89 0b          	mov    %r9w,(%r11)
   13a7b:	45 88 4b 02          	mov    %r9b,0x2(%r11)
   13a7f:	e9 27 ff ff ff       	jmpq   139ab <__intel_mic_avx512f_memset+0x6b>
   13a84:	45 89 0b             	mov    %r9d,(%r11)
   13a87:	e9 1f ff ff ff       	jmpq   139ab <__intel_mic_avx512f_memset+0x6b>
   13a8c:	45 89 0b             	mov    %r9d,(%r11)
   13a8f:	45 89 4a fc          	mov    %r9d,-0x4(%r10)
   13a93:	e9 13 ff ff ff       	jmpq   139ab <__intel_mic_avx512f_memset+0x6b>
   13a98:	4d 89 0b             	mov    %r9,(%r11)
   13a9b:	e9 0b ff ff ff       	jmpq   139ab <__intel_mic_avx512f_memset+0x6b>
   13aa0:	4d 89 0b             	mov    %r9,(%r11)
   13aa3:	4d 89 4a f8          	mov    %r9,-0x8(%r10)
   13aa7:	e9 ff fe ff ff       	jmpq   139ab <__intel_mic_avx512f_memset+0x6b>
   13aac:	c4 c1 78 11 03       	vmovups %xmm0,(%r11)
   13ab1:	e9 f5 fe ff ff       	jmpq   139ab <__intel_mic_avx512f_memset+0x6b>
   13ab6:	c4 c1 78 11 03       	vmovups %xmm0,(%r11)
   13abb:	c4 c1 78 11 42 f0    	vmovups %xmm0,-0x10(%r10)
   13ac1:	e9 e5 fe ff ff       	jmpq   139ab <__intel_mic_avx512f_memset+0x6b>
   13ac6:	c4 c1 7c 11 03       	vmovups %ymm0,(%r11)
   13acb:	e9 db fe ff ff       	jmpq   139ab <__intel_mic_avx512f_memset+0x6b>
   13ad0:	c4 c1 7c 11 03       	vmovups %ymm0,(%r11)
   13ad5:	c4 c1 7c 11 42 e0    	vmovups %ymm0,-0x20(%r10)
   13adb:	e9 cb fe ff ff       	jmpq   139ab <__intel_mic_avx512f_memset+0x6b>
   13ae0:	4d 89 da             	mov    %r11,%r10
   13ae3:	4c 03 d2             	add    %rdx,%r10
   13ae6:	4c 03 da             	add    %rdx,%r11
   13ae9:	49 83 e3 c0          	and    $0xffffffffffffffc0,%r11
   13aed:	48 8d 35 0c 03 00 00 	lea    0x30c(%rip),%rsi        # 13e00 <__intel_mic_avx512f_memset+0x4c0>
   13af4:	48 2b 34 d6          	sub    (%rsi,%rdx,8),%rsi
   13af8:	ff e6                	jmpq   *%rsi
   13afa:	62 d1 7c 48 29 43 f9 	vmovaps %zmm0,-0x1c0(%r11)
   13b01:	62 d1 7c 48 29 43 fa 	vmovaps %zmm0,-0x180(%r11)
   13b08:	62 d1 7c 48 29 43 fb 	vmovaps %zmm0,-0x140(%r11)
   13b0f:	62 d1 7c 48 29 43 fc 	vmovaps %zmm0,-0x100(%r11)
   13b16:	62 d1 7c 48 29 43 fd 	vmovaps %zmm0,-0xc0(%r11)
   13b1d:	62 d1 7c 48 29 43 fe 	vmovaps %zmm0,-0x80(%r11)
   13b24:	62 d1 7c 48 29 43 ff 	vmovaps %zmm0,-0x40(%r11)
   13b2b:	4c 89 d2             	mov    %r10,%rdx
   13b2e:	48 83 e2 3f          	and    $0x3f,%rdx
   13b32:	48 8d 35 c7 02 00 00 	lea    0x2c7(%rip),%rsi        # 13e00 <__intel_mic_avx512f_memset+0x4c0>
   13b39:	48 2b 34 d6          	sub    (%rsi,%rdx,8),%rsi
   13b3d:	ff e6                	jmpq   *%rsi
   13b3f:	45 88 0b             	mov    %r9b,(%r11)
   13b42:	e9 b9 16 00 00       	jmpq   15200 <__intel_mic_avx512f_memset+0x18c0>
   13b47:	e9 b4 16 00 00       	jmpq   15200 <__intel_mic_avx512f_memset+0x18c0>
   13b4c:	66 45 89 0b          	mov    %r9w,(%r11)
   13b50:	e9 ab 16 00 00       	jmpq   15200 <__intel_mic_avx512f_memset+0x18c0>
   13b55:	66 45 89 0b          	mov    %r9w,(%r11)
   13b59:	45 88 4b 02          	mov    %r9b,0x2(%r11)
   13b5d:	e9 9e 16 00 00       	jmpq   15200 <__intel_mic_avx512f_memset+0x18c0>
   13b62:	45 89 0b             	mov    %r9d,(%r11)
   13b65:	e9 96 16 00 00       	jmpq   15200 <__intel_mic_avx512f_memset+0x18c0>
   13b6a:	45 89 0b             	mov    %r9d,(%r11)
   13b6d:	45 89 4a fc          	mov    %r9d,-0x4(%r10)
   13b71:	e9 8a 16 00 00       	jmpq   15200 <__intel_mic_avx512f_memset+0x18c0>
   13b76:	4d 89 0b             	mov    %r9,(%r11)
   13b79:	e9 82 16 00 00       	jmpq   15200 <__intel_mic_avx512f_memset+0x18c0>
   13b7e:	4d 89 0b             	mov    %r9,(%r11)
   13b81:	4d 89 4a f8          	mov    %r9,-0x8(%r10)
   13b85:	e9 76 16 00 00       	jmpq   15200 <__intel_mic_avx512f_memset+0x18c0>
   13b8a:	c4 c1 78 11 03       	vmovups %xmm0,(%r11)
   13b8f:	e9 6c 16 00 00       	jmpq   15200 <__intel_mic_avx512f_memset+0x18c0>
   13b94:	c4 c1 78 11 03       	vmovups %xmm0,(%r11)
   13b99:	c4 c1 78 11 42 f0    	vmovups %xmm0,-0x10(%r10)
   13b9f:	e9 5c 16 00 00       	jmpq   15200 <__intel_mic_avx512f_memset+0x18c0>
   13ba4:	c4 c1 7c 11 03       	vmovups %ymm0,(%r11)
   13ba9:	e9 52 16 00 00       	jmpq   15200 <__intel_mic_avx512f_memset+0x18c0>
   13bae:	c4 c1 7c 11 03       	vmovups %ymm0,(%r11)
   13bb3:	c4 c1 7c 11 42 e0    	vmovups %ymm0,-0x20(%r10)
   13bb9:	e9 42 16 00 00       	jmpq   15200 <__intel_mic_avx512f_memset+0x18c0>
   13bbe:	62 d1 7c 48 11 03    	vmovups %zmm0,(%r11)
   13bc4:	e9 37 16 00 00       	jmpq   15200 <__intel_mic_avx512f_memset+0x18c0>
   13bc9:	62 d1 7c 48 11 03    	vmovups %zmm0,(%r11)
   13bcf:	62 d1 7c 48 11 42 ff 	vmovups %zmm0,-0x40(%r10)
   13bd6:	e9 25 16 00 00       	jmpq   15200 <__intel_mic_avx512f_memset+0x18c0>
   13bdb:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   13be2:	00 
   13be3:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13bea:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   13bf1:	00 
   13bf2:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13bf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13c00:	97                   	xchg   %eax,%edi
   13c01:	01 00                	add    %eax,(%rax)
   13c03:	00 00                	add    %al,(%rax)
   13c05:	00 00                	add    %al,(%rax)
   13c07:	00 9a 01 00 00 00    	add    %bl,0x1(%rdx)
   13c0d:	00 00                	add    %al,(%rax)
   13c0f:	00 92 01 00 00 00    	add    %dl,0x1(%rdx)
   13c15:	00 00                	add    %al,(%rax)
   13c17:	00 89 01 00 00 00    	add    %cl,0x1(%rcx)
   13c1d:	00 00                	add    %al,(%rax)
   13c1f:	00 7c 01 00          	add    %bh,0x0(%rcx,%rax,1)
   13c23:	00 00                	add    %al,(%rax)
   13c25:	00 00                	add    %al,(%rax)
   13c27:	00 74 01 00          	add    %dh,0x0(%rcx,%rax,1)
   13c2b:	00 00                	add    %al,(%rax)
   13c2d:	00 00                	add    %al,(%rax)
   13c2f:	00 74 01 00          	add    %dh,0x0(%rcx,%rax,1)
   13c33:	00 00                	add    %al,(%rax)
   13c35:	00 00                	add    %al,(%rax)
   13c37:	00 74 01 00          	add    %dh,0x0(%rcx,%rax,1)
   13c3b:	00 00                	add    %al,(%rax)
   13c3d:	00 00                	add    %al,(%rax)
   13c3f:	00 68 01             	add    %ch,0x1(%rax)
   13c42:	00 00                	add    %al,(%rax)
   13c44:	00 00                	add    %al,(%rax)
   13c46:	00 00                	add    %al,(%rax)
   13c48:	60                   	(bad)  
   13c49:	01 00                	add    %eax,(%rax)
   13c4b:	00 00                	add    %al,(%rax)
   13c4d:	00 00                	add    %al,(%rax)
   13c4f:	00 60 01             	add    %ah,0x1(%rax)
   13c52:	00 00                	add    %al,(%rax)
   13c54:	00 00                	add    %al,(%rax)
   13c56:	00 00                	add    %al,(%rax)
   13c58:	60                   	(bad)  
   13c59:	01 00                	add    %eax,(%rax)
   13c5b:	00 00                	add    %al,(%rax)
   13c5d:	00 00                	add    %al,(%rax)
   13c5f:	00 60 01             	add    %ah,0x1(%rax)
   13c62:	00 00                	add    %al,(%rax)
   13c64:	00 00                	add    %al,(%rax)
   13c66:	00 00                	add    %al,(%rax)
   13c68:	60                   	(bad)  
   13c69:	01 00                	add    %eax,(%rax)
   13c6b:	00 00                	add    %al,(%rax)
   13c6d:	00 00                	add    %al,(%rax)
   13c6f:	00 60 01             	add    %ah,0x1(%rax)
   13c72:	00 00                	add    %al,(%rax)
   13c74:	00 00                	add    %al,(%rax)
   13c76:	00 00                	add    %al,(%rax)
   13c78:	60                   	(bad)  
   13c79:	01 00                	add    %eax,(%rax)
   13c7b:	00 00                	add    %al,(%rax)
   13c7d:	00 00                	add    %al,(%rax)
   13c7f:	00 54 01 00          	add    %dl,0x0(%rcx,%rax,1)
   13c83:	00 00                	add    %al,(%rax)
   13c85:	00 00                	add    %al,(%rax)
   13c87:	00 4a 01             	add    %cl,0x1(%rdx)
   13c8a:	00 00                	add    %al,(%rax)
   13c8c:	00 00                	add    %al,(%rax)
   13c8e:	00 00                	add    %al,(%rax)
   13c90:	4a 01 00             	rex.WX add %rax,(%rax)
   13c93:	00 00                	add    %al,(%rax)
   13c95:	00 00                	add    %al,(%rax)
   13c97:	00 4a 01             	add    %cl,0x1(%rdx)
   13c9a:	00 00                	add    %al,(%rax)
   13c9c:	00 00                	add    %al,(%rax)
   13c9e:	00 00                	add    %al,(%rax)
   13ca0:	4a 01 00             	rex.WX add %rax,(%rax)
   13ca3:	00 00                	add    %al,(%rax)
   13ca5:	00 00                	add    %al,(%rax)
   13ca7:	00 4a 01             	add    %cl,0x1(%rdx)
   13caa:	00 00                	add    %al,(%rax)
   13cac:	00 00                	add    %al,(%rax)
   13cae:	00 00                	add    %al,(%rax)
   13cb0:	4a 01 00             	rex.WX add %rax,(%rax)
   13cb3:	00 00                	add    %al,(%rax)
   13cb5:	00 00                	add    %al,(%rax)
   13cb7:	00 4a 01             	add    %cl,0x1(%rdx)
   13cba:	00 00                	add    %al,(%rax)
   13cbc:	00 00                	add    %al,(%rax)
   13cbe:	00 00                	add    %al,(%rax)
   13cc0:	4a 01 00             	rex.WX add %rax,(%rax)
   13cc3:	00 00                	add    %al,(%rax)
   13cc5:	00 00                	add    %al,(%rax)
   13cc7:	00 4a 01             	add    %cl,0x1(%rdx)
   13cca:	00 00                	add    %al,(%rax)
   13ccc:	00 00                	add    %al,(%rax)
   13cce:	00 00                	add    %al,(%rax)
   13cd0:	4a 01 00             	rex.WX add %rax,(%rax)
   13cd3:	00 00                	add    %al,(%rax)
   13cd5:	00 00                	add    %al,(%rax)
   13cd7:	00 4a 01             	add    %cl,0x1(%rdx)
   13cda:	00 00                	add    %al,(%rax)
   13cdc:	00 00                	add    %al,(%rax)
   13cde:	00 00                	add    %al,(%rax)
   13ce0:	4a 01 00             	rex.WX add %rax,(%rax)
   13ce3:	00 00                	add    %al,(%rax)
   13ce5:	00 00                	add    %al,(%rax)
   13ce7:	00 4a 01             	add    %cl,0x1(%rdx)
   13cea:	00 00                	add    %al,(%rax)
   13cec:	00 00                	add    %al,(%rax)
   13cee:	00 00                	add    %al,(%rax)
   13cf0:	4a 01 00             	rex.WX add %rax,(%rax)
   13cf3:	00 00                	add    %al,(%rax)
   13cf5:	00 00                	add    %al,(%rax)
   13cf7:	00 4a 01             	add    %cl,0x1(%rdx)
   13cfa:	00 00                	add    %al,(%rax)
   13cfc:	00 00                	add    %al,(%rax)
   13cfe:	00 00                	add    %al,(%rax)
   13d00:	3a 01                	cmp    (%rcx),%al
   13d02:	00 00                	add    %al,(%rax)
   13d04:	00 00                	add    %al,(%rax)
   13d06:	00 00                	add    %al,(%rax)
   13d08:	30 01                	xor    %al,(%rcx)
   13d0a:	00 00                	add    %al,(%rax)
   13d0c:	00 00                	add    %al,(%rax)
   13d0e:	00 00                	add    %al,(%rax)
   13d10:	30 01                	xor    %al,(%rcx)
   13d12:	00 00                	add    %al,(%rax)
   13d14:	00 00                	add    %al,(%rax)
   13d16:	00 00                	add    %al,(%rax)
   13d18:	30 01                	xor    %al,(%rcx)
   13d1a:	00 00                	add    %al,(%rax)
   13d1c:	00 00                	add    %al,(%rax)
   13d1e:	00 00                	add    %al,(%rax)
   13d20:	30 01                	xor    %al,(%rcx)
   13d22:	00 00                	add    %al,(%rax)
   13d24:	00 00                	add    %al,(%rax)
   13d26:	00 00                	add    %al,(%rax)
   13d28:	30 01                	xor    %al,(%rcx)
   13d2a:	00 00                	add    %al,(%rax)
   13d2c:	00 00                	add    %al,(%rax)
   13d2e:	00 00                	add    %al,(%rax)
   13d30:	30 01                	xor    %al,(%rcx)
   13d32:	00 00                	add    %al,(%rax)
   13d34:	00 00                	add    %al,(%rax)
   13d36:	00 00                	add    %al,(%rax)
   13d38:	30 01                	xor    %al,(%rcx)
   13d3a:	00 00                	add    %al,(%rax)
   13d3c:	00 00                	add    %al,(%rax)
   13d3e:	00 00                	add    %al,(%rax)
   13d40:	30 01                	xor    %al,(%rcx)
   13d42:	00 00                	add    %al,(%rax)
   13d44:	00 00                	add    %al,(%rax)
   13d46:	00 00                	add    %al,(%rax)
   13d48:	30 01                	xor    %al,(%rcx)
   13d4a:	00 00                	add    %al,(%rax)
   13d4c:	00 00                	add    %al,(%rax)
   13d4e:	00 00                	add    %al,(%rax)
   13d50:	30 01                	xor    %al,(%rcx)
   13d52:	00 00                	add    %al,(%rax)
   13d54:	00 00                	add    %al,(%rax)
   13d56:	00 00                	add    %al,(%rax)
   13d58:	30 01                	xor    %al,(%rcx)
   13d5a:	00 00                	add    %al,(%rax)
   13d5c:	00 00                	add    %al,(%rax)
   13d5e:	00 00                	add    %al,(%rax)
   13d60:	30 01                	xor    %al,(%rcx)
   13d62:	00 00                	add    %al,(%rax)
   13d64:	00 00                	add    %al,(%rax)
   13d66:	00 00                	add    %al,(%rax)
   13d68:	30 01                	xor    %al,(%rcx)
   13d6a:	00 00                	add    %al,(%rax)
   13d6c:	00 00                	add    %al,(%rax)
   13d6e:	00 00                	add    %al,(%rax)
   13d70:	30 01                	xor    %al,(%rcx)
   13d72:	00 00                	add    %al,(%rax)
   13d74:	00 00                	add    %al,(%rax)
   13d76:	00 00                	add    %al,(%rax)
   13d78:	30 01                	xor    %al,(%rcx)
   13d7a:	00 00                	add    %al,(%rax)
   13d7c:	00 00                	add    %al,(%rax)
   13d7e:	00 00                	add    %al,(%rax)
   13d80:	30 01                	xor    %al,(%rcx)
   13d82:	00 00                	add    %al,(%rax)
   13d84:	00 00                	add    %al,(%rax)
   13d86:	00 00                	add    %al,(%rax)
   13d88:	30 01                	xor    %al,(%rcx)
   13d8a:	00 00                	add    %al,(%rax)
   13d8c:	00 00                	add    %al,(%rax)
   13d8e:	00 00                	add    %al,(%rax)
   13d90:	30 01                	xor    %al,(%rcx)
   13d92:	00 00                	add    %al,(%rax)
   13d94:	00 00                	add    %al,(%rax)
   13d96:	00 00                	add    %al,(%rax)
   13d98:	30 01                	xor    %al,(%rcx)
   13d9a:	00 00                	add    %al,(%rax)
   13d9c:	00 00                	add    %al,(%rax)
   13d9e:	00 00                	add    %al,(%rax)
   13da0:	30 01                	xor    %al,(%rcx)
   13da2:	00 00                	add    %al,(%rax)
   13da4:	00 00                	add    %al,(%rax)
   13da6:	00 00                	add    %al,(%rax)
   13da8:	30 01                	xor    %al,(%rcx)
   13daa:	00 00                	add    %al,(%rax)
   13dac:	00 00                	add    %al,(%rax)
   13dae:	00 00                	add    %al,(%rax)
   13db0:	30 01                	xor    %al,(%rcx)
   13db2:	00 00                	add    %al,(%rax)
   13db4:	00 00                	add    %al,(%rax)
   13db6:	00 00                	add    %al,(%rax)
   13db8:	30 01                	xor    %al,(%rcx)
   13dba:	00 00                	add    %al,(%rax)
   13dbc:	00 00                	add    %al,(%rax)
   13dbe:	00 00                	add    %al,(%rax)
   13dc0:	30 01                	xor    %al,(%rcx)
   13dc2:	00 00                	add    %al,(%rax)
   13dc4:	00 00                	add    %al,(%rax)
   13dc6:	00 00                	add    %al,(%rax)
   13dc8:	30 01                	xor    %al,(%rcx)
   13dca:	00 00                	add    %al,(%rax)
   13dcc:	00 00                	add    %al,(%rax)
   13dce:	00 00                	add    %al,(%rax)
   13dd0:	30 01                	xor    %al,(%rcx)
   13dd2:	00 00                	add    %al,(%rax)
   13dd4:	00 00                	add    %al,(%rax)
   13dd6:	00 00                	add    %al,(%rax)
   13dd8:	30 01                	xor    %al,(%rcx)
   13dda:	00 00                	add    %al,(%rax)
   13ddc:	00 00                	add    %al,(%rax)
   13dde:	00 00                	add    %al,(%rax)
   13de0:	30 01                	xor    %al,(%rcx)
   13de2:	00 00                	add    %al,(%rax)
   13de4:	00 00                	add    %al,(%rax)
   13de6:	00 00                	add    %al,(%rax)
   13de8:	30 01                	xor    %al,(%rcx)
   13dea:	00 00                	add    %al,(%rax)
   13dec:	00 00                	add    %al,(%rax)
   13dee:	00 00                	add    %al,(%rax)
   13df0:	30 01                	xor    %al,(%rcx)
   13df2:	00 00                	add    %al,(%rax)
   13df4:	00 00                	add    %al,(%rax)
   13df6:	00 00                	add    %al,(%rax)
   13df8:	30 01                	xor    %al,(%rcx)
   13dfa:	00 00                	add    %al,(%rax)
   13dfc:	00 00                	add    %al,(%rax)
   13dfe:	00 00                	add    %al,(%rax)
   13e00:	b9 02 00 00 00       	mov    $0x2,%ecx
   13e05:	00 00                	add    %al,(%rax)
   13e07:	00 c1                	add    %al,%cl
   13e09:	02 00                	add    (%rax),%al
   13e0b:	00 00                	add    %al,(%rax)
   13e0d:	00 00                	add    %al,(%rax)
   13e0f:	00 b4 02 00 00 00 00 	add    %dh,0x0(%rdx,%rax,1)
   13e16:	00 00                	add    %al,(%rax)
   13e18:	ab                   	stos   %eax,%es:(%rdi)
   13e19:	02 00                	add    (%rax),%al
   13e1b:	00 00                	add    %al,(%rax)
   13e1d:	00 00                	add    %al,(%rax)
   13e1f:	00 9e 02 00 00 00    	add    %bl,0x2(%rsi)
   13e25:	00 00                	add    %al,(%rax)
   13e27:	00 96 02 00 00 00    	add    %dl,0x2(%rsi)
   13e2d:	00 00                	add    %al,(%rax)
   13e2f:	00 96 02 00 00 00    	add    %dl,0x2(%rsi)
   13e35:	00 00                	add    %al,(%rax)
   13e37:	00 96 02 00 00 00    	add    %dl,0x2(%rsi)
   13e3d:	00 00                	add    %al,(%rax)
   13e3f:	00 8a 02 00 00 00    	add    %cl,0x2(%rdx)
   13e45:	00 00                	add    %al,(%rax)
   13e47:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   13e4d:	00 00                	add    %al,(%rax)
   13e4f:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   13e55:	00 00                	add    %al,(%rax)
   13e57:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   13e5d:	00 00                	add    %al,(%rax)
   13e5f:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   13e65:	00 00                	add    %al,(%rax)
   13e67:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   13e6d:	00 00                	add    %al,(%rax)
   13e6f:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   13e75:	00 00                	add    %al,(%rax)
   13e77:	00 82 02 00 00 00    	add    %al,0x2(%rdx)
   13e7d:	00 00                	add    %al,(%rax)
   13e7f:	00 76 02             	add    %dh,0x2(%rsi)
   13e82:	00 00                	add    %al,(%rax)
   13e84:	00 00                	add    %al,(%rax)
   13e86:	00 00                	add    %al,(%rax)
   13e88:	6c                   	insb   (%dx),%es:(%rdi)
   13e89:	02 00                	add    (%rax),%al
   13e8b:	00 00                	add    %al,(%rax)
   13e8d:	00 00                	add    %al,(%rax)
   13e8f:	00 6c 02 00          	add    %ch,0x0(%rdx,%rax,1)
   13e93:	00 00                	add    %al,(%rax)
   13e95:	00 00                	add    %al,(%rax)
   13e97:	00 6c 02 00          	add    %ch,0x0(%rdx,%rax,1)
   13e9b:	00 00                	add    %al,(%rax)
   13e9d:	00 00                	add    %al,(%rax)
   13e9f:	00 6c 02 00          	add    %ch,0x0(%rdx,%rax,1)
   13ea3:	00 00                	add    %al,(%rax)
   13ea5:	00 00                	add    %al,(%rax)
   13ea7:	00 6c 02 00          	add    %ch,0x0(%rdx,%rax,1)
   13eab:	00 00                	add    %al,(%rax)
   13ead:	00 00                	add    %al,(%rax)
   13eaf:	00 6c 02 00          	add    %ch,0x0(%rdx,%rax,1)
   13eb3:	00 00                	add    %al,(%rax)
   13eb5:	00 00                	add    %al,(%rax)
   13eb7:	00 6c 02 00          	add    %ch,0x0(%rdx,%rax,1)
   13ebb:	00 00                	add    %al,(%rax)
   13ebd:	00 00                	add    %al,(%rax)
   13ebf:	00 6c 02 00          	add    %ch,0x0(%rdx,%rax,1)
   13ec3:	00 00                	add    %al,(%rax)
   13ec5:	00 00                	add    %al,(%rax)
   13ec7:	00 6c 02 00          	add    %ch,0x0(%rdx,%rax,1)
   13ecb:	00 00                	add    %al,(%rax)
   13ecd:	00 00                	add    %al,(%rax)
   13ecf:	00 6c 02 00          	add    %ch,0x0(%rdx,%rax,1)
   13ed3:	00 00                	add    %al,(%rax)
   13ed5:	00 00                	add    %al,(%rax)
   13ed7:	00 6c 02 00          	add    %ch,0x0(%rdx,%rax,1)
   13edb:	00 00                	add    %al,(%rax)
   13edd:	00 00                	add    %al,(%rax)
   13edf:	00 6c 02 00          	add    %ch,0x0(%rdx,%rax,1)
   13ee3:	00 00                	add    %al,(%rax)
   13ee5:	00 00                	add    %al,(%rax)
   13ee7:	00 6c 02 00          	add    %ch,0x0(%rdx,%rax,1)
   13eeb:	00 00                	add    %al,(%rax)
   13eed:	00 00                	add    %al,(%rax)
   13eef:	00 6c 02 00          	add    %ch,0x0(%rdx,%rax,1)
   13ef3:	00 00                	add    %al,(%rax)
   13ef5:	00 00                	add    %al,(%rax)
   13ef7:	00 6c 02 00          	add    %ch,0x0(%rdx,%rax,1)
   13efb:	00 00                	add    %al,(%rax)
   13efd:	00 00                	add    %al,(%rax)
   13eff:	00 5c 02 00          	add    %bl,0x0(%rdx,%rax,1)
   13f03:	00 00                	add    %al,(%rax)
   13f05:	00 00                	add    %al,(%rax)
   13f07:	00 52 02             	add    %dl,0x2(%rdx)
   13f0a:	00 00                	add    %al,(%rax)
   13f0c:	00 00                	add    %al,(%rax)
   13f0e:	00 00                	add    %al,(%rax)
   13f10:	52                   	push   %rdx
   13f11:	02 00                	add    (%rax),%al
   13f13:	00 00                	add    %al,(%rax)
   13f15:	00 00                	add    %al,(%rax)
   13f17:	00 52 02             	add    %dl,0x2(%rdx)
   13f1a:	00 00                	add    %al,(%rax)
   13f1c:	00 00                	add    %al,(%rax)
   13f1e:	00 00                	add    %al,(%rax)
   13f20:	52                   	push   %rdx
   13f21:	02 00                	add    (%rax),%al
   13f23:	00 00                	add    %al,(%rax)
   13f25:	00 00                	add    %al,(%rax)
   13f27:	00 52 02             	add    %dl,0x2(%rdx)
   13f2a:	00 00                	add    %al,(%rax)
   13f2c:	00 00                	add    %al,(%rax)
   13f2e:	00 00                	add    %al,(%rax)
   13f30:	52                   	push   %rdx
   13f31:	02 00                	add    (%rax),%al
   13f33:	00 00                	add    %al,(%rax)
   13f35:	00 00                	add    %al,(%rax)
   13f37:	00 52 02             	add    %dl,0x2(%rdx)
   13f3a:	00 00                	add    %al,(%rax)
   13f3c:	00 00                	add    %al,(%rax)
   13f3e:	00 00                	add    %al,(%rax)
   13f40:	52                   	push   %rdx
   13f41:	02 00                	add    (%rax),%al
   13f43:	00 00                	add    %al,(%rax)
   13f45:	00 00                	add    %al,(%rax)
   13f47:	00 52 02             	add    %dl,0x2(%rdx)
   13f4a:	00 00                	add    %al,(%rax)
   13f4c:	00 00                	add    %al,(%rax)
   13f4e:	00 00                	add    %al,(%rax)
   13f50:	52                   	push   %rdx
   13f51:	02 00                	add    (%rax),%al
   13f53:	00 00                	add    %al,(%rax)
   13f55:	00 00                	add    %al,(%rax)
   13f57:	00 52 02             	add    %dl,0x2(%rdx)
   13f5a:	00 00                	add    %al,(%rax)
   13f5c:	00 00                	add    %al,(%rax)
   13f5e:	00 00                	add    %al,(%rax)
   13f60:	52                   	push   %rdx
   13f61:	02 00                	add    (%rax),%al
   13f63:	00 00                	add    %al,(%rax)
   13f65:	00 00                	add    %al,(%rax)
   13f67:	00 52 02             	add    %dl,0x2(%rdx)
   13f6a:	00 00                	add    %al,(%rax)
   13f6c:	00 00                	add    %al,(%rax)
   13f6e:	00 00                	add    %al,(%rax)
   13f70:	52                   	push   %rdx
   13f71:	02 00                	add    (%rax),%al
   13f73:	00 00                	add    %al,(%rax)
   13f75:	00 00                	add    %al,(%rax)
   13f77:	00 52 02             	add    %dl,0x2(%rdx)
   13f7a:	00 00                	add    %al,(%rax)
   13f7c:	00 00                	add    %al,(%rax)
   13f7e:	00 00                	add    %al,(%rax)
   13f80:	52                   	push   %rdx
   13f81:	02 00                	add    (%rax),%al
   13f83:	00 00                	add    %al,(%rax)
   13f85:	00 00                	add    %al,(%rax)
   13f87:	00 52 02             	add    %dl,0x2(%rdx)
   13f8a:	00 00                	add    %al,(%rax)
   13f8c:	00 00                	add    %al,(%rax)
   13f8e:	00 00                	add    %al,(%rax)
   13f90:	52                   	push   %rdx
   13f91:	02 00                	add    (%rax),%al
   13f93:	00 00                	add    %al,(%rax)
   13f95:	00 00                	add    %al,(%rax)
   13f97:	00 52 02             	add    %dl,0x2(%rdx)
   13f9a:	00 00                	add    %al,(%rax)
   13f9c:	00 00                	add    %al,(%rax)
   13f9e:	00 00                	add    %al,(%rax)
   13fa0:	52                   	push   %rdx
   13fa1:	02 00                	add    (%rax),%al
   13fa3:	00 00                	add    %al,(%rax)
   13fa5:	00 00                	add    %al,(%rax)
   13fa7:	00 52 02             	add    %dl,0x2(%rdx)
   13faa:	00 00                	add    %al,(%rax)
   13fac:	00 00                	add    %al,(%rax)
   13fae:	00 00                	add    %al,(%rax)
   13fb0:	52                   	push   %rdx
   13fb1:	02 00                	add    (%rax),%al
   13fb3:	00 00                	add    %al,(%rax)
   13fb5:	00 00                	add    %al,(%rax)
   13fb7:	00 52 02             	add    %dl,0x2(%rdx)
   13fba:	00 00                	add    %al,(%rax)
   13fbc:	00 00                	add    %al,(%rax)
   13fbe:	00 00                	add    %al,(%rax)
   13fc0:	52                   	push   %rdx
   13fc1:	02 00                	add    (%rax),%al
   13fc3:	00 00                	add    %al,(%rax)
   13fc5:	00 00                	add    %al,(%rax)
   13fc7:	00 52 02             	add    %dl,0x2(%rdx)
   13fca:	00 00                	add    %al,(%rax)
   13fcc:	00 00                	add    %al,(%rax)
   13fce:	00 00                	add    %al,(%rax)
   13fd0:	52                   	push   %rdx
   13fd1:	02 00                	add    (%rax),%al
   13fd3:	00 00                	add    %al,(%rax)
   13fd5:	00 00                	add    %al,(%rax)
   13fd7:	00 52 02             	add    %dl,0x2(%rdx)
   13fda:	00 00                	add    %al,(%rax)
   13fdc:	00 00                	add    %al,(%rax)
   13fde:	00 00                	add    %al,(%rax)
   13fe0:	52                   	push   %rdx
   13fe1:	02 00                	add    (%rax),%al
   13fe3:	00 00                	add    %al,(%rax)
   13fe5:	00 00                	add    %al,(%rax)
   13fe7:	00 52 02             	add    %dl,0x2(%rdx)
   13fea:	00 00                	add    %al,(%rax)
   13fec:	00 00                	add    %al,(%rax)
   13fee:	00 00                	add    %al,(%rax)
   13ff0:	52                   	push   %rdx
   13ff1:	02 00                	add    (%rax),%al
   13ff3:	00 00                	add    %al,(%rax)
   13ff5:	00 00                	add    %al,(%rax)
   13ff7:	00 52 02             	add    %dl,0x2(%rdx)
   13ffa:	00 00                	add    %al,(%rax)
   13ffc:	00 00                	add    %al,(%rax)
   13ffe:	00 00                	add    %al,(%rax)
   14000:	dc 02                	faddl  (%rdx)
   14002:	00 00                	add    %al,(%rax)
   14004:	00 00                	add    %al,(%rax)
   14006:	00 00                	add    %al,(%rax)
   14008:	dc 02                	faddl  (%rdx)
   1400a:	00 00                	add    %al,(%rax)
   1400c:	00 00                	add    %al,(%rax)
   1400e:	00 00                	add    %al,(%rax)
   14010:	dc 02                	faddl  (%rdx)
   14012:	00 00                	add    %al,(%rax)
   14014:	00 00                	add    %al,(%rax)
   14016:	00 00                	add    %al,(%rax)
   14018:	dc 02                	faddl  (%rdx)
   1401a:	00 00                	add    %al,(%rax)
   1401c:	00 00                	add    %al,(%rax)
   1401e:	00 00                	add    %al,(%rax)
   14020:	dc 02                	faddl  (%rdx)
   14022:	00 00                	add    %al,(%rax)
   14024:	00 00                	add    %al,(%rax)
   14026:	00 00                	add    %al,(%rax)
   14028:	dc 02                	faddl  (%rdx)
   1402a:	00 00                	add    %al,(%rax)
   1402c:	00 00                	add    %al,(%rax)
   1402e:	00 00                	add    %al,(%rax)
   14030:	dc 02                	faddl  (%rdx)
   14032:	00 00                	add    %al,(%rax)
   14034:	00 00                	add    %al,(%rax)
   14036:	00 00                	add    %al,(%rax)
   14038:	dc 02                	faddl  (%rdx)
   1403a:	00 00                	add    %al,(%rax)
   1403c:	00 00                	add    %al,(%rax)
   1403e:	00 00                	add    %al,(%rax)
   14040:	dc 02                	faddl  (%rdx)
   14042:	00 00                	add    %al,(%rax)
   14044:	00 00                	add    %al,(%rax)
   14046:	00 00                	add    %al,(%rax)
   14048:	dc 02                	faddl  (%rdx)
   1404a:	00 00                	add    %al,(%rax)
   1404c:	00 00                	add    %al,(%rax)
   1404e:	00 00                	add    %al,(%rax)
   14050:	dc 02                	faddl  (%rdx)
   14052:	00 00                	add    %al,(%rax)
   14054:	00 00                	add    %al,(%rax)
   14056:	00 00                	add    %al,(%rax)
   14058:	dc 02                	faddl  (%rdx)
   1405a:	00 00                	add    %al,(%rax)
   1405c:	00 00                	add    %al,(%rax)
   1405e:	00 00                	add    %al,(%rax)
   14060:	dc 02                	faddl  (%rdx)
   14062:	00 00                	add    %al,(%rax)
   14064:	00 00                	add    %al,(%rax)
   14066:	00 00                	add    %al,(%rax)
   14068:	dc 02                	faddl  (%rdx)
   1406a:	00 00                	add    %al,(%rax)
   1406c:	00 00                	add    %al,(%rax)
   1406e:	00 00                	add    %al,(%rax)
   14070:	dc 02                	faddl  (%rdx)
   14072:	00 00                	add    %al,(%rax)
   14074:	00 00                	add    %al,(%rax)
   14076:	00 00                	add    %al,(%rax)
   14078:	dc 02                	faddl  (%rdx)
   1407a:	00 00                	add    %al,(%rax)
   1407c:	00 00                	add    %al,(%rax)
   1407e:	00 00                	add    %al,(%rax)
   14080:	dc 02                	faddl  (%rdx)
   14082:	00 00                	add    %al,(%rax)
   14084:	00 00                	add    %al,(%rax)
   14086:	00 00                	add    %al,(%rax)
   14088:	dc 02                	faddl  (%rdx)
   1408a:	00 00                	add    %al,(%rax)
   1408c:	00 00                	add    %al,(%rax)
   1408e:	00 00                	add    %al,(%rax)
   14090:	dc 02                	faddl  (%rdx)
   14092:	00 00                	add    %al,(%rax)
   14094:	00 00                	add    %al,(%rax)
   14096:	00 00                	add    %al,(%rax)
   14098:	dc 02                	faddl  (%rdx)
   1409a:	00 00                	add    %al,(%rax)
   1409c:	00 00                	add    %al,(%rax)
   1409e:	00 00                	add    %al,(%rax)
   140a0:	dc 02                	faddl  (%rdx)
   140a2:	00 00                	add    %al,(%rax)
   140a4:	00 00                	add    %al,(%rax)
   140a6:	00 00                	add    %al,(%rax)
   140a8:	dc 02                	faddl  (%rdx)
   140aa:	00 00                	add    %al,(%rax)
   140ac:	00 00                	add    %al,(%rax)
   140ae:	00 00                	add    %al,(%rax)
   140b0:	dc 02                	faddl  (%rdx)
   140b2:	00 00                	add    %al,(%rax)
   140b4:	00 00                	add    %al,(%rax)
   140b6:	00 00                	add    %al,(%rax)
   140b8:	dc 02                	faddl  (%rdx)
   140ba:	00 00                	add    %al,(%rax)
   140bc:	00 00                	add    %al,(%rax)
   140be:	00 00                	add    %al,(%rax)
   140c0:	dc 02                	faddl  (%rdx)
   140c2:	00 00                	add    %al,(%rax)
   140c4:	00 00                	add    %al,(%rax)
   140c6:	00 00                	add    %al,(%rax)
   140c8:	dc 02                	faddl  (%rdx)
   140ca:	00 00                	add    %al,(%rax)
   140cc:	00 00                	add    %al,(%rax)
   140ce:	00 00                	add    %al,(%rax)
   140d0:	dc 02                	faddl  (%rdx)
   140d2:	00 00                	add    %al,(%rax)
   140d4:	00 00                	add    %al,(%rax)
   140d6:	00 00                	add    %al,(%rax)
   140d8:	dc 02                	faddl  (%rdx)
   140da:	00 00                	add    %al,(%rax)
   140dc:	00 00                	add    %al,(%rax)
   140de:	00 00                	add    %al,(%rax)
   140e0:	dc 02                	faddl  (%rdx)
   140e2:	00 00                	add    %al,(%rax)
   140e4:	00 00                	add    %al,(%rax)
   140e6:	00 00                	add    %al,(%rax)
   140e8:	dc 02                	faddl  (%rdx)
   140ea:	00 00                	add    %al,(%rax)
   140ec:	00 00                	add    %al,(%rax)
   140ee:	00 00                	add    %al,(%rax)
   140f0:	dc 02                	faddl  (%rdx)
   140f2:	00 00                	add    %al,(%rax)
   140f4:	00 00                	add    %al,(%rax)
   140f6:	00 00                	add    %al,(%rax)
   140f8:	dc 02                	faddl  (%rdx)
   140fa:	00 00                	add    %al,(%rax)
   140fc:	00 00                	add    %al,(%rax)
   140fe:	00 00                	add    %al,(%rax)
   14100:	dc 02                	faddl  (%rdx)
   14102:	00 00                	add    %al,(%rax)
   14104:	00 00                	add    %al,(%rax)
   14106:	00 00                	add    %al,(%rax)
   14108:	dc 02                	faddl  (%rdx)
   1410a:	00 00                	add    %al,(%rax)
   1410c:	00 00                	add    %al,(%rax)
   1410e:	00 00                	add    %al,(%rax)
   14110:	dc 02                	faddl  (%rdx)
   14112:	00 00                	add    %al,(%rax)
   14114:	00 00                	add    %al,(%rax)
   14116:	00 00                	add    %al,(%rax)
   14118:	dc 02                	faddl  (%rdx)
   1411a:	00 00                	add    %al,(%rax)
   1411c:	00 00                	add    %al,(%rax)
   1411e:	00 00                	add    %al,(%rax)
   14120:	dc 02                	faddl  (%rdx)
   14122:	00 00                	add    %al,(%rax)
   14124:	00 00                	add    %al,(%rax)
   14126:	00 00                	add    %al,(%rax)
   14128:	dc 02                	faddl  (%rdx)
   1412a:	00 00                	add    %al,(%rax)
   1412c:	00 00                	add    %al,(%rax)
   1412e:	00 00                	add    %al,(%rax)
   14130:	dc 02                	faddl  (%rdx)
   14132:	00 00                	add    %al,(%rax)
   14134:	00 00                	add    %al,(%rax)
   14136:	00 00                	add    %al,(%rax)
   14138:	dc 02                	faddl  (%rdx)
   1413a:	00 00                	add    %al,(%rax)
   1413c:	00 00                	add    %al,(%rax)
   1413e:	00 00                	add    %al,(%rax)
   14140:	dc 02                	faddl  (%rdx)
   14142:	00 00                	add    %al,(%rax)
   14144:	00 00                	add    %al,(%rax)
   14146:	00 00                	add    %al,(%rax)
   14148:	dc 02                	faddl  (%rdx)
   1414a:	00 00                	add    %al,(%rax)
   1414c:	00 00                	add    %al,(%rax)
   1414e:	00 00                	add    %al,(%rax)
   14150:	dc 02                	faddl  (%rdx)
   14152:	00 00                	add    %al,(%rax)
   14154:	00 00                	add    %al,(%rax)
   14156:	00 00                	add    %al,(%rax)
   14158:	dc 02                	faddl  (%rdx)
   1415a:	00 00                	add    %al,(%rax)
   1415c:	00 00                	add    %al,(%rax)
   1415e:	00 00                	add    %al,(%rax)
   14160:	dc 02                	faddl  (%rdx)
   14162:	00 00                	add    %al,(%rax)
   14164:	00 00                	add    %al,(%rax)
   14166:	00 00                	add    %al,(%rax)
   14168:	dc 02                	faddl  (%rdx)
   1416a:	00 00                	add    %al,(%rax)
   1416c:	00 00                	add    %al,(%rax)
   1416e:	00 00                	add    %al,(%rax)
   14170:	dc 02                	faddl  (%rdx)
   14172:	00 00                	add    %al,(%rax)
   14174:	00 00                	add    %al,(%rax)
   14176:	00 00                	add    %al,(%rax)
   14178:	dc 02                	faddl  (%rdx)
   1417a:	00 00                	add    %al,(%rax)
   1417c:	00 00                	add    %al,(%rax)
   1417e:	00 00                	add    %al,(%rax)
   14180:	dc 02                	faddl  (%rdx)
   14182:	00 00                	add    %al,(%rax)
   14184:	00 00                	add    %al,(%rax)
   14186:	00 00                	add    %al,(%rax)
   14188:	dc 02                	faddl  (%rdx)
   1418a:	00 00                	add    %al,(%rax)
   1418c:	00 00                	add    %al,(%rax)
   1418e:	00 00                	add    %al,(%rax)
   14190:	dc 02                	faddl  (%rdx)
   14192:	00 00                	add    %al,(%rax)
   14194:	00 00                	add    %al,(%rax)
   14196:	00 00                	add    %al,(%rax)
   14198:	dc 02                	faddl  (%rdx)
   1419a:	00 00                	add    %al,(%rax)
   1419c:	00 00                	add    %al,(%rax)
   1419e:	00 00                	add    %al,(%rax)
   141a0:	dc 02                	faddl  (%rdx)
   141a2:	00 00                	add    %al,(%rax)
   141a4:	00 00                	add    %al,(%rax)
   141a6:	00 00                	add    %al,(%rax)
   141a8:	dc 02                	faddl  (%rdx)
   141aa:	00 00                	add    %al,(%rax)
   141ac:	00 00                	add    %al,(%rax)
   141ae:	00 00                	add    %al,(%rax)
   141b0:	dc 02                	faddl  (%rdx)
   141b2:	00 00                	add    %al,(%rax)
   141b4:	00 00                	add    %al,(%rax)
   141b6:	00 00                	add    %al,(%rax)
   141b8:	dc 02                	faddl  (%rdx)
   141ba:	00 00                	add    %al,(%rax)
   141bc:	00 00                	add    %al,(%rax)
   141be:	00 00                	add    %al,(%rax)
   141c0:	dc 02                	faddl  (%rdx)
   141c2:	00 00                	add    %al,(%rax)
   141c4:	00 00                	add    %al,(%rax)
   141c6:	00 00                	add    %al,(%rax)
   141c8:	dc 02                	faddl  (%rdx)
   141ca:	00 00                	add    %al,(%rax)
   141cc:	00 00                	add    %al,(%rax)
   141ce:	00 00                	add    %al,(%rax)
   141d0:	dc 02                	faddl  (%rdx)
   141d2:	00 00                	add    %al,(%rax)
   141d4:	00 00                	add    %al,(%rax)
   141d6:	00 00                	add    %al,(%rax)
   141d8:	dc 02                	faddl  (%rdx)
   141da:	00 00                	add    %al,(%rax)
   141dc:	00 00                	add    %al,(%rax)
   141de:	00 00                	add    %al,(%rax)
   141e0:	dc 02                	faddl  (%rdx)
   141e2:	00 00                	add    %al,(%rax)
   141e4:	00 00                	add    %al,(%rax)
   141e6:	00 00                	add    %al,(%rax)
   141e8:	dc 02                	faddl  (%rdx)
   141ea:	00 00                	add    %al,(%rax)
   141ec:	00 00                	add    %al,(%rax)
   141ee:	00 00                	add    %al,(%rax)
   141f0:	dc 02                	faddl  (%rdx)
   141f2:	00 00                	add    %al,(%rax)
   141f4:	00 00                	add    %al,(%rax)
   141f6:	00 00                	add    %al,(%rax)
   141f8:	dc 02                	faddl  (%rdx)
   141fa:	00 00                	add    %al,(%rax)
   141fc:	00 00                	add    %al,(%rax)
   141fe:	00 00                	add    %al,(%rax)
   14200:	e3 02                	jrcxz  14204 <__intel_mic_avx512f_memset+0x8c4>
   14202:	00 00                	add    %al,(%rax)
   14204:	00 00                	add    %al,(%rax)
   14206:	00 00                	add    %al,(%rax)
   14208:	e3 02                	jrcxz  1420c <__intel_mic_avx512f_memset+0x8cc>
   1420a:	00 00                	add    %al,(%rax)
   1420c:	00 00                	add    %al,(%rax)
   1420e:	00 00                	add    %al,(%rax)
   14210:	e3 02                	jrcxz  14214 <__intel_mic_avx512f_memset+0x8d4>
   14212:	00 00                	add    %al,(%rax)
   14214:	00 00                	add    %al,(%rax)
   14216:	00 00                	add    %al,(%rax)
   14218:	e3 02                	jrcxz  1421c <__intel_mic_avx512f_memset+0x8dc>
   1421a:	00 00                	add    %al,(%rax)
   1421c:	00 00                	add    %al,(%rax)
   1421e:	00 00                	add    %al,(%rax)
   14220:	e3 02                	jrcxz  14224 <__intel_mic_avx512f_memset+0x8e4>
   14222:	00 00                	add    %al,(%rax)
   14224:	00 00                	add    %al,(%rax)
   14226:	00 00                	add    %al,(%rax)
   14228:	e3 02                	jrcxz  1422c <__intel_mic_avx512f_memset+0x8ec>
   1422a:	00 00                	add    %al,(%rax)
   1422c:	00 00                	add    %al,(%rax)
   1422e:	00 00                	add    %al,(%rax)
   14230:	e3 02                	jrcxz  14234 <__intel_mic_avx512f_memset+0x8f4>
   14232:	00 00                	add    %al,(%rax)
   14234:	00 00                	add    %al,(%rax)
   14236:	00 00                	add    %al,(%rax)
   14238:	e3 02                	jrcxz  1423c <__intel_mic_avx512f_memset+0x8fc>
   1423a:	00 00                	add    %al,(%rax)
   1423c:	00 00                	add    %al,(%rax)
   1423e:	00 00                	add    %al,(%rax)
   14240:	e3 02                	jrcxz  14244 <__intel_mic_avx512f_memset+0x904>
   14242:	00 00                	add    %al,(%rax)
   14244:	00 00                	add    %al,(%rax)
   14246:	00 00                	add    %al,(%rax)
   14248:	e3 02                	jrcxz  1424c <__intel_mic_avx512f_memset+0x90c>
   1424a:	00 00                	add    %al,(%rax)
   1424c:	00 00                	add    %al,(%rax)
   1424e:	00 00                	add    %al,(%rax)
   14250:	e3 02                	jrcxz  14254 <__intel_mic_avx512f_memset+0x914>
   14252:	00 00                	add    %al,(%rax)
   14254:	00 00                	add    %al,(%rax)
   14256:	00 00                	add    %al,(%rax)
   14258:	e3 02                	jrcxz  1425c <__intel_mic_avx512f_memset+0x91c>
   1425a:	00 00                	add    %al,(%rax)
   1425c:	00 00                	add    %al,(%rax)
   1425e:	00 00                	add    %al,(%rax)
   14260:	e3 02                	jrcxz  14264 <__intel_mic_avx512f_memset+0x924>
   14262:	00 00                	add    %al,(%rax)
   14264:	00 00                	add    %al,(%rax)
   14266:	00 00                	add    %al,(%rax)
   14268:	e3 02                	jrcxz  1426c <__intel_mic_avx512f_memset+0x92c>
   1426a:	00 00                	add    %al,(%rax)
   1426c:	00 00                	add    %al,(%rax)
   1426e:	00 00                	add    %al,(%rax)
   14270:	e3 02                	jrcxz  14274 <__intel_mic_avx512f_memset+0x934>
   14272:	00 00                	add    %al,(%rax)
   14274:	00 00                	add    %al,(%rax)
   14276:	00 00                	add    %al,(%rax)
   14278:	e3 02                	jrcxz  1427c <__intel_mic_avx512f_memset+0x93c>
   1427a:	00 00                	add    %al,(%rax)
   1427c:	00 00                	add    %al,(%rax)
   1427e:	00 00                	add    %al,(%rax)
   14280:	e3 02                	jrcxz  14284 <__intel_mic_avx512f_memset+0x944>
   14282:	00 00                	add    %al,(%rax)
   14284:	00 00                	add    %al,(%rax)
   14286:	00 00                	add    %al,(%rax)
   14288:	e3 02                	jrcxz  1428c <__intel_mic_avx512f_memset+0x94c>
   1428a:	00 00                	add    %al,(%rax)
   1428c:	00 00                	add    %al,(%rax)
   1428e:	00 00                	add    %al,(%rax)
   14290:	e3 02                	jrcxz  14294 <__intel_mic_avx512f_memset+0x954>
   14292:	00 00                	add    %al,(%rax)
   14294:	00 00                	add    %al,(%rax)
   14296:	00 00                	add    %al,(%rax)
   14298:	e3 02                	jrcxz  1429c <__intel_mic_avx512f_memset+0x95c>
   1429a:	00 00                	add    %al,(%rax)
   1429c:	00 00                	add    %al,(%rax)
   1429e:	00 00                	add    %al,(%rax)
   142a0:	e3 02                	jrcxz  142a4 <__intel_mic_avx512f_memset+0x964>
   142a2:	00 00                	add    %al,(%rax)
   142a4:	00 00                	add    %al,(%rax)
   142a6:	00 00                	add    %al,(%rax)
   142a8:	e3 02                	jrcxz  142ac <__intel_mic_avx512f_memset+0x96c>
   142aa:	00 00                	add    %al,(%rax)
   142ac:	00 00                	add    %al,(%rax)
   142ae:	00 00                	add    %al,(%rax)
   142b0:	e3 02                	jrcxz  142b4 <__intel_mic_avx512f_memset+0x974>
   142b2:	00 00                	add    %al,(%rax)
   142b4:	00 00                	add    %al,(%rax)
   142b6:	00 00                	add    %al,(%rax)
   142b8:	e3 02                	jrcxz  142bc <__intel_mic_avx512f_memset+0x97c>
   142ba:	00 00                	add    %al,(%rax)
   142bc:	00 00                	add    %al,(%rax)
   142be:	00 00                	add    %al,(%rax)
   142c0:	e3 02                	jrcxz  142c4 <__intel_mic_avx512f_memset+0x984>
   142c2:	00 00                	add    %al,(%rax)
   142c4:	00 00                	add    %al,(%rax)
   142c6:	00 00                	add    %al,(%rax)
   142c8:	e3 02                	jrcxz  142cc <__intel_mic_avx512f_memset+0x98c>
   142ca:	00 00                	add    %al,(%rax)
   142cc:	00 00                	add    %al,(%rax)
   142ce:	00 00                	add    %al,(%rax)
   142d0:	e3 02                	jrcxz  142d4 <__intel_mic_avx512f_memset+0x994>
   142d2:	00 00                	add    %al,(%rax)
   142d4:	00 00                	add    %al,(%rax)
   142d6:	00 00                	add    %al,(%rax)
   142d8:	e3 02                	jrcxz  142dc <__intel_mic_avx512f_memset+0x99c>
   142da:	00 00                	add    %al,(%rax)
   142dc:	00 00                	add    %al,(%rax)
   142de:	00 00                	add    %al,(%rax)
   142e0:	e3 02                	jrcxz  142e4 <__intel_mic_avx512f_memset+0x9a4>
   142e2:	00 00                	add    %al,(%rax)
   142e4:	00 00                	add    %al,(%rax)
   142e6:	00 00                	add    %al,(%rax)
   142e8:	e3 02                	jrcxz  142ec <__intel_mic_avx512f_memset+0x9ac>
   142ea:	00 00                	add    %al,(%rax)
   142ec:	00 00                	add    %al,(%rax)
   142ee:	00 00                	add    %al,(%rax)
   142f0:	e3 02                	jrcxz  142f4 <__intel_mic_avx512f_memset+0x9b4>
   142f2:	00 00                	add    %al,(%rax)
   142f4:	00 00                	add    %al,(%rax)
   142f6:	00 00                	add    %al,(%rax)
   142f8:	e3 02                	jrcxz  142fc <__intel_mic_avx512f_memset+0x9bc>
   142fa:	00 00                	add    %al,(%rax)
   142fc:	00 00                	add    %al,(%rax)
   142fe:	00 00                	add    %al,(%rax)
   14300:	e3 02                	jrcxz  14304 <__intel_mic_avx512f_memset+0x9c4>
   14302:	00 00                	add    %al,(%rax)
   14304:	00 00                	add    %al,(%rax)
   14306:	00 00                	add    %al,(%rax)
   14308:	e3 02                	jrcxz  1430c <__intel_mic_avx512f_memset+0x9cc>
   1430a:	00 00                	add    %al,(%rax)
   1430c:	00 00                	add    %al,(%rax)
   1430e:	00 00                	add    %al,(%rax)
   14310:	e3 02                	jrcxz  14314 <__intel_mic_avx512f_memset+0x9d4>
   14312:	00 00                	add    %al,(%rax)
   14314:	00 00                	add    %al,(%rax)
   14316:	00 00                	add    %al,(%rax)
   14318:	e3 02                	jrcxz  1431c <__intel_mic_avx512f_memset+0x9dc>
   1431a:	00 00                	add    %al,(%rax)
   1431c:	00 00                	add    %al,(%rax)
   1431e:	00 00                	add    %al,(%rax)
   14320:	e3 02                	jrcxz  14324 <__intel_mic_avx512f_memset+0x9e4>
   14322:	00 00                	add    %al,(%rax)
   14324:	00 00                	add    %al,(%rax)
   14326:	00 00                	add    %al,(%rax)
   14328:	e3 02                	jrcxz  1432c <__intel_mic_avx512f_memset+0x9ec>
   1432a:	00 00                	add    %al,(%rax)
   1432c:	00 00                	add    %al,(%rax)
   1432e:	00 00                	add    %al,(%rax)
   14330:	e3 02                	jrcxz  14334 <__intel_mic_avx512f_memset+0x9f4>
   14332:	00 00                	add    %al,(%rax)
   14334:	00 00                	add    %al,(%rax)
   14336:	00 00                	add    %al,(%rax)
   14338:	e3 02                	jrcxz  1433c <__intel_mic_avx512f_memset+0x9fc>
   1433a:	00 00                	add    %al,(%rax)
   1433c:	00 00                	add    %al,(%rax)
   1433e:	00 00                	add    %al,(%rax)
   14340:	e3 02                	jrcxz  14344 <__intel_mic_avx512f_memset+0xa04>
   14342:	00 00                	add    %al,(%rax)
   14344:	00 00                	add    %al,(%rax)
   14346:	00 00                	add    %al,(%rax)
   14348:	e3 02                	jrcxz  1434c <__intel_mic_avx512f_memset+0xa0c>
   1434a:	00 00                	add    %al,(%rax)
   1434c:	00 00                	add    %al,(%rax)
   1434e:	00 00                	add    %al,(%rax)
   14350:	e3 02                	jrcxz  14354 <__intel_mic_avx512f_memset+0xa14>
   14352:	00 00                	add    %al,(%rax)
   14354:	00 00                	add    %al,(%rax)
   14356:	00 00                	add    %al,(%rax)
   14358:	e3 02                	jrcxz  1435c <__intel_mic_avx512f_memset+0xa1c>
   1435a:	00 00                	add    %al,(%rax)
   1435c:	00 00                	add    %al,(%rax)
   1435e:	00 00                	add    %al,(%rax)
   14360:	e3 02                	jrcxz  14364 <__intel_mic_avx512f_memset+0xa24>
   14362:	00 00                	add    %al,(%rax)
   14364:	00 00                	add    %al,(%rax)
   14366:	00 00                	add    %al,(%rax)
   14368:	e3 02                	jrcxz  1436c <__intel_mic_avx512f_memset+0xa2c>
   1436a:	00 00                	add    %al,(%rax)
   1436c:	00 00                	add    %al,(%rax)
   1436e:	00 00                	add    %al,(%rax)
   14370:	e3 02                	jrcxz  14374 <__intel_mic_avx512f_memset+0xa34>
   14372:	00 00                	add    %al,(%rax)
   14374:	00 00                	add    %al,(%rax)
   14376:	00 00                	add    %al,(%rax)
   14378:	e3 02                	jrcxz  1437c <__intel_mic_avx512f_memset+0xa3c>
   1437a:	00 00                	add    %al,(%rax)
   1437c:	00 00                	add    %al,(%rax)
   1437e:	00 00                	add    %al,(%rax)
   14380:	e3 02                	jrcxz  14384 <__intel_mic_avx512f_memset+0xa44>
   14382:	00 00                	add    %al,(%rax)
   14384:	00 00                	add    %al,(%rax)
   14386:	00 00                	add    %al,(%rax)
   14388:	e3 02                	jrcxz  1438c <__intel_mic_avx512f_memset+0xa4c>
   1438a:	00 00                	add    %al,(%rax)
   1438c:	00 00                	add    %al,(%rax)
   1438e:	00 00                	add    %al,(%rax)
   14390:	e3 02                	jrcxz  14394 <__intel_mic_avx512f_memset+0xa54>
   14392:	00 00                	add    %al,(%rax)
   14394:	00 00                	add    %al,(%rax)
   14396:	00 00                	add    %al,(%rax)
   14398:	e3 02                	jrcxz  1439c <__intel_mic_avx512f_memset+0xa5c>
   1439a:	00 00                	add    %al,(%rax)
   1439c:	00 00                	add    %al,(%rax)
   1439e:	00 00                	add    %al,(%rax)
   143a0:	e3 02                	jrcxz  143a4 <__intel_mic_avx512f_memset+0xa64>
   143a2:	00 00                	add    %al,(%rax)
   143a4:	00 00                	add    %al,(%rax)
   143a6:	00 00                	add    %al,(%rax)
   143a8:	e3 02                	jrcxz  143ac <__intel_mic_avx512f_memset+0xa6c>
   143aa:	00 00                	add    %al,(%rax)
   143ac:	00 00                	add    %al,(%rax)
   143ae:	00 00                	add    %al,(%rax)
   143b0:	e3 02                	jrcxz  143b4 <__intel_mic_avx512f_memset+0xa74>
   143b2:	00 00                	add    %al,(%rax)
   143b4:	00 00                	add    %al,(%rax)
   143b6:	00 00                	add    %al,(%rax)
   143b8:	e3 02                	jrcxz  143bc <__intel_mic_avx512f_memset+0xa7c>
   143ba:	00 00                	add    %al,(%rax)
   143bc:	00 00                	add    %al,(%rax)
   143be:	00 00                	add    %al,(%rax)
   143c0:	e3 02                	jrcxz  143c4 <__intel_mic_avx512f_memset+0xa84>
   143c2:	00 00                	add    %al,(%rax)
   143c4:	00 00                	add    %al,(%rax)
   143c6:	00 00                	add    %al,(%rax)
   143c8:	e3 02                	jrcxz  143cc <__intel_mic_avx512f_memset+0xa8c>
   143ca:	00 00                	add    %al,(%rax)
   143cc:	00 00                	add    %al,(%rax)
   143ce:	00 00                	add    %al,(%rax)
   143d0:	e3 02                	jrcxz  143d4 <__intel_mic_avx512f_memset+0xa94>
   143d2:	00 00                	add    %al,(%rax)
   143d4:	00 00                	add    %al,(%rax)
   143d6:	00 00                	add    %al,(%rax)
   143d8:	e3 02                	jrcxz  143dc <__intel_mic_avx512f_memset+0xa9c>
   143da:	00 00                	add    %al,(%rax)
   143dc:	00 00                	add    %al,(%rax)
   143de:	00 00                	add    %al,(%rax)
   143e0:	e3 02                	jrcxz  143e4 <__intel_mic_avx512f_memset+0xaa4>
   143e2:	00 00                	add    %al,(%rax)
   143e4:	00 00                	add    %al,(%rax)
   143e6:	00 00                	add    %al,(%rax)
   143e8:	e3 02                	jrcxz  143ec <__intel_mic_avx512f_memset+0xaac>
   143ea:	00 00                	add    %al,(%rax)
   143ec:	00 00                	add    %al,(%rax)
   143ee:	00 00                	add    %al,(%rax)
   143f0:	e3 02                	jrcxz  143f4 <__intel_mic_avx512f_memset+0xab4>
   143f2:	00 00                	add    %al,(%rax)
   143f4:	00 00                	add    %al,(%rax)
   143f6:	00 00                	add    %al,(%rax)
   143f8:	e3 02                	jrcxz  143fc <__intel_mic_avx512f_memset+0xabc>
   143fa:	00 00                	add    %al,(%rax)
   143fc:	00 00                	add    %al,(%rax)
   143fe:	00 00                	add    %al,(%rax)
   14400:	ea                   	(bad)  
   14401:	02 00                	add    (%rax),%al
   14403:	00 00                	add    %al,(%rax)
   14405:	00 00                	add    %al,(%rax)
   14407:	00 ea                	add    %ch,%dl
   14409:	02 00                	add    (%rax),%al
   1440b:	00 00                	add    %al,(%rax)
   1440d:	00 00                	add    %al,(%rax)
   1440f:	00 ea                	add    %ch,%dl
   14411:	02 00                	add    (%rax),%al
   14413:	00 00                	add    %al,(%rax)
   14415:	00 00                	add    %al,(%rax)
   14417:	00 ea                	add    %ch,%dl
   14419:	02 00                	add    (%rax),%al
   1441b:	00 00                	add    %al,(%rax)
   1441d:	00 00                	add    %al,(%rax)
   1441f:	00 ea                	add    %ch,%dl
   14421:	02 00                	add    (%rax),%al
   14423:	00 00                	add    %al,(%rax)
   14425:	00 00                	add    %al,(%rax)
   14427:	00 ea                	add    %ch,%dl
   14429:	02 00                	add    (%rax),%al
   1442b:	00 00                	add    %al,(%rax)
   1442d:	00 00                	add    %al,(%rax)
   1442f:	00 ea                	add    %ch,%dl
   14431:	02 00                	add    (%rax),%al
   14433:	00 00                	add    %al,(%rax)
   14435:	00 00                	add    %al,(%rax)
   14437:	00 ea                	add    %ch,%dl
   14439:	02 00                	add    (%rax),%al
   1443b:	00 00                	add    %al,(%rax)
   1443d:	00 00                	add    %al,(%rax)
   1443f:	00 ea                	add    %ch,%dl
   14441:	02 00                	add    (%rax),%al
   14443:	00 00                	add    %al,(%rax)
   14445:	00 00                	add    %al,(%rax)
   14447:	00 ea                	add    %ch,%dl
   14449:	02 00                	add    (%rax),%al
   1444b:	00 00                	add    %al,(%rax)
   1444d:	00 00                	add    %al,(%rax)
   1444f:	00 ea                	add    %ch,%dl
   14451:	02 00                	add    (%rax),%al
   14453:	00 00                	add    %al,(%rax)
   14455:	00 00                	add    %al,(%rax)
   14457:	00 ea                	add    %ch,%dl
   14459:	02 00                	add    (%rax),%al
   1445b:	00 00                	add    %al,(%rax)
   1445d:	00 00                	add    %al,(%rax)
   1445f:	00 ea                	add    %ch,%dl
   14461:	02 00                	add    (%rax),%al
   14463:	00 00                	add    %al,(%rax)
   14465:	00 00                	add    %al,(%rax)
   14467:	00 ea                	add    %ch,%dl
   14469:	02 00                	add    (%rax),%al
   1446b:	00 00                	add    %al,(%rax)
   1446d:	00 00                	add    %al,(%rax)
   1446f:	00 ea                	add    %ch,%dl
   14471:	02 00                	add    (%rax),%al
   14473:	00 00                	add    %al,(%rax)
   14475:	00 00                	add    %al,(%rax)
   14477:	00 ea                	add    %ch,%dl
   14479:	02 00                	add    (%rax),%al
   1447b:	00 00                	add    %al,(%rax)
   1447d:	00 00                	add    %al,(%rax)
   1447f:	00 ea                	add    %ch,%dl
   14481:	02 00                	add    (%rax),%al
   14483:	00 00                	add    %al,(%rax)
   14485:	00 00                	add    %al,(%rax)
   14487:	00 ea                	add    %ch,%dl
   14489:	02 00                	add    (%rax),%al
   1448b:	00 00                	add    %al,(%rax)
   1448d:	00 00                	add    %al,(%rax)
   1448f:	00 ea                	add    %ch,%dl
   14491:	02 00                	add    (%rax),%al
   14493:	00 00                	add    %al,(%rax)
   14495:	00 00                	add    %al,(%rax)
   14497:	00 ea                	add    %ch,%dl
   14499:	02 00                	add    (%rax),%al
   1449b:	00 00                	add    %al,(%rax)
   1449d:	00 00                	add    %al,(%rax)
   1449f:	00 ea                	add    %ch,%dl
   144a1:	02 00                	add    (%rax),%al
   144a3:	00 00                	add    %al,(%rax)
   144a5:	00 00                	add    %al,(%rax)
   144a7:	00 ea                	add    %ch,%dl
   144a9:	02 00                	add    (%rax),%al
   144ab:	00 00                	add    %al,(%rax)
   144ad:	00 00                	add    %al,(%rax)
   144af:	00 ea                	add    %ch,%dl
   144b1:	02 00                	add    (%rax),%al
   144b3:	00 00                	add    %al,(%rax)
   144b5:	00 00                	add    %al,(%rax)
   144b7:	00 ea                	add    %ch,%dl
   144b9:	02 00                	add    (%rax),%al
   144bb:	00 00                	add    %al,(%rax)
   144bd:	00 00                	add    %al,(%rax)
   144bf:	00 ea                	add    %ch,%dl
   144c1:	02 00                	add    (%rax),%al
   144c3:	00 00                	add    %al,(%rax)
   144c5:	00 00                	add    %al,(%rax)
   144c7:	00 ea                	add    %ch,%dl
   144c9:	02 00                	add    (%rax),%al
   144cb:	00 00                	add    %al,(%rax)
   144cd:	00 00                	add    %al,(%rax)
   144cf:	00 ea                	add    %ch,%dl
   144d1:	02 00                	add    (%rax),%al
   144d3:	00 00                	add    %al,(%rax)
   144d5:	00 00                	add    %al,(%rax)
   144d7:	00 ea                	add    %ch,%dl
   144d9:	02 00                	add    (%rax),%al
   144db:	00 00                	add    %al,(%rax)
   144dd:	00 00                	add    %al,(%rax)
   144df:	00 ea                	add    %ch,%dl
   144e1:	02 00                	add    (%rax),%al
   144e3:	00 00                	add    %al,(%rax)
   144e5:	00 00                	add    %al,(%rax)
   144e7:	00 ea                	add    %ch,%dl
   144e9:	02 00                	add    (%rax),%al
   144eb:	00 00                	add    %al,(%rax)
   144ed:	00 00                	add    %al,(%rax)
   144ef:	00 ea                	add    %ch,%dl
   144f1:	02 00                	add    (%rax),%al
   144f3:	00 00                	add    %al,(%rax)
   144f5:	00 00                	add    %al,(%rax)
   144f7:	00 ea                	add    %ch,%dl
   144f9:	02 00                	add    (%rax),%al
   144fb:	00 00                	add    %al,(%rax)
   144fd:	00 00                	add    %al,(%rax)
   144ff:	00 ea                	add    %ch,%dl
   14501:	02 00                	add    (%rax),%al
   14503:	00 00                	add    %al,(%rax)
   14505:	00 00                	add    %al,(%rax)
   14507:	00 ea                	add    %ch,%dl
   14509:	02 00                	add    (%rax),%al
   1450b:	00 00                	add    %al,(%rax)
   1450d:	00 00                	add    %al,(%rax)
   1450f:	00 ea                	add    %ch,%dl
   14511:	02 00                	add    (%rax),%al
   14513:	00 00                	add    %al,(%rax)
   14515:	00 00                	add    %al,(%rax)
   14517:	00 ea                	add    %ch,%dl
   14519:	02 00                	add    (%rax),%al
   1451b:	00 00                	add    %al,(%rax)
   1451d:	00 00                	add    %al,(%rax)
   1451f:	00 ea                	add    %ch,%dl
   14521:	02 00                	add    (%rax),%al
   14523:	00 00                	add    %al,(%rax)
   14525:	00 00                	add    %al,(%rax)
   14527:	00 ea                	add    %ch,%dl
   14529:	02 00                	add    (%rax),%al
   1452b:	00 00                	add    %al,(%rax)
   1452d:	00 00                	add    %al,(%rax)
   1452f:	00 ea                	add    %ch,%dl
   14531:	02 00                	add    (%rax),%al
   14533:	00 00                	add    %al,(%rax)
   14535:	00 00                	add    %al,(%rax)
   14537:	00 ea                	add    %ch,%dl
   14539:	02 00                	add    (%rax),%al
   1453b:	00 00                	add    %al,(%rax)
   1453d:	00 00                	add    %al,(%rax)
   1453f:	00 ea                	add    %ch,%dl
   14541:	02 00                	add    (%rax),%al
   14543:	00 00                	add    %al,(%rax)
   14545:	00 00                	add    %al,(%rax)
   14547:	00 ea                	add    %ch,%dl
   14549:	02 00                	add    (%rax),%al
   1454b:	00 00                	add    %al,(%rax)
   1454d:	00 00                	add    %al,(%rax)
   1454f:	00 ea                	add    %ch,%dl
   14551:	02 00                	add    (%rax),%al
   14553:	00 00                	add    %al,(%rax)
   14555:	00 00                	add    %al,(%rax)
   14557:	00 ea                	add    %ch,%dl
   14559:	02 00                	add    (%rax),%al
   1455b:	00 00                	add    %al,(%rax)
   1455d:	00 00                	add    %al,(%rax)
   1455f:	00 ea                	add    %ch,%dl
   14561:	02 00                	add    (%rax),%al
   14563:	00 00                	add    %al,(%rax)
   14565:	00 00                	add    %al,(%rax)
   14567:	00 ea                	add    %ch,%dl
   14569:	02 00                	add    (%rax),%al
   1456b:	00 00                	add    %al,(%rax)
   1456d:	00 00                	add    %al,(%rax)
   1456f:	00 ea                	add    %ch,%dl
   14571:	02 00                	add    (%rax),%al
   14573:	00 00                	add    %al,(%rax)
   14575:	00 00                	add    %al,(%rax)
   14577:	00 ea                	add    %ch,%dl
   14579:	02 00                	add    (%rax),%al
   1457b:	00 00                	add    %al,(%rax)
   1457d:	00 00                	add    %al,(%rax)
   1457f:	00 ea                	add    %ch,%dl
   14581:	02 00                	add    (%rax),%al
   14583:	00 00                	add    %al,(%rax)
   14585:	00 00                	add    %al,(%rax)
   14587:	00 ea                	add    %ch,%dl
   14589:	02 00                	add    (%rax),%al
   1458b:	00 00                	add    %al,(%rax)
   1458d:	00 00                	add    %al,(%rax)
   1458f:	00 ea                	add    %ch,%dl
   14591:	02 00                	add    (%rax),%al
   14593:	00 00                	add    %al,(%rax)
   14595:	00 00                	add    %al,(%rax)
   14597:	00 ea                	add    %ch,%dl
   14599:	02 00                	add    (%rax),%al
   1459b:	00 00                	add    %al,(%rax)
   1459d:	00 00                	add    %al,(%rax)
   1459f:	00 ea                	add    %ch,%dl
   145a1:	02 00                	add    (%rax),%al
   145a3:	00 00                	add    %al,(%rax)
   145a5:	00 00                	add    %al,(%rax)
   145a7:	00 ea                	add    %ch,%dl
   145a9:	02 00                	add    (%rax),%al
   145ab:	00 00                	add    %al,(%rax)
   145ad:	00 00                	add    %al,(%rax)
   145af:	00 ea                	add    %ch,%dl
   145b1:	02 00                	add    (%rax),%al
   145b3:	00 00                	add    %al,(%rax)
   145b5:	00 00                	add    %al,(%rax)
   145b7:	00 ea                	add    %ch,%dl
   145b9:	02 00                	add    (%rax),%al
   145bb:	00 00                	add    %al,(%rax)
   145bd:	00 00                	add    %al,(%rax)
   145bf:	00 ea                	add    %ch,%dl
   145c1:	02 00                	add    (%rax),%al
   145c3:	00 00                	add    %al,(%rax)
   145c5:	00 00                	add    %al,(%rax)
   145c7:	00 ea                	add    %ch,%dl
   145c9:	02 00                	add    (%rax),%al
   145cb:	00 00                	add    %al,(%rax)
   145cd:	00 00                	add    %al,(%rax)
   145cf:	00 ea                	add    %ch,%dl
   145d1:	02 00                	add    (%rax),%al
   145d3:	00 00                	add    %al,(%rax)
   145d5:	00 00                	add    %al,(%rax)
   145d7:	00 ea                	add    %ch,%dl
   145d9:	02 00                	add    (%rax),%al
   145db:	00 00                	add    %al,(%rax)
   145dd:	00 00                	add    %al,(%rax)
   145df:	00 ea                	add    %ch,%dl
   145e1:	02 00                	add    (%rax),%al
   145e3:	00 00                	add    %al,(%rax)
   145e5:	00 00                	add    %al,(%rax)
   145e7:	00 ea                	add    %ch,%dl
   145e9:	02 00                	add    (%rax),%al
   145eb:	00 00                	add    %al,(%rax)
   145ed:	00 00                	add    %al,(%rax)
   145ef:	00 ea                	add    %ch,%dl
   145f1:	02 00                	add    (%rax),%al
   145f3:	00 00                	add    %al,(%rax)
   145f5:	00 00                	add    %al,(%rax)
   145f7:	00 ea                	add    %ch,%dl
   145f9:	02 00                	add    (%rax),%al
   145fb:	00 00                	add    %al,(%rax)
   145fd:	00 00                	add    %al,(%rax)
   145ff:	00 f1                	add    %dh,%cl
   14601:	02 00                	add    (%rax),%al
   14603:	00 00                	add    %al,(%rax)
   14605:	00 00                	add    %al,(%rax)
   14607:	00 f1                	add    %dh,%cl
   14609:	02 00                	add    (%rax),%al
   1460b:	00 00                	add    %al,(%rax)
   1460d:	00 00                	add    %al,(%rax)
   1460f:	00 f1                	add    %dh,%cl
   14611:	02 00                	add    (%rax),%al
   14613:	00 00                	add    %al,(%rax)
   14615:	00 00                	add    %al,(%rax)
   14617:	00 f1                	add    %dh,%cl
   14619:	02 00                	add    (%rax),%al
   1461b:	00 00                	add    %al,(%rax)
   1461d:	00 00                	add    %al,(%rax)
   1461f:	00 f1                	add    %dh,%cl
   14621:	02 00                	add    (%rax),%al
   14623:	00 00                	add    %al,(%rax)
   14625:	00 00                	add    %al,(%rax)
   14627:	00 f1                	add    %dh,%cl
   14629:	02 00                	add    (%rax),%al
   1462b:	00 00                	add    %al,(%rax)
   1462d:	00 00                	add    %al,(%rax)
   1462f:	00 f1                	add    %dh,%cl
   14631:	02 00                	add    (%rax),%al
   14633:	00 00                	add    %al,(%rax)
   14635:	00 00                	add    %al,(%rax)
   14637:	00 f1                	add    %dh,%cl
   14639:	02 00                	add    (%rax),%al
   1463b:	00 00                	add    %al,(%rax)
   1463d:	00 00                	add    %al,(%rax)
   1463f:	00 f1                	add    %dh,%cl
   14641:	02 00                	add    (%rax),%al
   14643:	00 00                	add    %al,(%rax)
   14645:	00 00                	add    %al,(%rax)
   14647:	00 f1                	add    %dh,%cl
   14649:	02 00                	add    (%rax),%al
   1464b:	00 00                	add    %al,(%rax)
   1464d:	00 00                	add    %al,(%rax)
   1464f:	00 f1                	add    %dh,%cl
   14651:	02 00                	add    (%rax),%al
   14653:	00 00                	add    %al,(%rax)
   14655:	00 00                	add    %al,(%rax)
   14657:	00 f1                	add    %dh,%cl
   14659:	02 00                	add    (%rax),%al
   1465b:	00 00                	add    %al,(%rax)
   1465d:	00 00                	add    %al,(%rax)
   1465f:	00 f1                	add    %dh,%cl
   14661:	02 00                	add    (%rax),%al
   14663:	00 00                	add    %al,(%rax)
   14665:	00 00                	add    %al,(%rax)
   14667:	00 f1                	add    %dh,%cl
   14669:	02 00                	add    (%rax),%al
   1466b:	00 00                	add    %al,(%rax)
   1466d:	00 00                	add    %al,(%rax)
   1466f:	00 f1                	add    %dh,%cl
   14671:	02 00                	add    (%rax),%al
   14673:	00 00                	add    %al,(%rax)
   14675:	00 00                	add    %al,(%rax)
   14677:	00 f1                	add    %dh,%cl
   14679:	02 00                	add    (%rax),%al
   1467b:	00 00                	add    %al,(%rax)
   1467d:	00 00                	add    %al,(%rax)
   1467f:	00 f1                	add    %dh,%cl
   14681:	02 00                	add    (%rax),%al
   14683:	00 00                	add    %al,(%rax)
   14685:	00 00                	add    %al,(%rax)
   14687:	00 f1                	add    %dh,%cl
   14689:	02 00                	add    (%rax),%al
   1468b:	00 00                	add    %al,(%rax)
   1468d:	00 00                	add    %al,(%rax)
   1468f:	00 f1                	add    %dh,%cl
   14691:	02 00                	add    (%rax),%al
   14693:	00 00                	add    %al,(%rax)
   14695:	00 00                	add    %al,(%rax)
   14697:	00 f1                	add    %dh,%cl
   14699:	02 00                	add    (%rax),%al
   1469b:	00 00                	add    %al,(%rax)
   1469d:	00 00                	add    %al,(%rax)
   1469f:	00 f1                	add    %dh,%cl
   146a1:	02 00                	add    (%rax),%al
   146a3:	00 00                	add    %al,(%rax)
   146a5:	00 00                	add    %al,(%rax)
   146a7:	00 f1                	add    %dh,%cl
   146a9:	02 00                	add    (%rax),%al
   146ab:	00 00                	add    %al,(%rax)
   146ad:	00 00                	add    %al,(%rax)
   146af:	00 f1                	add    %dh,%cl
   146b1:	02 00                	add    (%rax),%al
   146b3:	00 00                	add    %al,(%rax)
   146b5:	00 00                	add    %al,(%rax)
   146b7:	00 f1                	add    %dh,%cl
   146b9:	02 00                	add    (%rax),%al
   146bb:	00 00                	add    %al,(%rax)
   146bd:	00 00                	add    %al,(%rax)
   146bf:	00 f1                	add    %dh,%cl
   146c1:	02 00                	add    (%rax),%al
   146c3:	00 00                	add    %al,(%rax)
   146c5:	00 00                	add    %al,(%rax)
   146c7:	00 f1                	add    %dh,%cl
   146c9:	02 00                	add    (%rax),%al
   146cb:	00 00                	add    %al,(%rax)
   146cd:	00 00                	add    %al,(%rax)
   146cf:	00 f1                	add    %dh,%cl
   146d1:	02 00                	add    (%rax),%al
   146d3:	00 00                	add    %al,(%rax)
   146d5:	00 00                	add    %al,(%rax)
   146d7:	00 f1                	add    %dh,%cl
   146d9:	02 00                	add    (%rax),%al
   146db:	00 00                	add    %al,(%rax)
   146dd:	00 00                	add    %al,(%rax)
   146df:	00 f1                	add    %dh,%cl
   146e1:	02 00                	add    (%rax),%al
   146e3:	00 00                	add    %al,(%rax)
   146e5:	00 00                	add    %al,(%rax)
   146e7:	00 f1                	add    %dh,%cl
   146e9:	02 00                	add    (%rax),%al
   146eb:	00 00                	add    %al,(%rax)
   146ed:	00 00                	add    %al,(%rax)
   146ef:	00 f1                	add    %dh,%cl
   146f1:	02 00                	add    (%rax),%al
   146f3:	00 00                	add    %al,(%rax)
   146f5:	00 00                	add    %al,(%rax)
   146f7:	00 f1                	add    %dh,%cl
   146f9:	02 00                	add    (%rax),%al
   146fb:	00 00                	add    %al,(%rax)
   146fd:	00 00                	add    %al,(%rax)
   146ff:	00 f1                	add    %dh,%cl
   14701:	02 00                	add    (%rax),%al
   14703:	00 00                	add    %al,(%rax)
   14705:	00 00                	add    %al,(%rax)
   14707:	00 f1                	add    %dh,%cl
   14709:	02 00                	add    (%rax),%al
   1470b:	00 00                	add    %al,(%rax)
   1470d:	00 00                	add    %al,(%rax)
   1470f:	00 f1                	add    %dh,%cl
   14711:	02 00                	add    (%rax),%al
   14713:	00 00                	add    %al,(%rax)
   14715:	00 00                	add    %al,(%rax)
   14717:	00 f1                	add    %dh,%cl
   14719:	02 00                	add    (%rax),%al
   1471b:	00 00                	add    %al,(%rax)
   1471d:	00 00                	add    %al,(%rax)
   1471f:	00 f1                	add    %dh,%cl
   14721:	02 00                	add    (%rax),%al
   14723:	00 00                	add    %al,(%rax)
   14725:	00 00                	add    %al,(%rax)
   14727:	00 f1                	add    %dh,%cl
   14729:	02 00                	add    (%rax),%al
   1472b:	00 00                	add    %al,(%rax)
   1472d:	00 00                	add    %al,(%rax)
   1472f:	00 f1                	add    %dh,%cl
   14731:	02 00                	add    (%rax),%al
   14733:	00 00                	add    %al,(%rax)
   14735:	00 00                	add    %al,(%rax)
   14737:	00 f1                	add    %dh,%cl
   14739:	02 00                	add    (%rax),%al
   1473b:	00 00                	add    %al,(%rax)
   1473d:	00 00                	add    %al,(%rax)
   1473f:	00 f1                	add    %dh,%cl
   14741:	02 00                	add    (%rax),%al
   14743:	00 00                	add    %al,(%rax)
   14745:	00 00                	add    %al,(%rax)
   14747:	00 f1                	add    %dh,%cl
   14749:	02 00                	add    (%rax),%al
   1474b:	00 00                	add    %al,(%rax)
   1474d:	00 00                	add    %al,(%rax)
   1474f:	00 f1                	add    %dh,%cl
   14751:	02 00                	add    (%rax),%al
   14753:	00 00                	add    %al,(%rax)
   14755:	00 00                	add    %al,(%rax)
   14757:	00 f1                	add    %dh,%cl
   14759:	02 00                	add    (%rax),%al
   1475b:	00 00                	add    %al,(%rax)
   1475d:	00 00                	add    %al,(%rax)
   1475f:	00 f1                	add    %dh,%cl
   14761:	02 00                	add    (%rax),%al
   14763:	00 00                	add    %al,(%rax)
   14765:	00 00                	add    %al,(%rax)
   14767:	00 f1                	add    %dh,%cl
   14769:	02 00                	add    (%rax),%al
   1476b:	00 00                	add    %al,(%rax)
   1476d:	00 00                	add    %al,(%rax)
   1476f:	00 f1                	add    %dh,%cl
   14771:	02 00                	add    (%rax),%al
   14773:	00 00                	add    %al,(%rax)
   14775:	00 00                	add    %al,(%rax)
   14777:	00 f1                	add    %dh,%cl
   14779:	02 00                	add    (%rax),%al
   1477b:	00 00                	add    %al,(%rax)
   1477d:	00 00                	add    %al,(%rax)
   1477f:	00 f1                	add    %dh,%cl
   14781:	02 00                	add    (%rax),%al
   14783:	00 00                	add    %al,(%rax)
   14785:	00 00                	add    %al,(%rax)
   14787:	00 f1                	add    %dh,%cl
   14789:	02 00                	add    (%rax),%al
   1478b:	00 00                	add    %al,(%rax)
   1478d:	00 00                	add    %al,(%rax)
   1478f:	00 f1                	add    %dh,%cl
   14791:	02 00                	add    (%rax),%al
   14793:	00 00                	add    %al,(%rax)
   14795:	00 00                	add    %al,(%rax)
   14797:	00 f1                	add    %dh,%cl
   14799:	02 00                	add    (%rax),%al
   1479b:	00 00                	add    %al,(%rax)
   1479d:	00 00                	add    %al,(%rax)
   1479f:	00 f1                	add    %dh,%cl
   147a1:	02 00                	add    (%rax),%al
   147a3:	00 00                	add    %al,(%rax)
   147a5:	00 00                	add    %al,(%rax)
   147a7:	00 f1                	add    %dh,%cl
   147a9:	02 00                	add    (%rax),%al
   147ab:	00 00                	add    %al,(%rax)
   147ad:	00 00                	add    %al,(%rax)
   147af:	00 f1                	add    %dh,%cl
   147b1:	02 00                	add    (%rax),%al
   147b3:	00 00                	add    %al,(%rax)
   147b5:	00 00                	add    %al,(%rax)
   147b7:	00 f1                	add    %dh,%cl
   147b9:	02 00                	add    (%rax),%al
   147bb:	00 00                	add    %al,(%rax)
   147bd:	00 00                	add    %al,(%rax)
   147bf:	00 f1                	add    %dh,%cl
   147c1:	02 00                	add    (%rax),%al
   147c3:	00 00                	add    %al,(%rax)
   147c5:	00 00                	add    %al,(%rax)
   147c7:	00 f1                	add    %dh,%cl
   147c9:	02 00                	add    (%rax),%al
   147cb:	00 00                	add    %al,(%rax)
   147cd:	00 00                	add    %al,(%rax)
   147cf:	00 f1                	add    %dh,%cl
   147d1:	02 00                	add    (%rax),%al
   147d3:	00 00                	add    %al,(%rax)
   147d5:	00 00                	add    %al,(%rax)
   147d7:	00 f1                	add    %dh,%cl
   147d9:	02 00                	add    (%rax),%al
   147db:	00 00                	add    %al,(%rax)
   147dd:	00 00                	add    %al,(%rax)
   147df:	00 f1                	add    %dh,%cl
   147e1:	02 00                	add    (%rax),%al
   147e3:	00 00                	add    %al,(%rax)
   147e5:	00 00                	add    %al,(%rax)
   147e7:	00 f1                	add    %dh,%cl
   147e9:	02 00                	add    (%rax),%al
   147eb:	00 00                	add    %al,(%rax)
   147ed:	00 00                	add    %al,(%rax)
   147ef:	00 f1                	add    %dh,%cl
   147f1:	02 00                	add    (%rax),%al
   147f3:	00 00                	add    %al,(%rax)
   147f5:	00 00                	add    %al,(%rax)
   147f7:	00 f1                	add    %dh,%cl
   147f9:	02 00                	add    (%rax),%al
   147fb:	00 00                	add    %al,(%rax)
   147fd:	00 00                	add    %al,(%rax)
   147ff:	00 f8                	add    %bh,%al
   14801:	02 00                	add    (%rax),%al
   14803:	00 00                	add    %al,(%rax)
   14805:	00 00                	add    %al,(%rax)
   14807:	00 f8                	add    %bh,%al
   14809:	02 00                	add    (%rax),%al
   1480b:	00 00                	add    %al,(%rax)
   1480d:	00 00                	add    %al,(%rax)
   1480f:	00 f8                	add    %bh,%al
   14811:	02 00                	add    (%rax),%al
   14813:	00 00                	add    %al,(%rax)
   14815:	00 00                	add    %al,(%rax)
   14817:	00 f8                	add    %bh,%al
   14819:	02 00                	add    (%rax),%al
   1481b:	00 00                	add    %al,(%rax)
   1481d:	00 00                	add    %al,(%rax)
   1481f:	00 f8                	add    %bh,%al
   14821:	02 00                	add    (%rax),%al
   14823:	00 00                	add    %al,(%rax)
   14825:	00 00                	add    %al,(%rax)
   14827:	00 f8                	add    %bh,%al
   14829:	02 00                	add    (%rax),%al
   1482b:	00 00                	add    %al,(%rax)
   1482d:	00 00                	add    %al,(%rax)
   1482f:	00 f8                	add    %bh,%al
   14831:	02 00                	add    (%rax),%al
   14833:	00 00                	add    %al,(%rax)
   14835:	00 00                	add    %al,(%rax)
   14837:	00 f8                	add    %bh,%al
   14839:	02 00                	add    (%rax),%al
   1483b:	00 00                	add    %al,(%rax)
   1483d:	00 00                	add    %al,(%rax)
   1483f:	00 f8                	add    %bh,%al
   14841:	02 00                	add    (%rax),%al
   14843:	00 00                	add    %al,(%rax)
   14845:	00 00                	add    %al,(%rax)
   14847:	00 f8                	add    %bh,%al
   14849:	02 00                	add    (%rax),%al
   1484b:	00 00                	add    %al,(%rax)
   1484d:	00 00                	add    %al,(%rax)
   1484f:	00 f8                	add    %bh,%al
   14851:	02 00                	add    (%rax),%al
   14853:	00 00                	add    %al,(%rax)
   14855:	00 00                	add    %al,(%rax)
   14857:	00 f8                	add    %bh,%al
   14859:	02 00                	add    (%rax),%al
   1485b:	00 00                	add    %al,(%rax)
   1485d:	00 00                	add    %al,(%rax)
   1485f:	00 f8                	add    %bh,%al
   14861:	02 00                	add    (%rax),%al
   14863:	00 00                	add    %al,(%rax)
   14865:	00 00                	add    %al,(%rax)
   14867:	00 f8                	add    %bh,%al
   14869:	02 00                	add    (%rax),%al
   1486b:	00 00                	add    %al,(%rax)
   1486d:	00 00                	add    %al,(%rax)
   1486f:	00 f8                	add    %bh,%al
   14871:	02 00                	add    (%rax),%al
   14873:	00 00                	add    %al,(%rax)
   14875:	00 00                	add    %al,(%rax)
   14877:	00 f8                	add    %bh,%al
   14879:	02 00                	add    (%rax),%al
   1487b:	00 00                	add    %al,(%rax)
   1487d:	00 00                	add    %al,(%rax)
   1487f:	00 f8                	add    %bh,%al
   14881:	02 00                	add    (%rax),%al
   14883:	00 00                	add    %al,(%rax)
   14885:	00 00                	add    %al,(%rax)
   14887:	00 f8                	add    %bh,%al
   14889:	02 00                	add    (%rax),%al
   1488b:	00 00                	add    %al,(%rax)
   1488d:	00 00                	add    %al,(%rax)
   1488f:	00 f8                	add    %bh,%al
   14891:	02 00                	add    (%rax),%al
   14893:	00 00                	add    %al,(%rax)
   14895:	00 00                	add    %al,(%rax)
   14897:	00 f8                	add    %bh,%al
   14899:	02 00                	add    (%rax),%al
   1489b:	00 00                	add    %al,(%rax)
   1489d:	00 00                	add    %al,(%rax)
   1489f:	00 f8                	add    %bh,%al
   148a1:	02 00                	add    (%rax),%al
   148a3:	00 00                	add    %al,(%rax)
   148a5:	00 00                	add    %al,(%rax)
   148a7:	00 f8                	add    %bh,%al
   148a9:	02 00                	add    (%rax),%al
   148ab:	00 00                	add    %al,(%rax)
   148ad:	00 00                	add    %al,(%rax)
   148af:	00 f8                	add    %bh,%al
   148b1:	02 00                	add    (%rax),%al
   148b3:	00 00                	add    %al,(%rax)
   148b5:	00 00                	add    %al,(%rax)
   148b7:	00 f8                	add    %bh,%al
   148b9:	02 00                	add    (%rax),%al
   148bb:	00 00                	add    %al,(%rax)
   148bd:	00 00                	add    %al,(%rax)
   148bf:	00 f8                	add    %bh,%al
   148c1:	02 00                	add    (%rax),%al
   148c3:	00 00                	add    %al,(%rax)
   148c5:	00 00                	add    %al,(%rax)
   148c7:	00 f8                	add    %bh,%al
   148c9:	02 00                	add    (%rax),%al
   148cb:	00 00                	add    %al,(%rax)
   148cd:	00 00                	add    %al,(%rax)
   148cf:	00 f8                	add    %bh,%al
   148d1:	02 00                	add    (%rax),%al
   148d3:	00 00                	add    %al,(%rax)
   148d5:	00 00                	add    %al,(%rax)
   148d7:	00 f8                	add    %bh,%al
   148d9:	02 00                	add    (%rax),%al
   148db:	00 00                	add    %al,(%rax)
   148dd:	00 00                	add    %al,(%rax)
   148df:	00 f8                	add    %bh,%al
   148e1:	02 00                	add    (%rax),%al
   148e3:	00 00                	add    %al,(%rax)
   148e5:	00 00                	add    %al,(%rax)
   148e7:	00 f8                	add    %bh,%al
   148e9:	02 00                	add    (%rax),%al
   148eb:	00 00                	add    %al,(%rax)
   148ed:	00 00                	add    %al,(%rax)
   148ef:	00 f8                	add    %bh,%al
   148f1:	02 00                	add    (%rax),%al
   148f3:	00 00                	add    %al,(%rax)
   148f5:	00 00                	add    %al,(%rax)
   148f7:	00 f8                	add    %bh,%al
   148f9:	02 00                	add    (%rax),%al
   148fb:	00 00                	add    %al,(%rax)
   148fd:	00 00                	add    %al,(%rax)
   148ff:	00 f8                	add    %bh,%al
   14901:	02 00                	add    (%rax),%al
   14903:	00 00                	add    %al,(%rax)
   14905:	00 00                	add    %al,(%rax)
   14907:	00 f8                	add    %bh,%al
   14909:	02 00                	add    (%rax),%al
   1490b:	00 00                	add    %al,(%rax)
   1490d:	00 00                	add    %al,(%rax)
   1490f:	00 f8                	add    %bh,%al
   14911:	02 00                	add    (%rax),%al
   14913:	00 00                	add    %al,(%rax)
   14915:	00 00                	add    %al,(%rax)
   14917:	00 f8                	add    %bh,%al
   14919:	02 00                	add    (%rax),%al
   1491b:	00 00                	add    %al,(%rax)
   1491d:	00 00                	add    %al,(%rax)
   1491f:	00 f8                	add    %bh,%al
   14921:	02 00                	add    (%rax),%al
   14923:	00 00                	add    %al,(%rax)
   14925:	00 00                	add    %al,(%rax)
   14927:	00 f8                	add    %bh,%al
   14929:	02 00                	add    (%rax),%al
   1492b:	00 00                	add    %al,(%rax)
   1492d:	00 00                	add    %al,(%rax)
   1492f:	00 f8                	add    %bh,%al
   14931:	02 00                	add    (%rax),%al
   14933:	00 00                	add    %al,(%rax)
   14935:	00 00                	add    %al,(%rax)
   14937:	00 f8                	add    %bh,%al
   14939:	02 00                	add    (%rax),%al
   1493b:	00 00                	add    %al,(%rax)
   1493d:	00 00                	add    %al,(%rax)
   1493f:	00 f8                	add    %bh,%al
   14941:	02 00                	add    (%rax),%al
   14943:	00 00                	add    %al,(%rax)
   14945:	00 00                	add    %al,(%rax)
   14947:	00 f8                	add    %bh,%al
   14949:	02 00                	add    (%rax),%al
   1494b:	00 00                	add    %al,(%rax)
   1494d:	00 00                	add    %al,(%rax)
   1494f:	00 f8                	add    %bh,%al
   14951:	02 00                	add    (%rax),%al
   14953:	00 00                	add    %al,(%rax)
   14955:	00 00                	add    %al,(%rax)
   14957:	00 f8                	add    %bh,%al
   14959:	02 00                	add    (%rax),%al
   1495b:	00 00                	add    %al,(%rax)
   1495d:	00 00                	add    %al,(%rax)
   1495f:	00 f8                	add    %bh,%al
   14961:	02 00                	add    (%rax),%al
   14963:	00 00                	add    %al,(%rax)
   14965:	00 00                	add    %al,(%rax)
   14967:	00 f8                	add    %bh,%al
   14969:	02 00                	add    (%rax),%al
   1496b:	00 00                	add    %al,(%rax)
   1496d:	00 00                	add    %al,(%rax)
   1496f:	00 f8                	add    %bh,%al
   14971:	02 00                	add    (%rax),%al
   14973:	00 00                	add    %al,(%rax)
   14975:	00 00                	add    %al,(%rax)
   14977:	00 f8                	add    %bh,%al
   14979:	02 00                	add    (%rax),%al
   1497b:	00 00                	add    %al,(%rax)
   1497d:	00 00                	add    %al,(%rax)
   1497f:	00 f8                	add    %bh,%al
   14981:	02 00                	add    (%rax),%al
   14983:	00 00                	add    %al,(%rax)
   14985:	00 00                	add    %al,(%rax)
   14987:	00 f8                	add    %bh,%al
   14989:	02 00                	add    (%rax),%al
   1498b:	00 00                	add    %al,(%rax)
   1498d:	00 00                	add    %al,(%rax)
   1498f:	00 f8                	add    %bh,%al
   14991:	02 00                	add    (%rax),%al
   14993:	00 00                	add    %al,(%rax)
   14995:	00 00                	add    %al,(%rax)
   14997:	00 f8                	add    %bh,%al
   14999:	02 00                	add    (%rax),%al
   1499b:	00 00                	add    %al,(%rax)
   1499d:	00 00                	add    %al,(%rax)
   1499f:	00 f8                	add    %bh,%al
   149a1:	02 00                	add    (%rax),%al
   149a3:	00 00                	add    %al,(%rax)
   149a5:	00 00                	add    %al,(%rax)
   149a7:	00 f8                	add    %bh,%al
   149a9:	02 00                	add    (%rax),%al
   149ab:	00 00                	add    %al,(%rax)
   149ad:	00 00                	add    %al,(%rax)
   149af:	00 f8                	add    %bh,%al
   149b1:	02 00                	add    (%rax),%al
   149b3:	00 00                	add    %al,(%rax)
   149b5:	00 00                	add    %al,(%rax)
   149b7:	00 f8                	add    %bh,%al
   149b9:	02 00                	add    (%rax),%al
   149bb:	00 00                	add    %al,(%rax)
   149bd:	00 00                	add    %al,(%rax)
   149bf:	00 f8                	add    %bh,%al
   149c1:	02 00                	add    (%rax),%al
   149c3:	00 00                	add    %al,(%rax)
   149c5:	00 00                	add    %al,(%rax)
   149c7:	00 f8                	add    %bh,%al
   149c9:	02 00                	add    (%rax),%al
   149cb:	00 00                	add    %al,(%rax)
   149cd:	00 00                	add    %al,(%rax)
   149cf:	00 f8                	add    %bh,%al
   149d1:	02 00                	add    (%rax),%al
   149d3:	00 00                	add    %al,(%rax)
   149d5:	00 00                	add    %al,(%rax)
   149d7:	00 f8                	add    %bh,%al
   149d9:	02 00                	add    (%rax),%al
   149db:	00 00                	add    %al,(%rax)
   149dd:	00 00                	add    %al,(%rax)
   149df:	00 f8                	add    %bh,%al
   149e1:	02 00                	add    (%rax),%al
   149e3:	00 00                	add    %al,(%rax)
   149e5:	00 00                	add    %al,(%rax)
   149e7:	00 f8                	add    %bh,%al
   149e9:	02 00                	add    (%rax),%al
   149eb:	00 00                	add    %al,(%rax)
   149ed:	00 00                	add    %al,(%rax)
   149ef:	00 f8                	add    %bh,%al
   149f1:	02 00                	add    (%rax),%al
   149f3:	00 00                	add    %al,(%rax)
   149f5:	00 00                	add    %al,(%rax)
   149f7:	00 f8                	add    %bh,%al
   149f9:	02 00                	add    (%rax),%al
   149fb:	00 00                	add    %al,(%rax)
   149fd:	00 00                	add    %al,(%rax)
   149ff:	00 ff                	add    %bh,%bh
   14a01:	02 00                	add    (%rax),%al
   14a03:	00 00                	add    %al,(%rax)
   14a05:	00 00                	add    %al,(%rax)
   14a07:	00 ff                	add    %bh,%bh
   14a09:	02 00                	add    (%rax),%al
   14a0b:	00 00                	add    %al,(%rax)
   14a0d:	00 00                	add    %al,(%rax)
   14a0f:	00 ff                	add    %bh,%bh
   14a11:	02 00                	add    (%rax),%al
   14a13:	00 00                	add    %al,(%rax)
   14a15:	00 00                	add    %al,(%rax)
   14a17:	00 ff                	add    %bh,%bh
   14a19:	02 00                	add    (%rax),%al
   14a1b:	00 00                	add    %al,(%rax)
   14a1d:	00 00                	add    %al,(%rax)
   14a1f:	00 ff                	add    %bh,%bh
   14a21:	02 00                	add    (%rax),%al
   14a23:	00 00                	add    %al,(%rax)
   14a25:	00 00                	add    %al,(%rax)
   14a27:	00 ff                	add    %bh,%bh
   14a29:	02 00                	add    (%rax),%al
   14a2b:	00 00                	add    %al,(%rax)
   14a2d:	00 00                	add    %al,(%rax)
   14a2f:	00 ff                	add    %bh,%bh
   14a31:	02 00                	add    (%rax),%al
   14a33:	00 00                	add    %al,(%rax)
   14a35:	00 00                	add    %al,(%rax)
   14a37:	00 ff                	add    %bh,%bh
   14a39:	02 00                	add    (%rax),%al
   14a3b:	00 00                	add    %al,(%rax)
   14a3d:	00 00                	add    %al,(%rax)
   14a3f:	00 ff                	add    %bh,%bh
   14a41:	02 00                	add    (%rax),%al
   14a43:	00 00                	add    %al,(%rax)
   14a45:	00 00                	add    %al,(%rax)
   14a47:	00 ff                	add    %bh,%bh
   14a49:	02 00                	add    (%rax),%al
   14a4b:	00 00                	add    %al,(%rax)
   14a4d:	00 00                	add    %al,(%rax)
   14a4f:	00 ff                	add    %bh,%bh
   14a51:	02 00                	add    (%rax),%al
   14a53:	00 00                	add    %al,(%rax)
   14a55:	00 00                	add    %al,(%rax)
   14a57:	00 ff                	add    %bh,%bh
   14a59:	02 00                	add    (%rax),%al
   14a5b:	00 00                	add    %al,(%rax)
   14a5d:	00 00                	add    %al,(%rax)
   14a5f:	00 ff                	add    %bh,%bh
   14a61:	02 00                	add    (%rax),%al
   14a63:	00 00                	add    %al,(%rax)
   14a65:	00 00                	add    %al,(%rax)
   14a67:	00 ff                	add    %bh,%bh
   14a69:	02 00                	add    (%rax),%al
   14a6b:	00 00                	add    %al,(%rax)
   14a6d:	00 00                	add    %al,(%rax)
   14a6f:	00 ff                	add    %bh,%bh
   14a71:	02 00                	add    (%rax),%al
   14a73:	00 00                	add    %al,(%rax)
   14a75:	00 00                	add    %al,(%rax)
   14a77:	00 ff                	add    %bh,%bh
   14a79:	02 00                	add    (%rax),%al
   14a7b:	00 00                	add    %al,(%rax)
   14a7d:	00 00                	add    %al,(%rax)
   14a7f:	00 ff                	add    %bh,%bh
   14a81:	02 00                	add    (%rax),%al
   14a83:	00 00                	add    %al,(%rax)
   14a85:	00 00                	add    %al,(%rax)
   14a87:	00 ff                	add    %bh,%bh
   14a89:	02 00                	add    (%rax),%al
   14a8b:	00 00                	add    %al,(%rax)
   14a8d:	00 00                	add    %al,(%rax)
   14a8f:	00 ff                	add    %bh,%bh
   14a91:	02 00                	add    (%rax),%al
   14a93:	00 00                	add    %al,(%rax)
   14a95:	00 00                	add    %al,(%rax)
   14a97:	00 ff                	add    %bh,%bh
   14a99:	02 00                	add    (%rax),%al
   14a9b:	00 00                	add    %al,(%rax)
   14a9d:	00 00                	add    %al,(%rax)
   14a9f:	00 ff                	add    %bh,%bh
   14aa1:	02 00                	add    (%rax),%al
   14aa3:	00 00                	add    %al,(%rax)
   14aa5:	00 00                	add    %al,(%rax)
   14aa7:	00 ff                	add    %bh,%bh
   14aa9:	02 00                	add    (%rax),%al
   14aab:	00 00                	add    %al,(%rax)
   14aad:	00 00                	add    %al,(%rax)
   14aaf:	00 ff                	add    %bh,%bh
   14ab1:	02 00                	add    (%rax),%al
   14ab3:	00 00                	add    %al,(%rax)
   14ab5:	00 00                	add    %al,(%rax)
   14ab7:	00 ff                	add    %bh,%bh
   14ab9:	02 00                	add    (%rax),%al
   14abb:	00 00                	add    %al,(%rax)
   14abd:	00 00                	add    %al,(%rax)
   14abf:	00 ff                	add    %bh,%bh
   14ac1:	02 00                	add    (%rax),%al
   14ac3:	00 00                	add    %al,(%rax)
   14ac5:	00 00                	add    %al,(%rax)
   14ac7:	00 ff                	add    %bh,%bh
   14ac9:	02 00                	add    (%rax),%al
   14acb:	00 00                	add    %al,(%rax)
   14acd:	00 00                	add    %al,(%rax)
   14acf:	00 ff                	add    %bh,%bh
   14ad1:	02 00                	add    (%rax),%al
   14ad3:	00 00                	add    %al,(%rax)
   14ad5:	00 00                	add    %al,(%rax)
   14ad7:	00 ff                	add    %bh,%bh
   14ad9:	02 00                	add    (%rax),%al
   14adb:	00 00                	add    %al,(%rax)
   14add:	00 00                	add    %al,(%rax)
   14adf:	00 ff                	add    %bh,%bh
   14ae1:	02 00                	add    (%rax),%al
   14ae3:	00 00                	add    %al,(%rax)
   14ae5:	00 00                	add    %al,(%rax)
   14ae7:	00 ff                	add    %bh,%bh
   14ae9:	02 00                	add    (%rax),%al
   14aeb:	00 00                	add    %al,(%rax)
   14aed:	00 00                	add    %al,(%rax)
   14aef:	00 ff                	add    %bh,%bh
   14af1:	02 00                	add    (%rax),%al
   14af3:	00 00                	add    %al,(%rax)
   14af5:	00 00                	add    %al,(%rax)
   14af7:	00 ff                	add    %bh,%bh
   14af9:	02 00                	add    (%rax),%al
   14afb:	00 00                	add    %al,(%rax)
   14afd:	00 00                	add    %al,(%rax)
   14aff:	00 ff                	add    %bh,%bh
   14b01:	02 00                	add    (%rax),%al
   14b03:	00 00                	add    %al,(%rax)
   14b05:	00 00                	add    %al,(%rax)
   14b07:	00 ff                	add    %bh,%bh
   14b09:	02 00                	add    (%rax),%al
   14b0b:	00 00                	add    %al,(%rax)
   14b0d:	00 00                	add    %al,(%rax)
   14b0f:	00 ff                	add    %bh,%bh
   14b11:	02 00                	add    (%rax),%al
   14b13:	00 00                	add    %al,(%rax)
   14b15:	00 00                	add    %al,(%rax)
   14b17:	00 ff                	add    %bh,%bh
   14b19:	02 00                	add    (%rax),%al
   14b1b:	00 00                	add    %al,(%rax)
   14b1d:	00 00                	add    %al,(%rax)
   14b1f:	00 ff                	add    %bh,%bh
   14b21:	02 00                	add    (%rax),%al
   14b23:	00 00                	add    %al,(%rax)
   14b25:	00 00                	add    %al,(%rax)
   14b27:	00 ff                	add    %bh,%bh
   14b29:	02 00                	add    (%rax),%al
   14b2b:	00 00                	add    %al,(%rax)
   14b2d:	00 00                	add    %al,(%rax)
   14b2f:	00 ff                	add    %bh,%bh
   14b31:	02 00                	add    (%rax),%al
   14b33:	00 00                	add    %al,(%rax)
   14b35:	00 00                	add    %al,(%rax)
   14b37:	00 ff                	add    %bh,%bh
   14b39:	02 00                	add    (%rax),%al
   14b3b:	00 00                	add    %al,(%rax)
   14b3d:	00 00                	add    %al,(%rax)
   14b3f:	00 ff                	add    %bh,%bh
   14b41:	02 00                	add    (%rax),%al
   14b43:	00 00                	add    %al,(%rax)
   14b45:	00 00                	add    %al,(%rax)
   14b47:	00 ff                	add    %bh,%bh
   14b49:	02 00                	add    (%rax),%al
   14b4b:	00 00                	add    %al,(%rax)
   14b4d:	00 00                	add    %al,(%rax)
   14b4f:	00 ff                	add    %bh,%bh
   14b51:	02 00                	add    (%rax),%al
   14b53:	00 00                	add    %al,(%rax)
   14b55:	00 00                	add    %al,(%rax)
   14b57:	00 ff                	add    %bh,%bh
   14b59:	02 00                	add    (%rax),%al
   14b5b:	00 00                	add    %al,(%rax)
   14b5d:	00 00                	add    %al,(%rax)
   14b5f:	00 ff                	add    %bh,%bh
   14b61:	02 00                	add    (%rax),%al
   14b63:	00 00                	add    %al,(%rax)
   14b65:	00 00                	add    %al,(%rax)
   14b67:	00 ff                	add    %bh,%bh
   14b69:	02 00                	add    (%rax),%al
   14b6b:	00 00                	add    %al,(%rax)
   14b6d:	00 00                	add    %al,(%rax)
   14b6f:	00 ff                	add    %bh,%bh
   14b71:	02 00                	add    (%rax),%al
   14b73:	00 00                	add    %al,(%rax)
   14b75:	00 00                	add    %al,(%rax)
   14b77:	00 ff                	add    %bh,%bh
   14b79:	02 00                	add    (%rax),%al
   14b7b:	00 00                	add    %al,(%rax)
   14b7d:	00 00                	add    %al,(%rax)
   14b7f:	00 ff                	add    %bh,%bh
   14b81:	02 00                	add    (%rax),%al
   14b83:	00 00                	add    %al,(%rax)
   14b85:	00 00                	add    %al,(%rax)
   14b87:	00 ff                	add    %bh,%bh
   14b89:	02 00                	add    (%rax),%al
   14b8b:	00 00                	add    %al,(%rax)
   14b8d:	00 00                	add    %al,(%rax)
   14b8f:	00 ff                	add    %bh,%bh
   14b91:	02 00                	add    (%rax),%al
   14b93:	00 00                	add    %al,(%rax)
   14b95:	00 00                	add    %al,(%rax)
   14b97:	00 ff                	add    %bh,%bh
   14b99:	02 00                	add    (%rax),%al
   14b9b:	00 00                	add    %al,(%rax)
   14b9d:	00 00                	add    %al,(%rax)
   14b9f:	00 ff                	add    %bh,%bh
   14ba1:	02 00                	add    (%rax),%al
   14ba3:	00 00                	add    %al,(%rax)
   14ba5:	00 00                	add    %al,(%rax)
   14ba7:	00 ff                	add    %bh,%bh
   14ba9:	02 00                	add    (%rax),%al
   14bab:	00 00                	add    %al,(%rax)
   14bad:	00 00                	add    %al,(%rax)
   14baf:	00 ff                	add    %bh,%bh
   14bb1:	02 00                	add    (%rax),%al
   14bb3:	00 00                	add    %al,(%rax)
   14bb5:	00 00                	add    %al,(%rax)
   14bb7:	00 ff                	add    %bh,%bh
   14bb9:	02 00                	add    (%rax),%al
   14bbb:	00 00                	add    %al,(%rax)
   14bbd:	00 00                	add    %al,(%rax)
   14bbf:	00 ff                	add    %bh,%bh
   14bc1:	02 00                	add    (%rax),%al
   14bc3:	00 00                	add    %al,(%rax)
   14bc5:	00 00                	add    %al,(%rax)
   14bc7:	00 ff                	add    %bh,%bh
   14bc9:	02 00                	add    (%rax),%al
   14bcb:	00 00                	add    %al,(%rax)
   14bcd:	00 00                	add    %al,(%rax)
   14bcf:	00 ff                	add    %bh,%bh
   14bd1:	02 00                	add    (%rax),%al
   14bd3:	00 00                	add    %al,(%rax)
   14bd5:	00 00                	add    %al,(%rax)
   14bd7:	00 ff                	add    %bh,%bh
   14bd9:	02 00                	add    (%rax),%al
   14bdb:	00 00                	add    %al,(%rax)
   14bdd:	00 00                	add    %al,(%rax)
   14bdf:	00 ff                	add    %bh,%bh
   14be1:	02 00                	add    (%rax),%al
   14be3:	00 00                	add    %al,(%rax)
   14be5:	00 00                	add    %al,(%rax)
   14be7:	00 ff                	add    %bh,%bh
   14be9:	02 00                	add    (%rax),%al
   14beb:	00 00                	add    %al,(%rax)
   14bed:	00 00                	add    %al,(%rax)
   14bef:	00 ff                	add    %bh,%bh
   14bf1:	02 00                	add    (%rax),%al
   14bf3:	00 00                	add    %al,(%rax)
   14bf5:	00 00                	add    %al,(%rax)
   14bf7:	00 ff                	add    %bh,%bh
   14bf9:	02 00                	add    (%rax),%al
   14bfb:	00 00                	add    %al,(%rax)
   14bfd:	00 00                	add    %al,(%rax)
   14bff:	00 06                	add    %al,(%rsi)
   14c01:	03 00                	add    (%rax),%eax
   14c03:	00 00                	add    %al,(%rax)
   14c05:	00 00                	add    %al,(%rax)
   14c07:	00 06                	add    %al,(%rsi)
   14c09:	03 00                	add    (%rax),%eax
   14c0b:	00 00                	add    %al,(%rax)
   14c0d:	00 00                	add    %al,(%rax)
   14c0f:	00 06                	add    %al,(%rsi)
   14c11:	03 00                	add    (%rax),%eax
   14c13:	00 00                	add    %al,(%rax)
   14c15:	00 00                	add    %al,(%rax)
   14c17:	00 06                	add    %al,(%rsi)
   14c19:	03 00                	add    (%rax),%eax
   14c1b:	00 00                	add    %al,(%rax)
   14c1d:	00 00                	add    %al,(%rax)
   14c1f:	00 06                	add    %al,(%rsi)
   14c21:	03 00                	add    (%rax),%eax
   14c23:	00 00                	add    %al,(%rax)
   14c25:	00 00                	add    %al,(%rax)
   14c27:	00 06                	add    %al,(%rsi)
   14c29:	03 00                	add    (%rax),%eax
   14c2b:	00 00                	add    %al,(%rax)
   14c2d:	00 00                	add    %al,(%rax)
   14c2f:	00 06                	add    %al,(%rsi)
   14c31:	03 00                	add    (%rax),%eax
   14c33:	00 00                	add    %al,(%rax)
   14c35:	00 00                	add    %al,(%rax)
   14c37:	00 06                	add    %al,(%rsi)
   14c39:	03 00                	add    (%rax),%eax
   14c3b:	00 00                	add    %al,(%rax)
   14c3d:	00 00                	add    %al,(%rax)
   14c3f:	00 06                	add    %al,(%rsi)
   14c41:	03 00                	add    (%rax),%eax
   14c43:	00 00                	add    %al,(%rax)
   14c45:	00 00                	add    %al,(%rax)
   14c47:	00 06                	add    %al,(%rsi)
   14c49:	03 00                	add    (%rax),%eax
   14c4b:	00 00                	add    %al,(%rax)
   14c4d:	00 00                	add    %al,(%rax)
   14c4f:	00 06                	add    %al,(%rsi)
   14c51:	03 00                	add    (%rax),%eax
   14c53:	00 00                	add    %al,(%rax)
   14c55:	00 00                	add    %al,(%rax)
   14c57:	00 06                	add    %al,(%rsi)
   14c59:	03 00                	add    (%rax),%eax
   14c5b:	00 00                	add    %al,(%rax)
   14c5d:	00 00                	add    %al,(%rax)
   14c5f:	00 06                	add    %al,(%rsi)
   14c61:	03 00                	add    (%rax),%eax
   14c63:	00 00                	add    %al,(%rax)
   14c65:	00 00                	add    %al,(%rax)
   14c67:	00 06                	add    %al,(%rsi)
   14c69:	03 00                	add    (%rax),%eax
   14c6b:	00 00                	add    %al,(%rax)
   14c6d:	00 00                	add    %al,(%rax)
   14c6f:	00 06                	add    %al,(%rsi)
   14c71:	03 00                	add    (%rax),%eax
   14c73:	00 00                	add    %al,(%rax)
   14c75:	00 00                	add    %al,(%rax)
   14c77:	00 06                	add    %al,(%rsi)
   14c79:	03 00                	add    (%rax),%eax
   14c7b:	00 00                	add    %al,(%rax)
   14c7d:	00 00                	add    %al,(%rax)
   14c7f:	00 06                	add    %al,(%rsi)
   14c81:	03 00                	add    (%rax),%eax
   14c83:	00 00                	add    %al,(%rax)
   14c85:	00 00                	add    %al,(%rax)
   14c87:	00 06                	add    %al,(%rsi)
   14c89:	03 00                	add    (%rax),%eax
   14c8b:	00 00                	add    %al,(%rax)
   14c8d:	00 00                	add    %al,(%rax)
   14c8f:	00 06                	add    %al,(%rsi)
   14c91:	03 00                	add    (%rax),%eax
   14c93:	00 00                	add    %al,(%rax)
   14c95:	00 00                	add    %al,(%rax)
   14c97:	00 06                	add    %al,(%rsi)
   14c99:	03 00                	add    (%rax),%eax
   14c9b:	00 00                	add    %al,(%rax)
   14c9d:	00 00                	add    %al,(%rax)
   14c9f:	00 06                	add    %al,(%rsi)
   14ca1:	03 00                	add    (%rax),%eax
   14ca3:	00 00                	add    %al,(%rax)
   14ca5:	00 00                	add    %al,(%rax)
   14ca7:	00 06                	add    %al,(%rsi)
   14ca9:	03 00                	add    (%rax),%eax
   14cab:	00 00                	add    %al,(%rax)
   14cad:	00 00                	add    %al,(%rax)
   14caf:	00 06                	add    %al,(%rsi)
   14cb1:	03 00                	add    (%rax),%eax
   14cb3:	00 00                	add    %al,(%rax)
   14cb5:	00 00                	add    %al,(%rax)
   14cb7:	00 06                	add    %al,(%rsi)
   14cb9:	03 00                	add    (%rax),%eax
   14cbb:	00 00                	add    %al,(%rax)
   14cbd:	00 00                	add    %al,(%rax)
   14cbf:	00 06                	add    %al,(%rsi)
   14cc1:	03 00                	add    (%rax),%eax
   14cc3:	00 00                	add    %al,(%rax)
   14cc5:	00 00                	add    %al,(%rax)
   14cc7:	00 06                	add    %al,(%rsi)
   14cc9:	03 00                	add    (%rax),%eax
   14ccb:	00 00                	add    %al,(%rax)
   14ccd:	00 00                	add    %al,(%rax)
   14ccf:	00 06                	add    %al,(%rsi)
   14cd1:	03 00                	add    (%rax),%eax
   14cd3:	00 00                	add    %al,(%rax)
   14cd5:	00 00                	add    %al,(%rax)
   14cd7:	00 06                	add    %al,(%rsi)
   14cd9:	03 00                	add    (%rax),%eax
   14cdb:	00 00                	add    %al,(%rax)
   14cdd:	00 00                	add    %al,(%rax)
   14cdf:	00 06                	add    %al,(%rsi)
   14ce1:	03 00                	add    (%rax),%eax
   14ce3:	00 00                	add    %al,(%rax)
   14ce5:	00 00                	add    %al,(%rax)
   14ce7:	00 06                	add    %al,(%rsi)
   14ce9:	03 00                	add    (%rax),%eax
   14ceb:	00 00                	add    %al,(%rax)
   14ced:	00 00                	add    %al,(%rax)
   14cef:	00 06                	add    %al,(%rsi)
   14cf1:	03 00                	add    (%rax),%eax
   14cf3:	00 00                	add    %al,(%rax)
   14cf5:	00 00                	add    %al,(%rax)
   14cf7:	00 06                	add    %al,(%rsi)
   14cf9:	03 00                	add    (%rax),%eax
   14cfb:	00 00                	add    %al,(%rax)
   14cfd:	00 00                	add    %al,(%rax)
   14cff:	00 06                	add    %al,(%rsi)
   14d01:	03 00                	add    (%rax),%eax
   14d03:	00 00                	add    %al,(%rax)
   14d05:	00 00                	add    %al,(%rax)
   14d07:	00 06                	add    %al,(%rsi)
   14d09:	03 00                	add    (%rax),%eax
   14d0b:	00 00                	add    %al,(%rax)
   14d0d:	00 00                	add    %al,(%rax)
   14d0f:	00 06                	add    %al,(%rsi)
   14d11:	03 00                	add    (%rax),%eax
   14d13:	00 00                	add    %al,(%rax)
   14d15:	00 00                	add    %al,(%rax)
   14d17:	00 06                	add    %al,(%rsi)
   14d19:	03 00                	add    (%rax),%eax
   14d1b:	00 00                	add    %al,(%rax)
   14d1d:	00 00                	add    %al,(%rax)
   14d1f:	00 06                	add    %al,(%rsi)
   14d21:	03 00                	add    (%rax),%eax
   14d23:	00 00                	add    %al,(%rax)
   14d25:	00 00                	add    %al,(%rax)
   14d27:	00 06                	add    %al,(%rsi)
   14d29:	03 00                	add    (%rax),%eax
   14d2b:	00 00                	add    %al,(%rax)
   14d2d:	00 00                	add    %al,(%rax)
   14d2f:	00 06                	add    %al,(%rsi)
   14d31:	03 00                	add    (%rax),%eax
   14d33:	00 00                	add    %al,(%rax)
   14d35:	00 00                	add    %al,(%rax)
   14d37:	00 06                	add    %al,(%rsi)
   14d39:	03 00                	add    (%rax),%eax
   14d3b:	00 00                	add    %al,(%rax)
   14d3d:	00 00                	add    %al,(%rax)
   14d3f:	00 06                	add    %al,(%rsi)
   14d41:	03 00                	add    (%rax),%eax
   14d43:	00 00                	add    %al,(%rax)
   14d45:	00 00                	add    %al,(%rax)
   14d47:	00 06                	add    %al,(%rsi)
   14d49:	03 00                	add    (%rax),%eax
   14d4b:	00 00                	add    %al,(%rax)
   14d4d:	00 00                	add    %al,(%rax)
   14d4f:	00 06                	add    %al,(%rsi)
   14d51:	03 00                	add    (%rax),%eax
   14d53:	00 00                	add    %al,(%rax)
   14d55:	00 00                	add    %al,(%rax)
   14d57:	00 06                	add    %al,(%rsi)
   14d59:	03 00                	add    (%rax),%eax
   14d5b:	00 00                	add    %al,(%rax)
   14d5d:	00 00                	add    %al,(%rax)
   14d5f:	00 06                	add    %al,(%rsi)
   14d61:	03 00                	add    (%rax),%eax
   14d63:	00 00                	add    %al,(%rax)
   14d65:	00 00                	add    %al,(%rax)
   14d67:	00 06                	add    %al,(%rsi)
   14d69:	03 00                	add    (%rax),%eax
   14d6b:	00 00                	add    %al,(%rax)
   14d6d:	00 00                	add    %al,(%rax)
   14d6f:	00 06                	add    %al,(%rsi)
   14d71:	03 00                	add    (%rax),%eax
   14d73:	00 00                	add    %al,(%rax)
   14d75:	00 00                	add    %al,(%rax)
   14d77:	00 06                	add    %al,(%rsi)
   14d79:	03 00                	add    (%rax),%eax
   14d7b:	00 00                	add    %al,(%rax)
   14d7d:	00 00                	add    %al,(%rax)
   14d7f:	00 06                	add    %al,(%rsi)
   14d81:	03 00                	add    (%rax),%eax
   14d83:	00 00                	add    %al,(%rax)
   14d85:	00 00                	add    %al,(%rax)
   14d87:	00 06                	add    %al,(%rsi)
   14d89:	03 00                	add    (%rax),%eax
   14d8b:	00 00                	add    %al,(%rax)
   14d8d:	00 00                	add    %al,(%rax)
   14d8f:	00 06                	add    %al,(%rsi)
   14d91:	03 00                	add    (%rax),%eax
   14d93:	00 00                	add    %al,(%rax)
   14d95:	00 00                	add    %al,(%rax)
   14d97:	00 06                	add    %al,(%rsi)
   14d99:	03 00                	add    (%rax),%eax
   14d9b:	00 00                	add    %al,(%rax)
   14d9d:	00 00                	add    %al,(%rax)
   14d9f:	00 06                	add    %al,(%rsi)
   14da1:	03 00                	add    (%rax),%eax
   14da3:	00 00                	add    %al,(%rax)
   14da5:	00 00                	add    %al,(%rax)
   14da7:	00 06                	add    %al,(%rsi)
   14da9:	03 00                	add    (%rax),%eax
   14dab:	00 00                	add    %al,(%rax)
   14dad:	00 00                	add    %al,(%rax)
   14daf:	00 06                	add    %al,(%rsi)
   14db1:	03 00                	add    (%rax),%eax
   14db3:	00 00                	add    %al,(%rax)
   14db5:	00 00                	add    %al,(%rax)
   14db7:	00 06                	add    %al,(%rsi)
   14db9:	03 00                	add    (%rax),%eax
   14dbb:	00 00                	add    %al,(%rax)
   14dbd:	00 00                	add    %al,(%rax)
   14dbf:	00 06                	add    %al,(%rsi)
   14dc1:	03 00                	add    (%rax),%eax
   14dc3:	00 00                	add    %al,(%rax)
   14dc5:	00 00                	add    %al,(%rax)
   14dc7:	00 06                	add    %al,(%rsi)
   14dc9:	03 00                	add    (%rax),%eax
   14dcb:	00 00                	add    %al,(%rax)
   14dcd:	00 00                	add    %al,(%rax)
   14dcf:	00 06                	add    %al,(%rsi)
   14dd1:	03 00                	add    (%rax),%eax
   14dd3:	00 00                	add    %al,(%rax)
   14dd5:	00 00                	add    %al,(%rax)
   14dd7:	00 06                	add    %al,(%rsi)
   14dd9:	03 00                	add    (%rax),%eax
   14ddb:	00 00                	add    %al,(%rax)
   14ddd:	00 00                	add    %al,(%rax)
   14ddf:	00 06                	add    %al,(%rsi)
   14de1:	03 00                	add    (%rax),%eax
   14de3:	00 00                	add    %al,(%rax)
   14de5:	00 00                	add    %al,(%rax)
   14de7:	00 06                	add    %al,(%rsi)
   14de9:	03 00                	add    (%rax),%eax
   14deb:	00 00                	add    %al,(%rax)
   14ded:	00 00                	add    %al,(%rax)
   14def:	00 06                	add    %al,(%rsi)
   14df1:	03 00                	add    (%rax),%eax
   14df3:	00 00                	add    %al,(%rax)
   14df5:	00 00                	add    %al,(%rax)
   14df7:	00 06                	add    %al,(%rsi)
   14df9:	03 00                	add    (%rax),%eax
   14dfb:	00 00                	add    %al,(%rax)
   14dfd:	00 00                	add    %al,(%rax)
   14dff:	00 b9 12 00 00 00    	add    %bh,0x12(%rcx)
   14e05:	00 00                	add    %al,(%rax)
   14e07:	00 c1                	add    %al,%cl
   14e09:	12 00                	adc    (%rax),%al
   14e0b:	00 00                	add    %al,(%rax)
   14e0d:	00 00                	add    %al,(%rax)
   14e0f:	00 b4 12 00 00 00 00 	add    %dh,0x0(%rdx,%rdx,1)
   14e16:	00 00                	add    %al,(%rax)
   14e18:	ab                   	stos   %eax,%es:(%rdi)
   14e19:	12 00                	adc    (%rax),%al
   14e1b:	00 00                	add    %al,(%rax)
   14e1d:	00 00                	add    %al,(%rax)
   14e1f:	00 9e 12 00 00 00    	add    %bl,0x12(%rsi)
   14e25:	00 00                	add    %al,(%rax)
   14e27:	00 96 12 00 00 00    	add    %dl,0x12(%rsi)
   14e2d:	00 00                	add    %al,(%rax)
   14e2f:	00 96 12 00 00 00    	add    %dl,0x12(%rsi)
   14e35:	00 00                	add    %al,(%rax)
   14e37:	00 96 12 00 00 00    	add    %dl,0x12(%rsi)
   14e3d:	00 00                	add    %al,(%rax)
   14e3f:	00 8a 12 00 00 00    	add    %cl,0x12(%rdx)
   14e45:	00 00                	add    %al,(%rax)
   14e47:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   14e4d:	00 00                	add    %al,(%rax)
   14e4f:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   14e55:	00 00                	add    %al,(%rax)
   14e57:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   14e5d:	00 00                	add    %al,(%rax)
   14e5f:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   14e65:	00 00                	add    %al,(%rax)
   14e67:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   14e6d:	00 00                	add    %al,(%rax)
   14e6f:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   14e75:	00 00                	add    %al,(%rax)
   14e77:	00 82 12 00 00 00    	add    %al,0x12(%rdx)
   14e7d:	00 00                	add    %al,(%rax)
   14e7f:	00 76 12             	add    %dh,0x12(%rsi)
   14e82:	00 00                	add    %al,(%rax)
   14e84:	00 00                	add    %al,(%rax)
   14e86:	00 00                	add    %al,(%rax)
   14e88:	6c                   	insb   (%dx),%es:(%rdi)
   14e89:	12 00                	adc    (%rax),%al
   14e8b:	00 00                	add    %al,(%rax)
   14e8d:	00 00                	add    %al,(%rax)
   14e8f:	00 6c 12 00          	add    %ch,0x0(%rdx,%rdx,1)
   14e93:	00 00                	add    %al,(%rax)
   14e95:	00 00                	add    %al,(%rax)
   14e97:	00 6c 12 00          	add    %ch,0x0(%rdx,%rdx,1)
   14e9b:	00 00                	add    %al,(%rax)
   14e9d:	00 00                	add    %al,(%rax)
   14e9f:	00 6c 12 00          	add    %ch,0x0(%rdx,%rdx,1)
   14ea3:	00 00                	add    %al,(%rax)
   14ea5:	00 00                	add    %al,(%rax)
   14ea7:	00 6c 12 00          	add    %ch,0x0(%rdx,%rdx,1)
   14eab:	00 00                	add    %al,(%rax)
   14ead:	00 00                	add    %al,(%rax)
   14eaf:	00 6c 12 00          	add    %ch,0x0(%rdx,%rdx,1)
   14eb3:	00 00                	add    %al,(%rax)
   14eb5:	00 00                	add    %al,(%rax)
   14eb7:	00 6c 12 00          	add    %ch,0x0(%rdx,%rdx,1)
   14ebb:	00 00                	add    %al,(%rax)
   14ebd:	00 00                	add    %al,(%rax)
   14ebf:	00 6c 12 00          	add    %ch,0x0(%rdx,%rdx,1)
   14ec3:	00 00                	add    %al,(%rax)
   14ec5:	00 00                	add    %al,(%rax)
   14ec7:	00 6c 12 00          	add    %ch,0x0(%rdx,%rdx,1)
   14ecb:	00 00                	add    %al,(%rax)
   14ecd:	00 00                	add    %al,(%rax)
   14ecf:	00 6c 12 00          	add    %ch,0x0(%rdx,%rdx,1)
   14ed3:	00 00                	add    %al,(%rax)
   14ed5:	00 00                	add    %al,(%rax)
   14ed7:	00 6c 12 00          	add    %ch,0x0(%rdx,%rdx,1)
   14edb:	00 00                	add    %al,(%rax)
   14edd:	00 00                	add    %al,(%rax)
   14edf:	00 6c 12 00          	add    %ch,0x0(%rdx,%rdx,1)
   14ee3:	00 00                	add    %al,(%rax)
   14ee5:	00 00                	add    %al,(%rax)
   14ee7:	00 6c 12 00          	add    %ch,0x0(%rdx,%rdx,1)
   14eeb:	00 00                	add    %al,(%rax)
   14eed:	00 00                	add    %al,(%rax)
   14eef:	00 6c 12 00          	add    %ch,0x0(%rdx,%rdx,1)
   14ef3:	00 00                	add    %al,(%rax)
   14ef5:	00 00                	add    %al,(%rax)
   14ef7:	00 6c 12 00          	add    %ch,0x0(%rdx,%rdx,1)
   14efb:	00 00                	add    %al,(%rax)
   14efd:	00 00                	add    %al,(%rax)
   14eff:	00 5c 12 00          	add    %bl,0x0(%rdx,%rdx,1)
   14f03:	00 00                	add    %al,(%rax)
   14f05:	00 00                	add    %al,(%rax)
   14f07:	00 52 12             	add    %dl,0x12(%rdx)
   14f0a:	00 00                	add    %al,(%rax)
   14f0c:	00 00                	add    %al,(%rax)
   14f0e:	00 00                	add    %al,(%rax)
   14f10:	52                   	push   %rdx
   14f11:	12 00                	adc    (%rax),%al
   14f13:	00 00                	add    %al,(%rax)
   14f15:	00 00                	add    %al,(%rax)
   14f17:	00 52 12             	add    %dl,0x12(%rdx)
   14f1a:	00 00                	add    %al,(%rax)
   14f1c:	00 00                	add    %al,(%rax)
   14f1e:	00 00                	add    %al,(%rax)
   14f20:	52                   	push   %rdx
   14f21:	12 00                	adc    (%rax),%al
   14f23:	00 00                	add    %al,(%rax)
   14f25:	00 00                	add    %al,(%rax)
   14f27:	00 52 12             	add    %dl,0x12(%rdx)
   14f2a:	00 00                	add    %al,(%rax)
   14f2c:	00 00                	add    %al,(%rax)
   14f2e:	00 00                	add    %al,(%rax)
   14f30:	52                   	push   %rdx
   14f31:	12 00                	adc    (%rax),%al
   14f33:	00 00                	add    %al,(%rax)
   14f35:	00 00                	add    %al,(%rax)
   14f37:	00 52 12             	add    %dl,0x12(%rdx)
   14f3a:	00 00                	add    %al,(%rax)
   14f3c:	00 00                	add    %al,(%rax)
   14f3e:	00 00                	add    %al,(%rax)
   14f40:	52                   	push   %rdx
   14f41:	12 00                	adc    (%rax),%al
   14f43:	00 00                	add    %al,(%rax)
   14f45:	00 00                	add    %al,(%rax)
   14f47:	00 52 12             	add    %dl,0x12(%rdx)
   14f4a:	00 00                	add    %al,(%rax)
   14f4c:	00 00                	add    %al,(%rax)
   14f4e:	00 00                	add    %al,(%rax)
   14f50:	52                   	push   %rdx
   14f51:	12 00                	adc    (%rax),%al
   14f53:	00 00                	add    %al,(%rax)
   14f55:	00 00                	add    %al,(%rax)
   14f57:	00 52 12             	add    %dl,0x12(%rdx)
   14f5a:	00 00                	add    %al,(%rax)
   14f5c:	00 00                	add    %al,(%rax)
   14f5e:	00 00                	add    %al,(%rax)
   14f60:	52                   	push   %rdx
   14f61:	12 00                	adc    (%rax),%al
   14f63:	00 00                	add    %al,(%rax)
   14f65:	00 00                	add    %al,(%rax)
   14f67:	00 52 12             	add    %dl,0x12(%rdx)
   14f6a:	00 00                	add    %al,(%rax)
   14f6c:	00 00                	add    %al,(%rax)
   14f6e:	00 00                	add    %al,(%rax)
   14f70:	52                   	push   %rdx
   14f71:	12 00                	adc    (%rax),%al
   14f73:	00 00                	add    %al,(%rax)
   14f75:	00 00                	add    %al,(%rax)
   14f77:	00 52 12             	add    %dl,0x12(%rdx)
   14f7a:	00 00                	add    %al,(%rax)
   14f7c:	00 00                	add    %al,(%rax)
   14f7e:	00 00                	add    %al,(%rax)
   14f80:	52                   	push   %rdx
   14f81:	12 00                	adc    (%rax),%al
   14f83:	00 00                	add    %al,(%rax)
   14f85:	00 00                	add    %al,(%rax)
   14f87:	00 52 12             	add    %dl,0x12(%rdx)
   14f8a:	00 00                	add    %al,(%rax)
   14f8c:	00 00                	add    %al,(%rax)
   14f8e:	00 00                	add    %al,(%rax)
   14f90:	52                   	push   %rdx
   14f91:	12 00                	adc    (%rax),%al
   14f93:	00 00                	add    %al,(%rax)
   14f95:	00 00                	add    %al,(%rax)
   14f97:	00 52 12             	add    %dl,0x12(%rdx)
   14f9a:	00 00                	add    %al,(%rax)
   14f9c:	00 00                	add    %al,(%rax)
   14f9e:	00 00                	add    %al,(%rax)
   14fa0:	52                   	push   %rdx
   14fa1:	12 00                	adc    (%rax),%al
   14fa3:	00 00                	add    %al,(%rax)
   14fa5:	00 00                	add    %al,(%rax)
   14fa7:	00 52 12             	add    %dl,0x12(%rdx)
   14faa:	00 00                	add    %al,(%rax)
   14fac:	00 00                	add    %al,(%rax)
   14fae:	00 00                	add    %al,(%rax)
   14fb0:	52                   	push   %rdx
   14fb1:	12 00                	adc    (%rax),%al
   14fb3:	00 00                	add    %al,(%rax)
   14fb5:	00 00                	add    %al,(%rax)
   14fb7:	00 52 12             	add    %dl,0x12(%rdx)
   14fba:	00 00                	add    %al,(%rax)
   14fbc:	00 00                	add    %al,(%rax)
   14fbe:	00 00                	add    %al,(%rax)
   14fc0:	52                   	push   %rdx
   14fc1:	12 00                	adc    (%rax),%al
   14fc3:	00 00                	add    %al,(%rax)
   14fc5:	00 00                	add    %al,(%rax)
   14fc7:	00 52 12             	add    %dl,0x12(%rdx)
   14fca:	00 00                	add    %al,(%rax)
   14fcc:	00 00                	add    %al,(%rax)
   14fce:	00 00                	add    %al,(%rax)
   14fd0:	52                   	push   %rdx
   14fd1:	12 00                	adc    (%rax),%al
   14fd3:	00 00                	add    %al,(%rax)
   14fd5:	00 00                	add    %al,(%rax)
   14fd7:	00 52 12             	add    %dl,0x12(%rdx)
   14fda:	00 00                	add    %al,(%rax)
   14fdc:	00 00                	add    %al,(%rax)
   14fde:	00 00                	add    %al,(%rax)
   14fe0:	52                   	push   %rdx
   14fe1:	12 00                	adc    (%rax),%al
   14fe3:	00 00                	add    %al,(%rax)
   14fe5:	00 00                	add    %al,(%rax)
   14fe7:	00 52 12             	add    %dl,0x12(%rdx)
   14fea:	00 00                	add    %al,(%rax)
   14fec:	00 00                	add    %al,(%rax)
   14fee:	00 00                	add    %al,(%rax)
   14ff0:	52                   	push   %rdx
   14ff1:	12 00                	adc    (%rax),%al
   14ff3:	00 00                	add    %al,(%rax)
   14ff5:	00 00                	add    %al,(%rax)
   14ff7:	00 52 12             	add    %dl,0x12(%rdx)
   14ffa:	00 00                	add    %al,(%rax)
   14ffc:	00 00                	add    %al,(%rax)
   14ffe:	00 00                	add    %al,(%rax)
   15000:	42 12 00             	rex.X adc (%rax),%al
   15003:	00 00                	add    %al,(%rax)
   15005:	00 00                	add    %al,(%rax)
   15007:	00 37                	add    %dh,(%rdi)
   15009:	12 00                	adc    (%rax),%al
   1500b:	00 00                	add    %al,(%rax)
   1500d:	00 00                	add    %al,(%rax)
   1500f:	00 37                	add    %dh,(%rdi)
   15011:	12 00                	adc    (%rax),%al
   15013:	00 00                	add    %al,(%rax)
   15015:	00 00                	add    %al,(%rax)
   15017:	00 37                	add    %dh,(%rdi)
   15019:	12 00                	adc    (%rax),%al
   1501b:	00 00                	add    %al,(%rax)
   1501d:	00 00                	add    %al,(%rax)
   1501f:	00 37                	add    %dh,(%rdi)
   15021:	12 00                	adc    (%rax),%al
   15023:	00 00                	add    %al,(%rax)
   15025:	00 00                	add    %al,(%rax)
   15027:	00 37                	add    %dh,(%rdi)
   15029:	12 00                	adc    (%rax),%al
   1502b:	00 00                	add    %al,(%rax)
   1502d:	00 00                	add    %al,(%rax)
   1502f:	00 37                	add    %dh,(%rdi)
   15031:	12 00                	adc    (%rax),%al
   15033:	00 00                	add    %al,(%rax)
   15035:	00 00                	add    %al,(%rax)
   15037:	00 37                	add    %dh,(%rdi)
   15039:	12 00                	adc    (%rax),%al
   1503b:	00 00                	add    %al,(%rax)
   1503d:	00 00                	add    %al,(%rax)
   1503f:	00 37                	add    %dh,(%rdi)
   15041:	12 00                	adc    (%rax),%al
   15043:	00 00                	add    %al,(%rax)
   15045:	00 00                	add    %al,(%rax)
   15047:	00 37                	add    %dh,(%rdi)
   15049:	12 00                	adc    (%rax),%al
   1504b:	00 00                	add    %al,(%rax)
   1504d:	00 00                	add    %al,(%rax)
   1504f:	00 37                	add    %dh,(%rdi)
   15051:	12 00                	adc    (%rax),%al
   15053:	00 00                	add    %al,(%rax)
   15055:	00 00                	add    %al,(%rax)
   15057:	00 37                	add    %dh,(%rdi)
   15059:	12 00                	adc    (%rax),%al
   1505b:	00 00                	add    %al,(%rax)
   1505d:	00 00                	add    %al,(%rax)
   1505f:	00 37                	add    %dh,(%rdi)
   15061:	12 00                	adc    (%rax),%al
   15063:	00 00                	add    %al,(%rax)
   15065:	00 00                	add    %al,(%rax)
   15067:	00 37                	add    %dh,(%rdi)
   15069:	12 00                	adc    (%rax),%al
   1506b:	00 00                	add    %al,(%rax)
   1506d:	00 00                	add    %al,(%rax)
   1506f:	00 37                	add    %dh,(%rdi)
   15071:	12 00                	adc    (%rax),%al
   15073:	00 00                	add    %al,(%rax)
   15075:	00 00                	add    %al,(%rax)
   15077:	00 37                	add    %dh,(%rdi)
   15079:	12 00                	adc    (%rax),%al
   1507b:	00 00                	add    %al,(%rax)
   1507d:	00 00                	add    %al,(%rax)
   1507f:	00 37                	add    %dh,(%rdi)
   15081:	12 00                	adc    (%rax),%al
   15083:	00 00                	add    %al,(%rax)
   15085:	00 00                	add    %al,(%rax)
   15087:	00 37                	add    %dh,(%rdi)
   15089:	12 00                	adc    (%rax),%al
   1508b:	00 00                	add    %al,(%rax)
   1508d:	00 00                	add    %al,(%rax)
   1508f:	00 37                	add    %dh,(%rdi)
   15091:	12 00                	adc    (%rax),%al
   15093:	00 00                	add    %al,(%rax)
   15095:	00 00                	add    %al,(%rax)
   15097:	00 37                	add    %dh,(%rdi)
   15099:	12 00                	adc    (%rax),%al
   1509b:	00 00                	add    %al,(%rax)
   1509d:	00 00                	add    %al,(%rax)
   1509f:	00 37                	add    %dh,(%rdi)
   150a1:	12 00                	adc    (%rax),%al
   150a3:	00 00                	add    %al,(%rax)
   150a5:	00 00                	add    %al,(%rax)
   150a7:	00 37                	add    %dh,(%rdi)
   150a9:	12 00                	adc    (%rax),%al
   150ab:	00 00                	add    %al,(%rax)
   150ad:	00 00                	add    %al,(%rax)
   150af:	00 37                	add    %dh,(%rdi)
   150b1:	12 00                	adc    (%rax),%al
   150b3:	00 00                	add    %al,(%rax)
   150b5:	00 00                	add    %al,(%rax)
   150b7:	00 37                	add    %dh,(%rdi)
   150b9:	12 00                	adc    (%rax),%al
   150bb:	00 00                	add    %al,(%rax)
   150bd:	00 00                	add    %al,(%rax)
   150bf:	00 37                	add    %dh,(%rdi)
   150c1:	12 00                	adc    (%rax),%al
   150c3:	00 00                	add    %al,(%rax)
   150c5:	00 00                	add    %al,(%rax)
   150c7:	00 37                	add    %dh,(%rdi)
   150c9:	12 00                	adc    (%rax),%al
   150cb:	00 00                	add    %al,(%rax)
   150cd:	00 00                	add    %al,(%rax)
   150cf:	00 37                	add    %dh,(%rdi)
   150d1:	12 00                	adc    (%rax),%al
   150d3:	00 00                	add    %al,(%rax)
   150d5:	00 00                	add    %al,(%rax)
   150d7:	00 37                	add    %dh,(%rdi)
   150d9:	12 00                	adc    (%rax),%al
   150db:	00 00                	add    %al,(%rax)
   150dd:	00 00                	add    %al,(%rax)
   150df:	00 37                	add    %dh,(%rdi)
   150e1:	12 00                	adc    (%rax),%al
   150e3:	00 00                	add    %al,(%rax)
   150e5:	00 00                	add    %al,(%rax)
   150e7:	00 37                	add    %dh,(%rdi)
   150e9:	12 00                	adc    (%rax),%al
   150eb:	00 00                	add    %al,(%rax)
   150ed:	00 00                	add    %al,(%rax)
   150ef:	00 37                	add    %dh,(%rdi)
   150f1:	12 00                	adc    (%rax),%al
   150f3:	00 00                	add    %al,(%rax)
   150f5:	00 00                	add    %al,(%rax)
   150f7:	00 37                	add    %dh,(%rdi)
   150f9:	12 00                	adc    (%rax),%al
   150fb:	00 00                	add    %al,(%rax)
   150fd:	00 00                	add    %al,(%rax)
   150ff:	00 37                	add    %dh,(%rdi)
   15101:	12 00                	adc    (%rax),%al
   15103:	00 00                	add    %al,(%rax)
   15105:	00 00                	add    %al,(%rax)
   15107:	00 37                	add    %dh,(%rdi)
   15109:	12 00                	adc    (%rax),%al
   1510b:	00 00                	add    %al,(%rax)
   1510d:	00 00                	add    %al,(%rax)
   1510f:	00 37                	add    %dh,(%rdi)
   15111:	12 00                	adc    (%rax),%al
   15113:	00 00                	add    %al,(%rax)
   15115:	00 00                	add    %al,(%rax)
   15117:	00 37                	add    %dh,(%rdi)
   15119:	12 00                	adc    (%rax),%al
   1511b:	00 00                	add    %al,(%rax)
   1511d:	00 00                	add    %al,(%rax)
   1511f:	00 37                	add    %dh,(%rdi)
   15121:	12 00                	adc    (%rax),%al
   15123:	00 00                	add    %al,(%rax)
   15125:	00 00                	add    %al,(%rax)
   15127:	00 37                	add    %dh,(%rdi)
   15129:	12 00                	adc    (%rax),%al
   1512b:	00 00                	add    %al,(%rax)
   1512d:	00 00                	add    %al,(%rax)
   1512f:	00 37                	add    %dh,(%rdi)
   15131:	12 00                	adc    (%rax),%al
   15133:	00 00                	add    %al,(%rax)
   15135:	00 00                	add    %al,(%rax)
   15137:	00 37                	add    %dh,(%rdi)
   15139:	12 00                	adc    (%rax),%al
   1513b:	00 00                	add    %al,(%rax)
   1513d:	00 00                	add    %al,(%rax)
   1513f:	00 37                	add    %dh,(%rdi)
   15141:	12 00                	adc    (%rax),%al
   15143:	00 00                	add    %al,(%rax)
   15145:	00 00                	add    %al,(%rax)
   15147:	00 37                	add    %dh,(%rdi)
   15149:	12 00                	adc    (%rax),%al
   1514b:	00 00                	add    %al,(%rax)
   1514d:	00 00                	add    %al,(%rax)
   1514f:	00 37                	add    %dh,(%rdi)
   15151:	12 00                	adc    (%rax),%al
   15153:	00 00                	add    %al,(%rax)
   15155:	00 00                	add    %al,(%rax)
   15157:	00 37                	add    %dh,(%rdi)
   15159:	12 00                	adc    (%rax),%al
   1515b:	00 00                	add    %al,(%rax)
   1515d:	00 00                	add    %al,(%rax)
   1515f:	00 37                	add    %dh,(%rdi)
   15161:	12 00                	adc    (%rax),%al
   15163:	00 00                	add    %al,(%rax)
   15165:	00 00                	add    %al,(%rax)
   15167:	00 37                	add    %dh,(%rdi)
   15169:	12 00                	adc    (%rax),%al
   1516b:	00 00                	add    %al,(%rax)
   1516d:	00 00                	add    %al,(%rax)
   1516f:	00 37                	add    %dh,(%rdi)
   15171:	12 00                	adc    (%rax),%al
   15173:	00 00                	add    %al,(%rax)
   15175:	00 00                	add    %al,(%rax)
   15177:	00 37                	add    %dh,(%rdi)
   15179:	12 00                	adc    (%rax),%al
   1517b:	00 00                	add    %al,(%rax)
   1517d:	00 00                	add    %al,(%rax)
   1517f:	00 37                	add    %dh,(%rdi)
   15181:	12 00                	adc    (%rax),%al
   15183:	00 00                	add    %al,(%rax)
   15185:	00 00                	add    %al,(%rax)
   15187:	00 37                	add    %dh,(%rdi)
   15189:	12 00                	adc    (%rax),%al
   1518b:	00 00                	add    %al,(%rax)
   1518d:	00 00                	add    %al,(%rax)
   1518f:	00 37                	add    %dh,(%rdi)
   15191:	12 00                	adc    (%rax),%al
   15193:	00 00                	add    %al,(%rax)
   15195:	00 00                	add    %al,(%rax)
   15197:	00 37                	add    %dh,(%rdi)
   15199:	12 00                	adc    (%rax),%al
   1519b:	00 00                	add    %al,(%rax)
   1519d:	00 00                	add    %al,(%rax)
   1519f:	00 37                	add    %dh,(%rdi)
   151a1:	12 00                	adc    (%rax),%al
   151a3:	00 00                	add    %al,(%rax)
   151a5:	00 00                	add    %al,(%rax)
   151a7:	00 37                	add    %dh,(%rdi)
   151a9:	12 00                	adc    (%rax),%al
   151ab:	00 00                	add    %al,(%rax)
   151ad:	00 00                	add    %al,(%rax)
   151af:	00 37                	add    %dh,(%rdi)
   151b1:	12 00                	adc    (%rax),%al
   151b3:	00 00                	add    %al,(%rax)
   151b5:	00 00                	add    %al,(%rax)
   151b7:	00 37                	add    %dh,(%rdi)
   151b9:	12 00                	adc    (%rax),%al
   151bb:	00 00                	add    %al,(%rax)
   151bd:	00 00                	add    %al,(%rax)
   151bf:	00 37                	add    %dh,(%rdi)
   151c1:	12 00                	adc    (%rax),%al
   151c3:	00 00                	add    %al,(%rax)
   151c5:	00 00                	add    %al,(%rax)
   151c7:	00 37                	add    %dh,(%rdi)
   151c9:	12 00                	adc    (%rax),%al
   151cb:	00 00                	add    %al,(%rax)
   151cd:	00 00                	add    %al,(%rax)
   151cf:	00 37                	add    %dh,(%rdi)
   151d1:	12 00                	adc    (%rax),%al
   151d3:	00 00                	add    %al,(%rax)
   151d5:	00 00                	add    %al,(%rax)
   151d7:	00 37                	add    %dh,(%rdi)
   151d9:	12 00                	adc    (%rax),%al
   151db:	00 00                	add    %al,(%rax)
   151dd:	00 00                	add    %al,(%rax)
   151df:	00 37                	add    %dh,(%rdi)
   151e1:	12 00                	adc    (%rax),%al
   151e3:	00 00                	add    %al,(%rax)
   151e5:	00 00                	add    %al,(%rax)
   151e7:	00 37                	add    %dh,(%rdi)
   151e9:	12 00                	adc    (%rax),%al
   151eb:	00 00                	add    %al,(%rax)
   151ed:	00 00                	add    %al,(%rax)
   151ef:	00 37                	add    %dh,(%rdi)
   151f1:	12 00                	adc    (%rax),%al
   151f3:	00 00                	add    %al,(%rax)
   151f5:	00 00                	add    %al,(%rax)
   151f7:	00 37                	add    %dh,(%rdi)
   151f9:	12 00                	adc    (%rax),%al
   151fb:	00 00                	add    %al,(%rax)
   151fd:	00 00                	add    %al,(%rax)
   151ff:	00 c3                	add    %al,%bl
   15201:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15208:	00 
   15209:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15210:	90                   	nop
   15211:	90                   	nop
   15212:	90                   	nop
   15213:	90                   	nop
   15214:	90                   	nop
   15215:	90                   	nop
   15216:	90                   	nop
   15217:	90                   	nop
   15218:	90                   	nop
   15219:	90                   	nop
   1521a:	90                   	nop
   1521b:	90                   	nop
   1521c:	90                   	nop
   1521d:	90                   	nop
   1521e:	90                   	nop
   1521f:	90                   	nop
   15220:	90                   	nop
   15221:	90                   	nop
   15222:	90                   	nop
   15223:	90                   	nop
   15224:	90                   	nop
   15225:	90                   	nop
   15226:	90                   	nop
   15227:	90                   	nop
   15228:	90                   	nop
   15229:	90                   	nop
   1522a:	90                   	nop
   1522b:	90                   	nop
   1522c:	90                   	nop
   1522d:	90                   	nop
   1522e:	90                   	nop
   1522f:	90                   	nop
   15230:	90                   	nop
   15231:	90                   	nop
   15232:	90                   	nop
   15233:	90                   	nop
   15234:	90                   	nop
   15235:	90                   	nop
   15236:	90                   	nop
   15237:	90                   	nop
   15238:	90                   	nop
   15239:	90                   	nop
   1523a:	90                   	nop
   1523b:	90                   	nop
   1523c:	90                   	nop
   1523d:	90                   	nop
   1523e:	90                   	nop
   1523f:	90                   	nop

0000000000015240 <__intel_ssse3_memcpy>:
   15240:	48 89 f8             	mov    %rdi,%rax
   15243:	48 83 fa 4f          	cmp    $0x4f,%rdx
   15247:	4c 8d 1d 42 94 00 00 	lea    0x9442(%rip),%r11        # 1e690 <__func__.2431+0x7>
   1524e:	77 20                	ja     15270 <__intel_ssse3_memcpy+0x30>
   15250:	4d 63 0c 93          	movslq (%r11,%rdx,4),%r9
   15254:	48 01 d6             	add    %rdx,%rsi
   15257:	48 01 d7             	add    %rdx,%rdi
   1525a:	4d 01 d9             	add    %r11,%r9
   1525d:	3e 41 ff e1          	ds jmpq *%r9
   15261:	0f 0b                	ud2    
   15263:	0f 1f 00             	nopl   (%rax)
   15266:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1526d:	00 00 00 
   15270:	40 38 fe             	cmp    %dil,%sil
   15273:	7e 5b                	jle    152d0 <__intel_ssse3_memcpy+0x90>
   15275:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   15279:	48 89 f9             	mov    %rdi,%rcx
   1527c:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
   15280:	48 83 c7 10          	add    $0x10,%rdi
   15284:	49 89 c8             	mov    %rcx,%r8
   15287:	48 29 f9             	sub    %rdi,%rcx
   1528a:	48 01 ca             	add    %rcx,%rdx
   1528d:	48 29 ce             	sub    %rcx,%rsi
   15290:	8b 0d f2 d5 20 00    	mov    0x20d5f2(%rip),%ecx        # 222888 <__libirc_largest_cache_size_half>
   15296:	48 39 ca             	cmp    %rcx,%rdx
   15299:	49 89 f1             	mov    %rsi,%r9
   1529c:	0f 87 ae 27 00 00    	ja     17a50 <__intel_ssse3_memcpy+0x2810>
   152a2:	49 83 e1 0f          	and    $0xf,%r9
   152a6:	0f 84 84 00 00 00    	je     15330 <__intel_ssse3_memcpy+0xf0>
   152ac:	8b 0d de d5 20 00    	mov    0x20d5de(%rip),%ecx        # 222890 <__libirc_data_cache_size_half>
   152b2:	4c 8d 1d 17 95 00 00 	lea    0x9517(%rip),%r11        # 1e7d0 <__func__.2431+0x147>
   152b9:	4f 63 0c 8b          	movslq (%r11,%r9,4),%r9
   152bd:	4f 8d 0c 0b          	lea    (%r11,%r9,1),%r9
   152c1:	3e 41 ff e1          	ds jmpq *%r9
   152c5:	0f 0b                	ud2    
   152c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   152ce:	00 00 
   152d0:	f3 0f 6f 44 16 f0    	movdqu -0x10(%rsi,%rdx,1),%xmm0
   152d6:	48 01 d6             	add    %rdx,%rsi
   152d9:	4c 8d 44 17 f0       	lea    -0x10(%rdi,%rdx,1),%r8
   152de:	48 01 d7             	add    %rdx,%rdi
   152e1:	48 89 f9             	mov    %rdi,%rcx
   152e4:	48 83 e1 0f          	and    $0xf,%rcx
   152e8:	48 31 cf             	xor    %rcx,%rdi
   152eb:	48 29 ca             	sub    %rcx,%rdx
   152ee:	48 29 ce             	sub    %rcx,%rsi
   152f1:	8b 0d 91 d5 20 00    	mov    0x20d591(%rip),%ecx        # 222888 <__libirc_largest_cache_size_half>
   152f7:	48 39 ca             	cmp    %rcx,%rdx
   152fa:	49 89 f1             	mov    %rsi,%r9
   152fd:	0f 87 2d 28 00 00    	ja     17b30 <__intel_ssse3_memcpy+0x28f0>
   15303:	49 83 e1 0f          	and    $0xf,%r9
   15307:	0f 84 53 02 00 00    	je     15560 <__intel_ssse3_memcpy+0x320>
   1530d:	8b 0d 7d d5 20 00    	mov    0x20d57d(%rip),%ecx        # 222890 <__libirc_data_cache_size_half>
   15313:	4c 8d 1d f6 94 00 00 	lea    0x94f6(%rip),%r11        # 1e810 <__func__.2431+0x187>
   1531a:	4f 63 0c 8b          	movslq (%r11,%r9,4),%r9
   1531e:	4f 8d 0c 0b          	lea    (%r11,%r9,1),%r9
   15322:	3e 41 ff e1          	ds jmpq *%r9
   15326:	0f 0b                	ud2    
   15328:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1532f:	00 
   15330:	48 83 ea 10          	sub    $0x10,%rdx
   15334:	66 0f 6f 0e          	movdqa (%rsi),%xmm1
   15338:	48 83 c6 10          	add    $0x10,%rsi
   1533c:	66 0f 7f 0f          	movdqa %xmm1,(%rdi)
   15340:	48 83 c7 10          	add    $0x10,%rdi
   15344:	48 81 fa 80 00 00 00 	cmp    $0x80,%rdx
   1534b:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   15350:	77 4e                	ja     153a0 <__intel_ssse3_memcpy+0x160>
   15352:	48 83 fa 40          	cmp    $0x40,%rdx
   15356:	72 2a                	jb     15382 <__intel_ssse3_memcpy+0x142>
   15358:	0f 28 26             	movaps (%rsi),%xmm4
   1535b:	0f 28 4e 10          	movaps 0x10(%rsi),%xmm1
   1535f:	0f 28 56 20          	movaps 0x20(%rsi),%xmm2
   15363:	0f 28 5e 30          	movaps 0x30(%rsi),%xmm3
   15367:	0f 29 27             	movaps %xmm4,(%rdi)
   1536a:	0f 29 4f 10          	movaps %xmm1,0x10(%rdi)
   1536e:	0f 29 57 20          	movaps %xmm2,0x20(%rdi)
   15372:	0f 29 5f 30          	movaps %xmm3,0x30(%rdi)
   15376:	48 83 ea 40          	sub    $0x40,%rdx
   1537a:	48 83 c6 40          	add    $0x40,%rsi
   1537e:	48 83 c7 40          	add    $0x40,%rdi
   15382:	48 01 d6             	add    %rdx,%rsi
   15385:	48 01 d7             	add    %rdx,%rdi
   15388:	4c 8d 1d 01 93 00 00 	lea    0x9301(%rip),%r11        # 1e690 <__func__.2431+0x7>
   1538f:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   15393:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   15397:	3e ff e2             	ds jmpq *%rdx
   1539a:	0f 0b                	ud2    
   1539c:	0f 1f 40 00          	nopl   0x0(%rax)
   153a0:	8b 0d ea d4 20 00    	mov    0x20d4ea(%rip),%ecx        # 222890 <__libirc_data_cache_size_half>
   153a6:	48 39 ca             	cmp    %rcx,%rdx
   153a9:	48 8d 52 80          	lea    -0x80(%rdx),%rdx
   153ad:	0f 83 bd 00 00 00    	jae    15470 <__intel_ssse3_memcpy+0x230>
   153b3:	66 0f 6f 26          	movdqa (%rsi),%xmm4
   153b7:	0f 28 4e 10          	movaps 0x10(%rsi),%xmm1
   153bb:	0f 28 56 20          	movaps 0x20(%rsi),%xmm2
   153bf:	0f 28 5e 30          	movaps 0x30(%rsi),%xmm3
   153c3:	66 0f 7f 27          	movdqa %xmm4,(%rdi)
   153c7:	0f 29 4f 10          	movaps %xmm1,0x10(%rdi)
   153cb:	0f 29 57 20          	movaps %xmm2,0x20(%rdi)
   153cf:	0f 29 5f 30          	movaps %xmm3,0x30(%rdi)
   153d3:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   153da:	0f 28 66 40          	movaps 0x40(%rsi),%xmm4
   153de:	0f 28 6e 50          	movaps 0x50(%rsi),%xmm5
   153e2:	0f 28 76 60          	movaps 0x60(%rsi),%xmm6
   153e6:	0f 28 7e 70          	movaps 0x70(%rsi),%xmm7
   153ea:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   153f1:	0f 29 67 40          	movaps %xmm4,0x40(%rdi)
   153f5:	0f 29 6f 50          	movaps %xmm5,0x50(%rdi)
   153f9:	0f 29 77 60          	movaps %xmm6,0x60(%rdi)
   153fd:	0f 29 7f 70          	movaps %xmm7,0x70(%rdi)
   15401:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   15408:	73 a9                	jae    153b3 <__intel_ssse3_memcpy+0x173>
   1540a:	48 83 fa c0          	cmp    $0xffffffffffffffc0,%rdx
   1540e:	48 8d 92 80 00 00 00 	lea    0x80(%rdx),%rdx
   15415:	7c 32                	jl     15449 <__intel_ssse3_memcpy+0x209>
   15417:	66 0f 6f 26          	movdqa (%rsi),%xmm4
   1541b:	48 83 ea 40          	sub    $0x40,%rdx
   1541f:	66 0f 6f 4e 10       	movdqa 0x10(%rsi),%xmm1
   15424:	66 0f 7f 27          	movdqa %xmm4,(%rdi)
   15428:	66 0f 7f 4f 10       	movdqa %xmm1,0x10(%rdi)
   1542d:	66 0f 6f 66 20       	movdqa 0x20(%rsi),%xmm4
   15432:	66 0f 6f 4e 30       	movdqa 0x30(%rsi),%xmm1
   15437:	48 83 c6 40          	add    $0x40,%rsi
   1543b:	66 0f 7f 67 20       	movdqa %xmm4,0x20(%rdi)
   15440:	66 0f 7f 4f 30       	movdqa %xmm1,0x30(%rdi)
   15445:	48 83 c7 40          	add    $0x40,%rdi
   15449:	48 01 d6             	add    %rdx,%rsi
   1544c:	48 01 d7             	add    %rdx,%rdi
   1544f:	4c 8d 1d 3a 92 00 00 	lea    0x923a(%rip),%r11        # 1e690 <__func__.2431+0x7>
   15456:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1545a:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   1545e:	3e ff e2             	ds jmpq *%rdx
   15461:	0f 0b                	ud2    
   15463:	0f 1f 00             	nopl   (%rax)
   15466:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1546d:	00 00 00 
   15470:	0f 18 8e c0 01 00 00 	prefetcht0 0x1c0(%rsi)
   15477:	0f 18 8e 80 02 00 00 	prefetcht0 0x280(%rsi)
   1547e:	66 0f 6f 06          	movdqa (%rsi),%xmm0
   15482:	66 0f 6f 4e 10       	movdqa 0x10(%rsi),%xmm1
   15487:	66 0f 6f 56 20       	movdqa 0x20(%rsi),%xmm2
   1548c:	66 0f 6f 5e 30       	movdqa 0x30(%rsi),%xmm3
   15491:	66 0f 6f 66 40       	movdqa 0x40(%rsi),%xmm4
   15496:	66 0f 6f 6e 50       	movdqa 0x50(%rsi),%xmm5
   1549b:	66 0f 6f 76 60       	movdqa 0x60(%rsi),%xmm6
   154a0:	66 0f 6f 7e 70       	movdqa 0x70(%rsi),%xmm7
   154a5:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   154ac:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   154b3:	66 0f 7f 07          	movdqa %xmm0,(%rdi)
   154b7:	66 0f 7f 4f 10       	movdqa %xmm1,0x10(%rdi)
   154bc:	66 0f 7f 57 20       	movdqa %xmm2,0x20(%rdi)
   154c1:	66 0f 7f 5f 30       	movdqa %xmm3,0x30(%rdi)
   154c6:	66 0f 7f 67 40       	movdqa %xmm4,0x40(%rdi)
   154cb:	66 0f 7f 6f 50       	movdqa %xmm5,0x50(%rdi)
   154d0:	66 0f 7f 77 60       	movdqa %xmm6,0x60(%rdi)
   154d5:	66 0f 7f 7f 70       	movdqa %xmm7,0x70(%rdi)
   154da:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   154e1:	73 8d                	jae    15470 <__intel_ssse3_memcpy+0x230>
   154e3:	48 83 fa c0          	cmp    $0xffffffffffffffc0,%rdx
   154e7:	48 8d 92 80 00 00 00 	lea    0x80(%rdx),%rdx
   154ee:	7c 32                	jl     15522 <__intel_ssse3_memcpy+0x2e2>
   154f0:	66 0f 6f 06          	movdqa (%rsi),%xmm0
   154f4:	48 83 ea 40          	sub    $0x40,%rdx
   154f8:	66 0f 6f 4e 10       	movdqa 0x10(%rsi),%xmm1
   154fd:	66 0f 7f 07          	movdqa %xmm0,(%rdi)
   15501:	66 0f 7f 4f 10       	movdqa %xmm1,0x10(%rdi)
   15506:	66 0f 6f 46 20       	movdqa 0x20(%rsi),%xmm0
   1550b:	66 0f 6f 4e 30       	movdqa 0x30(%rsi),%xmm1
   15510:	48 83 c6 40          	add    $0x40,%rsi
   15514:	66 0f 7f 47 20       	movdqa %xmm0,0x20(%rdi)
   15519:	66 0f 7f 4f 30       	movdqa %xmm1,0x30(%rdi)
   1551e:	48 83 c7 40          	add    $0x40,%rdi
   15522:	48 83 fa 20          	cmp    $0x20,%rdx
   15526:	72 1e                	jb     15546 <__intel_ssse3_memcpy+0x306>
   15528:	66 0f 6f 06          	movdqa (%rsi),%xmm0
   1552c:	48 83 ea 20          	sub    $0x20,%rdx
   15530:	66 0f 6f 4e 10       	movdqa 0x10(%rsi),%xmm1
   15535:	48 83 c6 20          	add    $0x20,%rsi
   15539:	66 0f 7f 07          	movdqa %xmm0,(%rdi)
   1553d:	66 0f 7f 4f 10       	movdqa %xmm1,0x10(%rdi)
   15542:	48 83 c7 20          	add    $0x20,%rdi
   15546:	48 01 d7             	add    %rdx,%rdi
   15549:	48 01 d6             	add    %rdx,%rsi
   1554c:	4c 8d 1d 3d 91 00 00 	lea    0x913d(%rip),%r11        # 1e690 <__func__.2431+0x7>
   15553:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   15557:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   1555b:	3e ff e2             	ds jmpq *%rdx
   1555e:	0f 0b                	ud2    
   15560:	48 83 ea 10          	sub    $0x10,%rdx
   15564:	66 0f 6f 4e f0       	movdqa -0x10(%rsi),%xmm1
   15569:	48 83 ee 10          	sub    $0x10,%rsi
   1556d:	66 0f 7f 4f f0       	movdqa %xmm1,-0x10(%rdi)
   15572:	48 83 ef 10          	sub    $0x10,%rdi
   15576:	48 81 fa 80 00 00 00 	cmp    $0x80,%rdx
   1557d:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   15582:	77 4c                	ja     155d0 <__intel_ssse3_memcpy+0x390>
   15584:	48 83 fa 40          	cmp    $0x40,%rdx
   15588:	72 2c                	jb     155b6 <__intel_ssse3_memcpy+0x376>
   1558a:	0f 28 46 f0          	movaps -0x10(%rsi),%xmm0
   1558e:	0f 28 4e e0          	movaps -0x20(%rsi),%xmm1
   15592:	0f 28 56 d0          	movaps -0x30(%rsi),%xmm2
   15596:	0f 28 5e c0          	movaps -0x40(%rsi),%xmm3
   1559a:	0f 29 47 f0          	movaps %xmm0,-0x10(%rdi)
   1559e:	0f 29 4f e0          	movaps %xmm1,-0x20(%rdi)
   155a2:	0f 29 57 d0          	movaps %xmm2,-0x30(%rdi)
   155a6:	0f 29 5f c0          	movaps %xmm3,-0x40(%rdi)
   155aa:	48 83 ea 40          	sub    $0x40,%rdx
   155ae:	48 83 ee 40          	sub    $0x40,%rsi
   155b2:	48 83 ef 40          	sub    $0x40,%rdi
   155b6:	4c 8d 1d d3 90 00 00 	lea    0x90d3(%rip),%r11        # 1e690 <__func__.2431+0x7>
   155bd:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   155c1:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   155c5:	3e ff e2             	ds jmpq *%rdx
   155c8:	0f 0b                	ud2    
   155ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   155d0:	8b 0d ba d2 20 00    	mov    0x20d2ba(%rip),%ecx        # 222890 <__libirc_data_cache_size_half>
   155d6:	48 39 ca             	cmp    %rcx,%rdx
   155d9:	48 8d 52 80          	lea    -0x80(%rdx),%rdx
   155dd:	0f 83 ad 00 00 00    	jae    15690 <__intel_ssse3_memcpy+0x450>
   155e3:	66 0f 6f 46 f0       	movdqa -0x10(%rsi),%xmm0
   155e8:	0f 28 4e e0          	movaps -0x20(%rsi),%xmm1
   155ec:	0f 28 56 d0          	movaps -0x30(%rsi),%xmm2
   155f0:	0f 28 5e c0          	movaps -0x40(%rsi),%xmm3
   155f4:	66 0f 7f 47 f0       	movdqa %xmm0,-0x10(%rdi)
   155f9:	0f 29 4f e0          	movaps %xmm1,-0x20(%rdi)
   155fd:	0f 29 57 d0          	movaps %xmm2,-0x30(%rdi)
   15601:	0f 29 5f c0          	movaps %xmm3,-0x40(%rdi)
   15605:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   1560c:	0f 28 66 b0          	movaps -0x50(%rsi),%xmm4
   15610:	0f 28 6e a0          	movaps -0x60(%rsi),%xmm5
   15614:	0f 28 76 90          	movaps -0x70(%rsi),%xmm6
   15618:	0f 28 7e 80          	movaps -0x80(%rsi),%xmm7
   1561c:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   15620:	0f 29 67 b0          	movaps %xmm4,-0x50(%rdi)
   15624:	0f 29 6f a0          	movaps %xmm5,-0x60(%rdi)
   15628:	0f 29 77 90          	movaps %xmm6,-0x70(%rdi)
   1562c:	0f 29 7f 80          	movaps %xmm7,-0x80(%rdi)
   15630:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   15634:	73 ad                	jae    155e3 <__intel_ssse3_memcpy+0x3a3>
   15636:	48 83 fa c0          	cmp    $0xffffffffffffffc0,%rdx
   1563a:	48 8d 92 80 00 00 00 	lea    0x80(%rdx),%rdx
   15641:	7c 34                	jl     15677 <__intel_ssse3_memcpy+0x437>
   15643:	66 0f 6f 46 f0       	movdqa -0x10(%rsi),%xmm0
   15648:	48 83 ea 40          	sub    $0x40,%rdx
   1564c:	66 0f 6f 4e e0       	movdqa -0x20(%rsi),%xmm1
   15651:	66 0f 7f 47 f0       	movdqa %xmm0,-0x10(%rdi)
   15656:	66 0f 7f 4f e0       	movdqa %xmm1,-0x20(%rdi)
   1565b:	66 0f 6f 46 d0       	movdqa -0x30(%rsi),%xmm0
   15660:	66 0f 6f 4e c0       	movdqa -0x40(%rsi),%xmm1
   15665:	48 83 ee 40          	sub    $0x40,%rsi
   15669:	66 0f 7f 47 d0       	movdqa %xmm0,-0x30(%rdi)
   1566e:	66 0f 7f 4f c0       	movdqa %xmm1,-0x40(%rdi)
   15673:	48 83 ef 40          	sub    $0x40,%rdi
   15677:	4c 8d 1d 12 90 00 00 	lea    0x9012(%rip),%r11        # 1e690 <__func__.2431+0x7>
   1567e:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   15682:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   15686:	3e ff e2             	ds jmpq *%rdx
   15689:	0f 0b                	ud2    
   1568b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15690:	0f 18 8e 40 fe ff ff 	prefetcht0 -0x1c0(%rsi)
   15697:	0f 18 8e 80 fd ff ff 	prefetcht0 -0x280(%rsi)
   1569e:	66 0f 6f 46 f0       	movdqa -0x10(%rsi),%xmm0
   156a3:	66 0f 6f 4e e0       	movdqa -0x20(%rsi),%xmm1
   156a8:	66 0f 6f 56 d0       	movdqa -0x30(%rsi),%xmm2
   156ad:	66 0f 6f 5e c0       	movdqa -0x40(%rsi),%xmm3
   156b2:	66 0f 6f 66 b0       	movdqa -0x50(%rsi),%xmm4
   156b7:	66 0f 6f 6e a0       	movdqa -0x60(%rsi),%xmm5
   156bc:	66 0f 6f 76 90       	movdqa -0x70(%rsi),%xmm6
   156c1:	66 0f 6f 7e 80       	movdqa -0x80(%rsi),%xmm7
   156c6:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   156ca:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   156d1:	66 0f 7f 47 f0       	movdqa %xmm0,-0x10(%rdi)
   156d6:	66 0f 7f 4f e0       	movdqa %xmm1,-0x20(%rdi)
   156db:	66 0f 7f 57 d0       	movdqa %xmm2,-0x30(%rdi)
   156e0:	66 0f 7f 5f c0       	movdqa %xmm3,-0x40(%rdi)
   156e5:	66 0f 7f 67 b0       	movdqa %xmm4,-0x50(%rdi)
   156ea:	66 0f 7f 6f a0       	movdqa %xmm5,-0x60(%rdi)
   156ef:	66 0f 7f 77 90       	movdqa %xmm6,-0x70(%rdi)
   156f4:	66 0f 7f 7f 80       	movdqa %xmm7,-0x80(%rdi)
   156f9:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   156fd:	73 91                	jae    15690 <__intel_ssse3_memcpy+0x450>
   156ff:	48 83 fa c0          	cmp    $0xffffffffffffffc0,%rdx
   15703:	48 8d 92 80 00 00 00 	lea    0x80(%rdx),%rdx
   1570a:	7c 34                	jl     15740 <__intel_ssse3_memcpy+0x500>
   1570c:	66 0f 6f 46 f0       	movdqa -0x10(%rsi),%xmm0
   15711:	48 83 ea 40          	sub    $0x40,%rdx
   15715:	66 0f 6f 4e e0       	movdqa -0x20(%rsi),%xmm1
   1571a:	66 0f 7f 47 f0       	movdqa %xmm0,-0x10(%rdi)
   1571f:	66 0f 7f 4f e0       	movdqa %xmm1,-0x20(%rdi)
   15724:	66 0f 6f 46 d0       	movdqa -0x30(%rsi),%xmm0
   15729:	66 0f 6f 4e c0       	movdqa -0x40(%rsi),%xmm1
   1572e:	48 83 ee 40          	sub    $0x40,%rsi
   15732:	66 0f 7f 47 d0       	movdqa %xmm0,-0x30(%rdi)
   15737:	66 0f 7f 4f c0       	movdqa %xmm1,-0x40(%rdi)
   1573c:	48 83 ef 40          	sub    $0x40,%rdi
   15740:	48 83 fa 20          	cmp    $0x20,%rdx
   15744:	72 20                	jb     15766 <__intel_ssse3_memcpy+0x526>
   15746:	66 0f 6f 46 f0       	movdqa -0x10(%rsi),%xmm0
   1574b:	48 83 ea 20          	sub    $0x20,%rdx
   1574f:	66 0f 6f 4e e0       	movdqa -0x20(%rsi),%xmm1
   15754:	48 83 ee 20          	sub    $0x20,%rsi
   15758:	66 0f 7f 47 f0       	movdqa %xmm0,-0x10(%rdi)
   1575d:	66 0f 7f 4f e0       	movdqa %xmm1,-0x20(%rdi)
   15762:	48 83 ef 20          	sub    $0x20,%rdi
   15766:	4c 8d 1d 23 8f 00 00 	lea    0x8f23(%rip),%r11        # 1e690 <__func__.2431+0x7>
   1576d:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   15771:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   15775:	3e ff e2             	ds jmpq *%rdx
   15778:	0f 0b                	ud2    
   1577a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15780:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   15787:	48 39 ca             	cmp    %rcx,%rdx
   1578a:	0f 28 4e ff          	movaps -0x1(%rsi),%xmm1
   1578e:	72 07                	jb     15797 <__intel_ssse3_memcpy+0x557>
   15790:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   15797:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   1579b:	3e 41 ff e1          	ds jmpq *%r9
   1579f:	0f 0b                	ud2    
   157a1:	0f 18 86 c0 01 00 00 	prefetchnta 0x1c0(%rsi)
   157a8:	48 83 ea 40          	sub    $0x40,%rdx
   157ac:	0f 28 56 0f          	movaps 0xf(%rsi),%xmm2
   157b0:	0f 28 5e 1f          	movaps 0x1f(%rsi),%xmm3
   157b4:	0f 28 66 2f          	movaps 0x2f(%rsi),%xmm4
   157b8:	0f 28 6e 3f          	movaps 0x3f(%rsi),%xmm5
   157bc:	66 0f 6f f5          	movdqa %xmm5,%xmm6
   157c0:	66 0f 3a 0f ec 01    	palignr $0x1,%xmm4,%xmm5
   157c6:	48 8d 76 40          	lea    0x40(%rsi),%rsi
   157ca:	66 0f 3a 0f e3 01    	palignr $0x1,%xmm3,%xmm4
   157d0:	66 0f 3a 0f da 01    	palignr $0x1,%xmm2,%xmm3
   157d6:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   157da:	66 0f 3a 0f d1 01    	palignr $0x1,%xmm1,%xmm2
   157e0:	66 0f 6f ce          	movdqa %xmm6,%xmm1
   157e4:	66 0f 7f 57 c0       	movdqa %xmm2,-0x40(%rdi)
   157e9:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   157ed:	72 0e                	jb     157fd <__intel_ssse3_memcpy+0x5bd>
   157ef:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   157f3:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   157f7:	3e 41 ff e1          	ds jmpq *%r9
   157fb:	0f 0b                	ud2    
   157fd:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   15801:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   15805:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   15809:	48 01 d7             	add    %rdx,%rdi
   1580c:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   15811:	48 01 d6             	add    %rdx,%rsi
   15814:	4c 8d 1d 75 8e 00 00 	lea    0x8e75(%rip),%r11        # 1e690 <__func__.2431+0x7>
   1581b:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1581f:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   15823:	3e ff e2             	ds jmpq *%rdx
   15826:	0f 0b                	ud2    
   15828:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1582f:	00 
   15830:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   15837:	48 39 ca             	cmp    %rcx,%rdx
   1583a:	0f 28 4e ff          	movaps -0x1(%rsi),%xmm1
   1583e:	72 07                	jb     15847 <__intel_ssse3_memcpy+0x607>
   15840:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   15847:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   1584b:	3e 41 ff e1          	ds jmpq *%r9
   1584f:	0f 0b                	ud2    
   15851:	0f 18 86 40 fe ff ff 	prefetchnta -0x1c0(%rsi)
   15858:	0f 28 56 ef          	movaps -0x11(%rsi),%xmm2
   1585c:	48 83 ea 40          	sub    $0x40,%rdx
   15860:	0f 28 5e df          	movaps -0x21(%rsi),%xmm3
   15864:	0f 28 66 cf          	movaps -0x31(%rsi),%xmm4
   15868:	0f 28 6e bf          	movaps -0x41(%rsi),%xmm5
   1586c:	48 8d 76 c0          	lea    -0x40(%rsi),%rsi
   15870:	66 0f 3a 0f ca 01    	palignr $0x1,%xmm2,%xmm1
   15876:	66 0f 3a 0f d3 01    	palignr $0x1,%xmm3,%xmm2
   1587c:	66 0f 3a 0f dc 01    	palignr $0x1,%xmm4,%xmm3
   15882:	66 0f 3a 0f e5 01    	palignr $0x1,%xmm5,%xmm4
   15888:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   1588c:	0f 28 cd             	movaps %xmm5,%xmm1
   1588f:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   15893:	48 8d 7f c0          	lea    -0x40(%rdi),%rdi
   15897:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   1589b:	72 09                	jb     158a6 <__intel_ssse3_memcpy+0x666>
   1589d:	0f 29 27             	movaps %xmm4,(%rdi)
   158a0:	3e 41 ff e1          	ds jmpq *%r9
   158a4:	0f 0b                	ud2    
   158a6:	0f 29 27             	movaps %xmm4,(%rdi)
   158a9:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   158ad:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   158b2:	4c 8d 1d d7 8d 00 00 	lea    0x8dd7(%rip),%r11        # 1e690 <__func__.2431+0x7>
   158b9:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   158bd:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   158c1:	3e ff e2             	ds jmpq *%rdx
   158c4:	0f 0b                	ud2    
   158c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   158cd:	00 00 00 
   158d0:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   158d7:	48 39 ca             	cmp    %rcx,%rdx
   158da:	0f 28 4e fe          	movaps -0x2(%rsi),%xmm1
   158de:	72 07                	jb     158e7 <__intel_ssse3_memcpy+0x6a7>
   158e0:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   158e7:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   158eb:	3e 41 ff e1          	ds jmpq *%r9
   158ef:	0f 0b                	ud2    
   158f1:	0f 18 86 c0 01 00 00 	prefetchnta 0x1c0(%rsi)
   158f8:	48 83 ea 40          	sub    $0x40,%rdx
   158fc:	0f 28 56 0e          	movaps 0xe(%rsi),%xmm2
   15900:	0f 28 5e 1e          	movaps 0x1e(%rsi),%xmm3
   15904:	0f 28 66 2e          	movaps 0x2e(%rsi),%xmm4
   15908:	0f 28 6e 3e          	movaps 0x3e(%rsi),%xmm5
   1590c:	66 0f 6f f5          	movdqa %xmm5,%xmm6
   15910:	66 0f 3a 0f ec 02    	palignr $0x2,%xmm4,%xmm5
   15916:	48 8d 76 40          	lea    0x40(%rsi),%rsi
   1591a:	66 0f 3a 0f e3 02    	palignr $0x2,%xmm3,%xmm4
   15920:	66 0f 3a 0f da 02    	palignr $0x2,%xmm2,%xmm3
   15926:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   1592a:	66 0f 3a 0f d1 02    	palignr $0x2,%xmm1,%xmm2
   15930:	66 0f 6f ce          	movdqa %xmm6,%xmm1
   15934:	66 0f 7f 57 c0       	movdqa %xmm2,-0x40(%rdi)
   15939:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   1593d:	72 0e                	jb     1594d <__intel_ssse3_memcpy+0x70d>
   1593f:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   15943:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   15947:	3e 41 ff e1          	ds jmpq *%r9
   1594b:	0f 0b                	ud2    
   1594d:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   15951:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   15955:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   15959:	48 01 d7             	add    %rdx,%rdi
   1595c:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   15961:	48 01 d6             	add    %rdx,%rsi
   15964:	4c 8d 1d 25 8d 00 00 	lea    0x8d25(%rip),%r11        # 1e690 <__func__.2431+0x7>
   1596b:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1596f:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   15973:	3e ff e2             	ds jmpq *%rdx
   15976:	0f 0b                	ud2    
   15978:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1597f:	00 
   15980:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   15987:	48 39 ca             	cmp    %rcx,%rdx
   1598a:	0f 28 4e fe          	movaps -0x2(%rsi),%xmm1
   1598e:	72 07                	jb     15997 <__intel_ssse3_memcpy+0x757>
   15990:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   15997:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   1599b:	3e 41 ff e1          	ds jmpq *%r9
   1599f:	0f 0b                	ud2    
   159a1:	0f 18 86 40 fe ff ff 	prefetchnta -0x1c0(%rsi)
   159a8:	0f 28 56 ee          	movaps -0x12(%rsi),%xmm2
   159ac:	48 83 ea 40          	sub    $0x40,%rdx
   159b0:	0f 28 5e de          	movaps -0x22(%rsi),%xmm3
   159b4:	0f 28 66 ce          	movaps -0x32(%rsi),%xmm4
   159b8:	0f 28 6e be          	movaps -0x42(%rsi),%xmm5
   159bc:	48 8d 76 c0          	lea    -0x40(%rsi),%rsi
   159c0:	66 0f 3a 0f ca 02    	palignr $0x2,%xmm2,%xmm1
   159c6:	66 0f 3a 0f d3 02    	palignr $0x2,%xmm3,%xmm2
   159cc:	66 0f 3a 0f dc 02    	palignr $0x2,%xmm4,%xmm3
   159d2:	66 0f 3a 0f e5 02    	palignr $0x2,%xmm5,%xmm4
   159d8:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   159dc:	0f 28 cd             	movaps %xmm5,%xmm1
   159df:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   159e3:	48 8d 7f c0          	lea    -0x40(%rdi),%rdi
   159e7:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   159eb:	72 09                	jb     159f6 <__intel_ssse3_memcpy+0x7b6>
   159ed:	0f 29 27             	movaps %xmm4,(%rdi)
   159f0:	3e 41 ff e1          	ds jmpq *%r9
   159f4:	0f 0b                	ud2    
   159f6:	0f 29 27             	movaps %xmm4,(%rdi)
   159f9:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   159fd:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   15a02:	4c 8d 1d 87 8c 00 00 	lea    0x8c87(%rip),%r11        # 1e690 <__func__.2431+0x7>
   15a09:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   15a0d:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   15a11:	3e ff e2             	ds jmpq *%rdx
   15a14:	0f 0b                	ud2    
   15a16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15a1d:	00 00 00 
   15a20:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   15a27:	48 39 ca             	cmp    %rcx,%rdx
   15a2a:	0f 28 4e fd          	movaps -0x3(%rsi),%xmm1
   15a2e:	72 07                	jb     15a37 <__intel_ssse3_memcpy+0x7f7>
   15a30:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   15a37:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   15a3b:	3e 41 ff e1          	ds jmpq *%r9
   15a3f:	0f 0b                	ud2    
   15a41:	0f 18 86 c0 01 00 00 	prefetchnta 0x1c0(%rsi)
   15a48:	48 83 ea 40          	sub    $0x40,%rdx
   15a4c:	0f 28 56 0d          	movaps 0xd(%rsi),%xmm2
   15a50:	0f 28 5e 1d          	movaps 0x1d(%rsi),%xmm3
   15a54:	0f 28 66 2d          	movaps 0x2d(%rsi),%xmm4
   15a58:	0f 28 6e 3d          	movaps 0x3d(%rsi),%xmm5
   15a5c:	66 0f 6f f5          	movdqa %xmm5,%xmm6
   15a60:	66 0f 3a 0f ec 03    	palignr $0x3,%xmm4,%xmm5
   15a66:	48 8d 76 40          	lea    0x40(%rsi),%rsi
   15a6a:	66 0f 3a 0f e3 03    	palignr $0x3,%xmm3,%xmm4
   15a70:	66 0f 3a 0f da 03    	palignr $0x3,%xmm2,%xmm3
   15a76:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   15a7a:	66 0f 3a 0f d1 03    	palignr $0x3,%xmm1,%xmm2
   15a80:	66 0f 6f ce          	movdqa %xmm6,%xmm1
   15a84:	66 0f 7f 57 c0       	movdqa %xmm2,-0x40(%rdi)
   15a89:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   15a8d:	72 0e                	jb     15a9d <__intel_ssse3_memcpy+0x85d>
   15a8f:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   15a93:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   15a97:	3e 41 ff e1          	ds jmpq *%r9
   15a9b:	0f 0b                	ud2    
   15a9d:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   15aa1:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   15aa5:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   15aa9:	48 01 d7             	add    %rdx,%rdi
   15aac:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   15ab1:	48 01 d6             	add    %rdx,%rsi
   15ab4:	4c 8d 1d d5 8b 00 00 	lea    0x8bd5(%rip),%r11        # 1e690 <__func__.2431+0x7>
   15abb:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   15abf:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   15ac3:	3e ff e2             	ds jmpq *%rdx
   15ac6:	0f 0b                	ud2    
   15ac8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15acf:	00 
   15ad0:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   15ad7:	48 39 ca             	cmp    %rcx,%rdx
   15ada:	0f 28 4e fd          	movaps -0x3(%rsi),%xmm1
   15ade:	72 07                	jb     15ae7 <__intel_ssse3_memcpy+0x8a7>
   15ae0:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   15ae7:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   15aeb:	3e 41 ff e1          	ds jmpq *%r9
   15aef:	0f 0b                	ud2    
   15af1:	0f 18 86 40 fe ff ff 	prefetchnta -0x1c0(%rsi)
   15af8:	0f 28 56 ed          	movaps -0x13(%rsi),%xmm2
   15afc:	48 83 ea 40          	sub    $0x40,%rdx
   15b00:	0f 28 5e dd          	movaps -0x23(%rsi),%xmm3
   15b04:	0f 28 66 cd          	movaps -0x33(%rsi),%xmm4
   15b08:	0f 28 6e bd          	movaps -0x43(%rsi),%xmm5
   15b0c:	48 8d 76 c0          	lea    -0x40(%rsi),%rsi
   15b10:	66 0f 3a 0f ca 03    	palignr $0x3,%xmm2,%xmm1
   15b16:	66 0f 3a 0f d3 03    	palignr $0x3,%xmm3,%xmm2
   15b1c:	66 0f 3a 0f dc 03    	palignr $0x3,%xmm4,%xmm3
   15b22:	66 0f 3a 0f e5 03    	palignr $0x3,%xmm5,%xmm4
   15b28:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   15b2c:	0f 28 cd             	movaps %xmm5,%xmm1
   15b2f:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   15b33:	48 8d 7f c0          	lea    -0x40(%rdi),%rdi
   15b37:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   15b3b:	72 09                	jb     15b46 <__intel_ssse3_memcpy+0x906>
   15b3d:	0f 29 27             	movaps %xmm4,(%rdi)
   15b40:	3e 41 ff e1          	ds jmpq *%r9
   15b44:	0f 0b                	ud2    
   15b46:	0f 29 27             	movaps %xmm4,(%rdi)
   15b49:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   15b4d:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   15b52:	4c 8d 1d 37 8b 00 00 	lea    0x8b37(%rip),%r11        # 1e690 <__func__.2431+0x7>
   15b59:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   15b5d:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   15b61:	3e ff e2             	ds jmpq *%rdx
   15b64:	0f 0b                	ud2    
   15b66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15b6d:	00 00 00 
   15b70:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   15b77:	48 39 ca             	cmp    %rcx,%rdx
   15b7a:	0f 28 4e fc          	movaps -0x4(%rsi),%xmm1
   15b7e:	72 07                	jb     15b87 <__intel_ssse3_memcpy+0x947>
   15b80:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   15b87:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   15b8b:	3e 41 ff e1          	ds jmpq *%r9
   15b8f:	0f 0b                	ud2    
   15b91:	0f 18 86 c0 01 00 00 	prefetchnta 0x1c0(%rsi)
   15b98:	48 83 ea 40          	sub    $0x40,%rdx
   15b9c:	0f 28 56 0c          	movaps 0xc(%rsi),%xmm2
   15ba0:	0f 28 5e 1c          	movaps 0x1c(%rsi),%xmm3
   15ba4:	0f 28 66 2c          	movaps 0x2c(%rsi),%xmm4
   15ba8:	0f 28 6e 3c          	movaps 0x3c(%rsi),%xmm5
   15bac:	66 0f 6f f5          	movdqa %xmm5,%xmm6
   15bb0:	66 0f 3a 0f ec 04    	palignr $0x4,%xmm4,%xmm5
   15bb6:	48 8d 76 40          	lea    0x40(%rsi),%rsi
   15bba:	66 0f 3a 0f e3 04    	palignr $0x4,%xmm3,%xmm4
   15bc0:	66 0f 3a 0f da 04    	palignr $0x4,%xmm2,%xmm3
   15bc6:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   15bca:	66 0f 3a 0f d1 04    	palignr $0x4,%xmm1,%xmm2
   15bd0:	66 0f 6f ce          	movdqa %xmm6,%xmm1
   15bd4:	66 0f 7f 57 c0       	movdqa %xmm2,-0x40(%rdi)
   15bd9:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   15bdd:	72 0e                	jb     15bed <__intel_ssse3_memcpy+0x9ad>
   15bdf:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   15be3:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   15be7:	3e 41 ff e1          	ds jmpq *%r9
   15beb:	0f 0b                	ud2    
   15bed:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   15bf1:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   15bf5:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   15bf9:	48 01 d7             	add    %rdx,%rdi
   15bfc:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   15c01:	48 01 d6             	add    %rdx,%rsi
   15c04:	4c 8d 1d 85 8a 00 00 	lea    0x8a85(%rip),%r11        # 1e690 <__func__.2431+0x7>
   15c0b:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   15c0f:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   15c13:	3e ff e2             	ds jmpq *%rdx
   15c16:	0f 0b                	ud2    
   15c18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15c1f:	00 
   15c20:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   15c27:	48 39 ca             	cmp    %rcx,%rdx
   15c2a:	0f 28 4e fc          	movaps -0x4(%rsi),%xmm1
   15c2e:	72 07                	jb     15c37 <__intel_ssse3_memcpy+0x9f7>
   15c30:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   15c37:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   15c3b:	3e 41 ff e1          	ds jmpq *%r9
   15c3f:	0f 0b                	ud2    
   15c41:	0f 18 86 40 fe ff ff 	prefetchnta -0x1c0(%rsi)
   15c48:	0f 28 56 ec          	movaps -0x14(%rsi),%xmm2
   15c4c:	48 83 ea 40          	sub    $0x40,%rdx
   15c50:	0f 28 5e dc          	movaps -0x24(%rsi),%xmm3
   15c54:	0f 28 66 cc          	movaps -0x34(%rsi),%xmm4
   15c58:	0f 28 6e bc          	movaps -0x44(%rsi),%xmm5
   15c5c:	48 8d 76 c0          	lea    -0x40(%rsi),%rsi
   15c60:	66 0f 3a 0f ca 04    	palignr $0x4,%xmm2,%xmm1
   15c66:	66 0f 3a 0f d3 04    	palignr $0x4,%xmm3,%xmm2
   15c6c:	66 0f 3a 0f dc 04    	palignr $0x4,%xmm4,%xmm3
   15c72:	66 0f 3a 0f e5 04    	palignr $0x4,%xmm5,%xmm4
   15c78:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   15c7c:	0f 28 cd             	movaps %xmm5,%xmm1
   15c7f:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   15c83:	48 8d 7f c0          	lea    -0x40(%rdi),%rdi
   15c87:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   15c8b:	72 09                	jb     15c96 <__intel_ssse3_memcpy+0xa56>
   15c8d:	0f 29 27             	movaps %xmm4,(%rdi)
   15c90:	3e 41 ff e1          	ds jmpq *%r9
   15c94:	0f 0b                	ud2    
   15c96:	0f 29 27             	movaps %xmm4,(%rdi)
   15c99:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   15c9d:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   15ca2:	4c 8d 1d e7 89 00 00 	lea    0x89e7(%rip),%r11        # 1e690 <__func__.2431+0x7>
   15ca9:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   15cad:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   15cb1:	3e ff e2             	ds jmpq *%rdx
   15cb4:	0f 0b                	ud2    
   15cb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15cbd:	00 00 00 
   15cc0:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   15cc7:	48 39 ca             	cmp    %rcx,%rdx
   15cca:	0f 28 4e fb          	movaps -0x5(%rsi),%xmm1
   15cce:	72 07                	jb     15cd7 <__intel_ssse3_memcpy+0xa97>
   15cd0:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   15cd7:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   15cdb:	3e 41 ff e1          	ds jmpq *%r9
   15cdf:	0f 0b                	ud2    
   15ce1:	0f 18 86 c0 01 00 00 	prefetchnta 0x1c0(%rsi)
   15ce8:	48 83 ea 40          	sub    $0x40,%rdx
   15cec:	0f 28 56 0b          	movaps 0xb(%rsi),%xmm2
   15cf0:	0f 28 5e 1b          	movaps 0x1b(%rsi),%xmm3
   15cf4:	0f 28 66 2b          	movaps 0x2b(%rsi),%xmm4
   15cf8:	0f 28 6e 3b          	movaps 0x3b(%rsi),%xmm5
   15cfc:	66 0f 6f f5          	movdqa %xmm5,%xmm6
   15d00:	66 0f 3a 0f ec 05    	palignr $0x5,%xmm4,%xmm5
   15d06:	48 8d 76 40          	lea    0x40(%rsi),%rsi
   15d0a:	66 0f 3a 0f e3 05    	palignr $0x5,%xmm3,%xmm4
   15d10:	66 0f 3a 0f da 05    	palignr $0x5,%xmm2,%xmm3
   15d16:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   15d1a:	66 0f 3a 0f d1 05    	palignr $0x5,%xmm1,%xmm2
   15d20:	66 0f 6f ce          	movdqa %xmm6,%xmm1
   15d24:	66 0f 7f 57 c0       	movdqa %xmm2,-0x40(%rdi)
   15d29:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   15d2d:	72 0e                	jb     15d3d <__intel_ssse3_memcpy+0xafd>
   15d2f:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   15d33:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   15d37:	3e 41 ff e1          	ds jmpq *%r9
   15d3b:	0f 0b                	ud2    
   15d3d:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   15d41:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   15d45:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   15d49:	48 01 d7             	add    %rdx,%rdi
   15d4c:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   15d51:	48 01 d6             	add    %rdx,%rsi
   15d54:	4c 8d 1d 35 89 00 00 	lea    0x8935(%rip),%r11        # 1e690 <__func__.2431+0x7>
   15d5b:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   15d5f:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   15d63:	3e ff e2             	ds jmpq *%rdx
   15d66:	0f 0b                	ud2    
   15d68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15d6f:	00 
   15d70:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   15d77:	48 39 ca             	cmp    %rcx,%rdx
   15d7a:	0f 28 4e fb          	movaps -0x5(%rsi),%xmm1
   15d7e:	72 07                	jb     15d87 <__intel_ssse3_memcpy+0xb47>
   15d80:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   15d87:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   15d8b:	3e 41 ff e1          	ds jmpq *%r9
   15d8f:	0f 0b                	ud2    
   15d91:	0f 18 86 40 fe ff ff 	prefetchnta -0x1c0(%rsi)
   15d98:	0f 28 56 eb          	movaps -0x15(%rsi),%xmm2
   15d9c:	48 83 ea 40          	sub    $0x40,%rdx
   15da0:	0f 28 5e db          	movaps -0x25(%rsi),%xmm3
   15da4:	0f 28 66 cb          	movaps -0x35(%rsi),%xmm4
   15da8:	0f 28 6e bb          	movaps -0x45(%rsi),%xmm5
   15dac:	48 8d 76 c0          	lea    -0x40(%rsi),%rsi
   15db0:	66 0f 3a 0f ca 05    	palignr $0x5,%xmm2,%xmm1
   15db6:	66 0f 3a 0f d3 05    	palignr $0x5,%xmm3,%xmm2
   15dbc:	66 0f 3a 0f dc 05    	palignr $0x5,%xmm4,%xmm3
   15dc2:	66 0f 3a 0f e5 05    	palignr $0x5,%xmm5,%xmm4
   15dc8:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   15dcc:	0f 28 cd             	movaps %xmm5,%xmm1
   15dcf:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   15dd3:	48 8d 7f c0          	lea    -0x40(%rdi),%rdi
   15dd7:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   15ddb:	72 09                	jb     15de6 <__intel_ssse3_memcpy+0xba6>
   15ddd:	0f 29 27             	movaps %xmm4,(%rdi)
   15de0:	3e 41 ff e1          	ds jmpq *%r9
   15de4:	0f 0b                	ud2    
   15de6:	0f 29 27             	movaps %xmm4,(%rdi)
   15de9:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   15ded:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   15df2:	4c 8d 1d 97 88 00 00 	lea    0x8897(%rip),%r11        # 1e690 <__func__.2431+0x7>
   15df9:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   15dfd:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   15e01:	3e ff e2             	ds jmpq *%rdx
   15e04:	0f 0b                	ud2    
   15e06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15e0d:	00 00 00 
   15e10:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   15e17:	48 39 ca             	cmp    %rcx,%rdx
   15e1a:	0f 28 4e fa          	movaps -0x6(%rsi),%xmm1
   15e1e:	72 07                	jb     15e27 <__intel_ssse3_memcpy+0xbe7>
   15e20:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   15e27:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   15e2b:	3e 41 ff e1          	ds jmpq *%r9
   15e2f:	0f 0b                	ud2    
   15e31:	0f 18 86 c0 01 00 00 	prefetchnta 0x1c0(%rsi)
   15e38:	48 83 ea 40          	sub    $0x40,%rdx
   15e3c:	0f 28 56 0a          	movaps 0xa(%rsi),%xmm2
   15e40:	0f 28 5e 1a          	movaps 0x1a(%rsi),%xmm3
   15e44:	0f 28 66 2a          	movaps 0x2a(%rsi),%xmm4
   15e48:	0f 28 6e 3a          	movaps 0x3a(%rsi),%xmm5
   15e4c:	66 0f 6f f5          	movdqa %xmm5,%xmm6
   15e50:	66 0f 3a 0f ec 06    	palignr $0x6,%xmm4,%xmm5
   15e56:	48 8d 76 40          	lea    0x40(%rsi),%rsi
   15e5a:	66 0f 3a 0f e3 06    	palignr $0x6,%xmm3,%xmm4
   15e60:	66 0f 3a 0f da 06    	palignr $0x6,%xmm2,%xmm3
   15e66:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   15e6a:	66 0f 3a 0f d1 06    	palignr $0x6,%xmm1,%xmm2
   15e70:	66 0f 6f ce          	movdqa %xmm6,%xmm1
   15e74:	66 0f 7f 57 c0       	movdqa %xmm2,-0x40(%rdi)
   15e79:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   15e7d:	72 0e                	jb     15e8d <__intel_ssse3_memcpy+0xc4d>
   15e7f:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   15e83:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   15e87:	3e 41 ff e1          	ds jmpq *%r9
   15e8b:	0f 0b                	ud2    
   15e8d:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   15e91:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   15e95:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   15e99:	48 01 d7             	add    %rdx,%rdi
   15e9c:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   15ea1:	48 01 d6             	add    %rdx,%rsi
   15ea4:	4c 8d 1d e5 87 00 00 	lea    0x87e5(%rip),%r11        # 1e690 <__func__.2431+0x7>
   15eab:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   15eaf:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   15eb3:	3e ff e2             	ds jmpq *%rdx
   15eb6:	0f 0b                	ud2    
   15eb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15ebf:	00 
   15ec0:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   15ec7:	48 39 ca             	cmp    %rcx,%rdx
   15eca:	0f 28 4e fa          	movaps -0x6(%rsi),%xmm1
   15ece:	72 07                	jb     15ed7 <__intel_ssse3_memcpy+0xc97>
   15ed0:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   15ed7:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   15edb:	3e 41 ff e1          	ds jmpq *%r9
   15edf:	0f 0b                	ud2    
   15ee1:	0f 18 86 40 fe ff ff 	prefetchnta -0x1c0(%rsi)
   15ee8:	0f 28 56 ea          	movaps -0x16(%rsi),%xmm2
   15eec:	48 83 ea 40          	sub    $0x40,%rdx
   15ef0:	0f 28 5e da          	movaps -0x26(%rsi),%xmm3
   15ef4:	0f 28 66 ca          	movaps -0x36(%rsi),%xmm4
   15ef8:	0f 28 6e ba          	movaps -0x46(%rsi),%xmm5
   15efc:	48 8d 76 c0          	lea    -0x40(%rsi),%rsi
   15f00:	66 0f 3a 0f ca 06    	palignr $0x6,%xmm2,%xmm1
   15f06:	66 0f 3a 0f d3 06    	palignr $0x6,%xmm3,%xmm2
   15f0c:	66 0f 3a 0f dc 06    	palignr $0x6,%xmm4,%xmm3
   15f12:	66 0f 3a 0f e5 06    	palignr $0x6,%xmm5,%xmm4
   15f18:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   15f1c:	0f 28 cd             	movaps %xmm5,%xmm1
   15f1f:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   15f23:	48 8d 7f c0          	lea    -0x40(%rdi),%rdi
   15f27:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   15f2b:	72 09                	jb     15f36 <__intel_ssse3_memcpy+0xcf6>
   15f2d:	0f 29 27             	movaps %xmm4,(%rdi)
   15f30:	3e 41 ff e1          	ds jmpq *%r9
   15f34:	0f 0b                	ud2    
   15f36:	0f 29 27             	movaps %xmm4,(%rdi)
   15f39:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   15f3d:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   15f42:	4c 8d 1d 47 87 00 00 	lea    0x8747(%rip),%r11        # 1e690 <__func__.2431+0x7>
   15f49:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   15f4d:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   15f51:	3e ff e2             	ds jmpq *%rdx
   15f54:	0f 0b                	ud2    
   15f56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15f5d:	00 00 00 
   15f60:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   15f67:	48 39 ca             	cmp    %rcx,%rdx
   15f6a:	0f 28 4e f9          	movaps -0x7(%rsi),%xmm1
   15f6e:	72 07                	jb     15f77 <__intel_ssse3_memcpy+0xd37>
   15f70:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   15f77:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   15f7b:	3e 41 ff e1          	ds jmpq *%r9
   15f7f:	0f 0b                	ud2    
   15f81:	0f 18 86 c0 01 00 00 	prefetchnta 0x1c0(%rsi)
   15f88:	48 83 ea 40          	sub    $0x40,%rdx
   15f8c:	0f 28 56 09          	movaps 0x9(%rsi),%xmm2
   15f90:	0f 28 5e 19          	movaps 0x19(%rsi),%xmm3
   15f94:	0f 28 66 29          	movaps 0x29(%rsi),%xmm4
   15f98:	0f 28 6e 39          	movaps 0x39(%rsi),%xmm5
   15f9c:	66 0f 6f f5          	movdqa %xmm5,%xmm6
   15fa0:	66 0f 3a 0f ec 07    	palignr $0x7,%xmm4,%xmm5
   15fa6:	48 8d 76 40          	lea    0x40(%rsi),%rsi
   15faa:	66 0f 3a 0f e3 07    	palignr $0x7,%xmm3,%xmm4
   15fb0:	66 0f 3a 0f da 07    	palignr $0x7,%xmm2,%xmm3
   15fb6:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   15fba:	66 0f 3a 0f d1 07    	palignr $0x7,%xmm1,%xmm2
   15fc0:	66 0f 6f ce          	movdqa %xmm6,%xmm1
   15fc4:	66 0f 7f 57 c0       	movdqa %xmm2,-0x40(%rdi)
   15fc9:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   15fcd:	72 0e                	jb     15fdd <__intel_ssse3_memcpy+0xd9d>
   15fcf:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   15fd3:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   15fd7:	3e 41 ff e1          	ds jmpq *%r9
   15fdb:	0f 0b                	ud2    
   15fdd:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   15fe1:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   15fe5:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   15fe9:	48 01 d7             	add    %rdx,%rdi
   15fec:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   15ff1:	48 01 d6             	add    %rdx,%rsi
   15ff4:	4c 8d 1d 95 86 00 00 	lea    0x8695(%rip),%r11        # 1e690 <__func__.2431+0x7>
   15ffb:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   15fff:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   16003:	3e ff e2             	ds jmpq *%rdx
   16006:	0f 0b                	ud2    
   16008:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1600f:	00 
   16010:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   16017:	48 39 ca             	cmp    %rcx,%rdx
   1601a:	0f 28 4e f9          	movaps -0x7(%rsi),%xmm1
   1601e:	72 07                	jb     16027 <__intel_ssse3_memcpy+0xde7>
   16020:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   16027:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   1602b:	3e 41 ff e1          	ds jmpq *%r9
   1602f:	0f 0b                	ud2    
   16031:	0f 18 86 40 fe ff ff 	prefetchnta -0x1c0(%rsi)
   16038:	0f 28 56 e9          	movaps -0x17(%rsi),%xmm2
   1603c:	48 83 ea 40          	sub    $0x40,%rdx
   16040:	0f 28 5e d9          	movaps -0x27(%rsi),%xmm3
   16044:	0f 28 66 c9          	movaps -0x37(%rsi),%xmm4
   16048:	0f 28 6e b9          	movaps -0x47(%rsi),%xmm5
   1604c:	48 8d 76 c0          	lea    -0x40(%rsi),%rsi
   16050:	66 0f 3a 0f ca 07    	palignr $0x7,%xmm2,%xmm1
   16056:	66 0f 3a 0f d3 07    	palignr $0x7,%xmm3,%xmm2
   1605c:	66 0f 3a 0f dc 07    	palignr $0x7,%xmm4,%xmm3
   16062:	66 0f 3a 0f e5 07    	palignr $0x7,%xmm5,%xmm4
   16068:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   1606c:	0f 28 cd             	movaps %xmm5,%xmm1
   1606f:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   16073:	48 8d 7f c0          	lea    -0x40(%rdi),%rdi
   16077:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   1607b:	72 09                	jb     16086 <__intel_ssse3_memcpy+0xe46>
   1607d:	0f 29 27             	movaps %xmm4,(%rdi)
   16080:	3e 41 ff e1          	ds jmpq *%r9
   16084:	0f 0b                	ud2    
   16086:	0f 29 27             	movaps %xmm4,(%rdi)
   16089:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   1608d:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   16092:	4c 8d 1d f7 85 00 00 	lea    0x85f7(%rip),%r11        # 1e690 <__func__.2431+0x7>
   16099:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1609d:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   160a1:	3e ff e2             	ds jmpq *%rdx
   160a4:	0f 0b                	ud2    
   160a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   160ad:	00 00 00 
   160b0:	4d 8d 89 26 00 00 00 	lea    0x26(%r9),%r9
   160b7:	48 39 ca             	cmp    %rcx,%rdx
   160ba:	0f 28 4e f8          	movaps -0x8(%rsi),%xmm1
   160be:	72 07                	jb     160c7 <__intel_ssse3_memcpy+0xe87>
   160c0:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   160c7:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   160cb:	3e 41 ff e1          	ds jmpq *%r9
   160cf:	0f 18 86 c0 01 00 00 	prefetchnta 0x1c0(%rsi)
   160d6:	48 83 ea 40          	sub    $0x40,%rdx
   160da:	0f 28 56 08          	movaps 0x8(%rsi),%xmm2
   160de:	0f 28 5e 18          	movaps 0x18(%rsi),%xmm3
   160e2:	0f 28 66 28          	movaps 0x28(%rsi),%xmm4
   160e6:	0f 28 6e 38          	movaps 0x38(%rsi),%xmm5
   160ea:	66 0f 6f f5          	movdqa %xmm5,%xmm6
   160ee:	66 0f 3a 0f ec 08    	palignr $0x8,%xmm4,%xmm5
   160f4:	48 8d 76 40          	lea    0x40(%rsi),%rsi
   160f8:	66 0f 3a 0f e3 08    	palignr $0x8,%xmm3,%xmm4
   160fe:	66 0f 3a 0f da 08    	palignr $0x8,%xmm2,%xmm3
   16104:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   16108:	66 0f 3a 0f d1 08    	palignr $0x8,%xmm1,%xmm2
   1610e:	66 0f 6f ce          	movdqa %xmm6,%xmm1
   16112:	66 0f 7f 57 c0       	movdqa %xmm2,-0x40(%rdi)
   16117:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   1611b:	72 13                	jb     16130 <__intel_ssse3_memcpy+0xef0>
   1611d:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   16121:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   16125:	3e 41 ff e1          	ds jmpq *%r9
   16129:	0f 0b                	ud2    
   1612b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16130:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   16134:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   16138:	48 01 d6             	add    %rdx,%rsi
   1613b:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   1613f:	48 01 d7             	add    %rdx,%rdi
   16142:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   16147:	4c 8d 1d 42 85 00 00 	lea    0x8542(%rip),%r11        # 1e690 <__func__.2431+0x7>
   1614e:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   16152:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   16156:	3e ff e2             	ds jmpq *%rdx
   16159:	0f 0b                	ud2    
   1615b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16160:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   16167:	48 39 ca             	cmp    %rcx,%rdx
   1616a:	0f 28 4e f8          	movaps -0x8(%rsi),%xmm1
   1616e:	72 07                	jb     16177 <__intel_ssse3_memcpy+0xf37>
   16170:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   16177:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   1617b:	3e 41 ff e1          	ds jmpq *%r9
   1617f:	0f 0b                	ud2    
   16181:	0f 18 86 40 fe ff ff 	prefetchnta -0x1c0(%rsi)
   16188:	0f 28 56 e8          	movaps -0x18(%rsi),%xmm2
   1618c:	48 83 ea 40          	sub    $0x40,%rdx
   16190:	0f 28 5e d8          	movaps -0x28(%rsi),%xmm3
   16194:	0f 28 66 c8          	movaps -0x38(%rsi),%xmm4
   16198:	0f 28 6e b8          	movaps -0x48(%rsi),%xmm5
   1619c:	48 8d 76 c0          	lea    -0x40(%rsi),%rsi
   161a0:	66 0f 3a 0f ca 08    	palignr $0x8,%xmm2,%xmm1
   161a6:	66 0f 3a 0f d3 08    	palignr $0x8,%xmm3,%xmm2
   161ac:	66 0f 3a 0f dc 08    	palignr $0x8,%xmm4,%xmm3
   161b2:	66 0f 3a 0f e5 08    	palignr $0x8,%xmm5,%xmm4
   161b8:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   161bc:	0f 28 cd             	movaps %xmm5,%xmm1
   161bf:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   161c3:	48 8d 7f c0          	lea    -0x40(%rdi),%rdi
   161c7:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   161cb:	72 09                	jb     161d6 <__intel_ssse3_memcpy+0xf96>
   161cd:	0f 29 27             	movaps %xmm4,(%rdi)
   161d0:	3e 41 ff e1          	ds jmpq *%r9
   161d4:	0f 0b                	ud2    
   161d6:	0f 29 27             	movaps %xmm4,(%rdi)
   161d9:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   161dd:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   161e2:	4c 8d 1d a7 84 00 00 	lea    0x84a7(%rip),%r11        # 1e690 <__func__.2431+0x7>
   161e9:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   161ed:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   161f1:	3e ff e2             	ds jmpq *%rdx
   161f4:	0f 0b                	ud2    
   161f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   161fd:	00 00 00 
   16200:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   16207:	48 39 ca             	cmp    %rcx,%rdx
   1620a:	0f 28 4e f7          	movaps -0x9(%rsi),%xmm1
   1620e:	72 07                	jb     16217 <__intel_ssse3_memcpy+0xfd7>
   16210:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   16217:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   1621b:	3e 41 ff e1          	ds jmpq *%r9
   1621f:	0f 0b                	ud2    
   16221:	0f 18 86 c0 01 00 00 	prefetchnta 0x1c0(%rsi)
   16228:	48 83 ea 40          	sub    $0x40,%rdx
   1622c:	0f 28 56 07          	movaps 0x7(%rsi),%xmm2
   16230:	0f 28 5e 17          	movaps 0x17(%rsi),%xmm3
   16234:	0f 28 66 27          	movaps 0x27(%rsi),%xmm4
   16238:	0f 28 6e 37          	movaps 0x37(%rsi),%xmm5
   1623c:	66 0f 6f f5          	movdqa %xmm5,%xmm6
   16240:	66 0f 3a 0f ec 09    	palignr $0x9,%xmm4,%xmm5
   16246:	48 8d 76 40          	lea    0x40(%rsi),%rsi
   1624a:	66 0f 3a 0f e3 09    	palignr $0x9,%xmm3,%xmm4
   16250:	66 0f 3a 0f da 09    	palignr $0x9,%xmm2,%xmm3
   16256:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   1625a:	66 0f 3a 0f d1 09    	palignr $0x9,%xmm1,%xmm2
   16260:	66 0f 6f ce          	movdqa %xmm6,%xmm1
   16264:	66 0f 7f 57 c0       	movdqa %xmm2,-0x40(%rdi)
   16269:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   1626d:	72 0e                	jb     1627d <__intel_ssse3_memcpy+0x103d>
   1626f:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   16273:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   16277:	3e 41 ff e1          	ds jmpq *%r9
   1627b:	0f 0b                	ud2    
   1627d:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   16281:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   16285:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   16289:	48 01 d7             	add    %rdx,%rdi
   1628c:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   16291:	48 01 d6             	add    %rdx,%rsi
   16294:	4c 8d 1d f5 83 00 00 	lea    0x83f5(%rip),%r11        # 1e690 <__func__.2431+0x7>
   1629b:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1629f:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   162a3:	3e ff e2             	ds jmpq *%rdx
   162a6:	0f 0b                	ud2    
   162a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   162af:	00 
   162b0:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   162b7:	48 39 ca             	cmp    %rcx,%rdx
   162ba:	0f 28 4e f7          	movaps -0x9(%rsi),%xmm1
   162be:	72 07                	jb     162c7 <__intel_ssse3_memcpy+0x1087>
   162c0:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   162c7:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   162cb:	3e 41 ff e1          	ds jmpq *%r9
   162cf:	0f 0b                	ud2    
   162d1:	0f 18 86 40 fe ff ff 	prefetchnta -0x1c0(%rsi)
   162d8:	0f 28 56 e7          	movaps -0x19(%rsi),%xmm2
   162dc:	48 83 ea 40          	sub    $0x40,%rdx
   162e0:	0f 28 5e d7          	movaps -0x29(%rsi),%xmm3
   162e4:	0f 28 66 c7          	movaps -0x39(%rsi),%xmm4
   162e8:	0f 28 6e b7          	movaps -0x49(%rsi),%xmm5
   162ec:	48 8d 76 c0          	lea    -0x40(%rsi),%rsi
   162f0:	66 0f 3a 0f ca 09    	palignr $0x9,%xmm2,%xmm1
   162f6:	66 0f 3a 0f d3 09    	palignr $0x9,%xmm3,%xmm2
   162fc:	66 0f 3a 0f dc 09    	palignr $0x9,%xmm4,%xmm3
   16302:	66 0f 3a 0f e5 09    	palignr $0x9,%xmm5,%xmm4
   16308:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   1630c:	0f 28 cd             	movaps %xmm5,%xmm1
   1630f:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   16313:	48 8d 7f c0          	lea    -0x40(%rdi),%rdi
   16317:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   1631b:	72 09                	jb     16326 <__intel_ssse3_memcpy+0x10e6>
   1631d:	0f 29 27             	movaps %xmm4,(%rdi)
   16320:	3e 41 ff e1          	ds jmpq *%r9
   16324:	0f 0b                	ud2    
   16326:	0f 29 27             	movaps %xmm4,(%rdi)
   16329:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   1632d:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   16332:	4c 8d 1d 57 83 00 00 	lea    0x8357(%rip),%r11        # 1e690 <__func__.2431+0x7>
   16339:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1633d:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   16341:	3e ff e2             	ds jmpq *%rdx
   16344:	0f 0b                	ud2    
   16346:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1634d:	00 00 00 
   16350:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   16357:	48 39 ca             	cmp    %rcx,%rdx
   1635a:	0f 28 4e f6          	movaps -0xa(%rsi),%xmm1
   1635e:	72 07                	jb     16367 <__intel_ssse3_memcpy+0x1127>
   16360:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   16367:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   1636b:	3e 41 ff e1          	ds jmpq *%r9
   1636f:	0f 0b                	ud2    
   16371:	0f 18 86 c0 01 00 00 	prefetchnta 0x1c0(%rsi)
   16378:	48 83 ea 40          	sub    $0x40,%rdx
   1637c:	0f 28 56 06          	movaps 0x6(%rsi),%xmm2
   16380:	0f 28 5e 16          	movaps 0x16(%rsi),%xmm3
   16384:	0f 28 66 26          	movaps 0x26(%rsi),%xmm4
   16388:	0f 28 6e 36          	movaps 0x36(%rsi),%xmm5
   1638c:	66 0f 6f f5          	movdqa %xmm5,%xmm6
   16390:	66 0f 3a 0f ec 0a    	palignr $0xa,%xmm4,%xmm5
   16396:	48 8d 76 40          	lea    0x40(%rsi),%rsi
   1639a:	66 0f 3a 0f e3 0a    	palignr $0xa,%xmm3,%xmm4
   163a0:	66 0f 3a 0f da 0a    	palignr $0xa,%xmm2,%xmm3
   163a6:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   163aa:	66 0f 3a 0f d1 0a    	palignr $0xa,%xmm1,%xmm2
   163b0:	66 0f 6f ce          	movdqa %xmm6,%xmm1
   163b4:	66 0f 7f 57 c0       	movdqa %xmm2,-0x40(%rdi)
   163b9:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   163bd:	72 0e                	jb     163cd <__intel_ssse3_memcpy+0x118d>
   163bf:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   163c3:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   163c7:	3e 41 ff e1          	ds jmpq *%r9
   163cb:	0f 0b                	ud2    
   163cd:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   163d1:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   163d5:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   163d9:	48 01 d7             	add    %rdx,%rdi
   163dc:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   163e1:	48 01 d6             	add    %rdx,%rsi
   163e4:	4c 8d 1d a5 82 00 00 	lea    0x82a5(%rip),%r11        # 1e690 <__func__.2431+0x7>
   163eb:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   163ef:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   163f3:	3e ff e2             	ds jmpq *%rdx
   163f6:	0f 0b                	ud2    
   163f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   163ff:	00 
   16400:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   16407:	48 39 ca             	cmp    %rcx,%rdx
   1640a:	0f 28 4e f6          	movaps -0xa(%rsi),%xmm1
   1640e:	72 07                	jb     16417 <__intel_ssse3_memcpy+0x11d7>
   16410:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   16417:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   1641b:	3e 41 ff e1          	ds jmpq *%r9
   1641f:	0f 0b                	ud2    
   16421:	0f 18 86 40 fe ff ff 	prefetchnta -0x1c0(%rsi)
   16428:	0f 28 56 e6          	movaps -0x1a(%rsi),%xmm2
   1642c:	48 83 ea 40          	sub    $0x40,%rdx
   16430:	0f 28 5e d6          	movaps -0x2a(%rsi),%xmm3
   16434:	0f 28 66 c6          	movaps -0x3a(%rsi),%xmm4
   16438:	0f 28 6e b6          	movaps -0x4a(%rsi),%xmm5
   1643c:	48 8d 76 c0          	lea    -0x40(%rsi),%rsi
   16440:	66 0f 3a 0f ca 0a    	palignr $0xa,%xmm2,%xmm1
   16446:	66 0f 3a 0f d3 0a    	palignr $0xa,%xmm3,%xmm2
   1644c:	66 0f 3a 0f dc 0a    	palignr $0xa,%xmm4,%xmm3
   16452:	66 0f 3a 0f e5 0a    	palignr $0xa,%xmm5,%xmm4
   16458:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   1645c:	0f 28 cd             	movaps %xmm5,%xmm1
   1645f:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   16463:	48 8d 7f c0          	lea    -0x40(%rdi),%rdi
   16467:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   1646b:	72 09                	jb     16476 <__intel_ssse3_memcpy+0x1236>
   1646d:	0f 29 27             	movaps %xmm4,(%rdi)
   16470:	3e 41 ff e1          	ds jmpq *%r9
   16474:	0f 0b                	ud2    
   16476:	0f 29 27             	movaps %xmm4,(%rdi)
   16479:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   1647d:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   16482:	4c 8d 1d 07 82 00 00 	lea    0x8207(%rip),%r11        # 1e690 <__func__.2431+0x7>
   16489:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1648d:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   16491:	3e ff e2             	ds jmpq *%rdx
   16494:	0f 0b                	ud2    
   16496:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1649d:	00 00 00 
   164a0:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   164a7:	48 39 ca             	cmp    %rcx,%rdx
   164aa:	0f 28 4e f5          	movaps -0xb(%rsi),%xmm1
   164ae:	72 07                	jb     164b7 <__intel_ssse3_memcpy+0x1277>
   164b0:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   164b7:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   164bb:	3e 41 ff e1          	ds jmpq *%r9
   164bf:	0f 0b                	ud2    
   164c1:	0f 18 86 c0 01 00 00 	prefetchnta 0x1c0(%rsi)
   164c8:	48 83 ea 40          	sub    $0x40,%rdx
   164cc:	0f 28 56 05          	movaps 0x5(%rsi),%xmm2
   164d0:	0f 28 5e 15          	movaps 0x15(%rsi),%xmm3
   164d4:	0f 28 66 25          	movaps 0x25(%rsi),%xmm4
   164d8:	0f 28 6e 35          	movaps 0x35(%rsi),%xmm5
   164dc:	66 0f 6f f5          	movdqa %xmm5,%xmm6
   164e0:	66 0f 3a 0f ec 0b    	palignr $0xb,%xmm4,%xmm5
   164e6:	48 8d 76 40          	lea    0x40(%rsi),%rsi
   164ea:	66 0f 3a 0f e3 0b    	palignr $0xb,%xmm3,%xmm4
   164f0:	66 0f 3a 0f da 0b    	palignr $0xb,%xmm2,%xmm3
   164f6:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   164fa:	66 0f 3a 0f d1 0b    	palignr $0xb,%xmm1,%xmm2
   16500:	66 0f 6f ce          	movdqa %xmm6,%xmm1
   16504:	66 0f 7f 57 c0       	movdqa %xmm2,-0x40(%rdi)
   16509:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   1650d:	72 0e                	jb     1651d <__intel_ssse3_memcpy+0x12dd>
   1650f:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   16513:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   16517:	3e 41 ff e1          	ds jmpq *%r9
   1651b:	0f 0b                	ud2    
   1651d:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   16521:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   16525:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   16529:	48 01 d7             	add    %rdx,%rdi
   1652c:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   16531:	48 01 d6             	add    %rdx,%rsi
   16534:	4c 8d 1d 55 81 00 00 	lea    0x8155(%rip),%r11        # 1e690 <__func__.2431+0x7>
   1653b:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1653f:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   16543:	3e ff e2             	ds jmpq *%rdx
   16546:	0f 0b                	ud2    
   16548:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1654f:	00 
   16550:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   16557:	48 39 ca             	cmp    %rcx,%rdx
   1655a:	0f 28 4e f5          	movaps -0xb(%rsi),%xmm1
   1655e:	72 07                	jb     16567 <__intel_ssse3_memcpy+0x1327>
   16560:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   16567:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   1656b:	3e 41 ff e1          	ds jmpq *%r9
   1656f:	0f 0b                	ud2    
   16571:	0f 18 86 40 fe ff ff 	prefetchnta -0x1c0(%rsi)
   16578:	0f 28 56 e5          	movaps -0x1b(%rsi),%xmm2
   1657c:	48 83 ea 40          	sub    $0x40,%rdx
   16580:	0f 28 5e d5          	movaps -0x2b(%rsi),%xmm3
   16584:	0f 28 66 c5          	movaps -0x3b(%rsi),%xmm4
   16588:	0f 28 6e b5          	movaps -0x4b(%rsi),%xmm5
   1658c:	48 8d 76 c0          	lea    -0x40(%rsi),%rsi
   16590:	66 0f 3a 0f ca 0b    	palignr $0xb,%xmm2,%xmm1
   16596:	66 0f 3a 0f d3 0b    	palignr $0xb,%xmm3,%xmm2
   1659c:	66 0f 3a 0f dc 0b    	palignr $0xb,%xmm4,%xmm3
   165a2:	66 0f 3a 0f e5 0b    	palignr $0xb,%xmm5,%xmm4
   165a8:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   165ac:	0f 28 cd             	movaps %xmm5,%xmm1
   165af:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   165b3:	48 8d 7f c0          	lea    -0x40(%rdi),%rdi
   165b7:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   165bb:	72 09                	jb     165c6 <__intel_ssse3_memcpy+0x1386>
   165bd:	0f 29 27             	movaps %xmm4,(%rdi)
   165c0:	3e 41 ff e1          	ds jmpq *%r9
   165c4:	0f 0b                	ud2    
   165c6:	0f 29 27             	movaps %xmm4,(%rdi)
   165c9:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   165cd:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   165d2:	4c 8d 1d b7 80 00 00 	lea    0x80b7(%rip),%r11        # 1e690 <__func__.2431+0x7>
   165d9:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   165dd:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   165e1:	3e ff e2             	ds jmpq *%rdx
   165e4:	0f 0b                	ud2    
   165e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   165ed:	00 00 00 
   165f0:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   165f7:	48 39 ca             	cmp    %rcx,%rdx
   165fa:	0f 28 4e f4          	movaps -0xc(%rsi),%xmm1
   165fe:	72 07                	jb     16607 <__intel_ssse3_memcpy+0x13c7>
   16600:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   16607:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   1660b:	3e 41 ff e1          	ds jmpq *%r9
   1660f:	0f 0b                	ud2    
   16611:	0f 18 86 c0 01 00 00 	prefetchnta 0x1c0(%rsi)
   16618:	48 83 ea 40          	sub    $0x40,%rdx
   1661c:	0f 28 56 04          	movaps 0x4(%rsi),%xmm2
   16620:	0f 28 5e 14          	movaps 0x14(%rsi),%xmm3
   16624:	0f 28 66 24          	movaps 0x24(%rsi),%xmm4
   16628:	0f 28 6e 34          	movaps 0x34(%rsi),%xmm5
   1662c:	66 0f 6f f5          	movdqa %xmm5,%xmm6
   16630:	66 0f 3a 0f ec 0c    	palignr $0xc,%xmm4,%xmm5
   16636:	48 8d 76 40          	lea    0x40(%rsi),%rsi
   1663a:	66 0f 3a 0f e3 0c    	palignr $0xc,%xmm3,%xmm4
   16640:	66 0f 3a 0f da 0c    	palignr $0xc,%xmm2,%xmm3
   16646:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   1664a:	66 0f 3a 0f d1 0c    	palignr $0xc,%xmm1,%xmm2
   16650:	66 0f 6f ce          	movdqa %xmm6,%xmm1
   16654:	66 0f 7f 57 c0       	movdqa %xmm2,-0x40(%rdi)
   16659:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   1665d:	72 0e                	jb     1666d <__intel_ssse3_memcpy+0x142d>
   1665f:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   16663:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   16667:	3e 41 ff e1          	ds jmpq *%r9
   1666b:	0f 0b                	ud2    
   1666d:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   16671:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   16675:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   16679:	48 01 d7             	add    %rdx,%rdi
   1667c:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   16681:	48 01 d6             	add    %rdx,%rsi
   16684:	4c 8d 1d 05 80 00 00 	lea    0x8005(%rip),%r11        # 1e690 <__func__.2431+0x7>
   1668b:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1668f:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   16693:	3e ff e2             	ds jmpq *%rdx
   16696:	0f 0b                	ud2    
   16698:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1669f:	00 
   166a0:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   166a7:	48 39 ca             	cmp    %rcx,%rdx
   166aa:	0f 28 4e f4          	movaps -0xc(%rsi),%xmm1
   166ae:	72 07                	jb     166b7 <__intel_ssse3_memcpy+0x1477>
   166b0:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   166b7:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   166bb:	3e 41 ff e1          	ds jmpq *%r9
   166bf:	0f 0b                	ud2    
   166c1:	0f 18 86 40 fe ff ff 	prefetchnta -0x1c0(%rsi)
   166c8:	0f 28 56 e4          	movaps -0x1c(%rsi),%xmm2
   166cc:	48 83 ea 40          	sub    $0x40,%rdx
   166d0:	0f 28 5e d4          	movaps -0x2c(%rsi),%xmm3
   166d4:	0f 28 66 c4          	movaps -0x3c(%rsi),%xmm4
   166d8:	0f 28 6e b4          	movaps -0x4c(%rsi),%xmm5
   166dc:	48 8d 76 c0          	lea    -0x40(%rsi),%rsi
   166e0:	66 0f 3a 0f ca 0c    	palignr $0xc,%xmm2,%xmm1
   166e6:	66 0f 3a 0f d3 0c    	palignr $0xc,%xmm3,%xmm2
   166ec:	66 0f 3a 0f dc 0c    	palignr $0xc,%xmm4,%xmm3
   166f2:	66 0f 3a 0f e5 0c    	palignr $0xc,%xmm5,%xmm4
   166f8:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   166fc:	0f 28 cd             	movaps %xmm5,%xmm1
   166ff:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   16703:	48 8d 7f c0          	lea    -0x40(%rdi),%rdi
   16707:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   1670b:	72 09                	jb     16716 <__intel_ssse3_memcpy+0x14d6>
   1670d:	0f 29 27             	movaps %xmm4,(%rdi)
   16710:	3e 41 ff e1          	ds jmpq *%r9
   16714:	0f 0b                	ud2    
   16716:	0f 29 27             	movaps %xmm4,(%rdi)
   16719:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   1671d:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   16722:	4c 8d 1d 67 7f 00 00 	lea    0x7f67(%rip),%r11        # 1e690 <__func__.2431+0x7>
   16729:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1672d:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   16731:	3e ff e2             	ds jmpq *%rdx
   16734:	0f 0b                	ud2    
   16736:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1673d:	00 00 00 
   16740:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   16747:	48 39 ca             	cmp    %rcx,%rdx
   1674a:	0f 28 4e f3          	movaps -0xd(%rsi),%xmm1
   1674e:	72 07                	jb     16757 <__intel_ssse3_memcpy+0x1517>
   16750:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   16757:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   1675b:	3e 41 ff e1          	ds jmpq *%r9
   1675f:	0f 0b                	ud2    
   16761:	0f 18 86 c0 01 00 00 	prefetchnta 0x1c0(%rsi)
   16768:	48 83 ea 40          	sub    $0x40,%rdx
   1676c:	0f 28 56 03          	movaps 0x3(%rsi),%xmm2
   16770:	0f 28 5e 13          	movaps 0x13(%rsi),%xmm3
   16774:	0f 28 66 23          	movaps 0x23(%rsi),%xmm4
   16778:	0f 28 6e 33          	movaps 0x33(%rsi),%xmm5
   1677c:	66 0f 6f f5          	movdqa %xmm5,%xmm6
   16780:	66 0f 3a 0f ec 0d    	palignr $0xd,%xmm4,%xmm5
   16786:	48 8d 76 40          	lea    0x40(%rsi),%rsi
   1678a:	66 0f 3a 0f e3 0d    	palignr $0xd,%xmm3,%xmm4
   16790:	66 0f 3a 0f da 0d    	palignr $0xd,%xmm2,%xmm3
   16796:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   1679a:	66 0f 3a 0f d1 0d    	palignr $0xd,%xmm1,%xmm2
   167a0:	66 0f 6f ce          	movdqa %xmm6,%xmm1
   167a4:	66 0f 7f 57 c0       	movdqa %xmm2,-0x40(%rdi)
   167a9:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   167ad:	72 0e                	jb     167bd <__intel_ssse3_memcpy+0x157d>
   167af:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   167b3:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   167b7:	3e 41 ff e1          	ds jmpq *%r9
   167bb:	0f 0b                	ud2    
   167bd:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   167c1:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   167c5:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   167c9:	48 01 d7             	add    %rdx,%rdi
   167cc:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   167d1:	48 01 d6             	add    %rdx,%rsi
   167d4:	4c 8d 1d b5 7e 00 00 	lea    0x7eb5(%rip),%r11        # 1e690 <__func__.2431+0x7>
   167db:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   167df:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   167e3:	3e ff e2             	ds jmpq *%rdx
   167e6:	0f 0b                	ud2    
   167e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   167ef:	00 
   167f0:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   167f7:	48 39 ca             	cmp    %rcx,%rdx
   167fa:	0f 28 4e f3          	movaps -0xd(%rsi),%xmm1
   167fe:	72 07                	jb     16807 <__intel_ssse3_memcpy+0x15c7>
   16800:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   16807:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   1680b:	3e 41 ff e1          	ds jmpq *%r9
   1680f:	0f 0b                	ud2    
   16811:	0f 18 86 40 fe ff ff 	prefetchnta -0x1c0(%rsi)
   16818:	0f 28 56 e3          	movaps -0x1d(%rsi),%xmm2
   1681c:	48 83 ea 40          	sub    $0x40,%rdx
   16820:	0f 28 5e d3          	movaps -0x2d(%rsi),%xmm3
   16824:	0f 28 66 c3          	movaps -0x3d(%rsi),%xmm4
   16828:	0f 28 6e b3          	movaps -0x4d(%rsi),%xmm5
   1682c:	48 8d 76 c0          	lea    -0x40(%rsi),%rsi
   16830:	66 0f 3a 0f ca 0d    	palignr $0xd,%xmm2,%xmm1
   16836:	66 0f 3a 0f d3 0d    	palignr $0xd,%xmm3,%xmm2
   1683c:	66 0f 3a 0f dc 0d    	palignr $0xd,%xmm4,%xmm3
   16842:	66 0f 3a 0f e5 0d    	palignr $0xd,%xmm5,%xmm4
   16848:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   1684c:	0f 28 cd             	movaps %xmm5,%xmm1
   1684f:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   16853:	48 8d 7f c0          	lea    -0x40(%rdi),%rdi
   16857:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   1685b:	72 09                	jb     16866 <__intel_ssse3_memcpy+0x1626>
   1685d:	0f 29 27             	movaps %xmm4,(%rdi)
   16860:	3e 41 ff e1          	ds jmpq *%r9
   16864:	0f 0b                	ud2    
   16866:	0f 29 27             	movaps %xmm4,(%rdi)
   16869:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   1686d:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   16872:	4c 8d 1d 17 7e 00 00 	lea    0x7e17(%rip),%r11        # 1e690 <__func__.2431+0x7>
   16879:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1687d:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   16881:	3e ff e2             	ds jmpq *%rdx
   16884:	0f 0b                	ud2    
   16886:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1688d:	00 00 00 
   16890:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   16897:	48 39 ca             	cmp    %rcx,%rdx
   1689a:	0f 28 4e f2          	movaps -0xe(%rsi),%xmm1
   1689e:	72 07                	jb     168a7 <__intel_ssse3_memcpy+0x1667>
   168a0:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   168a7:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   168ab:	3e 41 ff e1          	ds jmpq *%r9
   168af:	0f 0b                	ud2    
   168b1:	0f 18 86 c0 01 00 00 	prefetchnta 0x1c0(%rsi)
   168b8:	48 83 ea 40          	sub    $0x40,%rdx
   168bc:	0f 28 56 02          	movaps 0x2(%rsi),%xmm2
   168c0:	0f 28 5e 12          	movaps 0x12(%rsi),%xmm3
   168c4:	0f 28 66 22          	movaps 0x22(%rsi),%xmm4
   168c8:	0f 28 6e 32          	movaps 0x32(%rsi),%xmm5
   168cc:	66 0f 6f f5          	movdqa %xmm5,%xmm6
   168d0:	66 0f 3a 0f ec 0e    	palignr $0xe,%xmm4,%xmm5
   168d6:	48 8d 76 40          	lea    0x40(%rsi),%rsi
   168da:	66 0f 3a 0f e3 0e    	palignr $0xe,%xmm3,%xmm4
   168e0:	66 0f 3a 0f da 0e    	palignr $0xe,%xmm2,%xmm3
   168e6:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   168ea:	66 0f 3a 0f d1 0e    	palignr $0xe,%xmm1,%xmm2
   168f0:	66 0f 6f ce          	movdqa %xmm6,%xmm1
   168f4:	66 0f 7f 57 c0       	movdqa %xmm2,-0x40(%rdi)
   168f9:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   168fd:	72 0e                	jb     1690d <__intel_ssse3_memcpy+0x16cd>
   168ff:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   16903:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   16907:	3e 41 ff e1          	ds jmpq *%r9
   1690b:	0f 0b                	ud2    
   1690d:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   16911:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   16915:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   16919:	48 01 d7             	add    %rdx,%rdi
   1691c:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   16921:	48 01 d6             	add    %rdx,%rsi
   16924:	4c 8d 1d 65 7d 00 00 	lea    0x7d65(%rip),%r11        # 1e690 <__func__.2431+0x7>
   1692b:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1692f:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   16933:	3e ff e2             	ds jmpq *%rdx
   16936:	0f 0b                	ud2    
   16938:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1693f:	00 
   16940:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   16947:	48 39 ca             	cmp    %rcx,%rdx
   1694a:	0f 28 4e f2          	movaps -0xe(%rsi),%xmm1
   1694e:	72 07                	jb     16957 <__intel_ssse3_memcpy+0x1717>
   16950:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   16957:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   1695b:	3e 41 ff e1          	ds jmpq *%r9
   1695f:	0f 0b                	ud2    
   16961:	0f 18 86 40 fe ff ff 	prefetchnta -0x1c0(%rsi)
   16968:	0f 28 56 e2          	movaps -0x1e(%rsi),%xmm2
   1696c:	48 83 ea 40          	sub    $0x40,%rdx
   16970:	0f 28 5e d2          	movaps -0x2e(%rsi),%xmm3
   16974:	0f 28 66 c2          	movaps -0x3e(%rsi),%xmm4
   16978:	0f 28 6e b2          	movaps -0x4e(%rsi),%xmm5
   1697c:	48 8d 76 c0          	lea    -0x40(%rsi),%rsi
   16980:	66 0f 3a 0f ca 0e    	palignr $0xe,%xmm2,%xmm1
   16986:	66 0f 3a 0f d3 0e    	palignr $0xe,%xmm3,%xmm2
   1698c:	66 0f 3a 0f dc 0e    	palignr $0xe,%xmm4,%xmm3
   16992:	66 0f 3a 0f e5 0e    	palignr $0xe,%xmm5,%xmm4
   16998:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   1699c:	0f 28 cd             	movaps %xmm5,%xmm1
   1699f:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   169a3:	48 8d 7f c0          	lea    -0x40(%rdi),%rdi
   169a7:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   169ab:	72 09                	jb     169b6 <__intel_ssse3_memcpy+0x1776>
   169ad:	0f 29 27             	movaps %xmm4,(%rdi)
   169b0:	3e 41 ff e1          	ds jmpq *%r9
   169b4:	0f 0b                	ud2    
   169b6:	0f 29 27             	movaps %xmm4,(%rdi)
   169b9:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   169bd:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   169c2:	4c 8d 1d c7 7c 00 00 	lea    0x7cc7(%rip),%r11        # 1e690 <__func__.2431+0x7>
   169c9:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   169cd:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   169d1:	3e ff e2             	ds jmpq *%rdx
   169d4:	0f 0b                	ud2    
   169d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   169dd:	00 00 00 
   169e0:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   169e7:	48 39 ca             	cmp    %rcx,%rdx
   169ea:	0f 28 4e f1          	movaps -0xf(%rsi),%xmm1
   169ee:	72 07                	jb     169f7 <__intel_ssse3_memcpy+0x17b7>
   169f0:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   169f7:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   169fb:	3e 41 ff e1          	ds jmpq *%r9
   169ff:	0f 0b                	ud2    
   16a01:	0f 18 86 c0 01 00 00 	prefetchnta 0x1c0(%rsi)
   16a08:	48 83 ea 40          	sub    $0x40,%rdx
   16a0c:	0f 28 56 01          	movaps 0x1(%rsi),%xmm2
   16a10:	0f 28 5e 11          	movaps 0x11(%rsi),%xmm3
   16a14:	0f 28 66 21          	movaps 0x21(%rsi),%xmm4
   16a18:	0f 28 6e 31          	movaps 0x31(%rsi),%xmm5
   16a1c:	66 0f 6f f5          	movdqa %xmm5,%xmm6
   16a20:	66 0f 3a 0f ec 0f    	palignr $0xf,%xmm4,%xmm5
   16a26:	48 8d 76 40          	lea    0x40(%rsi),%rsi
   16a2a:	66 0f 3a 0f e3 0f    	palignr $0xf,%xmm3,%xmm4
   16a30:	66 0f 3a 0f da 0f    	palignr $0xf,%xmm2,%xmm3
   16a36:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   16a3a:	66 0f 3a 0f d1 0f    	palignr $0xf,%xmm1,%xmm2
   16a40:	66 0f 6f ce          	movdqa %xmm6,%xmm1
   16a44:	66 0f 7f 57 c0       	movdqa %xmm2,-0x40(%rdi)
   16a49:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   16a4d:	72 0e                	jb     16a5d <__intel_ssse3_memcpy+0x181d>
   16a4f:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   16a53:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   16a57:	3e 41 ff e1          	ds jmpq *%r9
   16a5b:	0f 0b                	ud2    
   16a5d:	0f 29 67 e0          	movaps %xmm4,-0x20(%rdi)
   16a61:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   16a65:	0f 29 6f f0          	movaps %xmm5,-0x10(%rdi)
   16a69:	48 01 d7             	add    %rdx,%rdi
   16a6c:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   16a71:	48 01 d6             	add    %rdx,%rsi
   16a74:	4c 8d 1d 15 7c 00 00 	lea    0x7c15(%rip),%r11        # 1e690 <__func__.2431+0x7>
   16a7b:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   16a7f:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   16a83:	3e ff e2             	ds jmpq *%rdx
   16a86:	0f 0b                	ud2    
   16a88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   16a8f:	00 
   16a90:	4d 8d 89 28 00 00 00 	lea    0x28(%r9),%r9
   16a97:	48 39 ca             	cmp    %rcx,%rdx
   16a9a:	0f 28 4e f1          	movaps -0xf(%rsi),%xmm1
   16a9e:	72 07                	jb     16aa7 <__intel_ssse3_memcpy+0x1867>
   16aa0:	4d 8d 89 f9 ff ff ff 	lea    -0x7(%r9),%r9
   16aa7:	48 8d 52 c0          	lea    -0x40(%rdx),%rdx
   16aab:	3e 41 ff e1          	ds jmpq *%r9
   16aaf:	0f 0b                	ud2    
   16ab1:	0f 18 86 40 fe ff ff 	prefetchnta -0x1c0(%rsi)
   16ab8:	0f 28 56 e1          	movaps -0x1f(%rsi),%xmm2
   16abc:	48 83 ea 40          	sub    $0x40,%rdx
   16ac0:	0f 28 5e d1          	movaps -0x2f(%rsi),%xmm3
   16ac4:	0f 28 66 c1          	movaps -0x3f(%rsi),%xmm4
   16ac8:	0f 28 6e b1          	movaps -0x4f(%rsi),%xmm5
   16acc:	48 8d 76 c0          	lea    -0x40(%rsi),%rsi
   16ad0:	66 0f 3a 0f ca 0f    	palignr $0xf,%xmm2,%xmm1
   16ad6:	66 0f 3a 0f d3 0f    	palignr $0xf,%xmm3,%xmm2
   16adc:	66 0f 3a 0f dc 0f    	palignr $0xf,%xmm4,%xmm3
   16ae2:	66 0f 3a 0f e5 0f    	palignr $0xf,%xmm5,%xmm4
   16ae8:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   16aec:	0f 28 cd             	movaps %xmm5,%xmm1
   16aef:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   16af3:	48 8d 7f c0          	lea    -0x40(%rdi),%rdi
   16af7:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   16afb:	72 09                	jb     16b06 <__intel_ssse3_memcpy+0x18c6>
   16afd:	0f 29 27             	movaps %xmm4,(%rdi)
   16b00:	3e 41 ff e1          	ds jmpq *%r9
   16b04:	0f 0b                	ud2    
   16b06:	0f 29 27             	movaps %xmm4,(%rdi)
   16b09:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   16b0d:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   16b12:	4c 8d 1d 77 7b 00 00 	lea    0x7b77(%rip),%r11        # 1e690 <__func__.2431+0x7>
   16b19:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   16b1d:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   16b21:	3e ff e2             	ds jmpq *%rdx
   16b24:	0f 0b                	ud2    
   16b26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16b2d:	00 00 00 
   16b30:	f3 0f 6f 46 b8       	movdqu -0x48(%rsi),%xmm0
   16b35:	f3 0f 6f 4e c8       	movdqu -0x38(%rsi),%xmm1
   16b3a:	4c 8b 46 d8          	mov    -0x28(%rsi),%r8
   16b3e:	4c 8b 4e e0          	mov    -0x20(%rsi),%r9
   16b42:	4c 8b 56 e8          	mov    -0x18(%rsi),%r10
   16b46:	4c 8b 5e f0          	mov    -0x10(%rsi),%r11
   16b4a:	48 8b 4e f8          	mov    -0x8(%rsi),%rcx
   16b4e:	f3 0f 7f 47 b8       	movdqu %xmm0,-0x48(%rdi)
   16b53:	f3 0f 7f 4f c8       	movdqu %xmm1,-0x38(%rdi)
   16b58:	4c 89 47 d8          	mov    %r8,-0x28(%rdi)
   16b5c:	4c 89 4f e0          	mov    %r9,-0x20(%rdi)
   16b60:	4c 89 57 e8          	mov    %r10,-0x18(%rdi)
   16b64:	4c 89 5f f0          	mov    %r11,-0x10(%rdi)
   16b68:	48 89 4f f8          	mov    %rcx,-0x8(%rdi)
   16b6c:	c3                   	retq   
   16b6d:	0f 1f 00             	nopl   (%rax)
   16b70:	f3 0f 6f 46 c0       	movdqu -0x40(%rsi),%xmm0
   16b75:	48 8b 4e d0          	mov    -0x30(%rsi),%rcx
   16b79:	4c 8b 46 d8          	mov    -0x28(%rsi),%r8
   16b7d:	4c 8b 4e e0          	mov    -0x20(%rsi),%r9
   16b81:	4c 8b 56 e8          	mov    -0x18(%rsi),%r10
   16b85:	4c 8b 5e f0          	mov    -0x10(%rsi),%r11
   16b89:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   16b8d:	f3 0f 7f 47 c0       	movdqu %xmm0,-0x40(%rdi)
   16b92:	48 89 4f d0          	mov    %rcx,-0x30(%rdi)
   16b96:	4c 89 47 d8          	mov    %r8,-0x28(%rdi)
   16b9a:	4c 89 4f e0          	mov    %r9,-0x20(%rdi)
   16b9e:	4c 89 57 e8          	mov    %r10,-0x18(%rdi)
   16ba2:	4c 89 5f f0          	mov    %r11,-0x10(%rdi)
   16ba6:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   16baa:	c3                   	retq   
   16bab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16bb0:	f3 0f 6f 46 c8       	movdqu -0x38(%rsi),%xmm0
   16bb5:	4c 8b 46 d8          	mov    -0x28(%rsi),%r8
   16bb9:	4c 8b 4e e0          	mov    -0x20(%rsi),%r9
   16bbd:	4c 8b 56 e8          	mov    -0x18(%rsi),%r10
   16bc1:	4c 8b 5e f0          	mov    -0x10(%rsi),%r11
   16bc5:	48 8b 4e f8          	mov    -0x8(%rsi),%rcx
   16bc9:	f3 0f 7f 47 c8       	movdqu %xmm0,-0x38(%rdi)
   16bce:	4c 89 47 d8          	mov    %r8,-0x28(%rdi)
   16bd2:	4c 89 4f e0          	mov    %r9,-0x20(%rdi)
   16bd6:	4c 89 57 e8          	mov    %r10,-0x18(%rdi)
   16bda:	4c 89 5f f0          	mov    %r11,-0x10(%rdi)
   16bde:	48 89 4f f8          	mov    %rcx,-0x8(%rdi)
   16be2:	c3                   	retq   
   16be3:	0f 1f 00             	nopl   (%rax)
   16be6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16bed:	00 00 00 
   16bf0:	48 8b 4e d0          	mov    -0x30(%rsi),%rcx
   16bf4:	4c 8b 46 d8          	mov    -0x28(%rsi),%r8
   16bf8:	4c 8b 4e e0          	mov    -0x20(%rsi),%r9
   16bfc:	4c 8b 56 e8          	mov    -0x18(%rsi),%r10
   16c00:	4c 8b 5e f0          	mov    -0x10(%rsi),%r11
   16c04:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   16c08:	48 89 4f d0          	mov    %rcx,-0x30(%rdi)
   16c0c:	4c 89 47 d8          	mov    %r8,-0x28(%rdi)
   16c10:	4c 89 4f e0          	mov    %r9,-0x20(%rdi)
   16c14:	4c 89 57 e8          	mov    %r10,-0x18(%rdi)
   16c18:	4c 89 5f f0          	mov    %r11,-0x10(%rdi)
   16c1c:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   16c20:	c3                   	retq   
   16c21:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16c26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16c2d:	00 00 00 
   16c30:	4c 8b 46 d8          	mov    -0x28(%rsi),%r8
   16c34:	4c 8b 4e e0          	mov    -0x20(%rsi),%r9
   16c38:	4c 8b 56 e8          	mov    -0x18(%rsi),%r10
   16c3c:	4c 8b 5e f0          	mov    -0x10(%rsi),%r11
   16c40:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   16c44:	4c 89 47 d8          	mov    %r8,-0x28(%rdi)
   16c48:	4c 89 4f e0          	mov    %r9,-0x20(%rdi)
   16c4c:	4c 89 57 e8          	mov    %r10,-0x18(%rdi)
   16c50:	4c 89 5f f0          	mov    %r11,-0x10(%rdi)
   16c54:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   16c58:	c3                   	retq   
   16c59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16c60:	4c 8b 4e e0          	mov    -0x20(%rsi),%r9
   16c64:	4c 8b 56 e8          	mov    -0x18(%rsi),%r10
   16c68:	4c 8b 5e f0          	mov    -0x10(%rsi),%r11
   16c6c:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   16c70:	4c 89 4f e0          	mov    %r9,-0x20(%rdi)
   16c74:	4c 89 57 e8          	mov    %r10,-0x18(%rdi)
   16c78:	4c 89 5f f0          	mov    %r11,-0x10(%rdi)
   16c7c:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   16c80:	c3                   	retq   
   16c81:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16c86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16c8d:	00 00 00 
   16c90:	4c 8b 56 e8          	mov    -0x18(%rsi),%r10
   16c94:	4c 8b 5e f0          	mov    -0x10(%rsi),%r11
   16c98:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   16c9c:	4c 89 57 e8          	mov    %r10,-0x18(%rdi)
   16ca0:	4c 89 5f f0          	mov    %r11,-0x10(%rdi)
   16ca4:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   16ca8:	c3                   	retq   
   16ca9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16cb0:	4c 8b 5e f0          	mov    -0x10(%rsi),%r11
   16cb4:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   16cb8:	4c 89 5f f0          	mov    %r11,-0x10(%rdi)
   16cbc:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   16cc0:	c3                   	retq   
   16cc1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16cc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16ccd:	00 00 00 
   16cd0:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   16cd4:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   16cd8:	c3                   	retq   
   16cd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16ce0:	f3 0f 6f 46 b7       	movdqu -0x49(%rsi),%xmm0
   16ce5:	f3 0f 6f 4e c7       	movdqu -0x39(%rsi),%xmm1
   16cea:	48 8b 4e d7          	mov    -0x29(%rsi),%rcx
   16cee:	4c 8b 4e df          	mov    -0x21(%rsi),%r9
   16cf2:	4c 8b 56 e7          	mov    -0x19(%rsi),%r10
   16cf6:	4c 8b 5e ef          	mov    -0x11(%rsi),%r11
   16cfa:	4c 8b 46 f7          	mov    -0x9(%rsi),%r8
   16cfe:	8b 56 fc             	mov    -0x4(%rsi),%edx
   16d01:	f3 0f 7f 47 b7       	movdqu %xmm0,-0x49(%rdi)
   16d06:	f3 0f 7f 4f c7       	movdqu %xmm1,-0x39(%rdi)
   16d0b:	48 89 4f d7          	mov    %rcx,-0x29(%rdi)
   16d0f:	4c 89 4f df          	mov    %r9,-0x21(%rdi)
   16d13:	4c 89 57 e7          	mov    %r10,-0x19(%rdi)
   16d17:	4c 89 5f ef          	mov    %r11,-0x11(%rdi)
   16d1b:	4c 89 47 f7          	mov    %r8,-0x9(%rdi)
   16d1f:	89 57 fc             	mov    %edx,-0x4(%rdi)
   16d22:	c3                   	retq   
   16d23:	0f 1f 00             	nopl   (%rax)
   16d26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16d2d:	00 00 00 
   16d30:	f3 0f 6f 46 bf       	movdqu -0x41(%rsi),%xmm0
   16d35:	f3 0f 6f 4e cf       	movdqu -0x31(%rsi),%xmm1
   16d3a:	4c 8b 4e df          	mov    -0x21(%rsi),%r9
   16d3e:	4c 8b 56 e7          	mov    -0x19(%rsi),%r10
   16d42:	4c 8b 5e ef          	mov    -0x11(%rsi),%r11
   16d46:	48 8b 4e f7          	mov    -0x9(%rsi),%rcx
   16d4a:	8b 56 fc             	mov    -0x4(%rsi),%edx
   16d4d:	f3 0f 7f 47 bf       	movdqu %xmm0,-0x41(%rdi)
   16d52:	f3 0f 7f 4f cf       	movdqu %xmm1,-0x31(%rdi)
   16d57:	4c 89 4f df          	mov    %r9,-0x21(%rdi)
   16d5b:	4c 89 57 e7          	mov    %r10,-0x19(%rdi)
   16d5f:	4c 89 5f ef          	mov    %r11,-0x11(%rdi)
   16d63:	48 89 4f f7          	mov    %rcx,-0x9(%rdi)
   16d67:	89 57 fc             	mov    %edx,-0x4(%rdi)
   16d6a:	c3                   	retq   
   16d6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16d70:	f3 0f 6f 46 c7       	movdqu -0x39(%rsi),%xmm0
   16d75:	4c 8b 46 d7          	mov    -0x29(%rsi),%r8
   16d79:	4c 8b 4e df          	mov    -0x21(%rsi),%r9
   16d7d:	4c 8b 56 e7          	mov    -0x19(%rsi),%r10
   16d81:	4c 8b 5e ef          	mov    -0x11(%rsi),%r11
   16d85:	48 8b 4e f7          	mov    -0x9(%rsi),%rcx
   16d89:	8b 56 fc             	mov    -0x4(%rsi),%edx
   16d8c:	f3 0f 7f 47 c7       	movdqu %xmm0,-0x39(%rdi)
   16d91:	4c 89 47 d7          	mov    %r8,-0x29(%rdi)
   16d95:	4c 89 4f df          	mov    %r9,-0x21(%rdi)
   16d99:	4c 89 57 e7          	mov    %r10,-0x19(%rdi)
   16d9d:	4c 89 5f ef          	mov    %r11,-0x11(%rdi)
   16da1:	48 89 4f f7          	mov    %rcx,-0x9(%rdi)
   16da5:	89 57 fc             	mov    %edx,-0x4(%rdi)
   16da8:	c3                   	retq   
   16da9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16db0:	f3 0f 6f 46 cf       	movdqu -0x31(%rsi),%xmm0
   16db5:	4c 8b 4e df          	mov    -0x21(%rsi),%r9
   16db9:	4c 8b 56 e7          	mov    -0x19(%rsi),%r10
   16dbd:	4c 8b 5e ef          	mov    -0x11(%rsi),%r11
   16dc1:	48 8b 4e f7          	mov    -0x9(%rsi),%rcx
   16dc5:	8b 56 fc             	mov    -0x4(%rsi),%edx
   16dc8:	f3 0f 7f 47 cf       	movdqu %xmm0,-0x31(%rdi)
   16dcd:	4c 89 4f df          	mov    %r9,-0x21(%rdi)
   16dd1:	4c 89 57 e7          	mov    %r10,-0x19(%rdi)
   16dd5:	4c 89 5f ef          	mov    %r11,-0x11(%rdi)
   16dd9:	48 89 4f f7          	mov    %rcx,-0x9(%rdi)
   16ddd:	89 57 fc             	mov    %edx,-0x4(%rdi)
   16de0:	c3                   	retq   
   16de1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16de6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16ded:	00 00 00 
   16df0:	4c 8b 46 d7          	mov    -0x29(%rsi),%r8
   16df4:	4c 8b 4e df          	mov    -0x21(%rsi),%r9
   16df8:	4c 8b 56 e7          	mov    -0x19(%rsi),%r10
   16dfc:	4c 8b 5e ef          	mov    -0x11(%rsi),%r11
   16e00:	48 8b 4e f7          	mov    -0x9(%rsi),%rcx
   16e04:	8a 56 ff             	mov    -0x1(%rsi),%dl
   16e07:	4c 89 47 d7          	mov    %r8,-0x29(%rdi)
   16e0b:	4c 89 4f df          	mov    %r9,-0x21(%rdi)
   16e0f:	4c 89 57 e7          	mov    %r10,-0x19(%rdi)
   16e13:	4c 89 5f ef          	mov    %r11,-0x11(%rdi)
   16e17:	48 89 4f f7          	mov    %rcx,-0x9(%rdi)
   16e1b:	88 57 ff             	mov    %dl,-0x1(%rdi)
   16e1e:	c3                   	retq   
   16e1f:	90                   	nop
   16e20:	4c 8b 4e df          	mov    -0x21(%rsi),%r9
   16e24:	4c 8b 56 e7          	mov    -0x19(%rsi),%r10
   16e28:	4c 8b 5e ef          	mov    -0x11(%rsi),%r11
   16e2c:	48 8b 4e f7          	mov    -0x9(%rsi),%rcx
   16e30:	8a 56 ff             	mov    -0x1(%rsi),%dl
   16e33:	4c 89 4f df          	mov    %r9,-0x21(%rdi)
   16e37:	4c 89 57 e7          	mov    %r10,-0x19(%rdi)
   16e3b:	4c 89 5f ef          	mov    %r11,-0x11(%rdi)
   16e3f:	48 89 4f f7          	mov    %rcx,-0x9(%rdi)
   16e43:	88 57 ff             	mov    %dl,-0x1(%rdi)
   16e46:	c3                   	retq   
   16e47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16e4e:	00 00 
   16e50:	4c 8b 56 e7          	mov    -0x19(%rsi),%r10
   16e54:	4c 8b 5e ef          	mov    -0x11(%rsi),%r11
   16e58:	48 8b 4e f7          	mov    -0x9(%rsi),%rcx
   16e5c:	8a 56 ff             	mov    -0x1(%rsi),%dl
   16e5f:	4c 89 57 e7          	mov    %r10,-0x19(%rdi)
   16e63:	4c 89 5f ef          	mov    %r11,-0x11(%rdi)
   16e67:	48 89 4f f7          	mov    %rcx,-0x9(%rdi)
   16e6b:	88 57 ff             	mov    %dl,-0x1(%rdi)
   16e6e:	c3                   	retq   
   16e6f:	90                   	nop
   16e70:	4c 8b 5e ef          	mov    -0x11(%rsi),%r11
   16e74:	48 8b 4e f7          	mov    -0x9(%rsi),%rcx
   16e78:	8b 56 fc             	mov    -0x4(%rsi),%edx
   16e7b:	4c 89 5f ef          	mov    %r11,-0x11(%rdi)
   16e7f:	48 89 4f f7          	mov    %rcx,-0x9(%rdi)
   16e83:	89 57 fc             	mov    %edx,-0x4(%rdi)
   16e86:	c3                   	retq   
   16e87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16e8e:	00 00 
   16e90:	48 8b 4e f7          	mov    -0x9(%rsi),%rcx
   16e94:	8b 56 fc             	mov    -0x4(%rsi),%edx
   16e97:	48 89 4f f7          	mov    %rcx,-0x9(%rdi)
   16e9b:	89 57 fc             	mov    %edx,-0x4(%rdi)
   16e9e:	c3                   	retq   
   16e9f:	90                   	nop
   16ea0:	8a 56 ff             	mov    -0x1(%rsi),%dl
   16ea3:	88 57 ff             	mov    %dl,-0x1(%rdi)
   16ea6:	c3                   	retq   
   16ea7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16eae:	00 00 
   16eb0:	f3 0f 6f 46 b6       	movdqu -0x4a(%rsi),%xmm0
   16eb5:	f3 0f 6f 4e c6       	movdqu -0x3a(%rsi),%xmm1
   16eba:	4c 8b 46 d6          	mov    -0x2a(%rsi),%r8
   16ebe:	4c 8b 4e de          	mov    -0x22(%rsi),%r9
   16ec2:	4c 8b 56 e6          	mov    -0x1a(%rsi),%r10
   16ec6:	4c 8b 5e ee          	mov    -0x12(%rsi),%r11
   16eca:	48 8b 4e f6          	mov    -0xa(%rsi),%rcx
   16ece:	8b 56 fc             	mov    -0x4(%rsi),%edx
   16ed1:	f3 0f 7f 47 b6       	movdqu %xmm0,-0x4a(%rdi)
   16ed6:	f3 0f 7f 4f c6       	movdqu %xmm1,-0x3a(%rdi)
   16edb:	4c 89 47 d6          	mov    %r8,-0x2a(%rdi)
   16edf:	4c 89 4f de          	mov    %r9,-0x22(%rdi)
   16ee3:	4c 89 57 e6          	mov    %r10,-0x1a(%rdi)
   16ee7:	4c 89 5f ee          	mov    %r11,-0x12(%rdi)
   16eeb:	48 89 4f f6          	mov    %rcx,-0xa(%rdi)
   16eef:	89 57 fc             	mov    %edx,-0x4(%rdi)
   16ef2:	c3                   	retq   
   16ef3:	0f 1f 00             	nopl   (%rax)
   16ef6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16efd:	00 00 00 
   16f00:	f3 0f 6f 46 be       	movdqu -0x42(%rsi),%xmm0
   16f05:	f3 0f 6f 4e ce       	movdqu -0x32(%rsi),%xmm1
   16f0a:	4c 8b 46 d6          	mov    -0x2a(%rsi),%r8
   16f0e:	4c 8b 4e de          	mov    -0x22(%rsi),%r9
   16f12:	4c 8b 56 e6          	mov    -0x1a(%rsi),%r10
   16f16:	4c 8b 5e ee          	mov    -0x12(%rsi),%r11
   16f1a:	48 8b 4e f6          	mov    -0xa(%rsi),%rcx
   16f1e:	8b 56 fc             	mov    -0x4(%rsi),%edx
   16f21:	f3 0f 7f 47 be       	movdqu %xmm0,-0x42(%rdi)
   16f26:	f3 0f 7f 4f ce       	movdqu %xmm1,-0x32(%rdi)
   16f2b:	4c 89 47 d6          	mov    %r8,-0x2a(%rdi)
   16f2f:	4c 89 4f de          	mov    %r9,-0x22(%rdi)
   16f33:	4c 89 57 e6          	mov    %r10,-0x1a(%rdi)
   16f37:	4c 89 5f ee          	mov    %r11,-0x12(%rdi)
   16f3b:	48 89 4f f6          	mov    %rcx,-0xa(%rdi)
   16f3f:	89 57 fc             	mov    %edx,-0x4(%rdi)
   16f42:	c3                   	retq   
   16f43:	0f 1f 00             	nopl   (%rax)
   16f46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16f4d:	00 00 00 
   16f50:	f3 0f 6f 4e c6       	movdqu -0x3a(%rsi),%xmm1
   16f55:	4c 8b 46 d6          	mov    -0x2a(%rsi),%r8
   16f59:	4c 8b 4e de          	mov    -0x22(%rsi),%r9
   16f5d:	4c 8b 56 e6          	mov    -0x1a(%rsi),%r10
   16f61:	4c 8b 5e ee          	mov    -0x12(%rsi),%r11
   16f65:	48 8b 4e f6          	mov    -0xa(%rsi),%rcx
   16f69:	8b 56 fc             	mov    -0x4(%rsi),%edx
   16f6c:	f3 0f 7f 4f c6       	movdqu %xmm1,-0x3a(%rdi)
   16f71:	4c 89 47 d6          	mov    %r8,-0x2a(%rdi)
   16f75:	4c 89 4f de          	mov    %r9,-0x22(%rdi)
   16f79:	4c 89 57 e6          	mov    %r10,-0x1a(%rdi)
   16f7d:	4c 89 5f ee          	mov    %r11,-0x12(%rdi)
   16f81:	48 89 4f f6          	mov    %rcx,-0xa(%rdi)
   16f85:	89 57 fc             	mov    %edx,-0x4(%rdi)
   16f88:	c3                   	retq   
   16f89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16f90:	f3 0f 6f 46 ce       	movdqu -0x32(%rsi),%xmm0
   16f95:	4c 8b 4e de          	mov    -0x22(%rsi),%r9
   16f99:	4c 8b 56 e6          	mov    -0x1a(%rsi),%r10
   16f9d:	4c 8b 5e ee          	mov    -0x12(%rsi),%r11
   16fa1:	48 8b 4e f6          	mov    -0xa(%rsi),%rcx
   16fa5:	8b 56 fc             	mov    -0x4(%rsi),%edx
   16fa8:	f3 0f 7f 47 ce       	movdqu %xmm0,-0x32(%rdi)
   16fad:	4c 89 4f de          	mov    %r9,-0x22(%rdi)
   16fb1:	4c 89 57 e6          	mov    %r10,-0x1a(%rdi)
   16fb5:	4c 89 5f ee          	mov    %r11,-0x12(%rdi)
   16fb9:	48 89 4f f6          	mov    %rcx,-0xa(%rdi)
   16fbd:	89 57 fc             	mov    %edx,-0x4(%rdi)
   16fc0:	c3                   	retq   
   16fc1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16fc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16fcd:	00 00 00 
   16fd0:	4c 8b 46 d6          	mov    -0x2a(%rsi),%r8
   16fd4:	4c 8b 4e de          	mov    -0x22(%rsi),%r9
   16fd8:	4c 8b 56 e6          	mov    -0x1a(%rsi),%r10
   16fdc:	4c 8b 5e ee          	mov    -0x12(%rsi),%r11
   16fe0:	48 8b 4e f6          	mov    -0xa(%rsi),%rcx
   16fe4:	8b 56 fc             	mov    -0x4(%rsi),%edx
   16fe7:	4c 89 47 d6          	mov    %r8,-0x2a(%rdi)
   16feb:	4c 89 4f de          	mov    %r9,-0x22(%rdi)
   16fef:	4c 89 57 e6          	mov    %r10,-0x1a(%rdi)
   16ff3:	4c 89 5f ee          	mov    %r11,-0x12(%rdi)
   16ff7:	48 89 4f f6          	mov    %rcx,-0xa(%rdi)
   16ffb:	89 57 fc             	mov    %edx,-0x4(%rdi)
   16ffe:	c3                   	retq   
   16fff:	90                   	nop
   17000:	4c 8b 4e de          	mov    -0x22(%rsi),%r9
   17004:	4c 8b 56 e6          	mov    -0x1a(%rsi),%r10
   17008:	4c 8b 5e ee          	mov    -0x12(%rsi),%r11
   1700c:	48 8b 4e f6          	mov    -0xa(%rsi),%rcx
   17010:	8b 56 fc             	mov    -0x4(%rsi),%edx
   17013:	4c 89 4f de          	mov    %r9,-0x22(%rdi)
   17017:	4c 89 57 e6          	mov    %r10,-0x1a(%rdi)
   1701b:	4c 89 5f ee          	mov    %r11,-0x12(%rdi)
   1701f:	48 89 4f f6          	mov    %rcx,-0xa(%rdi)
   17023:	89 57 fc             	mov    %edx,-0x4(%rdi)
   17026:	c3                   	retq   
   17027:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1702e:	00 00 
   17030:	4c 8b 56 e6          	mov    -0x1a(%rsi),%r10
   17034:	4c 8b 5e ee          	mov    -0x12(%rsi),%r11
   17038:	48 8b 4e f6          	mov    -0xa(%rsi),%rcx
   1703c:	8b 56 fc             	mov    -0x4(%rsi),%edx
   1703f:	4c 89 57 e6          	mov    %r10,-0x1a(%rdi)
   17043:	4c 89 5f ee          	mov    %r11,-0x12(%rdi)
   17047:	48 89 4f f6          	mov    %rcx,-0xa(%rdi)
   1704b:	89 57 fc             	mov    %edx,-0x4(%rdi)
   1704e:	c3                   	retq   
   1704f:	90                   	nop
   17050:	4c 8b 5e ee          	mov    -0x12(%rsi),%r11
   17054:	48 8b 4e f6          	mov    -0xa(%rsi),%rcx
   17058:	8b 56 fc             	mov    -0x4(%rsi),%edx
   1705b:	4c 89 5f ee          	mov    %r11,-0x12(%rdi)
   1705f:	48 89 4f f6          	mov    %rcx,-0xa(%rdi)
   17063:	89 57 fc             	mov    %edx,-0x4(%rdi)
   17066:	c3                   	retq   
   17067:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1706e:	00 00 
   17070:	48 8b 4e f6          	mov    -0xa(%rsi),%rcx
   17074:	8b 56 fc             	mov    -0x4(%rsi),%edx
   17077:	48 89 4f f6          	mov    %rcx,-0xa(%rdi)
   1707b:	89 57 fc             	mov    %edx,-0x4(%rdi)
   1707e:	c3                   	retq   
   1707f:	90                   	nop
   17080:	66 8b 56 fe          	mov    -0x2(%rsi),%dx
   17084:	66 89 57 fe          	mov    %dx,-0x2(%rdi)
   17088:	c3                   	retq   
   17089:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17090:	f3 0f 6f 46 b5       	movdqu -0x4b(%rsi),%xmm0
   17095:	f3 0f 6f 4e c5       	movdqu -0x3b(%rsi),%xmm1
   1709a:	4c 8b 46 d5          	mov    -0x2b(%rsi),%r8
   1709e:	4c 8b 4e dd          	mov    -0x23(%rsi),%r9
   170a2:	4c 8b 56 e5          	mov    -0x1b(%rsi),%r10
   170a6:	4c 8b 5e ed          	mov    -0x13(%rsi),%r11
   170aa:	48 8b 4e f5          	mov    -0xb(%rsi),%rcx
   170ae:	8b 56 fc             	mov    -0x4(%rsi),%edx
   170b1:	f3 0f 7f 47 b5       	movdqu %xmm0,-0x4b(%rdi)
   170b6:	f3 0f 7f 4f c5       	movdqu %xmm1,-0x3b(%rdi)
   170bb:	4c 89 47 d5          	mov    %r8,-0x2b(%rdi)
   170bf:	4c 89 4f dd          	mov    %r9,-0x23(%rdi)
   170c3:	4c 89 57 e5          	mov    %r10,-0x1b(%rdi)
   170c7:	4c 89 5f ed          	mov    %r11,-0x13(%rdi)
   170cb:	48 89 4f f5          	mov    %rcx,-0xb(%rdi)
   170cf:	89 57 fc             	mov    %edx,-0x4(%rdi)
   170d2:	c3                   	retq   
   170d3:	0f 1f 00             	nopl   (%rax)
   170d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   170dd:	00 00 00 
   170e0:	f3 0f 6f 46 bd       	movdqu -0x43(%rsi),%xmm0
   170e5:	f3 0f 6f 4e c5       	movdqu -0x3b(%rsi),%xmm1
   170ea:	4c 8b 46 d5          	mov    -0x2b(%rsi),%r8
   170ee:	4c 8b 4e dd          	mov    -0x23(%rsi),%r9
   170f2:	4c 8b 56 e5          	mov    -0x1b(%rsi),%r10
   170f6:	4c 8b 5e ed          	mov    -0x13(%rsi),%r11
   170fa:	48 8b 4e f5          	mov    -0xb(%rsi),%rcx
   170fe:	8b 56 fc             	mov    -0x4(%rsi),%edx
   17101:	f3 0f 7f 47 bd       	movdqu %xmm0,-0x43(%rdi)
   17106:	f3 0f 7f 4f c5       	movdqu %xmm1,-0x3b(%rdi)
   1710b:	4c 89 47 d5          	mov    %r8,-0x2b(%rdi)
   1710f:	4c 89 4f dd          	mov    %r9,-0x23(%rdi)
   17113:	4c 89 57 e5          	mov    %r10,-0x1b(%rdi)
   17117:	4c 89 5f ed          	mov    %r11,-0x13(%rdi)
   1711b:	48 89 4f f5          	mov    %rcx,-0xb(%rdi)
   1711f:	89 57 fc             	mov    %edx,-0x4(%rdi)
   17122:	c3                   	retq   
   17123:	0f 1f 00             	nopl   (%rax)
   17126:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1712d:	00 00 00 
   17130:	f3 0f 6f 46 c5       	movdqu -0x3b(%rsi),%xmm0
   17135:	4c 8b 46 d5          	mov    -0x2b(%rsi),%r8
   17139:	4c 8b 4e dd          	mov    -0x23(%rsi),%r9
   1713d:	4c 8b 56 e5          	mov    -0x1b(%rsi),%r10
   17141:	4c 8b 5e ed          	mov    -0x13(%rsi),%r11
   17145:	48 8b 4e f5          	mov    -0xb(%rsi),%rcx
   17149:	8b 56 fc             	mov    -0x4(%rsi),%edx
   1714c:	f3 0f 7f 47 c5       	movdqu %xmm0,-0x3b(%rdi)
   17151:	4c 89 47 d5          	mov    %r8,-0x2b(%rdi)
   17155:	4c 89 4f dd          	mov    %r9,-0x23(%rdi)
   17159:	4c 89 57 e5          	mov    %r10,-0x1b(%rdi)
   1715d:	4c 89 5f ed          	mov    %r11,-0x13(%rdi)
   17161:	48 89 4f f5          	mov    %rcx,-0xb(%rdi)
   17165:	89 57 fc             	mov    %edx,-0x4(%rdi)
   17168:	c3                   	retq   
   17169:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17170:	f3 0f 6f 46 cd       	movdqu -0x33(%rsi),%xmm0
   17175:	4c 8b 4e dd          	mov    -0x23(%rsi),%r9
   17179:	4c 8b 56 e5          	mov    -0x1b(%rsi),%r10
   1717d:	4c 8b 5e ed          	mov    -0x13(%rsi),%r11
   17181:	48 8b 4e f5          	mov    -0xb(%rsi),%rcx
   17185:	8b 56 fc             	mov    -0x4(%rsi),%edx
   17188:	f3 0f 7f 47 cd       	movdqu %xmm0,-0x33(%rdi)
   1718d:	4c 89 4f dd          	mov    %r9,-0x23(%rdi)
   17191:	4c 89 57 e5          	mov    %r10,-0x1b(%rdi)
   17195:	4c 89 5f ed          	mov    %r11,-0x13(%rdi)
   17199:	48 89 4f f5          	mov    %rcx,-0xb(%rdi)
   1719d:	89 57 fc             	mov    %edx,-0x4(%rdi)
   171a0:	c3                   	retq   
   171a1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   171a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   171ad:	00 00 00 
   171b0:	4c 8b 46 d5          	mov    -0x2b(%rsi),%r8
   171b4:	4c 8b 4e dd          	mov    -0x23(%rsi),%r9
   171b8:	4c 8b 56 e5          	mov    -0x1b(%rsi),%r10
   171bc:	4c 8b 5e ed          	mov    -0x13(%rsi),%r11
   171c0:	48 8b 4e f5          	mov    -0xb(%rsi),%rcx
   171c4:	8b 56 fc             	mov    -0x4(%rsi),%edx
   171c7:	4c 89 47 d5          	mov    %r8,-0x2b(%rdi)
   171cb:	4c 89 4f dd          	mov    %r9,-0x23(%rdi)
   171cf:	4c 89 57 e5          	mov    %r10,-0x1b(%rdi)
   171d3:	4c 89 5f ed          	mov    %r11,-0x13(%rdi)
   171d7:	48 89 4f f5          	mov    %rcx,-0xb(%rdi)
   171db:	89 57 fc             	mov    %edx,-0x4(%rdi)
   171de:	c3                   	retq   
   171df:	90                   	nop
   171e0:	4c 8b 4e dd          	mov    -0x23(%rsi),%r9
   171e4:	4c 8b 56 e5          	mov    -0x1b(%rsi),%r10
   171e8:	4c 8b 5e ed          	mov    -0x13(%rsi),%r11
   171ec:	48 8b 4e f5          	mov    -0xb(%rsi),%rcx
   171f0:	8b 56 fc             	mov    -0x4(%rsi),%edx
   171f3:	4c 89 4f dd          	mov    %r9,-0x23(%rdi)
   171f7:	4c 89 57 e5          	mov    %r10,-0x1b(%rdi)
   171fb:	4c 89 5f ed          	mov    %r11,-0x13(%rdi)
   171ff:	48 89 4f f5          	mov    %rcx,-0xb(%rdi)
   17203:	89 57 fc             	mov    %edx,-0x4(%rdi)
   17206:	c3                   	retq   
   17207:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1720e:	00 00 
   17210:	4c 8b 56 e5          	mov    -0x1b(%rsi),%r10
   17214:	4c 8b 5e ed          	mov    -0x13(%rsi),%r11
   17218:	48 8b 4e f5          	mov    -0xb(%rsi),%rcx
   1721c:	8b 56 fc             	mov    -0x4(%rsi),%edx
   1721f:	4c 89 57 e5          	mov    %r10,-0x1b(%rdi)
   17223:	4c 89 5f ed          	mov    %r11,-0x13(%rdi)
   17227:	48 89 4f f5          	mov    %rcx,-0xb(%rdi)
   1722b:	89 57 fc             	mov    %edx,-0x4(%rdi)
   1722e:	c3                   	retq   
   1722f:	90                   	nop
   17230:	4c 8b 5e ed          	mov    -0x13(%rsi),%r11
   17234:	48 8b 4e f5          	mov    -0xb(%rsi),%rcx
   17238:	8b 56 fc             	mov    -0x4(%rsi),%edx
   1723b:	4c 89 5f ed          	mov    %r11,-0x13(%rdi)
   1723f:	48 89 4f f5          	mov    %rcx,-0xb(%rdi)
   17243:	89 57 fc             	mov    %edx,-0x4(%rdi)
   17246:	c3                   	retq   
   17247:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1724e:	00 00 
   17250:	48 8b 4e f5          	mov    -0xb(%rsi),%rcx
   17254:	8b 56 fc             	mov    -0x4(%rsi),%edx
   17257:	48 89 4f f5          	mov    %rcx,-0xb(%rdi)
   1725b:	89 57 fc             	mov    %edx,-0x4(%rdi)
   1725e:	c3                   	retq   
   1725f:	90                   	nop
   17260:	66 8b 56 fd          	mov    -0x3(%rsi),%dx
   17264:	66 8b 4e fe          	mov    -0x2(%rsi),%cx
   17268:	66 89 57 fd          	mov    %dx,-0x3(%rdi)
   1726c:	66 89 4f fe          	mov    %cx,-0x2(%rdi)
   17270:	c3                   	retq   
   17271:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17276:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1727d:	00 00 00 
   17280:	f3 0f 6f 46 b4       	movdqu -0x4c(%rsi),%xmm0
   17285:	f3 0f 6f 4e c4       	movdqu -0x3c(%rsi),%xmm1
   1728a:	4c 8b 46 d4          	mov    -0x2c(%rsi),%r8
   1728e:	4c 8b 4e dc          	mov    -0x24(%rsi),%r9
   17292:	4c 8b 56 e4          	mov    -0x1c(%rsi),%r10
   17296:	4c 8b 5e ec          	mov    -0x14(%rsi),%r11
   1729a:	48 8b 4e f4          	mov    -0xc(%rsi),%rcx
   1729e:	8b 56 fc             	mov    -0x4(%rsi),%edx
   172a1:	f3 0f 7f 47 b4       	movdqu %xmm0,-0x4c(%rdi)
   172a6:	f3 0f 7f 4f c4       	movdqu %xmm1,-0x3c(%rdi)
   172ab:	4c 89 47 d4          	mov    %r8,-0x2c(%rdi)
   172af:	4c 89 4f dc          	mov    %r9,-0x24(%rdi)
   172b3:	4c 89 57 e4          	mov    %r10,-0x1c(%rdi)
   172b7:	4c 89 5f ec          	mov    %r11,-0x14(%rdi)
   172bb:	48 89 4f f4          	mov    %rcx,-0xc(%rdi)
   172bf:	89 57 fc             	mov    %edx,-0x4(%rdi)
   172c2:	c3                   	retq   
   172c3:	0f 1f 00             	nopl   (%rax)
   172c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   172cd:	00 00 00 
   172d0:	f3 0f 6f 46 bc       	movdqu -0x44(%rsi),%xmm0
   172d5:	f3 0f 6f 4e cc       	movdqu -0x34(%rsi),%xmm1
   172da:	4c 8b 4e dc          	mov    -0x24(%rsi),%r9
   172de:	4c 8b 56 e4          	mov    -0x1c(%rsi),%r10
   172e2:	4c 8b 5e ec          	mov    -0x14(%rsi),%r11
   172e6:	48 8b 4e f4          	mov    -0xc(%rsi),%rcx
   172ea:	8b 56 fc             	mov    -0x4(%rsi),%edx
   172ed:	f3 0f 7f 47 bc       	movdqu %xmm0,-0x44(%rdi)
   172f2:	f3 0f 7f 4f cc       	movdqu %xmm1,-0x34(%rdi)
   172f7:	4c 89 4f dc          	mov    %r9,-0x24(%rdi)
   172fb:	4c 89 57 e4          	mov    %r10,-0x1c(%rdi)
   172ff:	4c 89 5f ec          	mov    %r11,-0x14(%rdi)
   17303:	48 89 4f f4          	mov    %rcx,-0xc(%rdi)
   17307:	89 57 fc             	mov    %edx,-0x4(%rdi)
   1730a:	c3                   	retq   
   1730b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17310:	f3 0f 6f 46 c4       	movdqu -0x3c(%rsi),%xmm0
   17315:	4c 8b 46 d4          	mov    -0x2c(%rsi),%r8
   17319:	4c 8b 4e dc          	mov    -0x24(%rsi),%r9
   1731d:	4c 8b 56 e4          	mov    -0x1c(%rsi),%r10
   17321:	4c 8b 5e ec          	mov    -0x14(%rsi),%r11
   17325:	48 8b 4e f4          	mov    -0xc(%rsi),%rcx
   17329:	8b 56 fc             	mov    -0x4(%rsi),%edx
   1732c:	f3 0f 7f 47 c4       	movdqu %xmm0,-0x3c(%rdi)
   17331:	4c 89 47 d4          	mov    %r8,-0x2c(%rdi)
   17335:	4c 89 4f dc          	mov    %r9,-0x24(%rdi)
   17339:	4c 89 57 e4          	mov    %r10,-0x1c(%rdi)
   1733d:	4c 89 5f ec          	mov    %r11,-0x14(%rdi)
   17341:	48 89 4f f4          	mov    %rcx,-0xc(%rdi)
   17345:	89 57 fc             	mov    %edx,-0x4(%rdi)
   17348:	c3                   	retq   
   17349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17350:	f3 0f 6f 46 cc       	movdqu -0x34(%rsi),%xmm0
   17355:	4c 8b 4e dc          	mov    -0x24(%rsi),%r9
   17359:	4c 8b 56 e4          	mov    -0x1c(%rsi),%r10
   1735d:	4c 8b 5e ec          	mov    -0x14(%rsi),%r11
   17361:	48 8b 4e f4          	mov    -0xc(%rsi),%rcx
   17365:	8b 56 fc             	mov    -0x4(%rsi),%edx
   17368:	f3 0f 7f 47 cc       	movdqu %xmm0,-0x34(%rdi)
   1736d:	4c 89 4f dc          	mov    %r9,-0x24(%rdi)
   17371:	4c 89 57 e4          	mov    %r10,-0x1c(%rdi)
   17375:	4c 89 5f ec          	mov    %r11,-0x14(%rdi)
   17379:	48 89 4f f4          	mov    %rcx,-0xc(%rdi)
   1737d:	89 57 fc             	mov    %edx,-0x4(%rdi)
   17380:	c3                   	retq   
   17381:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17386:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1738d:	00 00 00 
   17390:	4c 8b 46 d4          	mov    -0x2c(%rsi),%r8
   17394:	4c 8b 4e dc          	mov    -0x24(%rsi),%r9
   17398:	4c 8b 56 e4          	mov    -0x1c(%rsi),%r10
   1739c:	4c 8b 5e ec          	mov    -0x14(%rsi),%r11
   173a0:	48 8b 4e f4          	mov    -0xc(%rsi),%rcx
   173a4:	8b 56 fc             	mov    -0x4(%rsi),%edx
   173a7:	4c 89 47 d4          	mov    %r8,-0x2c(%rdi)
   173ab:	4c 89 4f dc          	mov    %r9,-0x24(%rdi)
   173af:	4c 89 57 e4          	mov    %r10,-0x1c(%rdi)
   173b3:	4c 89 5f ec          	mov    %r11,-0x14(%rdi)
   173b7:	48 89 4f f4          	mov    %rcx,-0xc(%rdi)
   173bb:	89 57 fc             	mov    %edx,-0x4(%rdi)
   173be:	c3                   	retq   
   173bf:	90                   	nop
   173c0:	4c 8b 4e dc          	mov    -0x24(%rsi),%r9
   173c4:	4c 8b 56 e4          	mov    -0x1c(%rsi),%r10
   173c8:	4c 8b 5e ec          	mov    -0x14(%rsi),%r11
   173cc:	48 8b 4e f4          	mov    -0xc(%rsi),%rcx
   173d0:	8b 56 fc             	mov    -0x4(%rsi),%edx
   173d3:	4c 89 4f dc          	mov    %r9,-0x24(%rdi)
   173d7:	4c 89 57 e4          	mov    %r10,-0x1c(%rdi)
   173db:	4c 89 5f ec          	mov    %r11,-0x14(%rdi)
   173df:	48 89 4f f4          	mov    %rcx,-0xc(%rdi)
   173e3:	89 57 fc             	mov    %edx,-0x4(%rdi)
   173e6:	c3                   	retq   
   173e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   173ee:	00 00 
   173f0:	4c 8b 56 e4          	mov    -0x1c(%rsi),%r10
   173f4:	4c 8b 5e ec          	mov    -0x14(%rsi),%r11
   173f8:	48 8b 4e f4          	mov    -0xc(%rsi),%rcx
   173fc:	8b 56 fc             	mov    -0x4(%rsi),%edx
   173ff:	4c 89 57 e4          	mov    %r10,-0x1c(%rdi)
   17403:	4c 89 5f ec          	mov    %r11,-0x14(%rdi)
   17407:	48 89 4f f4          	mov    %rcx,-0xc(%rdi)
   1740b:	89 57 fc             	mov    %edx,-0x4(%rdi)
   1740e:	c3                   	retq   
   1740f:	90                   	nop
   17410:	4c 8b 5e ec          	mov    -0x14(%rsi),%r11
   17414:	48 8b 4e f4          	mov    -0xc(%rsi),%rcx
   17418:	8b 56 fc             	mov    -0x4(%rsi),%edx
   1741b:	4c 89 5f ec          	mov    %r11,-0x14(%rdi)
   1741f:	48 89 4f f4          	mov    %rcx,-0xc(%rdi)
   17423:	89 57 fc             	mov    %edx,-0x4(%rdi)
   17426:	c3                   	retq   
   17427:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1742e:	00 00 
   17430:	48 8b 4e f4          	mov    -0xc(%rsi),%rcx
   17434:	8b 56 fc             	mov    -0x4(%rsi),%edx
   17437:	48 89 4f f4          	mov    %rcx,-0xc(%rdi)
   1743b:	89 57 fc             	mov    %edx,-0x4(%rdi)
   1743e:	c3                   	retq   
   1743f:	90                   	nop
   17440:	8b 56 fc             	mov    -0x4(%rsi),%edx
   17443:	89 57 fc             	mov    %edx,-0x4(%rdi)
   17446:	c3                   	retq   
   17447:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1744e:	00 00 
   17450:	f3 0f 6f 46 b3       	movdqu -0x4d(%rsi),%xmm0
   17455:	f3 0f 6f 4e c3       	movdqu -0x3d(%rsi),%xmm1
   1745a:	4c 8b 46 d3          	mov    -0x2d(%rsi),%r8
   1745e:	4c 8b 4e db          	mov    -0x25(%rsi),%r9
   17462:	4c 8b 56 e3          	mov    -0x1d(%rsi),%r10
   17466:	4c 8b 5e eb          	mov    -0x15(%rsi),%r11
   1746a:	48 8b 4e f3          	mov    -0xd(%rsi),%rcx
   1746e:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   17472:	f3 0f 7f 47 b3       	movdqu %xmm0,-0x4d(%rdi)
   17477:	f3 0f 7f 4f c3       	movdqu %xmm1,-0x3d(%rdi)
   1747c:	4c 89 47 d3          	mov    %r8,-0x2d(%rdi)
   17480:	4c 89 4f db          	mov    %r9,-0x25(%rdi)
   17484:	4c 89 57 e3          	mov    %r10,-0x1d(%rdi)
   17488:	4c 89 5f eb          	mov    %r11,-0x15(%rdi)
   1748c:	48 89 4f f3          	mov    %rcx,-0xd(%rdi)
   17490:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   17494:	c3                   	retq   
   17495:	90                   	nop
   17496:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1749d:	00 00 00 
   174a0:	f3 0f 6f 46 bb       	movdqu -0x45(%rsi),%xmm0
   174a5:	f3 0f 6f 4e cb       	movdqu -0x35(%rsi),%xmm1
   174aa:	4c 8b 4e db          	mov    -0x25(%rsi),%r9
   174ae:	4c 8b 56 e3          	mov    -0x1d(%rsi),%r10
   174b2:	4c 8b 5e eb          	mov    -0x15(%rsi),%r11
   174b6:	48 8b 4e f3          	mov    -0xd(%rsi),%rcx
   174ba:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   174be:	f3 0f 7f 47 bb       	movdqu %xmm0,-0x45(%rdi)
   174c3:	f3 0f 7f 4f cb       	movdqu %xmm1,-0x35(%rdi)
   174c8:	4c 89 4f db          	mov    %r9,-0x25(%rdi)
   174cc:	4c 89 57 e3          	mov    %r10,-0x1d(%rdi)
   174d0:	4c 89 5f eb          	mov    %r11,-0x15(%rdi)
   174d4:	48 89 4f f3          	mov    %rcx,-0xd(%rdi)
   174d8:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   174dc:	c3                   	retq   
   174dd:	0f 1f 00             	nopl   (%rax)
   174e0:	f3 0f 6f 46 c3       	movdqu -0x3d(%rsi),%xmm0
   174e5:	4c 8b 46 d3          	mov    -0x2d(%rsi),%r8
   174e9:	4c 8b 4e db          	mov    -0x25(%rsi),%r9
   174ed:	4c 8b 56 e3          	mov    -0x1d(%rsi),%r10
   174f1:	4c 8b 5e eb          	mov    -0x15(%rsi),%r11
   174f5:	48 8b 4e f3          	mov    -0xd(%rsi),%rcx
   174f9:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   174fd:	f3 0f 7f 47 c3       	movdqu %xmm0,-0x3d(%rdi)
   17502:	4c 89 47 d3          	mov    %r8,-0x2d(%rdi)
   17506:	4c 89 4f db          	mov    %r9,-0x25(%rdi)
   1750a:	4c 89 57 e3          	mov    %r10,-0x1d(%rdi)
   1750e:	4c 89 5f eb          	mov    %r11,-0x15(%rdi)
   17512:	48 89 4f f3          	mov    %rcx,-0xd(%rdi)
   17516:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   1751a:	c3                   	retq   
   1751b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17520:	f3 0f 6f 46 cb       	movdqu -0x35(%rsi),%xmm0
   17525:	4c 8b 46 d3          	mov    -0x2d(%rsi),%r8
   17529:	4c 8b 4e db          	mov    -0x25(%rsi),%r9
   1752d:	4c 8b 56 e3          	mov    -0x1d(%rsi),%r10
   17531:	4c 8b 5e eb          	mov    -0x15(%rsi),%r11
   17535:	48 8b 4e f3          	mov    -0xd(%rsi),%rcx
   17539:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   1753d:	f3 0f 7f 47 cb       	movdqu %xmm0,-0x35(%rdi)
   17542:	4c 89 4f db          	mov    %r9,-0x25(%rdi)
   17546:	4c 89 57 e3          	mov    %r10,-0x1d(%rdi)
   1754a:	4c 89 5f eb          	mov    %r11,-0x15(%rdi)
   1754e:	48 89 4f f3          	mov    %rcx,-0xd(%rdi)
   17552:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   17556:	c3                   	retq   
   17557:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1755e:	00 00 
   17560:	4c 8b 46 d3          	mov    -0x2d(%rsi),%r8
   17564:	4c 8b 4e db          	mov    -0x25(%rsi),%r9
   17568:	4c 8b 56 e3          	mov    -0x1d(%rsi),%r10
   1756c:	4c 8b 5e eb          	mov    -0x15(%rsi),%r11
   17570:	48 8b 4e f3          	mov    -0xd(%rsi),%rcx
   17574:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   17578:	4c 89 47 d3          	mov    %r8,-0x2d(%rdi)
   1757c:	4c 89 4f db          	mov    %r9,-0x25(%rdi)
   17580:	4c 89 57 e3          	mov    %r10,-0x1d(%rdi)
   17584:	4c 89 5f eb          	mov    %r11,-0x15(%rdi)
   17588:	48 89 4f f3          	mov    %rcx,-0xd(%rdi)
   1758c:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   17590:	c3                   	retq   
   17591:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17596:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1759d:	00 00 00 
   175a0:	4c 8b 4e db          	mov    -0x25(%rsi),%r9
   175a4:	4c 8b 56 e3          	mov    -0x1d(%rsi),%r10
   175a8:	4c 8b 5e eb          	mov    -0x15(%rsi),%r11
   175ac:	48 8b 4e f3          	mov    -0xd(%rsi),%rcx
   175b0:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   175b4:	4c 89 4f db          	mov    %r9,-0x25(%rdi)
   175b8:	4c 89 57 e3          	mov    %r10,-0x1d(%rdi)
   175bc:	4c 89 5f eb          	mov    %r11,-0x15(%rdi)
   175c0:	48 89 4f f3          	mov    %rcx,-0xd(%rdi)
   175c4:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   175c8:	c3                   	retq   
   175c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   175d0:	4c 8b 56 e3          	mov    -0x1d(%rsi),%r10
   175d4:	4c 8b 5e eb          	mov    -0x15(%rsi),%r11
   175d8:	48 8b 4e f3          	mov    -0xd(%rsi),%rcx
   175dc:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   175e0:	4c 89 57 e3          	mov    %r10,-0x1d(%rdi)
   175e4:	4c 89 5f eb          	mov    %r11,-0x15(%rdi)
   175e8:	48 89 4f f3          	mov    %rcx,-0xd(%rdi)
   175ec:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   175f0:	c3                   	retq   
   175f1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   175f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   175fd:	00 00 00 
   17600:	4c 8b 5e eb          	mov    -0x15(%rsi),%r11
   17604:	48 8b 4e f3          	mov    -0xd(%rsi),%rcx
   17608:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   1760c:	4c 89 5f eb          	mov    %r11,-0x15(%rdi)
   17610:	48 89 4f f3          	mov    %rcx,-0xd(%rdi)
   17614:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   17618:	c3                   	retq   
   17619:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17620:	48 8b 4e f3          	mov    -0xd(%rsi),%rcx
   17624:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   17628:	48 89 4f f3          	mov    %rcx,-0xd(%rdi)
   1762c:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   17630:	c3                   	retq   
   17631:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17636:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1763d:	00 00 00 
   17640:	8b 56 fb             	mov    -0x5(%rsi),%edx
   17643:	8b 4e fc             	mov    -0x4(%rsi),%ecx
   17646:	89 57 fb             	mov    %edx,-0x5(%rdi)
   17649:	89 4f fc             	mov    %ecx,-0x4(%rdi)
   1764c:	c3                   	retq   
   1764d:	0f 1f 00             	nopl   (%rax)
   17650:	f3 0f 6f 46 b2       	movdqu -0x4e(%rsi),%xmm0
   17655:	f3 0f 6f 4e c2       	movdqu -0x3e(%rsi),%xmm1
   1765a:	4c 8b 46 d2          	mov    -0x2e(%rsi),%r8
   1765e:	4c 8b 4e da          	mov    -0x26(%rsi),%r9
   17662:	4c 8b 56 e2          	mov    -0x1e(%rsi),%r10
   17666:	4c 8b 5e ea          	mov    -0x16(%rsi),%r11
   1766a:	48 8b 4e f2          	mov    -0xe(%rsi),%rcx
   1766e:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   17672:	f3 0f 7f 47 b2       	movdqu %xmm0,-0x4e(%rdi)
   17677:	f3 0f 7f 4f c2       	movdqu %xmm1,-0x3e(%rdi)
   1767c:	4c 89 47 d2          	mov    %r8,-0x2e(%rdi)
   17680:	4c 89 4f da          	mov    %r9,-0x26(%rdi)
   17684:	4c 89 57 e2          	mov    %r10,-0x1e(%rdi)
   17688:	4c 89 5f ea          	mov    %r11,-0x16(%rdi)
   1768c:	48 89 4f f2          	mov    %rcx,-0xe(%rdi)
   17690:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   17694:	c3                   	retq   
   17695:	90                   	nop
   17696:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1769d:	00 00 00 
   176a0:	f3 0f 6f 46 ba       	movdqu -0x46(%rsi),%xmm0
   176a5:	f3 0f 6f 4e ca       	movdqu -0x36(%rsi),%xmm1
   176aa:	4c 8b 4e da          	mov    -0x26(%rsi),%r9
   176ae:	4c 8b 56 e2          	mov    -0x1e(%rsi),%r10
   176b2:	4c 8b 5e ea          	mov    -0x16(%rsi),%r11
   176b6:	48 8b 4e f2          	mov    -0xe(%rsi),%rcx
   176ba:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   176be:	f3 0f 7f 47 ba       	movdqu %xmm0,-0x46(%rdi)
   176c3:	f3 0f 7f 4f ca       	movdqu %xmm1,-0x36(%rdi)
   176c8:	4c 89 4f da          	mov    %r9,-0x26(%rdi)
   176cc:	4c 89 57 e2          	mov    %r10,-0x1e(%rdi)
   176d0:	4c 89 5f ea          	mov    %r11,-0x16(%rdi)
   176d4:	48 89 4f f2          	mov    %rcx,-0xe(%rdi)
   176d8:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   176dc:	c3                   	retq   
   176dd:	0f 1f 00             	nopl   (%rax)
   176e0:	f3 0f 6f 46 c2       	movdqu -0x3e(%rsi),%xmm0
   176e5:	4c 8b 46 d2          	mov    -0x2e(%rsi),%r8
   176e9:	4c 8b 4e da          	mov    -0x26(%rsi),%r9
   176ed:	4c 8b 56 e2          	mov    -0x1e(%rsi),%r10
   176f1:	4c 8b 5e ea          	mov    -0x16(%rsi),%r11
   176f5:	48 8b 4e f2          	mov    -0xe(%rsi),%rcx
   176f9:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   176fd:	f3 0f 7f 47 c2       	movdqu %xmm0,-0x3e(%rdi)
   17702:	4c 89 47 d2          	mov    %r8,-0x2e(%rdi)
   17706:	4c 89 4f da          	mov    %r9,-0x26(%rdi)
   1770a:	4c 89 57 e2          	mov    %r10,-0x1e(%rdi)
   1770e:	4c 89 5f ea          	mov    %r11,-0x16(%rdi)
   17712:	48 89 4f f2          	mov    %rcx,-0xe(%rdi)
   17716:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   1771a:	c3                   	retq   
   1771b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17720:	f3 0f 6f 46 ca       	movdqu -0x36(%rsi),%xmm0
   17725:	4c 8b 4e da          	mov    -0x26(%rsi),%r9
   17729:	4c 8b 56 e2          	mov    -0x1e(%rsi),%r10
   1772d:	4c 8b 5e ea          	mov    -0x16(%rsi),%r11
   17731:	48 8b 4e f2          	mov    -0xe(%rsi),%rcx
   17735:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   17739:	f3 0f 7f 47 ca       	movdqu %xmm0,-0x36(%rdi)
   1773e:	4c 89 4f da          	mov    %r9,-0x26(%rdi)
   17742:	4c 89 57 e2          	mov    %r10,-0x1e(%rdi)
   17746:	4c 89 5f ea          	mov    %r11,-0x16(%rdi)
   1774a:	48 89 4f f2          	mov    %rcx,-0xe(%rdi)
   1774e:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   17752:	c3                   	retq   
   17753:	0f 1f 00             	nopl   (%rax)
   17756:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1775d:	00 00 00 
   17760:	4c 8b 46 d2          	mov    -0x2e(%rsi),%r8
   17764:	4c 8b 4e da          	mov    -0x26(%rsi),%r9
   17768:	4c 8b 56 e2          	mov    -0x1e(%rsi),%r10
   1776c:	4c 8b 5e ea          	mov    -0x16(%rsi),%r11
   17770:	48 8b 4e f2          	mov    -0xe(%rsi),%rcx
   17774:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   17778:	4c 89 47 d2          	mov    %r8,-0x2e(%rdi)
   1777c:	4c 89 4f da          	mov    %r9,-0x26(%rdi)
   17780:	4c 89 57 e2          	mov    %r10,-0x1e(%rdi)
   17784:	4c 89 5f ea          	mov    %r11,-0x16(%rdi)
   17788:	48 89 4f f2          	mov    %rcx,-0xe(%rdi)
   1778c:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   17790:	c3                   	retq   
   17791:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17796:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1779d:	00 00 00 
   177a0:	4c 8b 4e da          	mov    -0x26(%rsi),%r9
   177a4:	4c 8b 56 e2          	mov    -0x1e(%rsi),%r10
   177a8:	4c 8b 5e ea          	mov    -0x16(%rsi),%r11
   177ac:	48 8b 4e f2          	mov    -0xe(%rsi),%rcx
   177b0:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   177b4:	4c 89 4f da          	mov    %r9,-0x26(%rdi)
   177b8:	4c 89 57 e2          	mov    %r10,-0x1e(%rdi)
   177bc:	4c 89 5f ea          	mov    %r11,-0x16(%rdi)
   177c0:	48 89 4f f2          	mov    %rcx,-0xe(%rdi)
   177c4:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   177c8:	c3                   	retq   
   177c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   177d0:	4c 8b 56 e2          	mov    -0x1e(%rsi),%r10
   177d4:	4c 8b 5e ea          	mov    -0x16(%rsi),%r11
   177d8:	48 8b 4e f2          	mov    -0xe(%rsi),%rcx
   177dc:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   177e0:	4c 89 57 e2          	mov    %r10,-0x1e(%rdi)
   177e4:	4c 89 5f ea          	mov    %r11,-0x16(%rdi)
   177e8:	48 89 4f f2          	mov    %rcx,-0xe(%rdi)
   177ec:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   177f0:	c3                   	retq   
   177f1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   177f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   177fd:	00 00 00 
   17800:	4c 8b 5e ea          	mov    -0x16(%rsi),%r11
   17804:	48 8b 4e f2          	mov    -0xe(%rsi),%rcx
   17808:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   1780c:	4c 89 5f ea          	mov    %r11,-0x16(%rdi)
   17810:	48 89 4f f2          	mov    %rcx,-0xe(%rdi)
   17814:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   17818:	c3                   	retq   
   17819:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17820:	48 8b 4e f2          	mov    -0xe(%rsi),%rcx
   17824:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   17828:	48 89 4f f2          	mov    %rcx,-0xe(%rdi)
   1782c:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   17830:	c3                   	retq   
   17831:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17836:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1783d:	00 00 00 
   17840:	8b 56 fa             	mov    -0x6(%rsi),%edx
   17843:	8b 4e fc             	mov    -0x4(%rsi),%ecx
   17846:	89 57 fa             	mov    %edx,-0x6(%rdi)
   17849:	89 4f fc             	mov    %ecx,-0x4(%rdi)
   1784c:	c3                   	retq   
   1784d:	0f 1f 00             	nopl   (%rax)
   17850:	f3 0f 6f 46 b1       	movdqu -0x4f(%rsi),%xmm0
   17855:	f3 0f 6f 4e c1       	movdqu -0x3f(%rsi),%xmm1
   1785a:	4c 8b 46 d1          	mov    -0x2f(%rsi),%r8
   1785e:	4c 8b 4e d9          	mov    -0x27(%rsi),%r9
   17862:	4c 8b 56 e1          	mov    -0x1f(%rsi),%r10
   17866:	4c 8b 5e e9          	mov    -0x17(%rsi),%r11
   1786a:	48 8b 4e f1          	mov    -0xf(%rsi),%rcx
   1786e:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   17872:	f3 0f 7f 47 b1       	movdqu %xmm0,-0x4f(%rdi)
   17877:	f3 0f 7f 4f c1       	movdqu %xmm1,-0x3f(%rdi)
   1787c:	4c 89 47 d1          	mov    %r8,-0x2f(%rdi)
   17880:	4c 89 4f d9          	mov    %r9,-0x27(%rdi)
   17884:	4c 89 57 e1          	mov    %r10,-0x1f(%rdi)
   17888:	4c 89 5f e9          	mov    %r11,-0x17(%rdi)
   1788c:	48 89 4f f1          	mov    %rcx,-0xf(%rdi)
   17890:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   17894:	c3                   	retq   
   17895:	90                   	nop
   17896:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1789d:	00 00 00 
   178a0:	f3 0f 6f 46 b9       	movdqu -0x47(%rsi),%xmm0
   178a5:	f3 0f 6f 4e c9       	movdqu -0x37(%rsi),%xmm1
   178aa:	4c 8b 4e d9          	mov    -0x27(%rsi),%r9
   178ae:	4c 8b 56 e1          	mov    -0x1f(%rsi),%r10
   178b2:	4c 8b 5e e9          	mov    -0x17(%rsi),%r11
   178b6:	48 8b 4e f1          	mov    -0xf(%rsi),%rcx
   178ba:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   178be:	f3 0f 7f 47 b9       	movdqu %xmm0,-0x47(%rdi)
   178c3:	f3 0f 7f 4f c9       	movdqu %xmm1,-0x37(%rdi)
   178c8:	4c 89 4f d9          	mov    %r9,-0x27(%rdi)
   178cc:	4c 89 57 e1          	mov    %r10,-0x1f(%rdi)
   178d0:	4c 89 5f e9          	mov    %r11,-0x17(%rdi)
   178d4:	48 89 4f f1          	mov    %rcx,-0xf(%rdi)
   178d8:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   178dc:	c3                   	retq   
   178dd:	0f 1f 00             	nopl   (%rax)
   178e0:	f3 0f 6f 46 c1       	movdqu -0x3f(%rsi),%xmm0
   178e5:	4c 8b 46 d1          	mov    -0x2f(%rsi),%r8
   178e9:	4c 8b 4e d9          	mov    -0x27(%rsi),%r9
   178ed:	4c 8b 56 e1          	mov    -0x1f(%rsi),%r10
   178f1:	4c 8b 5e e9          	mov    -0x17(%rsi),%r11
   178f5:	48 8b 4e f1          	mov    -0xf(%rsi),%rcx
   178f9:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   178fd:	f3 0f 7f 47 c1       	movdqu %xmm0,-0x3f(%rdi)
   17902:	4c 89 47 d1          	mov    %r8,-0x2f(%rdi)
   17906:	4c 89 4f d9          	mov    %r9,-0x27(%rdi)
   1790a:	4c 89 57 e1          	mov    %r10,-0x1f(%rdi)
   1790e:	4c 89 5f e9          	mov    %r11,-0x17(%rdi)
   17912:	48 89 4f f1          	mov    %rcx,-0xf(%rdi)
   17916:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   1791a:	c3                   	retq   
   1791b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17920:	f3 0f 6f 46 c9       	movdqu -0x37(%rsi),%xmm0
   17925:	4c 8b 4e d9          	mov    -0x27(%rsi),%r9
   17929:	4c 8b 56 e1          	mov    -0x1f(%rsi),%r10
   1792d:	4c 8b 5e e9          	mov    -0x17(%rsi),%r11
   17931:	48 8b 4e f1          	mov    -0xf(%rsi),%rcx
   17935:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   17939:	f3 0f 7f 47 c9       	movdqu %xmm0,-0x37(%rdi)
   1793e:	4c 89 4f d9          	mov    %r9,-0x27(%rdi)
   17942:	4c 89 57 e1          	mov    %r10,-0x1f(%rdi)
   17946:	4c 89 5f e9          	mov    %r11,-0x17(%rdi)
   1794a:	48 89 4f f1          	mov    %rcx,-0xf(%rdi)
   1794e:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   17952:	c3                   	retq   
   17953:	0f 1f 00             	nopl   (%rax)
   17956:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1795d:	00 00 00 
   17960:	4c 8b 46 d1          	mov    -0x2f(%rsi),%r8
   17964:	4c 8b 4e d9          	mov    -0x27(%rsi),%r9
   17968:	4c 8b 56 e1          	mov    -0x1f(%rsi),%r10
   1796c:	4c 8b 5e e9          	mov    -0x17(%rsi),%r11
   17970:	48 8b 4e f1          	mov    -0xf(%rsi),%rcx
   17974:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   17978:	4c 89 47 d1          	mov    %r8,-0x2f(%rdi)
   1797c:	4c 89 4f d9          	mov    %r9,-0x27(%rdi)
   17980:	4c 89 57 e1          	mov    %r10,-0x1f(%rdi)
   17984:	4c 89 5f e9          	mov    %r11,-0x17(%rdi)
   17988:	48 89 4f f1          	mov    %rcx,-0xf(%rdi)
   1798c:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   17990:	c3                   	retq   
   17991:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17996:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1799d:	00 00 00 
   179a0:	4c 8b 4e d9          	mov    -0x27(%rsi),%r9
   179a4:	4c 8b 56 e1          	mov    -0x1f(%rsi),%r10
   179a8:	4c 8b 5e e9          	mov    -0x17(%rsi),%r11
   179ac:	48 8b 4e f1          	mov    -0xf(%rsi),%rcx
   179b0:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   179b4:	4c 89 4f d9          	mov    %r9,-0x27(%rdi)
   179b8:	4c 89 57 e1          	mov    %r10,-0x1f(%rdi)
   179bc:	4c 89 5f e9          	mov    %r11,-0x17(%rdi)
   179c0:	48 89 4f f1          	mov    %rcx,-0xf(%rdi)
   179c4:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   179c8:	c3                   	retq   
   179c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   179d0:	4c 8b 56 e1          	mov    -0x1f(%rsi),%r10
   179d4:	4c 8b 5e e9          	mov    -0x17(%rsi),%r11
   179d8:	48 8b 4e f1          	mov    -0xf(%rsi),%rcx
   179dc:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   179e0:	4c 89 57 e1          	mov    %r10,-0x1f(%rdi)
   179e4:	4c 89 5f e9          	mov    %r11,-0x17(%rdi)
   179e8:	48 89 4f f1          	mov    %rcx,-0xf(%rdi)
   179ec:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   179f0:	c3                   	retq   
   179f1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   179f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   179fd:	00 00 00 
   17a00:	4c 8b 5e e9          	mov    -0x17(%rsi),%r11
   17a04:	48 8b 4e f1          	mov    -0xf(%rsi),%rcx
   17a08:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   17a0c:	4c 89 5f e9          	mov    %r11,-0x17(%rdi)
   17a10:	48 89 4f f1          	mov    %rcx,-0xf(%rdi)
   17a14:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   17a18:	c3                   	retq   
   17a19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17a20:	48 8b 4e f1          	mov    -0xf(%rsi),%rcx
   17a24:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   17a28:	48 89 4f f1          	mov    %rcx,-0xf(%rdi)
   17a2c:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   17a30:	c3                   	retq   
   17a31:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17a36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17a3d:	00 00 00 
   17a40:	8b 56 f9             	mov    -0x7(%rsi),%edx
   17a43:	8b 4e fc             	mov    -0x4(%rsi),%ecx
   17a46:	89 57 f9             	mov    %edx,-0x7(%rdi)
   17a49:	89 4f fc             	mov    %ecx,-0x4(%rdi)
   17a4c:	c3                   	retq   
   17a4d:	0f 1f 00             	nopl   (%rax)
   17a50:	f3 0f 6f 0e          	movdqu (%rsi),%xmm1
   17a54:	48 8d 76 10          	lea    0x10(%rsi),%rsi
   17a58:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   17a5d:	66 0f e7 0f          	movntdq %xmm1,(%rdi)
   17a61:	48 8d 7f 10          	lea    0x10(%rdi),%rdi
   17a65:	48 8d 92 70 ff ff ff 	lea    -0x90(%rdx),%rdx
   17a6c:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   17a70:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
   17a75:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
   17a7a:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
   17a7f:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
   17a84:	f3 0f 6f 6e 50       	movdqu 0x50(%rsi),%xmm5
   17a89:	f3 0f 6f 76 60       	movdqu 0x60(%rsi),%xmm6
   17a8e:	f3 0f 6f 7e 70       	movdqu 0x70(%rsi),%xmm7
   17a93:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   17a9a:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   17aa1:	66 0f e7 07          	movntdq %xmm0,(%rdi)
   17aa5:	66 0f e7 4f 10       	movntdq %xmm1,0x10(%rdi)
   17aaa:	66 0f e7 57 20       	movntdq %xmm2,0x20(%rdi)
   17aaf:	66 0f e7 5f 30       	movntdq %xmm3,0x30(%rdi)
   17ab4:	66 0f e7 67 40       	movntdq %xmm4,0x40(%rdi)
   17ab9:	66 0f e7 6f 50       	movntdq %xmm5,0x50(%rdi)
   17abe:	66 0f e7 77 60       	movntdq %xmm6,0x60(%rdi)
   17ac3:	66 0f e7 7f 70       	movntdq %xmm7,0x70(%rdi)
   17ac8:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   17acf:	73 9b                	jae    17a6c <__intel_ssse3_memcpy+0x282c>
   17ad1:	48 83 fa c0          	cmp    $0xffffffffffffffc0,%rdx
   17ad5:	48 8d 92 80 00 00 00 	lea    0x80(%rdx),%rdx
   17adc:	7c 32                	jl     17b10 <__intel_ssse3_memcpy+0x28d0>
   17ade:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   17ae2:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
   17ae7:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
   17aec:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
   17af1:	48 8d 76 40          	lea    0x40(%rsi),%rsi
   17af5:	66 0f e7 07          	movntdq %xmm0,(%rdi)
   17af9:	66 0f e7 4f 10       	movntdq %xmm1,0x10(%rdi)
   17afe:	66 0f e7 57 20       	movntdq %xmm2,0x20(%rdi)
   17b03:	66 0f e7 5f 30       	movntdq %xmm3,0x30(%rdi)
   17b08:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   17b0c:	48 83 ea 40          	sub    $0x40,%rdx
   17b10:	48 01 d6             	add    %rdx,%rsi
   17b13:	48 01 d7             	add    %rdx,%rdi
   17b16:	0f ae f8             	sfence 
   17b19:	4c 8d 1d 70 6b 00 00 	lea    0x6b70(%rip),%r11        # 1e690 <__func__.2431+0x7>
   17b20:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   17b24:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   17b28:	3e ff e2             	ds jmpq *%rdx
   17b2b:	0f 0b                	ud2    
   17b2d:	0f 1f 00             	nopl   (%rax)
   17b30:	f3 0f 6f 4e f0       	movdqu -0x10(%rsi),%xmm1
   17b35:	48 8d 76 f0          	lea    -0x10(%rsi),%rsi
   17b39:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   17b3e:	66 0f 7f 4f f0       	movdqa %xmm1,-0x10(%rdi)
   17b43:	48 8d 7f f0          	lea    -0x10(%rdi),%rdi
   17b47:	48 8d 92 70 ff ff ff 	lea    -0x90(%rdx),%rdx
   17b4e:	f3 0f 6f 46 f0       	movdqu -0x10(%rsi),%xmm0
   17b53:	f3 0f 6f 4e e0       	movdqu -0x20(%rsi),%xmm1
   17b58:	f3 0f 6f 56 d0       	movdqu -0x30(%rsi),%xmm2
   17b5d:	f3 0f 6f 5e c0       	movdqu -0x40(%rsi),%xmm3
   17b62:	f3 0f 6f 66 b0       	movdqu -0x50(%rsi),%xmm4
   17b67:	f3 0f 6f 6e a0       	movdqu -0x60(%rsi),%xmm5
   17b6c:	f3 0f 6f 76 90       	movdqu -0x70(%rsi),%xmm6
   17b71:	f3 0f 6f 7e 80       	movdqu -0x80(%rsi),%xmm7
   17b76:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   17b7a:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   17b81:	66 0f e7 47 f0       	movntdq %xmm0,-0x10(%rdi)
   17b86:	66 0f e7 4f e0       	movntdq %xmm1,-0x20(%rdi)
   17b8b:	66 0f e7 57 d0       	movntdq %xmm2,-0x30(%rdi)
   17b90:	66 0f e7 5f c0       	movntdq %xmm3,-0x40(%rdi)
   17b95:	66 0f e7 67 b0       	movntdq %xmm4,-0x50(%rdi)
   17b9a:	66 0f e7 6f a0       	movntdq %xmm5,-0x60(%rdi)
   17b9f:	66 0f e7 77 90       	movntdq %xmm6,-0x70(%rdi)
   17ba4:	66 0f e7 7f 80       	movntdq %xmm7,-0x80(%rdi)
   17ba9:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   17bad:	73 9f                	jae    17b4e <__intel_ssse3_memcpy+0x290e>
   17baf:	48 83 fa c0          	cmp    $0xffffffffffffffc0,%rdx
   17bb3:	48 8d 92 80 00 00 00 	lea    0x80(%rdx),%rdx
   17bba:	7c 34                	jl     17bf0 <__intel_ssse3_memcpy+0x29b0>
   17bbc:	f3 0f 6f 46 f0       	movdqu -0x10(%rsi),%xmm0
   17bc1:	f3 0f 6f 4e e0       	movdqu -0x20(%rsi),%xmm1
   17bc6:	f3 0f 6f 56 d0       	movdqu -0x30(%rsi),%xmm2
   17bcb:	f3 0f 6f 5e c0       	movdqu -0x40(%rsi),%xmm3
   17bd0:	48 8d 76 c0          	lea    -0x40(%rsi),%rsi
   17bd4:	66 0f e7 47 f0       	movntdq %xmm0,-0x10(%rdi)
   17bd9:	66 0f e7 4f e0       	movntdq %xmm1,-0x20(%rdi)
   17bde:	66 0f e7 57 d0       	movntdq %xmm2,-0x30(%rdi)
   17be3:	66 0f e7 5f c0       	movntdq %xmm3,-0x40(%rdi)
   17be8:	48 8d 7f c0          	lea    -0x40(%rdi),%rdi
   17bec:	48 83 ea 40          	sub    $0x40,%rdx
   17bf0:	0f ae f8             	sfence 
   17bf3:	4c 8d 1d 96 6a 00 00 	lea    0x6a96(%rip),%r11        # 1e690 <__func__.2431+0x7>
   17bfa:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   17bfe:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   17c02:	3e ff e2             	ds jmpq *%rdx
   17c05:	0f 0b                	ud2    
   17c07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   17c0e:	00 00 

0000000000017c10 <__intel_ssse3_rep_memcpy>:
   17c10:	48 89 f8             	mov    %rdi,%rax
   17c13:	48 81 fa 90 00 00 00 	cmp    $0x90,%rdx
   17c1a:	73 34                	jae    17c50 <__intel_ssse3_rep_memcpy+0x40>
   17c1c:	40 38 fe             	cmp    %dil,%sil
   17c1f:	76 1a                	jbe    17c3b <__intel_ssse3_rep_memcpy+0x2b>
   17c21:	48 01 d6             	add    %rdx,%rsi
   17c24:	48 01 d7             	add    %rdx,%rdi
   17c27:	4c 8d 1d 62 6e 00 00 	lea    0x6e62(%rip),%r11        # 1ea90 <__func__.2431+0x407>
   17c2e:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   17c32:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   17c36:	3e ff e2             	ds jmpq *%rdx
   17c39:	0f 0b                	ud2    
   17c3b:	4c 8d 1d 0e 6c 00 00 	lea    0x6c0e(%rip),%r11        # 1e850 <__func__.2431+0x1c7>
   17c42:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   17c46:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   17c4a:	3e ff e2             	ds jmpq *%rdx
   17c4d:	0f 0b                	ud2    
   17c4f:	90                   	nop
   17c50:	40 38 fe             	cmp    %dil,%sil
   17c53:	7e 5b                	jle    17cb0 <__intel_ssse3_rep_memcpy+0xa0>
   17c55:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   17c59:	49 89 f8             	mov    %rdi,%r8
   17c5c:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
   17c60:	48 83 c7 10          	add    $0x10,%rdi
   17c64:	49 89 f9             	mov    %rdi,%r9
   17c67:	4d 29 c1             	sub    %r8,%r9
   17c6a:	4c 29 ca             	sub    %r9,%rdx
   17c6d:	4c 01 ce             	add    %r9,%rsi
   17c70:	49 89 f1             	mov    %rsi,%r9
   17c73:	49 83 e1 0f          	and    $0xf,%r9
   17c77:	0f 84 93 00 00 00    	je     17d10 <__intel_ssse3_rep_memcpy+0x100>
   17c7d:	8b 0d 09 ac 20 00    	mov    0x20ac09(%rip),%ecx        # 22288c <__libirc_data_cache_size>
   17c83:	48 39 ca             	cmp    %rcx,%rdx
   17c86:	0f 83 24 18 00 00    	jae    194b0 <__intel_ssse3_rep_memcpy+0x18a0>
   17c8c:	4c 8d 1d 3d 70 00 00 	lea    0x703d(%rip),%r11        # 1ecd0 <__func__.2431+0x647>
   17c93:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   17c9a:	4f 63 0c 8b          	movslq (%r11,%r9,4),%r9
   17c9e:	4d 01 d9             	add    %r11,%r9
   17ca1:	3e 41 ff e1          	ds jmpq *%r9
   17ca5:	0f 0b                	ud2    
   17ca7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   17cae:	00 00 
   17cb0:	8b 0d d6 ab 20 00    	mov    0x20abd6(%rip),%ecx        # 22288c <__libirc_data_cache_size>
   17cb6:	48 d1 e1             	shl    %rcx
   17cb9:	48 39 ca             	cmp    %rcx,%rdx
   17cbc:	0f 87 7e 19 00 00    	ja     19640 <__intel_ssse3_rep_memcpy+0x1a30>
   17cc2:	48 01 d7             	add    %rdx,%rdi
   17cc5:	48 01 d6             	add    %rdx,%rsi
   17cc8:	f3 0f 6f 46 f0       	movdqu -0x10(%rsi),%xmm0
   17ccd:	4c 8d 47 f0          	lea    -0x10(%rdi),%r8
   17cd1:	49 89 f9             	mov    %rdi,%r9
   17cd4:	49 83 e1 0f          	and    $0xf,%r9
   17cd8:	4c 31 cf             	xor    %r9,%rdi
   17cdb:	4c 29 ce             	sub    %r9,%rsi
   17cde:	4c 29 ca             	sub    %r9,%rdx
   17ce1:	49 89 f1             	mov    %rsi,%r9
   17ce4:	49 83 e1 0f          	and    $0xf,%r9
   17ce8:	0f 84 c2 00 00 00    	je     17db0 <__intel_ssse3_rep_memcpy+0x1a0>
   17cee:	4c 8d 1d 1b 70 00 00 	lea    0x701b(%rip),%r11        # 1ed10 <__func__.2431+0x687>
   17cf5:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   17cfc:	4f 63 0c 8b          	movslq (%r11,%r9,4),%r9
   17d00:	4d 01 d9             	add    %r11,%r9
   17d03:	3e 41 ff e1          	ds jmpq *%r9
   17d07:	0f 0b                	ud2    
   17d09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17d10:	49 89 d1             	mov    %rdx,%r9
   17d13:	49 c1 e9 08          	shr    $0x8,%r9
   17d17:	49 01 d1             	add    %rdx,%r9
   17d1a:	8b 0d 70 ab 20 00    	mov    0x20ab70(%rip),%ecx        # 222890 <__libirc_data_cache_size_half>
   17d20:	49 39 c9             	cmp    %rcx,%r9
   17d23:	0f 83 87 17 00 00    	jae    194b0 <__intel_ssse3_rep_memcpy+0x18a0>
   17d29:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   17d30:	66 0f 6f 0e          	movdqa (%rsi),%xmm1
   17d34:	66 0f 7f 0f          	movdqa %xmm1,(%rdi)
   17d38:	0f 28 56 10          	movaps 0x10(%rsi),%xmm2
   17d3c:	0f 29 57 10          	movaps %xmm2,0x10(%rdi)
   17d40:	0f 28 5e 20          	movaps 0x20(%rsi),%xmm3
   17d44:	0f 29 5f 20          	movaps %xmm3,0x20(%rdi)
   17d48:	0f 28 66 30          	movaps 0x30(%rsi),%xmm4
   17d4c:	0f 29 67 30          	movaps %xmm4,0x30(%rdi)
   17d50:	0f 28 4e 40          	movaps 0x40(%rsi),%xmm1
   17d54:	0f 29 4f 40          	movaps %xmm1,0x40(%rdi)
   17d58:	0f 28 56 50          	movaps 0x50(%rsi),%xmm2
   17d5c:	0f 29 57 50          	movaps %xmm2,0x50(%rdi)
   17d60:	0f 28 5e 60          	movaps 0x60(%rsi),%xmm3
   17d64:	0f 29 5f 60          	movaps %xmm3,0x60(%rdi)
   17d68:	0f 28 66 70          	movaps 0x70(%rsi),%xmm4
   17d6c:	0f 29 67 70          	movaps %xmm4,0x70(%rdi)
   17d70:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   17d77:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   17d7e:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   17d85:	73 a9                	jae    17d30 <__intel_ssse3_rep_memcpy+0x120>
   17d87:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   17d8c:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   17d93:	48 01 d6             	add    %rdx,%rsi
   17d96:	48 01 d7             	add    %rdx,%rdi
   17d99:	4c 8d 1d f0 6c 00 00 	lea    0x6cf0(%rip),%r11        # 1ea90 <__func__.2431+0x407>
   17da0:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   17da4:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   17da8:	3e ff e2             	ds jmpq *%rdx
   17dab:	0f 0b                	ud2    
   17dad:	0f 1f 00             	nopl   (%rax)
   17db0:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   17db7:	0f 28 4e f0          	movaps -0x10(%rsi),%xmm1
   17dbb:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   17dbf:	0f 28 56 e0          	movaps -0x20(%rsi),%xmm2
   17dc3:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   17dc7:	0f 28 5e d0          	movaps -0x30(%rsi),%xmm3
   17dcb:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   17dcf:	0f 28 66 c0          	movaps -0x40(%rsi),%xmm4
   17dd3:	0f 29 67 c0          	movaps %xmm4,-0x40(%rdi)
   17dd7:	0f 28 6e b0          	movaps -0x50(%rsi),%xmm5
   17ddb:	0f 29 6f b0          	movaps %xmm5,-0x50(%rdi)
   17ddf:	0f 28 6e a0          	movaps -0x60(%rsi),%xmm5
   17de3:	0f 29 6f a0          	movaps %xmm5,-0x60(%rdi)
   17de7:	0f 28 6e 90          	movaps -0x70(%rsi),%xmm5
   17deb:	0f 29 6f 90          	movaps %xmm5,-0x70(%rdi)
   17def:	0f 28 6e 80          	movaps -0x80(%rsi),%xmm5
   17df3:	0f 29 6f 80          	movaps %xmm5,-0x80(%rdi)
   17df7:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   17dfe:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   17e02:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   17e06:	73 af                	jae    17db7 <__intel_ssse3_rep_memcpy+0x1a7>
   17e08:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   17e0d:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   17e14:	48 29 d7             	sub    %rdx,%rdi
   17e17:	48 29 d6             	sub    %rdx,%rsi
   17e1a:	4c 8d 1d 2f 6a 00 00 	lea    0x6a2f(%rip),%r11        # 1e850 <__func__.2431+0x1c7>
   17e21:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   17e25:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   17e29:	3e ff e2             	ds jmpq *%rdx
   17e2c:	0f 0b                	ud2    
   17e2e:	66 90                	xchg   %ax,%ax
   17e30:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   17e37:	0f 28 4e ff          	movaps -0x1(%rsi),%xmm1
   17e3b:	0f 28 56 0f          	movaps 0xf(%rsi),%xmm2
   17e3f:	0f 28 5e 1f          	movaps 0x1f(%rsi),%xmm3
   17e43:	0f 28 66 2f          	movaps 0x2f(%rsi),%xmm4
   17e47:	0f 28 6e 3f          	movaps 0x3f(%rsi),%xmm5
   17e4b:	0f 28 76 4f          	movaps 0x4f(%rsi),%xmm6
   17e4f:	0f 28 7e 5f          	movaps 0x5f(%rsi),%xmm7
   17e53:	44 0f 28 46 6f       	movaps 0x6f(%rsi),%xmm8
   17e58:	44 0f 28 4e 7f       	movaps 0x7f(%rsi),%xmm9
   17e5d:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   17e64:	66 45 0f 3a 0f c8 01 	palignr $0x1,%xmm8,%xmm9
   17e6b:	44 0f 29 4f 70       	movaps %xmm9,0x70(%rdi)
   17e70:	66 44 0f 3a 0f c7 01 	palignr $0x1,%xmm7,%xmm8
   17e77:	44 0f 29 47 60       	movaps %xmm8,0x60(%rdi)
   17e7c:	66 0f 3a 0f fe 01    	palignr $0x1,%xmm6,%xmm7
   17e82:	0f 29 7f 50          	movaps %xmm7,0x50(%rdi)
   17e86:	66 0f 3a 0f f5 01    	palignr $0x1,%xmm5,%xmm6
   17e8c:	0f 29 77 40          	movaps %xmm6,0x40(%rdi)
   17e90:	66 0f 3a 0f ec 01    	palignr $0x1,%xmm4,%xmm5
   17e96:	0f 29 6f 30          	movaps %xmm5,0x30(%rdi)
   17e9a:	66 0f 3a 0f e3 01    	palignr $0x1,%xmm3,%xmm4
   17ea0:	0f 29 67 20          	movaps %xmm4,0x20(%rdi)
   17ea4:	66 0f 3a 0f da 01    	palignr $0x1,%xmm2,%xmm3
   17eaa:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   17eae:	66 0f 3a 0f d1 01    	palignr $0x1,%xmm1,%xmm2
   17eb4:	0f 29 17             	movaps %xmm2,(%rdi)
   17eb7:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   17ebe:	0f 83 6c ff ff ff    	jae    17e30 <__intel_ssse3_rep_memcpy+0x220>
   17ec4:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   17ec9:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   17ed0:	48 01 d7             	add    %rdx,%rdi
   17ed3:	48 01 d6             	add    %rdx,%rsi
   17ed6:	4c 8d 1d b3 6b 00 00 	lea    0x6bb3(%rip),%r11        # 1ea90 <__func__.2431+0x407>
   17edd:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   17ee1:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   17ee5:	3e ff e2             	ds jmpq *%rdx
   17ee8:	0f 0b                	ud2    
   17eea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17ef0:	0f 28 4e ff          	movaps -0x1(%rsi),%xmm1
   17ef4:	0f 28 56 ef          	movaps -0x11(%rsi),%xmm2
   17ef8:	66 0f 3a 0f ca 01    	palignr $0x1,%xmm2,%xmm1
   17efe:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   17f02:	0f 28 5e df          	movaps -0x21(%rsi),%xmm3
   17f06:	66 0f 3a 0f d3 01    	palignr $0x1,%xmm3,%xmm2
   17f0c:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   17f10:	0f 28 66 cf          	movaps -0x31(%rsi),%xmm4
   17f14:	66 0f 3a 0f dc 01    	palignr $0x1,%xmm4,%xmm3
   17f1a:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   17f1e:	0f 28 6e bf          	movaps -0x41(%rsi),%xmm5
   17f22:	66 0f 3a 0f e5 01    	palignr $0x1,%xmm5,%xmm4
   17f28:	0f 29 67 c0          	movaps %xmm4,-0x40(%rdi)
   17f2c:	0f 28 76 af          	movaps -0x51(%rsi),%xmm6
   17f30:	66 0f 3a 0f ee 01    	palignr $0x1,%xmm6,%xmm5
   17f36:	0f 29 6f b0          	movaps %xmm5,-0x50(%rdi)
   17f3a:	0f 28 7e 9f          	movaps -0x61(%rsi),%xmm7
   17f3e:	66 0f 3a 0f f7 01    	palignr $0x1,%xmm7,%xmm6
   17f44:	0f 29 77 a0          	movaps %xmm6,-0x60(%rdi)
   17f48:	44 0f 28 46 8f       	movaps -0x71(%rsi),%xmm8
   17f4d:	66 41 0f 3a 0f f8 01 	palignr $0x1,%xmm8,%xmm7
   17f54:	0f 29 7f 90          	movaps %xmm7,-0x70(%rdi)
   17f58:	44 0f 28 8e 7f ff ff 	movaps -0x81(%rsi),%xmm9
   17f5f:	ff 
   17f60:	66 45 0f 3a 0f c1 01 	palignr $0x1,%xmm9,%xmm8
   17f67:	44 0f 29 47 80       	movaps %xmm8,-0x80(%rdi)
   17f6c:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   17f73:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   17f77:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   17f7b:	0f 83 6f ff ff ff    	jae    17ef0 <__intel_ssse3_rep_memcpy+0x2e0>
   17f81:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   17f86:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   17f8d:	48 29 d7             	sub    %rdx,%rdi
   17f90:	48 29 d6             	sub    %rdx,%rsi
   17f93:	4c 8d 1d b6 68 00 00 	lea    0x68b6(%rip),%r11        # 1e850 <__func__.2431+0x1c7>
   17f9a:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   17f9e:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   17fa2:	3e ff e2             	ds jmpq *%rdx
   17fa5:	0f 0b                	ud2    
   17fa7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   17fae:	00 00 
   17fb0:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   17fb7:	0f 28 4e fe          	movaps -0x2(%rsi),%xmm1
   17fbb:	0f 28 56 0e          	movaps 0xe(%rsi),%xmm2
   17fbf:	0f 28 5e 1e          	movaps 0x1e(%rsi),%xmm3
   17fc3:	0f 28 66 2e          	movaps 0x2e(%rsi),%xmm4
   17fc7:	0f 28 6e 3e          	movaps 0x3e(%rsi),%xmm5
   17fcb:	0f 28 76 4e          	movaps 0x4e(%rsi),%xmm6
   17fcf:	0f 28 7e 5e          	movaps 0x5e(%rsi),%xmm7
   17fd3:	44 0f 28 46 6e       	movaps 0x6e(%rsi),%xmm8
   17fd8:	44 0f 28 4e 7e       	movaps 0x7e(%rsi),%xmm9
   17fdd:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   17fe4:	66 45 0f 3a 0f c8 02 	palignr $0x2,%xmm8,%xmm9
   17feb:	44 0f 29 4f 70       	movaps %xmm9,0x70(%rdi)
   17ff0:	66 44 0f 3a 0f c7 02 	palignr $0x2,%xmm7,%xmm8
   17ff7:	44 0f 29 47 60       	movaps %xmm8,0x60(%rdi)
   17ffc:	66 0f 3a 0f fe 02    	palignr $0x2,%xmm6,%xmm7
   18002:	0f 29 7f 50          	movaps %xmm7,0x50(%rdi)
   18006:	66 0f 3a 0f f5 02    	palignr $0x2,%xmm5,%xmm6
   1800c:	0f 29 77 40          	movaps %xmm6,0x40(%rdi)
   18010:	66 0f 3a 0f ec 02    	palignr $0x2,%xmm4,%xmm5
   18016:	0f 29 6f 30          	movaps %xmm5,0x30(%rdi)
   1801a:	66 0f 3a 0f e3 02    	palignr $0x2,%xmm3,%xmm4
   18020:	0f 29 67 20          	movaps %xmm4,0x20(%rdi)
   18024:	66 0f 3a 0f da 02    	palignr $0x2,%xmm2,%xmm3
   1802a:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   1802e:	66 0f 3a 0f d1 02    	palignr $0x2,%xmm1,%xmm2
   18034:	0f 29 17             	movaps %xmm2,(%rdi)
   18037:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   1803e:	0f 83 6c ff ff ff    	jae    17fb0 <__intel_ssse3_rep_memcpy+0x3a0>
   18044:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   18049:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   18050:	48 01 d7             	add    %rdx,%rdi
   18053:	48 01 d6             	add    %rdx,%rsi
   18056:	4c 8d 1d 33 6a 00 00 	lea    0x6a33(%rip),%r11        # 1ea90 <__func__.2431+0x407>
   1805d:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   18061:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   18065:	3e ff e2             	ds jmpq *%rdx
   18068:	0f 0b                	ud2    
   1806a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18070:	0f 28 4e fe          	movaps -0x2(%rsi),%xmm1
   18074:	0f 28 56 ee          	movaps -0x12(%rsi),%xmm2
   18078:	66 0f 3a 0f ca 02    	palignr $0x2,%xmm2,%xmm1
   1807e:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   18082:	0f 28 5e de          	movaps -0x22(%rsi),%xmm3
   18086:	66 0f 3a 0f d3 02    	palignr $0x2,%xmm3,%xmm2
   1808c:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   18090:	0f 28 66 ce          	movaps -0x32(%rsi),%xmm4
   18094:	66 0f 3a 0f dc 02    	palignr $0x2,%xmm4,%xmm3
   1809a:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   1809e:	0f 28 6e be          	movaps -0x42(%rsi),%xmm5
   180a2:	66 0f 3a 0f e5 02    	palignr $0x2,%xmm5,%xmm4
   180a8:	0f 29 67 c0          	movaps %xmm4,-0x40(%rdi)
   180ac:	0f 28 76 ae          	movaps -0x52(%rsi),%xmm6
   180b0:	66 0f 3a 0f ee 02    	palignr $0x2,%xmm6,%xmm5
   180b6:	0f 29 6f b0          	movaps %xmm5,-0x50(%rdi)
   180ba:	0f 28 7e 9e          	movaps -0x62(%rsi),%xmm7
   180be:	66 0f 3a 0f f7 02    	palignr $0x2,%xmm7,%xmm6
   180c4:	0f 29 77 a0          	movaps %xmm6,-0x60(%rdi)
   180c8:	44 0f 28 46 8e       	movaps -0x72(%rsi),%xmm8
   180cd:	66 41 0f 3a 0f f8 02 	palignr $0x2,%xmm8,%xmm7
   180d4:	0f 29 7f 90          	movaps %xmm7,-0x70(%rdi)
   180d8:	44 0f 28 8e 7e ff ff 	movaps -0x82(%rsi),%xmm9
   180df:	ff 
   180e0:	66 45 0f 3a 0f c1 02 	palignr $0x2,%xmm9,%xmm8
   180e7:	44 0f 29 47 80       	movaps %xmm8,-0x80(%rdi)
   180ec:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   180f3:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   180f7:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   180fb:	0f 83 6f ff ff ff    	jae    18070 <__intel_ssse3_rep_memcpy+0x460>
   18101:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   18106:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   1810d:	48 29 d7             	sub    %rdx,%rdi
   18110:	48 29 d6             	sub    %rdx,%rsi
   18113:	4c 8d 1d 36 67 00 00 	lea    0x6736(%rip),%r11        # 1e850 <__func__.2431+0x1c7>
   1811a:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1811e:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   18122:	3e ff e2             	ds jmpq *%rdx
   18125:	0f 0b                	ud2    
   18127:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1812e:	00 00 
   18130:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   18137:	0f 28 4e fd          	movaps -0x3(%rsi),%xmm1
   1813b:	0f 28 56 0d          	movaps 0xd(%rsi),%xmm2
   1813f:	0f 28 5e 1d          	movaps 0x1d(%rsi),%xmm3
   18143:	0f 28 66 2d          	movaps 0x2d(%rsi),%xmm4
   18147:	0f 28 6e 3d          	movaps 0x3d(%rsi),%xmm5
   1814b:	0f 28 76 4d          	movaps 0x4d(%rsi),%xmm6
   1814f:	0f 28 7e 5d          	movaps 0x5d(%rsi),%xmm7
   18153:	44 0f 28 46 6d       	movaps 0x6d(%rsi),%xmm8
   18158:	44 0f 28 4e 7d       	movaps 0x7d(%rsi),%xmm9
   1815d:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   18164:	66 45 0f 3a 0f c8 03 	palignr $0x3,%xmm8,%xmm9
   1816b:	44 0f 29 4f 70       	movaps %xmm9,0x70(%rdi)
   18170:	66 44 0f 3a 0f c7 03 	palignr $0x3,%xmm7,%xmm8
   18177:	44 0f 29 47 60       	movaps %xmm8,0x60(%rdi)
   1817c:	66 0f 3a 0f fe 03    	palignr $0x3,%xmm6,%xmm7
   18182:	0f 29 7f 50          	movaps %xmm7,0x50(%rdi)
   18186:	66 0f 3a 0f f5 03    	palignr $0x3,%xmm5,%xmm6
   1818c:	0f 29 77 40          	movaps %xmm6,0x40(%rdi)
   18190:	66 0f 3a 0f ec 03    	palignr $0x3,%xmm4,%xmm5
   18196:	0f 29 6f 30          	movaps %xmm5,0x30(%rdi)
   1819a:	66 0f 3a 0f e3 03    	palignr $0x3,%xmm3,%xmm4
   181a0:	0f 29 67 20          	movaps %xmm4,0x20(%rdi)
   181a4:	66 0f 3a 0f da 03    	palignr $0x3,%xmm2,%xmm3
   181aa:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   181ae:	66 0f 3a 0f d1 03    	palignr $0x3,%xmm1,%xmm2
   181b4:	0f 29 17             	movaps %xmm2,(%rdi)
   181b7:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   181be:	0f 83 6c ff ff ff    	jae    18130 <__intel_ssse3_rep_memcpy+0x520>
   181c4:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   181c9:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   181d0:	48 01 d7             	add    %rdx,%rdi
   181d3:	48 01 d6             	add    %rdx,%rsi
   181d6:	4c 8d 1d b3 68 00 00 	lea    0x68b3(%rip),%r11        # 1ea90 <__func__.2431+0x407>
   181dd:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   181e1:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   181e5:	3e ff e2             	ds jmpq *%rdx
   181e8:	0f 0b                	ud2    
   181ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   181f0:	0f 28 4e fd          	movaps -0x3(%rsi),%xmm1
   181f4:	0f 28 56 ed          	movaps -0x13(%rsi),%xmm2
   181f8:	66 0f 3a 0f ca 03    	palignr $0x3,%xmm2,%xmm1
   181fe:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   18202:	0f 28 5e dd          	movaps -0x23(%rsi),%xmm3
   18206:	66 0f 3a 0f d3 03    	palignr $0x3,%xmm3,%xmm2
   1820c:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   18210:	0f 28 66 cd          	movaps -0x33(%rsi),%xmm4
   18214:	66 0f 3a 0f dc 03    	palignr $0x3,%xmm4,%xmm3
   1821a:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   1821e:	0f 28 6e bd          	movaps -0x43(%rsi),%xmm5
   18222:	66 0f 3a 0f e5 03    	palignr $0x3,%xmm5,%xmm4
   18228:	0f 29 67 c0          	movaps %xmm4,-0x40(%rdi)
   1822c:	0f 28 76 ad          	movaps -0x53(%rsi),%xmm6
   18230:	66 0f 3a 0f ee 03    	palignr $0x3,%xmm6,%xmm5
   18236:	0f 29 6f b0          	movaps %xmm5,-0x50(%rdi)
   1823a:	0f 28 7e 9d          	movaps -0x63(%rsi),%xmm7
   1823e:	66 0f 3a 0f f7 03    	palignr $0x3,%xmm7,%xmm6
   18244:	0f 29 77 a0          	movaps %xmm6,-0x60(%rdi)
   18248:	44 0f 28 46 8d       	movaps -0x73(%rsi),%xmm8
   1824d:	66 41 0f 3a 0f f8 03 	palignr $0x3,%xmm8,%xmm7
   18254:	0f 29 7f 90          	movaps %xmm7,-0x70(%rdi)
   18258:	44 0f 28 8e 7d ff ff 	movaps -0x83(%rsi),%xmm9
   1825f:	ff 
   18260:	66 45 0f 3a 0f c1 03 	palignr $0x3,%xmm9,%xmm8
   18267:	44 0f 29 47 80       	movaps %xmm8,-0x80(%rdi)
   1826c:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   18273:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   18277:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   1827b:	0f 83 6f ff ff ff    	jae    181f0 <__intel_ssse3_rep_memcpy+0x5e0>
   18281:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   18286:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   1828d:	48 29 d7             	sub    %rdx,%rdi
   18290:	48 29 d6             	sub    %rdx,%rsi
   18293:	4c 8d 1d b6 65 00 00 	lea    0x65b6(%rip),%r11        # 1e850 <__func__.2431+0x1c7>
   1829a:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1829e:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   182a2:	3e ff e2             	ds jmpq *%rdx
   182a5:	0f 0b                	ud2    
   182a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   182ae:	00 00 
   182b0:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   182b7:	0f 28 4e fc          	movaps -0x4(%rsi),%xmm1
   182bb:	0f 28 56 0c          	movaps 0xc(%rsi),%xmm2
   182bf:	0f 28 5e 1c          	movaps 0x1c(%rsi),%xmm3
   182c3:	0f 28 66 2c          	movaps 0x2c(%rsi),%xmm4
   182c7:	0f 28 6e 3c          	movaps 0x3c(%rsi),%xmm5
   182cb:	0f 28 76 4c          	movaps 0x4c(%rsi),%xmm6
   182cf:	0f 28 7e 5c          	movaps 0x5c(%rsi),%xmm7
   182d3:	44 0f 28 46 6c       	movaps 0x6c(%rsi),%xmm8
   182d8:	44 0f 28 4e 7c       	movaps 0x7c(%rsi),%xmm9
   182dd:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   182e4:	66 45 0f 3a 0f c8 04 	palignr $0x4,%xmm8,%xmm9
   182eb:	44 0f 29 4f 70       	movaps %xmm9,0x70(%rdi)
   182f0:	66 44 0f 3a 0f c7 04 	palignr $0x4,%xmm7,%xmm8
   182f7:	44 0f 29 47 60       	movaps %xmm8,0x60(%rdi)
   182fc:	66 0f 3a 0f fe 04    	palignr $0x4,%xmm6,%xmm7
   18302:	0f 29 7f 50          	movaps %xmm7,0x50(%rdi)
   18306:	66 0f 3a 0f f5 04    	palignr $0x4,%xmm5,%xmm6
   1830c:	0f 29 77 40          	movaps %xmm6,0x40(%rdi)
   18310:	66 0f 3a 0f ec 04    	palignr $0x4,%xmm4,%xmm5
   18316:	0f 29 6f 30          	movaps %xmm5,0x30(%rdi)
   1831a:	66 0f 3a 0f e3 04    	palignr $0x4,%xmm3,%xmm4
   18320:	0f 29 67 20          	movaps %xmm4,0x20(%rdi)
   18324:	66 0f 3a 0f da 04    	palignr $0x4,%xmm2,%xmm3
   1832a:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   1832e:	66 0f 3a 0f d1 04    	palignr $0x4,%xmm1,%xmm2
   18334:	0f 29 17             	movaps %xmm2,(%rdi)
   18337:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   1833e:	0f 83 6c ff ff ff    	jae    182b0 <__intel_ssse3_rep_memcpy+0x6a0>
   18344:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   18349:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   18350:	48 01 d7             	add    %rdx,%rdi
   18353:	48 01 d6             	add    %rdx,%rsi
   18356:	4c 8d 1d 33 67 00 00 	lea    0x6733(%rip),%r11        # 1ea90 <__func__.2431+0x407>
   1835d:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   18361:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   18365:	3e ff e2             	ds jmpq *%rdx
   18368:	0f 0b                	ud2    
   1836a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18370:	0f 28 4e fc          	movaps -0x4(%rsi),%xmm1
   18374:	0f 28 56 ec          	movaps -0x14(%rsi),%xmm2
   18378:	66 0f 3a 0f ca 04    	palignr $0x4,%xmm2,%xmm1
   1837e:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   18382:	0f 28 5e dc          	movaps -0x24(%rsi),%xmm3
   18386:	66 0f 3a 0f d3 04    	palignr $0x4,%xmm3,%xmm2
   1838c:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   18390:	0f 28 66 cc          	movaps -0x34(%rsi),%xmm4
   18394:	66 0f 3a 0f dc 04    	palignr $0x4,%xmm4,%xmm3
   1839a:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   1839e:	0f 28 6e bc          	movaps -0x44(%rsi),%xmm5
   183a2:	66 0f 3a 0f e5 04    	palignr $0x4,%xmm5,%xmm4
   183a8:	0f 29 67 c0          	movaps %xmm4,-0x40(%rdi)
   183ac:	0f 28 76 ac          	movaps -0x54(%rsi),%xmm6
   183b0:	66 0f 3a 0f ee 04    	palignr $0x4,%xmm6,%xmm5
   183b6:	0f 29 6f b0          	movaps %xmm5,-0x50(%rdi)
   183ba:	0f 28 7e 9c          	movaps -0x64(%rsi),%xmm7
   183be:	66 0f 3a 0f f7 04    	palignr $0x4,%xmm7,%xmm6
   183c4:	0f 29 77 a0          	movaps %xmm6,-0x60(%rdi)
   183c8:	44 0f 28 46 8c       	movaps -0x74(%rsi),%xmm8
   183cd:	66 41 0f 3a 0f f8 04 	palignr $0x4,%xmm8,%xmm7
   183d4:	0f 29 7f 90          	movaps %xmm7,-0x70(%rdi)
   183d8:	44 0f 28 8e 7c ff ff 	movaps -0x84(%rsi),%xmm9
   183df:	ff 
   183e0:	66 45 0f 3a 0f c1 04 	palignr $0x4,%xmm9,%xmm8
   183e7:	44 0f 29 47 80       	movaps %xmm8,-0x80(%rdi)
   183ec:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   183f3:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   183f7:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   183fb:	0f 83 6f ff ff ff    	jae    18370 <__intel_ssse3_rep_memcpy+0x760>
   18401:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   18406:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   1840d:	48 29 d7             	sub    %rdx,%rdi
   18410:	48 29 d6             	sub    %rdx,%rsi
   18413:	4c 8d 1d 36 64 00 00 	lea    0x6436(%rip),%r11        # 1e850 <__func__.2431+0x1c7>
   1841a:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1841e:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   18422:	3e ff e2             	ds jmpq *%rdx
   18425:	0f 0b                	ud2    
   18427:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1842e:	00 00 
   18430:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   18437:	0f 28 4e fb          	movaps -0x5(%rsi),%xmm1
   1843b:	0f 28 56 0b          	movaps 0xb(%rsi),%xmm2
   1843f:	0f 28 5e 1b          	movaps 0x1b(%rsi),%xmm3
   18443:	0f 28 66 2b          	movaps 0x2b(%rsi),%xmm4
   18447:	0f 28 6e 3b          	movaps 0x3b(%rsi),%xmm5
   1844b:	0f 28 76 4b          	movaps 0x4b(%rsi),%xmm6
   1844f:	0f 28 7e 5b          	movaps 0x5b(%rsi),%xmm7
   18453:	44 0f 28 46 6b       	movaps 0x6b(%rsi),%xmm8
   18458:	44 0f 28 4e 7b       	movaps 0x7b(%rsi),%xmm9
   1845d:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   18464:	66 45 0f 3a 0f c8 05 	palignr $0x5,%xmm8,%xmm9
   1846b:	44 0f 29 4f 70       	movaps %xmm9,0x70(%rdi)
   18470:	66 44 0f 3a 0f c7 05 	palignr $0x5,%xmm7,%xmm8
   18477:	44 0f 29 47 60       	movaps %xmm8,0x60(%rdi)
   1847c:	66 0f 3a 0f fe 05    	palignr $0x5,%xmm6,%xmm7
   18482:	0f 29 7f 50          	movaps %xmm7,0x50(%rdi)
   18486:	66 0f 3a 0f f5 05    	palignr $0x5,%xmm5,%xmm6
   1848c:	0f 29 77 40          	movaps %xmm6,0x40(%rdi)
   18490:	66 0f 3a 0f ec 05    	palignr $0x5,%xmm4,%xmm5
   18496:	0f 29 6f 30          	movaps %xmm5,0x30(%rdi)
   1849a:	66 0f 3a 0f e3 05    	palignr $0x5,%xmm3,%xmm4
   184a0:	0f 29 67 20          	movaps %xmm4,0x20(%rdi)
   184a4:	66 0f 3a 0f da 05    	palignr $0x5,%xmm2,%xmm3
   184aa:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   184ae:	66 0f 3a 0f d1 05    	palignr $0x5,%xmm1,%xmm2
   184b4:	0f 29 17             	movaps %xmm2,(%rdi)
   184b7:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   184be:	0f 83 6c ff ff ff    	jae    18430 <__intel_ssse3_rep_memcpy+0x820>
   184c4:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   184c9:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   184d0:	48 01 d7             	add    %rdx,%rdi
   184d3:	48 01 d6             	add    %rdx,%rsi
   184d6:	4c 8d 1d b3 65 00 00 	lea    0x65b3(%rip),%r11        # 1ea90 <__func__.2431+0x407>
   184dd:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   184e1:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   184e5:	3e ff e2             	ds jmpq *%rdx
   184e8:	0f 0b                	ud2    
   184ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   184f0:	0f 28 4e fb          	movaps -0x5(%rsi),%xmm1
   184f4:	0f 28 56 eb          	movaps -0x15(%rsi),%xmm2
   184f8:	66 0f 3a 0f ca 05    	palignr $0x5,%xmm2,%xmm1
   184fe:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   18502:	0f 28 5e db          	movaps -0x25(%rsi),%xmm3
   18506:	66 0f 3a 0f d3 05    	palignr $0x5,%xmm3,%xmm2
   1850c:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   18510:	0f 28 66 cb          	movaps -0x35(%rsi),%xmm4
   18514:	66 0f 3a 0f dc 05    	palignr $0x5,%xmm4,%xmm3
   1851a:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   1851e:	0f 28 6e bb          	movaps -0x45(%rsi),%xmm5
   18522:	66 0f 3a 0f e5 05    	palignr $0x5,%xmm5,%xmm4
   18528:	0f 29 67 c0          	movaps %xmm4,-0x40(%rdi)
   1852c:	0f 28 76 ab          	movaps -0x55(%rsi),%xmm6
   18530:	66 0f 3a 0f ee 05    	palignr $0x5,%xmm6,%xmm5
   18536:	0f 29 6f b0          	movaps %xmm5,-0x50(%rdi)
   1853a:	0f 28 7e 9b          	movaps -0x65(%rsi),%xmm7
   1853e:	66 0f 3a 0f f7 05    	palignr $0x5,%xmm7,%xmm6
   18544:	0f 29 77 a0          	movaps %xmm6,-0x60(%rdi)
   18548:	44 0f 28 46 8b       	movaps -0x75(%rsi),%xmm8
   1854d:	66 41 0f 3a 0f f8 05 	palignr $0x5,%xmm8,%xmm7
   18554:	0f 29 7f 90          	movaps %xmm7,-0x70(%rdi)
   18558:	44 0f 28 8e 7b ff ff 	movaps -0x85(%rsi),%xmm9
   1855f:	ff 
   18560:	66 45 0f 3a 0f c1 05 	palignr $0x5,%xmm9,%xmm8
   18567:	44 0f 29 47 80       	movaps %xmm8,-0x80(%rdi)
   1856c:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   18573:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   18577:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   1857b:	0f 83 6f ff ff ff    	jae    184f0 <__intel_ssse3_rep_memcpy+0x8e0>
   18581:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   18586:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   1858d:	48 29 d7             	sub    %rdx,%rdi
   18590:	48 29 d6             	sub    %rdx,%rsi
   18593:	4c 8d 1d b6 62 00 00 	lea    0x62b6(%rip),%r11        # 1e850 <__func__.2431+0x1c7>
   1859a:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1859e:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   185a2:	3e ff e2             	ds jmpq *%rdx
   185a5:	0f 0b                	ud2    
   185a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   185ae:	00 00 
   185b0:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   185b7:	0f 28 4e fa          	movaps -0x6(%rsi),%xmm1
   185bb:	0f 28 56 0a          	movaps 0xa(%rsi),%xmm2
   185bf:	0f 28 5e 1a          	movaps 0x1a(%rsi),%xmm3
   185c3:	0f 28 66 2a          	movaps 0x2a(%rsi),%xmm4
   185c7:	0f 28 6e 3a          	movaps 0x3a(%rsi),%xmm5
   185cb:	0f 28 76 4a          	movaps 0x4a(%rsi),%xmm6
   185cf:	0f 28 7e 5a          	movaps 0x5a(%rsi),%xmm7
   185d3:	44 0f 28 46 6a       	movaps 0x6a(%rsi),%xmm8
   185d8:	44 0f 28 4e 7a       	movaps 0x7a(%rsi),%xmm9
   185dd:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   185e4:	66 45 0f 3a 0f c8 06 	palignr $0x6,%xmm8,%xmm9
   185eb:	44 0f 29 4f 70       	movaps %xmm9,0x70(%rdi)
   185f0:	66 44 0f 3a 0f c7 06 	palignr $0x6,%xmm7,%xmm8
   185f7:	44 0f 29 47 60       	movaps %xmm8,0x60(%rdi)
   185fc:	66 0f 3a 0f fe 06    	palignr $0x6,%xmm6,%xmm7
   18602:	0f 29 7f 50          	movaps %xmm7,0x50(%rdi)
   18606:	66 0f 3a 0f f5 06    	palignr $0x6,%xmm5,%xmm6
   1860c:	0f 29 77 40          	movaps %xmm6,0x40(%rdi)
   18610:	66 0f 3a 0f ec 06    	palignr $0x6,%xmm4,%xmm5
   18616:	0f 29 6f 30          	movaps %xmm5,0x30(%rdi)
   1861a:	66 0f 3a 0f e3 06    	palignr $0x6,%xmm3,%xmm4
   18620:	0f 29 67 20          	movaps %xmm4,0x20(%rdi)
   18624:	66 0f 3a 0f da 06    	palignr $0x6,%xmm2,%xmm3
   1862a:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   1862e:	66 0f 3a 0f d1 06    	palignr $0x6,%xmm1,%xmm2
   18634:	0f 29 17             	movaps %xmm2,(%rdi)
   18637:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   1863e:	0f 83 6c ff ff ff    	jae    185b0 <__intel_ssse3_rep_memcpy+0x9a0>
   18644:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   18649:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   18650:	48 01 d7             	add    %rdx,%rdi
   18653:	48 01 d6             	add    %rdx,%rsi
   18656:	4c 8d 1d 33 64 00 00 	lea    0x6433(%rip),%r11        # 1ea90 <__func__.2431+0x407>
   1865d:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   18661:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   18665:	3e ff e2             	ds jmpq *%rdx
   18668:	0f 0b                	ud2    
   1866a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18670:	0f 28 4e fa          	movaps -0x6(%rsi),%xmm1
   18674:	0f 28 56 ea          	movaps -0x16(%rsi),%xmm2
   18678:	66 0f 3a 0f ca 06    	palignr $0x6,%xmm2,%xmm1
   1867e:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   18682:	0f 28 5e da          	movaps -0x26(%rsi),%xmm3
   18686:	66 0f 3a 0f d3 06    	palignr $0x6,%xmm3,%xmm2
   1868c:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   18690:	0f 28 66 ca          	movaps -0x36(%rsi),%xmm4
   18694:	66 0f 3a 0f dc 06    	palignr $0x6,%xmm4,%xmm3
   1869a:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   1869e:	0f 28 6e ba          	movaps -0x46(%rsi),%xmm5
   186a2:	66 0f 3a 0f e5 06    	palignr $0x6,%xmm5,%xmm4
   186a8:	0f 29 67 c0          	movaps %xmm4,-0x40(%rdi)
   186ac:	0f 28 76 aa          	movaps -0x56(%rsi),%xmm6
   186b0:	66 0f 3a 0f ee 06    	palignr $0x6,%xmm6,%xmm5
   186b6:	0f 29 6f b0          	movaps %xmm5,-0x50(%rdi)
   186ba:	0f 28 7e 9a          	movaps -0x66(%rsi),%xmm7
   186be:	66 0f 3a 0f f7 06    	palignr $0x6,%xmm7,%xmm6
   186c4:	0f 29 77 a0          	movaps %xmm6,-0x60(%rdi)
   186c8:	44 0f 28 46 8a       	movaps -0x76(%rsi),%xmm8
   186cd:	66 41 0f 3a 0f f8 06 	palignr $0x6,%xmm8,%xmm7
   186d4:	0f 29 7f 90          	movaps %xmm7,-0x70(%rdi)
   186d8:	44 0f 28 8e 7a ff ff 	movaps -0x86(%rsi),%xmm9
   186df:	ff 
   186e0:	66 45 0f 3a 0f c1 06 	palignr $0x6,%xmm9,%xmm8
   186e7:	44 0f 29 47 80       	movaps %xmm8,-0x80(%rdi)
   186ec:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   186f3:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   186f7:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   186fb:	0f 83 6f ff ff ff    	jae    18670 <__intel_ssse3_rep_memcpy+0xa60>
   18701:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   18706:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   1870d:	48 29 d7             	sub    %rdx,%rdi
   18710:	48 29 d6             	sub    %rdx,%rsi
   18713:	4c 8d 1d 36 61 00 00 	lea    0x6136(%rip),%r11        # 1e850 <__func__.2431+0x1c7>
   1871a:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1871e:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   18722:	3e ff e2             	ds jmpq *%rdx
   18725:	0f 0b                	ud2    
   18727:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1872e:	00 00 
   18730:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   18737:	0f 28 4e f9          	movaps -0x7(%rsi),%xmm1
   1873b:	0f 28 56 09          	movaps 0x9(%rsi),%xmm2
   1873f:	0f 28 5e 19          	movaps 0x19(%rsi),%xmm3
   18743:	0f 28 66 29          	movaps 0x29(%rsi),%xmm4
   18747:	0f 28 6e 39          	movaps 0x39(%rsi),%xmm5
   1874b:	0f 28 76 49          	movaps 0x49(%rsi),%xmm6
   1874f:	0f 28 7e 59          	movaps 0x59(%rsi),%xmm7
   18753:	44 0f 28 46 69       	movaps 0x69(%rsi),%xmm8
   18758:	44 0f 28 4e 79       	movaps 0x79(%rsi),%xmm9
   1875d:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   18764:	66 45 0f 3a 0f c8 07 	palignr $0x7,%xmm8,%xmm9
   1876b:	44 0f 29 4f 70       	movaps %xmm9,0x70(%rdi)
   18770:	66 44 0f 3a 0f c7 07 	palignr $0x7,%xmm7,%xmm8
   18777:	44 0f 29 47 60       	movaps %xmm8,0x60(%rdi)
   1877c:	66 0f 3a 0f fe 07    	palignr $0x7,%xmm6,%xmm7
   18782:	0f 29 7f 50          	movaps %xmm7,0x50(%rdi)
   18786:	66 0f 3a 0f f5 07    	palignr $0x7,%xmm5,%xmm6
   1878c:	0f 29 77 40          	movaps %xmm6,0x40(%rdi)
   18790:	66 0f 3a 0f ec 07    	palignr $0x7,%xmm4,%xmm5
   18796:	0f 29 6f 30          	movaps %xmm5,0x30(%rdi)
   1879a:	66 0f 3a 0f e3 07    	palignr $0x7,%xmm3,%xmm4
   187a0:	0f 29 67 20          	movaps %xmm4,0x20(%rdi)
   187a4:	66 0f 3a 0f da 07    	palignr $0x7,%xmm2,%xmm3
   187aa:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   187ae:	66 0f 3a 0f d1 07    	palignr $0x7,%xmm1,%xmm2
   187b4:	0f 29 17             	movaps %xmm2,(%rdi)
   187b7:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   187be:	0f 83 6c ff ff ff    	jae    18730 <__intel_ssse3_rep_memcpy+0xb20>
   187c4:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   187c9:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   187d0:	48 01 d7             	add    %rdx,%rdi
   187d3:	48 01 d6             	add    %rdx,%rsi
   187d6:	4c 8d 1d b3 62 00 00 	lea    0x62b3(%rip),%r11        # 1ea90 <__func__.2431+0x407>
   187dd:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   187e1:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   187e5:	3e ff e2             	ds jmpq *%rdx
   187e8:	0f 0b                	ud2    
   187ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   187f0:	0f 28 4e f9          	movaps -0x7(%rsi),%xmm1
   187f4:	0f 28 56 e9          	movaps -0x17(%rsi),%xmm2
   187f8:	66 0f 3a 0f ca 07    	palignr $0x7,%xmm2,%xmm1
   187fe:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   18802:	0f 28 5e d9          	movaps -0x27(%rsi),%xmm3
   18806:	66 0f 3a 0f d3 07    	palignr $0x7,%xmm3,%xmm2
   1880c:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   18810:	0f 28 66 c9          	movaps -0x37(%rsi),%xmm4
   18814:	66 0f 3a 0f dc 07    	palignr $0x7,%xmm4,%xmm3
   1881a:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   1881e:	0f 28 6e b9          	movaps -0x47(%rsi),%xmm5
   18822:	66 0f 3a 0f e5 07    	palignr $0x7,%xmm5,%xmm4
   18828:	0f 29 67 c0          	movaps %xmm4,-0x40(%rdi)
   1882c:	0f 28 76 a9          	movaps -0x57(%rsi),%xmm6
   18830:	66 0f 3a 0f ee 07    	palignr $0x7,%xmm6,%xmm5
   18836:	0f 29 6f b0          	movaps %xmm5,-0x50(%rdi)
   1883a:	0f 28 7e 99          	movaps -0x67(%rsi),%xmm7
   1883e:	66 0f 3a 0f f7 07    	palignr $0x7,%xmm7,%xmm6
   18844:	0f 29 77 a0          	movaps %xmm6,-0x60(%rdi)
   18848:	44 0f 28 46 89       	movaps -0x77(%rsi),%xmm8
   1884d:	66 41 0f 3a 0f f8 07 	palignr $0x7,%xmm8,%xmm7
   18854:	0f 29 7f 90          	movaps %xmm7,-0x70(%rdi)
   18858:	44 0f 28 8e 79 ff ff 	movaps -0x87(%rsi),%xmm9
   1885f:	ff 
   18860:	66 45 0f 3a 0f c1 07 	palignr $0x7,%xmm9,%xmm8
   18867:	44 0f 29 47 80       	movaps %xmm8,-0x80(%rdi)
   1886c:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   18873:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   18877:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   1887b:	0f 83 6f ff ff ff    	jae    187f0 <__intel_ssse3_rep_memcpy+0xbe0>
   18881:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   18886:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   1888d:	48 29 d7             	sub    %rdx,%rdi
   18890:	48 29 d6             	sub    %rdx,%rsi
   18893:	4c 8d 1d b6 5f 00 00 	lea    0x5fb6(%rip),%r11        # 1e850 <__func__.2431+0x1c7>
   1889a:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1889e:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   188a2:	3e ff e2             	ds jmpq *%rdx
   188a5:	0f 0b                	ud2    
   188a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   188ae:	00 00 
   188b0:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   188b7:	0f 28 4e f8          	movaps -0x8(%rsi),%xmm1
   188bb:	0f 28 56 08          	movaps 0x8(%rsi),%xmm2
   188bf:	0f 28 5e 18          	movaps 0x18(%rsi),%xmm3
   188c3:	0f 28 66 28          	movaps 0x28(%rsi),%xmm4
   188c7:	0f 28 6e 38          	movaps 0x38(%rsi),%xmm5
   188cb:	0f 28 76 48          	movaps 0x48(%rsi),%xmm6
   188cf:	0f 28 7e 58          	movaps 0x58(%rsi),%xmm7
   188d3:	44 0f 28 46 68       	movaps 0x68(%rsi),%xmm8
   188d8:	44 0f 28 4e 78       	movaps 0x78(%rsi),%xmm9
   188dd:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   188e4:	66 45 0f 3a 0f c8 08 	palignr $0x8,%xmm8,%xmm9
   188eb:	44 0f 29 4f 70       	movaps %xmm9,0x70(%rdi)
   188f0:	66 44 0f 3a 0f c7 08 	palignr $0x8,%xmm7,%xmm8
   188f7:	44 0f 29 47 60       	movaps %xmm8,0x60(%rdi)
   188fc:	66 0f 3a 0f fe 08    	palignr $0x8,%xmm6,%xmm7
   18902:	0f 29 7f 50          	movaps %xmm7,0x50(%rdi)
   18906:	66 0f 3a 0f f5 08    	palignr $0x8,%xmm5,%xmm6
   1890c:	0f 29 77 40          	movaps %xmm6,0x40(%rdi)
   18910:	66 0f 3a 0f ec 08    	palignr $0x8,%xmm4,%xmm5
   18916:	0f 29 6f 30          	movaps %xmm5,0x30(%rdi)
   1891a:	66 0f 3a 0f e3 08    	palignr $0x8,%xmm3,%xmm4
   18920:	0f 29 67 20          	movaps %xmm4,0x20(%rdi)
   18924:	66 0f 3a 0f da 08    	palignr $0x8,%xmm2,%xmm3
   1892a:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   1892e:	66 0f 3a 0f d1 08    	palignr $0x8,%xmm1,%xmm2
   18934:	0f 29 17             	movaps %xmm2,(%rdi)
   18937:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   1893e:	0f 83 6c ff ff ff    	jae    188b0 <__intel_ssse3_rep_memcpy+0xca0>
   18944:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   18949:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   18950:	48 01 d7             	add    %rdx,%rdi
   18953:	48 01 d6             	add    %rdx,%rsi
   18956:	4c 8d 1d 33 61 00 00 	lea    0x6133(%rip),%r11        # 1ea90 <__func__.2431+0x407>
   1895d:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   18961:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   18965:	3e ff e2             	ds jmpq *%rdx
   18968:	0f 0b                	ud2    
   1896a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18970:	0f 28 4e f8          	movaps -0x8(%rsi),%xmm1
   18974:	0f 28 56 e8          	movaps -0x18(%rsi),%xmm2
   18978:	66 0f 3a 0f ca 08    	palignr $0x8,%xmm2,%xmm1
   1897e:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   18982:	0f 28 5e d8          	movaps -0x28(%rsi),%xmm3
   18986:	66 0f 3a 0f d3 08    	palignr $0x8,%xmm3,%xmm2
   1898c:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   18990:	0f 28 66 c8          	movaps -0x38(%rsi),%xmm4
   18994:	66 0f 3a 0f dc 08    	palignr $0x8,%xmm4,%xmm3
   1899a:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   1899e:	0f 28 6e b8          	movaps -0x48(%rsi),%xmm5
   189a2:	66 0f 3a 0f e5 08    	palignr $0x8,%xmm5,%xmm4
   189a8:	0f 29 67 c0          	movaps %xmm4,-0x40(%rdi)
   189ac:	0f 28 76 a8          	movaps -0x58(%rsi),%xmm6
   189b0:	66 0f 3a 0f ee 08    	palignr $0x8,%xmm6,%xmm5
   189b6:	0f 29 6f b0          	movaps %xmm5,-0x50(%rdi)
   189ba:	0f 28 7e 98          	movaps -0x68(%rsi),%xmm7
   189be:	66 0f 3a 0f f7 08    	palignr $0x8,%xmm7,%xmm6
   189c4:	0f 29 77 a0          	movaps %xmm6,-0x60(%rdi)
   189c8:	44 0f 28 46 88       	movaps -0x78(%rsi),%xmm8
   189cd:	66 41 0f 3a 0f f8 08 	palignr $0x8,%xmm8,%xmm7
   189d4:	0f 29 7f 90          	movaps %xmm7,-0x70(%rdi)
   189d8:	44 0f 28 8e 78 ff ff 	movaps -0x88(%rsi),%xmm9
   189df:	ff 
   189e0:	66 45 0f 3a 0f c1 08 	palignr $0x8,%xmm9,%xmm8
   189e7:	44 0f 29 47 80       	movaps %xmm8,-0x80(%rdi)
   189ec:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   189f3:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   189f7:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   189fb:	0f 83 6f ff ff ff    	jae    18970 <__intel_ssse3_rep_memcpy+0xd60>
   18a01:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   18a06:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   18a0d:	48 29 d7             	sub    %rdx,%rdi
   18a10:	48 29 d6             	sub    %rdx,%rsi
   18a13:	4c 8d 1d 36 5e 00 00 	lea    0x5e36(%rip),%r11        # 1e850 <__func__.2431+0x1c7>
   18a1a:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   18a1e:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   18a22:	3e ff e2             	ds jmpq *%rdx
   18a25:	0f 0b                	ud2    
   18a27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   18a2e:	00 00 
   18a30:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   18a37:	0f 28 4e f7          	movaps -0x9(%rsi),%xmm1
   18a3b:	0f 28 56 07          	movaps 0x7(%rsi),%xmm2
   18a3f:	0f 28 5e 17          	movaps 0x17(%rsi),%xmm3
   18a43:	0f 28 66 27          	movaps 0x27(%rsi),%xmm4
   18a47:	0f 28 6e 37          	movaps 0x37(%rsi),%xmm5
   18a4b:	0f 28 76 47          	movaps 0x47(%rsi),%xmm6
   18a4f:	0f 28 7e 57          	movaps 0x57(%rsi),%xmm7
   18a53:	44 0f 28 46 67       	movaps 0x67(%rsi),%xmm8
   18a58:	44 0f 28 4e 77       	movaps 0x77(%rsi),%xmm9
   18a5d:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   18a64:	66 45 0f 3a 0f c8 09 	palignr $0x9,%xmm8,%xmm9
   18a6b:	44 0f 29 4f 70       	movaps %xmm9,0x70(%rdi)
   18a70:	66 44 0f 3a 0f c7 09 	palignr $0x9,%xmm7,%xmm8
   18a77:	44 0f 29 47 60       	movaps %xmm8,0x60(%rdi)
   18a7c:	66 0f 3a 0f fe 09    	palignr $0x9,%xmm6,%xmm7
   18a82:	0f 29 7f 50          	movaps %xmm7,0x50(%rdi)
   18a86:	66 0f 3a 0f f5 09    	palignr $0x9,%xmm5,%xmm6
   18a8c:	0f 29 77 40          	movaps %xmm6,0x40(%rdi)
   18a90:	66 0f 3a 0f ec 09    	palignr $0x9,%xmm4,%xmm5
   18a96:	0f 29 6f 30          	movaps %xmm5,0x30(%rdi)
   18a9a:	66 0f 3a 0f e3 09    	palignr $0x9,%xmm3,%xmm4
   18aa0:	0f 29 67 20          	movaps %xmm4,0x20(%rdi)
   18aa4:	66 0f 3a 0f da 09    	palignr $0x9,%xmm2,%xmm3
   18aaa:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   18aae:	66 0f 3a 0f d1 09    	palignr $0x9,%xmm1,%xmm2
   18ab4:	0f 29 17             	movaps %xmm2,(%rdi)
   18ab7:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   18abe:	0f 83 6c ff ff ff    	jae    18a30 <__intel_ssse3_rep_memcpy+0xe20>
   18ac4:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   18ac9:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   18ad0:	48 01 d7             	add    %rdx,%rdi
   18ad3:	48 01 d6             	add    %rdx,%rsi
   18ad6:	4c 8d 1d b3 5f 00 00 	lea    0x5fb3(%rip),%r11        # 1ea90 <__func__.2431+0x407>
   18add:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   18ae1:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   18ae5:	3e ff e2             	ds jmpq *%rdx
   18ae8:	0f 0b                	ud2    
   18aea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18af0:	0f 28 4e f7          	movaps -0x9(%rsi),%xmm1
   18af4:	0f 28 56 e7          	movaps -0x19(%rsi),%xmm2
   18af8:	66 0f 3a 0f ca 09    	palignr $0x9,%xmm2,%xmm1
   18afe:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   18b02:	0f 28 5e d7          	movaps -0x29(%rsi),%xmm3
   18b06:	66 0f 3a 0f d3 09    	palignr $0x9,%xmm3,%xmm2
   18b0c:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   18b10:	0f 28 66 c7          	movaps -0x39(%rsi),%xmm4
   18b14:	66 0f 3a 0f dc 09    	palignr $0x9,%xmm4,%xmm3
   18b1a:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   18b1e:	0f 28 6e b7          	movaps -0x49(%rsi),%xmm5
   18b22:	66 0f 3a 0f e5 09    	palignr $0x9,%xmm5,%xmm4
   18b28:	0f 29 67 c0          	movaps %xmm4,-0x40(%rdi)
   18b2c:	0f 28 76 a7          	movaps -0x59(%rsi),%xmm6
   18b30:	66 0f 3a 0f ee 09    	palignr $0x9,%xmm6,%xmm5
   18b36:	0f 29 6f b0          	movaps %xmm5,-0x50(%rdi)
   18b3a:	0f 28 7e 97          	movaps -0x69(%rsi),%xmm7
   18b3e:	66 0f 3a 0f f7 09    	palignr $0x9,%xmm7,%xmm6
   18b44:	0f 29 77 a0          	movaps %xmm6,-0x60(%rdi)
   18b48:	44 0f 28 46 87       	movaps -0x79(%rsi),%xmm8
   18b4d:	66 41 0f 3a 0f f8 09 	palignr $0x9,%xmm8,%xmm7
   18b54:	0f 29 7f 90          	movaps %xmm7,-0x70(%rdi)
   18b58:	44 0f 28 8e 77 ff ff 	movaps -0x89(%rsi),%xmm9
   18b5f:	ff 
   18b60:	66 45 0f 3a 0f c1 09 	palignr $0x9,%xmm9,%xmm8
   18b67:	44 0f 29 47 80       	movaps %xmm8,-0x80(%rdi)
   18b6c:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   18b73:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   18b77:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   18b7b:	0f 83 6f ff ff ff    	jae    18af0 <__intel_ssse3_rep_memcpy+0xee0>
   18b81:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   18b86:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   18b8d:	48 29 d7             	sub    %rdx,%rdi
   18b90:	48 29 d6             	sub    %rdx,%rsi
   18b93:	4c 8d 1d b6 5c 00 00 	lea    0x5cb6(%rip),%r11        # 1e850 <__func__.2431+0x1c7>
   18b9a:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   18b9e:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   18ba2:	3e ff e2             	ds jmpq *%rdx
   18ba5:	0f 0b                	ud2    
   18ba7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   18bae:	00 00 
   18bb0:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   18bb7:	0f 28 4e f6          	movaps -0xa(%rsi),%xmm1
   18bbb:	0f 28 56 06          	movaps 0x6(%rsi),%xmm2
   18bbf:	0f 28 5e 16          	movaps 0x16(%rsi),%xmm3
   18bc3:	0f 28 66 26          	movaps 0x26(%rsi),%xmm4
   18bc7:	0f 28 6e 36          	movaps 0x36(%rsi),%xmm5
   18bcb:	0f 28 76 46          	movaps 0x46(%rsi),%xmm6
   18bcf:	0f 28 7e 56          	movaps 0x56(%rsi),%xmm7
   18bd3:	44 0f 28 46 66       	movaps 0x66(%rsi),%xmm8
   18bd8:	44 0f 28 4e 76       	movaps 0x76(%rsi),%xmm9
   18bdd:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   18be4:	66 45 0f 3a 0f c8 0a 	palignr $0xa,%xmm8,%xmm9
   18beb:	44 0f 29 4f 70       	movaps %xmm9,0x70(%rdi)
   18bf0:	66 44 0f 3a 0f c7 0a 	palignr $0xa,%xmm7,%xmm8
   18bf7:	44 0f 29 47 60       	movaps %xmm8,0x60(%rdi)
   18bfc:	66 0f 3a 0f fe 0a    	palignr $0xa,%xmm6,%xmm7
   18c02:	0f 29 7f 50          	movaps %xmm7,0x50(%rdi)
   18c06:	66 0f 3a 0f f5 0a    	palignr $0xa,%xmm5,%xmm6
   18c0c:	0f 29 77 40          	movaps %xmm6,0x40(%rdi)
   18c10:	66 0f 3a 0f ec 0a    	palignr $0xa,%xmm4,%xmm5
   18c16:	0f 29 6f 30          	movaps %xmm5,0x30(%rdi)
   18c1a:	66 0f 3a 0f e3 0a    	palignr $0xa,%xmm3,%xmm4
   18c20:	0f 29 67 20          	movaps %xmm4,0x20(%rdi)
   18c24:	66 0f 3a 0f da 0a    	palignr $0xa,%xmm2,%xmm3
   18c2a:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   18c2e:	66 0f 3a 0f d1 0a    	palignr $0xa,%xmm1,%xmm2
   18c34:	0f 29 17             	movaps %xmm2,(%rdi)
   18c37:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   18c3e:	0f 83 6c ff ff ff    	jae    18bb0 <__intel_ssse3_rep_memcpy+0xfa0>
   18c44:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   18c49:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   18c50:	48 01 d7             	add    %rdx,%rdi
   18c53:	48 01 d6             	add    %rdx,%rsi
   18c56:	4c 8d 1d 33 5e 00 00 	lea    0x5e33(%rip),%r11        # 1ea90 <__func__.2431+0x407>
   18c5d:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   18c61:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   18c65:	3e ff e2             	ds jmpq *%rdx
   18c68:	0f 0b                	ud2    
   18c6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18c70:	0f 28 4e f6          	movaps -0xa(%rsi),%xmm1
   18c74:	0f 28 56 e6          	movaps -0x1a(%rsi),%xmm2
   18c78:	66 0f 3a 0f ca 0a    	palignr $0xa,%xmm2,%xmm1
   18c7e:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   18c82:	0f 28 5e d6          	movaps -0x2a(%rsi),%xmm3
   18c86:	66 0f 3a 0f d3 0a    	palignr $0xa,%xmm3,%xmm2
   18c8c:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   18c90:	0f 28 66 c6          	movaps -0x3a(%rsi),%xmm4
   18c94:	66 0f 3a 0f dc 0a    	palignr $0xa,%xmm4,%xmm3
   18c9a:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   18c9e:	0f 28 6e b6          	movaps -0x4a(%rsi),%xmm5
   18ca2:	66 0f 3a 0f e5 0a    	palignr $0xa,%xmm5,%xmm4
   18ca8:	0f 29 67 c0          	movaps %xmm4,-0x40(%rdi)
   18cac:	0f 28 76 a6          	movaps -0x5a(%rsi),%xmm6
   18cb0:	66 0f 3a 0f ee 0a    	palignr $0xa,%xmm6,%xmm5
   18cb6:	0f 29 6f b0          	movaps %xmm5,-0x50(%rdi)
   18cba:	0f 28 7e 96          	movaps -0x6a(%rsi),%xmm7
   18cbe:	66 0f 3a 0f f7 0a    	palignr $0xa,%xmm7,%xmm6
   18cc4:	0f 29 77 a0          	movaps %xmm6,-0x60(%rdi)
   18cc8:	44 0f 28 46 86       	movaps -0x7a(%rsi),%xmm8
   18ccd:	66 41 0f 3a 0f f8 0a 	palignr $0xa,%xmm8,%xmm7
   18cd4:	0f 29 7f 90          	movaps %xmm7,-0x70(%rdi)
   18cd8:	44 0f 28 8e 76 ff ff 	movaps -0x8a(%rsi),%xmm9
   18cdf:	ff 
   18ce0:	66 45 0f 3a 0f c1 0a 	palignr $0xa,%xmm9,%xmm8
   18ce7:	44 0f 29 47 80       	movaps %xmm8,-0x80(%rdi)
   18cec:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   18cf3:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   18cf7:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   18cfb:	0f 83 6f ff ff ff    	jae    18c70 <__intel_ssse3_rep_memcpy+0x1060>
   18d01:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   18d06:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   18d0d:	48 29 d7             	sub    %rdx,%rdi
   18d10:	48 29 d6             	sub    %rdx,%rsi
   18d13:	4c 8d 1d 36 5b 00 00 	lea    0x5b36(%rip),%r11        # 1e850 <__func__.2431+0x1c7>
   18d1a:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   18d1e:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   18d22:	3e ff e2             	ds jmpq *%rdx
   18d25:	0f 0b                	ud2    
   18d27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   18d2e:	00 00 
   18d30:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   18d37:	0f 28 4e f5          	movaps -0xb(%rsi),%xmm1
   18d3b:	0f 28 56 05          	movaps 0x5(%rsi),%xmm2
   18d3f:	0f 28 5e 15          	movaps 0x15(%rsi),%xmm3
   18d43:	0f 28 66 25          	movaps 0x25(%rsi),%xmm4
   18d47:	0f 28 6e 35          	movaps 0x35(%rsi),%xmm5
   18d4b:	0f 28 76 45          	movaps 0x45(%rsi),%xmm6
   18d4f:	0f 28 7e 55          	movaps 0x55(%rsi),%xmm7
   18d53:	44 0f 28 46 65       	movaps 0x65(%rsi),%xmm8
   18d58:	44 0f 28 4e 75       	movaps 0x75(%rsi),%xmm9
   18d5d:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   18d64:	66 45 0f 3a 0f c8 0b 	palignr $0xb,%xmm8,%xmm9
   18d6b:	44 0f 29 4f 70       	movaps %xmm9,0x70(%rdi)
   18d70:	66 44 0f 3a 0f c7 0b 	palignr $0xb,%xmm7,%xmm8
   18d77:	44 0f 29 47 60       	movaps %xmm8,0x60(%rdi)
   18d7c:	66 0f 3a 0f fe 0b    	palignr $0xb,%xmm6,%xmm7
   18d82:	0f 29 7f 50          	movaps %xmm7,0x50(%rdi)
   18d86:	66 0f 3a 0f f5 0b    	palignr $0xb,%xmm5,%xmm6
   18d8c:	0f 29 77 40          	movaps %xmm6,0x40(%rdi)
   18d90:	66 0f 3a 0f ec 0b    	palignr $0xb,%xmm4,%xmm5
   18d96:	0f 29 6f 30          	movaps %xmm5,0x30(%rdi)
   18d9a:	66 0f 3a 0f e3 0b    	palignr $0xb,%xmm3,%xmm4
   18da0:	0f 29 67 20          	movaps %xmm4,0x20(%rdi)
   18da4:	66 0f 3a 0f da 0b    	palignr $0xb,%xmm2,%xmm3
   18daa:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   18dae:	66 0f 3a 0f d1 0b    	palignr $0xb,%xmm1,%xmm2
   18db4:	0f 29 17             	movaps %xmm2,(%rdi)
   18db7:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   18dbe:	0f 83 6c ff ff ff    	jae    18d30 <__intel_ssse3_rep_memcpy+0x1120>
   18dc4:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   18dc9:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   18dd0:	48 01 d7             	add    %rdx,%rdi
   18dd3:	48 01 d6             	add    %rdx,%rsi
   18dd6:	4c 8d 1d b3 5c 00 00 	lea    0x5cb3(%rip),%r11        # 1ea90 <__func__.2431+0x407>
   18ddd:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   18de1:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   18de5:	3e ff e2             	ds jmpq *%rdx
   18de8:	0f 0b                	ud2    
   18dea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18df0:	0f 28 4e f5          	movaps -0xb(%rsi),%xmm1
   18df4:	0f 28 56 e5          	movaps -0x1b(%rsi),%xmm2
   18df8:	66 0f 3a 0f ca 0b    	palignr $0xb,%xmm2,%xmm1
   18dfe:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   18e02:	0f 28 5e d5          	movaps -0x2b(%rsi),%xmm3
   18e06:	66 0f 3a 0f d3 0b    	palignr $0xb,%xmm3,%xmm2
   18e0c:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   18e10:	0f 28 66 c5          	movaps -0x3b(%rsi),%xmm4
   18e14:	66 0f 3a 0f dc 0b    	palignr $0xb,%xmm4,%xmm3
   18e1a:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   18e1e:	0f 28 6e b5          	movaps -0x4b(%rsi),%xmm5
   18e22:	66 0f 3a 0f e5 0b    	palignr $0xb,%xmm5,%xmm4
   18e28:	0f 29 67 c0          	movaps %xmm4,-0x40(%rdi)
   18e2c:	0f 28 76 a5          	movaps -0x5b(%rsi),%xmm6
   18e30:	66 0f 3a 0f ee 0b    	palignr $0xb,%xmm6,%xmm5
   18e36:	0f 29 6f b0          	movaps %xmm5,-0x50(%rdi)
   18e3a:	0f 28 7e 95          	movaps -0x6b(%rsi),%xmm7
   18e3e:	66 0f 3a 0f f7 0b    	palignr $0xb,%xmm7,%xmm6
   18e44:	0f 29 77 a0          	movaps %xmm6,-0x60(%rdi)
   18e48:	44 0f 28 46 85       	movaps -0x7b(%rsi),%xmm8
   18e4d:	66 41 0f 3a 0f f8 0b 	palignr $0xb,%xmm8,%xmm7
   18e54:	0f 29 7f 90          	movaps %xmm7,-0x70(%rdi)
   18e58:	44 0f 28 8e 75 ff ff 	movaps -0x8b(%rsi),%xmm9
   18e5f:	ff 
   18e60:	66 45 0f 3a 0f c1 0b 	palignr $0xb,%xmm9,%xmm8
   18e67:	44 0f 29 47 80       	movaps %xmm8,-0x80(%rdi)
   18e6c:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   18e73:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   18e77:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   18e7b:	0f 83 6f ff ff ff    	jae    18df0 <__intel_ssse3_rep_memcpy+0x11e0>
   18e81:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   18e86:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   18e8d:	48 29 d7             	sub    %rdx,%rdi
   18e90:	48 29 d6             	sub    %rdx,%rsi
   18e93:	4c 8d 1d b6 59 00 00 	lea    0x59b6(%rip),%r11        # 1e850 <__func__.2431+0x1c7>
   18e9a:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   18e9e:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   18ea2:	3e ff e2             	ds jmpq *%rdx
   18ea5:	0f 0b                	ud2    
   18ea7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   18eae:	00 00 
   18eb0:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   18eb7:	66 0f 6f 4e f4       	movdqa -0xc(%rsi),%xmm1
   18ebc:	0f 28 56 04          	movaps 0x4(%rsi),%xmm2
   18ec0:	0f 28 5e 14          	movaps 0x14(%rsi),%xmm3
   18ec4:	0f 28 66 24          	movaps 0x24(%rsi),%xmm4
   18ec8:	0f 28 6e 34          	movaps 0x34(%rsi),%xmm5
   18ecc:	0f 28 76 44          	movaps 0x44(%rsi),%xmm6
   18ed0:	0f 28 7e 54          	movaps 0x54(%rsi),%xmm7
   18ed4:	44 0f 28 46 64       	movaps 0x64(%rsi),%xmm8
   18ed9:	44 0f 28 4e 74       	movaps 0x74(%rsi),%xmm9
   18ede:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   18ee5:	66 45 0f 3a 0f c8 0c 	palignr $0xc,%xmm8,%xmm9
   18eec:	44 0f 29 4f 70       	movaps %xmm9,0x70(%rdi)
   18ef1:	66 44 0f 3a 0f c7 0c 	palignr $0xc,%xmm7,%xmm8
   18ef8:	44 0f 29 47 60       	movaps %xmm8,0x60(%rdi)
   18efd:	66 0f 3a 0f fe 0c    	palignr $0xc,%xmm6,%xmm7
   18f03:	0f 29 7f 50          	movaps %xmm7,0x50(%rdi)
   18f07:	66 0f 3a 0f f5 0c    	palignr $0xc,%xmm5,%xmm6
   18f0d:	0f 29 77 40          	movaps %xmm6,0x40(%rdi)
   18f11:	66 0f 3a 0f ec 0c    	palignr $0xc,%xmm4,%xmm5
   18f17:	0f 29 6f 30          	movaps %xmm5,0x30(%rdi)
   18f1b:	66 0f 3a 0f e3 0c    	palignr $0xc,%xmm3,%xmm4
   18f21:	0f 29 67 20          	movaps %xmm4,0x20(%rdi)
   18f25:	66 0f 3a 0f da 0c    	palignr $0xc,%xmm2,%xmm3
   18f2b:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   18f2f:	66 0f 3a 0f d1 0c    	palignr $0xc,%xmm1,%xmm2
   18f35:	0f 29 17             	movaps %xmm2,(%rdi)
   18f38:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   18f3f:	0f 83 6b ff ff ff    	jae    18eb0 <__intel_ssse3_rep_memcpy+0x12a0>
   18f45:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   18f4a:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   18f51:	48 01 d7             	add    %rdx,%rdi
   18f54:	48 01 d6             	add    %rdx,%rsi
   18f57:	4c 8d 1d 32 5b 00 00 	lea    0x5b32(%rip),%r11        # 1ea90 <__func__.2431+0x407>
   18f5e:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   18f62:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   18f66:	3e ff e2             	ds jmpq *%rdx
   18f69:	0f 0b                	ud2    
   18f6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18f70:	0f 28 4e f4          	movaps -0xc(%rsi),%xmm1
   18f74:	0f 28 56 e4          	movaps -0x1c(%rsi),%xmm2
   18f78:	66 0f 3a 0f ca 0c    	palignr $0xc,%xmm2,%xmm1
   18f7e:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   18f82:	0f 28 5e d4          	movaps -0x2c(%rsi),%xmm3
   18f86:	66 0f 3a 0f d3 0c    	palignr $0xc,%xmm3,%xmm2
   18f8c:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   18f90:	0f 28 66 c4          	movaps -0x3c(%rsi),%xmm4
   18f94:	66 0f 3a 0f dc 0c    	palignr $0xc,%xmm4,%xmm3
   18f9a:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   18f9e:	0f 28 6e b4          	movaps -0x4c(%rsi),%xmm5
   18fa2:	66 0f 3a 0f e5 0c    	palignr $0xc,%xmm5,%xmm4
   18fa8:	0f 29 67 c0          	movaps %xmm4,-0x40(%rdi)
   18fac:	0f 28 76 a4          	movaps -0x5c(%rsi),%xmm6
   18fb0:	66 0f 3a 0f ee 0c    	palignr $0xc,%xmm6,%xmm5
   18fb6:	0f 29 6f b0          	movaps %xmm5,-0x50(%rdi)
   18fba:	0f 28 7e 94          	movaps -0x6c(%rsi),%xmm7
   18fbe:	66 0f 3a 0f f7 0c    	palignr $0xc,%xmm7,%xmm6
   18fc4:	0f 29 77 a0          	movaps %xmm6,-0x60(%rdi)
   18fc8:	44 0f 28 46 84       	movaps -0x7c(%rsi),%xmm8
   18fcd:	66 41 0f 3a 0f f8 0c 	palignr $0xc,%xmm8,%xmm7
   18fd4:	0f 29 7f 90          	movaps %xmm7,-0x70(%rdi)
   18fd8:	44 0f 28 8e 74 ff ff 	movaps -0x8c(%rsi),%xmm9
   18fdf:	ff 
   18fe0:	66 45 0f 3a 0f c1 0c 	palignr $0xc,%xmm9,%xmm8
   18fe7:	44 0f 29 47 80       	movaps %xmm8,-0x80(%rdi)
   18fec:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   18ff3:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   18ff7:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   18ffb:	0f 83 6f ff ff ff    	jae    18f70 <__intel_ssse3_rep_memcpy+0x1360>
   19001:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   19006:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   1900d:	48 29 d7             	sub    %rdx,%rdi
   19010:	48 29 d6             	sub    %rdx,%rsi
   19013:	4c 8d 1d 36 58 00 00 	lea    0x5836(%rip),%r11        # 1e850 <__func__.2431+0x1c7>
   1901a:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1901e:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   19022:	3e ff e2             	ds jmpq *%rdx
   19025:	0f 0b                	ud2    
   19027:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1902e:	00 00 
   19030:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   19037:	0f 28 4e f3          	movaps -0xd(%rsi),%xmm1
   1903b:	0f 28 56 03          	movaps 0x3(%rsi),%xmm2
   1903f:	0f 28 5e 13          	movaps 0x13(%rsi),%xmm3
   19043:	0f 28 66 23          	movaps 0x23(%rsi),%xmm4
   19047:	0f 28 6e 33          	movaps 0x33(%rsi),%xmm5
   1904b:	0f 28 76 43          	movaps 0x43(%rsi),%xmm6
   1904f:	0f 28 7e 53          	movaps 0x53(%rsi),%xmm7
   19053:	44 0f 28 46 63       	movaps 0x63(%rsi),%xmm8
   19058:	44 0f 28 4e 73       	movaps 0x73(%rsi),%xmm9
   1905d:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   19064:	66 45 0f 3a 0f c8 0d 	palignr $0xd,%xmm8,%xmm9
   1906b:	44 0f 29 4f 70       	movaps %xmm9,0x70(%rdi)
   19070:	66 44 0f 3a 0f c7 0d 	palignr $0xd,%xmm7,%xmm8
   19077:	44 0f 29 47 60       	movaps %xmm8,0x60(%rdi)
   1907c:	66 0f 3a 0f fe 0d    	palignr $0xd,%xmm6,%xmm7
   19082:	0f 29 7f 50          	movaps %xmm7,0x50(%rdi)
   19086:	66 0f 3a 0f f5 0d    	palignr $0xd,%xmm5,%xmm6
   1908c:	0f 29 77 40          	movaps %xmm6,0x40(%rdi)
   19090:	66 0f 3a 0f ec 0d    	palignr $0xd,%xmm4,%xmm5
   19096:	0f 29 6f 30          	movaps %xmm5,0x30(%rdi)
   1909a:	66 0f 3a 0f e3 0d    	palignr $0xd,%xmm3,%xmm4
   190a0:	0f 29 67 20          	movaps %xmm4,0x20(%rdi)
   190a4:	66 0f 3a 0f da 0d    	palignr $0xd,%xmm2,%xmm3
   190aa:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   190ae:	66 0f 3a 0f d1 0d    	palignr $0xd,%xmm1,%xmm2
   190b4:	0f 29 17             	movaps %xmm2,(%rdi)
   190b7:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   190be:	0f 83 6c ff ff ff    	jae    19030 <__intel_ssse3_rep_memcpy+0x1420>
   190c4:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   190c9:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   190d0:	48 01 d7             	add    %rdx,%rdi
   190d3:	48 01 d6             	add    %rdx,%rsi
   190d6:	4c 8d 1d b3 59 00 00 	lea    0x59b3(%rip),%r11        # 1ea90 <__func__.2431+0x407>
   190dd:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   190e1:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   190e5:	3e ff e2             	ds jmpq *%rdx
   190e8:	0f 0b                	ud2    
   190ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   190f0:	0f 28 4e f3          	movaps -0xd(%rsi),%xmm1
   190f4:	0f 28 56 e3          	movaps -0x1d(%rsi),%xmm2
   190f8:	66 0f 3a 0f ca 0d    	palignr $0xd,%xmm2,%xmm1
   190fe:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   19102:	0f 28 5e d3          	movaps -0x2d(%rsi),%xmm3
   19106:	66 0f 3a 0f d3 0d    	palignr $0xd,%xmm3,%xmm2
   1910c:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   19110:	0f 28 66 c3          	movaps -0x3d(%rsi),%xmm4
   19114:	66 0f 3a 0f dc 0d    	palignr $0xd,%xmm4,%xmm3
   1911a:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   1911e:	0f 28 6e b3          	movaps -0x4d(%rsi),%xmm5
   19122:	66 0f 3a 0f e5 0d    	palignr $0xd,%xmm5,%xmm4
   19128:	0f 29 67 c0          	movaps %xmm4,-0x40(%rdi)
   1912c:	0f 28 76 a3          	movaps -0x5d(%rsi),%xmm6
   19130:	66 0f 3a 0f ee 0d    	palignr $0xd,%xmm6,%xmm5
   19136:	0f 29 6f b0          	movaps %xmm5,-0x50(%rdi)
   1913a:	0f 28 7e 93          	movaps -0x6d(%rsi),%xmm7
   1913e:	66 0f 3a 0f f7 0d    	palignr $0xd,%xmm7,%xmm6
   19144:	0f 29 77 a0          	movaps %xmm6,-0x60(%rdi)
   19148:	44 0f 28 46 83       	movaps -0x7d(%rsi),%xmm8
   1914d:	66 41 0f 3a 0f f8 0d 	palignr $0xd,%xmm8,%xmm7
   19154:	0f 29 7f 90          	movaps %xmm7,-0x70(%rdi)
   19158:	44 0f 28 8e 73 ff ff 	movaps -0x8d(%rsi),%xmm9
   1915f:	ff 
   19160:	66 45 0f 3a 0f c1 0d 	palignr $0xd,%xmm9,%xmm8
   19167:	44 0f 29 47 80       	movaps %xmm8,-0x80(%rdi)
   1916c:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   19173:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   19177:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   1917b:	0f 83 6f ff ff ff    	jae    190f0 <__intel_ssse3_rep_memcpy+0x14e0>
   19181:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   19186:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   1918d:	48 29 d7             	sub    %rdx,%rdi
   19190:	48 29 d6             	sub    %rdx,%rsi
   19193:	4c 8d 1d b6 56 00 00 	lea    0x56b6(%rip),%r11        # 1e850 <__func__.2431+0x1c7>
   1919a:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1919e:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   191a2:	3e ff e2             	ds jmpq *%rdx
   191a5:	0f 0b                	ud2    
   191a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   191ae:	00 00 
   191b0:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   191b7:	0f 28 4e f2          	movaps -0xe(%rsi),%xmm1
   191bb:	0f 28 56 02          	movaps 0x2(%rsi),%xmm2
   191bf:	0f 28 5e 12          	movaps 0x12(%rsi),%xmm3
   191c3:	0f 28 66 22          	movaps 0x22(%rsi),%xmm4
   191c7:	0f 28 6e 32          	movaps 0x32(%rsi),%xmm5
   191cb:	0f 28 76 42          	movaps 0x42(%rsi),%xmm6
   191cf:	0f 28 7e 52          	movaps 0x52(%rsi),%xmm7
   191d3:	44 0f 28 46 62       	movaps 0x62(%rsi),%xmm8
   191d8:	44 0f 28 4e 72       	movaps 0x72(%rsi),%xmm9
   191dd:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   191e4:	66 45 0f 3a 0f c8 0e 	palignr $0xe,%xmm8,%xmm9
   191eb:	44 0f 29 4f 70       	movaps %xmm9,0x70(%rdi)
   191f0:	66 44 0f 3a 0f c7 0e 	palignr $0xe,%xmm7,%xmm8
   191f7:	44 0f 29 47 60       	movaps %xmm8,0x60(%rdi)
   191fc:	66 0f 3a 0f fe 0e    	palignr $0xe,%xmm6,%xmm7
   19202:	0f 29 7f 50          	movaps %xmm7,0x50(%rdi)
   19206:	66 0f 3a 0f f5 0e    	palignr $0xe,%xmm5,%xmm6
   1920c:	0f 29 77 40          	movaps %xmm6,0x40(%rdi)
   19210:	66 0f 3a 0f ec 0e    	palignr $0xe,%xmm4,%xmm5
   19216:	0f 29 6f 30          	movaps %xmm5,0x30(%rdi)
   1921a:	66 0f 3a 0f e3 0e    	palignr $0xe,%xmm3,%xmm4
   19220:	0f 29 67 20          	movaps %xmm4,0x20(%rdi)
   19224:	66 0f 3a 0f da 0e    	palignr $0xe,%xmm2,%xmm3
   1922a:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   1922e:	66 0f 3a 0f d1 0e    	palignr $0xe,%xmm1,%xmm2
   19234:	0f 29 17             	movaps %xmm2,(%rdi)
   19237:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   1923e:	0f 83 6c ff ff ff    	jae    191b0 <__intel_ssse3_rep_memcpy+0x15a0>
   19244:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   19249:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   19250:	48 01 d7             	add    %rdx,%rdi
   19253:	48 01 d6             	add    %rdx,%rsi
   19256:	4c 8d 1d 33 58 00 00 	lea    0x5833(%rip),%r11        # 1ea90 <__func__.2431+0x407>
   1925d:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   19261:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   19265:	3e ff e2             	ds jmpq *%rdx
   19268:	0f 0b                	ud2    
   1926a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19270:	0f 28 4e f2          	movaps -0xe(%rsi),%xmm1
   19274:	0f 28 56 e2          	movaps -0x1e(%rsi),%xmm2
   19278:	66 0f 3a 0f ca 0e    	palignr $0xe,%xmm2,%xmm1
   1927e:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   19282:	0f 28 5e d2          	movaps -0x2e(%rsi),%xmm3
   19286:	66 0f 3a 0f d3 0e    	palignr $0xe,%xmm3,%xmm2
   1928c:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   19290:	0f 28 66 c2          	movaps -0x3e(%rsi),%xmm4
   19294:	66 0f 3a 0f dc 0e    	palignr $0xe,%xmm4,%xmm3
   1929a:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   1929e:	0f 28 6e b2          	movaps -0x4e(%rsi),%xmm5
   192a2:	66 0f 3a 0f e5 0e    	palignr $0xe,%xmm5,%xmm4
   192a8:	0f 29 67 c0          	movaps %xmm4,-0x40(%rdi)
   192ac:	0f 28 76 a2          	movaps -0x5e(%rsi),%xmm6
   192b0:	66 0f 3a 0f ee 0e    	palignr $0xe,%xmm6,%xmm5
   192b6:	0f 29 6f b0          	movaps %xmm5,-0x50(%rdi)
   192ba:	0f 28 7e 92          	movaps -0x6e(%rsi),%xmm7
   192be:	66 0f 3a 0f f7 0e    	palignr $0xe,%xmm7,%xmm6
   192c4:	0f 29 77 a0          	movaps %xmm6,-0x60(%rdi)
   192c8:	44 0f 28 46 82       	movaps -0x7e(%rsi),%xmm8
   192cd:	66 41 0f 3a 0f f8 0e 	palignr $0xe,%xmm8,%xmm7
   192d4:	0f 29 7f 90          	movaps %xmm7,-0x70(%rdi)
   192d8:	44 0f 28 8e 72 ff ff 	movaps -0x8e(%rsi),%xmm9
   192df:	ff 
   192e0:	66 45 0f 3a 0f c1 0e 	palignr $0xe,%xmm9,%xmm8
   192e7:	44 0f 29 47 80       	movaps %xmm8,-0x80(%rdi)
   192ec:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   192f3:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   192f7:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   192fb:	0f 83 6f ff ff ff    	jae    19270 <__intel_ssse3_rep_memcpy+0x1660>
   19301:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   19306:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   1930d:	48 29 d7             	sub    %rdx,%rdi
   19310:	48 29 d6             	sub    %rdx,%rsi
   19313:	4c 8d 1d 36 55 00 00 	lea    0x5536(%rip),%r11        # 1e850 <__func__.2431+0x1c7>
   1931a:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1931e:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   19322:	3e ff e2             	ds jmpq *%rdx
   19325:	0f 0b                	ud2    
   19327:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1932e:	00 00 
   19330:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   19337:	0f 28 4e f1          	movaps -0xf(%rsi),%xmm1
   1933b:	0f 28 56 01          	movaps 0x1(%rsi),%xmm2
   1933f:	0f 28 5e 11          	movaps 0x11(%rsi),%xmm3
   19343:	0f 28 66 21          	movaps 0x21(%rsi),%xmm4
   19347:	0f 28 6e 31          	movaps 0x31(%rsi),%xmm5
   1934b:	0f 28 76 41          	movaps 0x41(%rsi),%xmm6
   1934f:	0f 28 7e 51          	movaps 0x51(%rsi),%xmm7
   19353:	44 0f 28 46 61       	movaps 0x61(%rsi),%xmm8
   19358:	44 0f 28 4e 71       	movaps 0x71(%rsi),%xmm9
   1935d:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   19364:	66 45 0f 3a 0f c8 0f 	palignr $0xf,%xmm8,%xmm9
   1936b:	44 0f 29 4f 70       	movaps %xmm9,0x70(%rdi)
   19370:	66 44 0f 3a 0f c7 0f 	palignr $0xf,%xmm7,%xmm8
   19377:	44 0f 29 47 60       	movaps %xmm8,0x60(%rdi)
   1937c:	66 0f 3a 0f fe 0f    	palignr $0xf,%xmm6,%xmm7
   19382:	0f 29 7f 50          	movaps %xmm7,0x50(%rdi)
   19386:	66 0f 3a 0f f5 0f    	palignr $0xf,%xmm5,%xmm6
   1938c:	0f 29 77 40          	movaps %xmm6,0x40(%rdi)
   19390:	66 0f 3a 0f ec 0f    	palignr $0xf,%xmm4,%xmm5
   19396:	0f 29 6f 30          	movaps %xmm5,0x30(%rdi)
   1939a:	66 0f 3a 0f e3 0f    	palignr $0xf,%xmm3,%xmm4
   193a0:	0f 29 67 20          	movaps %xmm4,0x20(%rdi)
   193a4:	66 0f 3a 0f da 0f    	palignr $0xf,%xmm2,%xmm3
   193aa:	0f 29 5f 10          	movaps %xmm3,0x10(%rdi)
   193ae:	66 0f 3a 0f d1 0f    	palignr $0xf,%xmm1,%xmm2
   193b4:	0f 29 17             	movaps %xmm2,(%rdi)
   193b7:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   193be:	0f 83 6c ff ff ff    	jae    19330 <__intel_ssse3_rep_memcpy+0x1720>
   193c4:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   193c9:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   193d0:	48 01 d7             	add    %rdx,%rdi
   193d3:	48 01 d6             	add    %rdx,%rsi
   193d6:	4c 8d 1d b3 56 00 00 	lea    0x56b3(%rip),%r11        # 1ea90 <__func__.2431+0x407>
   193dd:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   193e1:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   193e5:	3e ff e2             	ds jmpq *%rdx
   193e8:	0f 0b                	ud2    
   193ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   193f0:	0f 28 4e f1          	movaps -0xf(%rsi),%xmm1
   193f4:	0f 28 56 e1          	movaps -0x1f(%rsi),%xmm2
   193f8:	66 0f 3a 0f ca 0f    	palignr $0xf,%xmm2,%xmm1
   193fe:	0f 29 4f f0          	movaps %xmm1,-0x10(%rdi)
   19402:	0f 28 5e d1          	movaps -0x2f(%rsi),%xmm3
   19406:	66 0f 3a 0f d3 0f    	palignr $0xf,%xmm3,%xmm2
   1940c:	0f 29 57 e0          	movaps %xmm2,-0x20(%rdi)
   19410:	0f 28 66 c1          	movaps -0x3f(%rsi),%xmm4
   19414:	66 0f 3a 0f dc 0f    	palignr $0xf,%xmm4,%xmm3
   1941a:	0f 29 5f d0          	movaps %xmm3,-0x30(%rdi)
   1941e:	0f 28 6e b1          	movaps -0x4f(%rsi),%xmm5
   19422:	66 0f 3a 0f e5 0f    	palignr $0xf,%xmm5,%xmm4
   19428:	0f 29 67 c0          	movaps %xmm4,-0x40(%rdi)
   1942c:	0f 28 76 a1          	movaps -0x5f(%rsi),%xmm6
   19430:	66 0f 3a 0f ee 0f    	palignr $0xf,%xmm6,%xmm5
   19436:	0f 29 6f b0          	movaps %xmm5,-0x50(%rdi)
   1943a:	0f 28 7e 91          	movaps -0x6f(%rsi),%xmm7
   1943e:	66 0f 3a 0f f7 0f    	palignr $0xf,%xmm7,%xmm6
   19444:	0f 29 77 a0          	movaps %xmm6,-0x60(%rdi)
   19448:	44 0f 28 46 81       	movaps -0x7f(%rsi),%xmm8
   1944d:	66 41 0f 3a 0f f8 0f 	palignr $0xf,%xmm8,%xmm7
   19454:	0f 29 7f 90          	movaps %xmm7,-0x70(%rdi)
   19458:	44 0f 28 8e 71 ff ff 	movaps -0x8f(%rsi),%xmm9
   1945f:	ff 
   19460:	66 45 0f 3a 0f c1 0f 	palignr $0xf,%xmm9,%xmm8
   19467:	44 0f 29 47 80       	movaps %xmm8,-0x80(%rdi)
   1946c:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   19473:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   19477:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   1947b:	0f 83 6f ff ff ff    	jae    193f0 <__intel_ssse3_rep_memcpy+0x17e0>
   19481:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   19486:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   1948d:	48 29 d7             	sub    %rdx,%rdi
   19490:	48 29 d6             	sub    %rdx,%rsi
   19493:	4c 8d 1d b6 53 00 00 	lea    0x53b6(%rip),%r11        # 1e850 <__func__.2431+0x1c7>
   1949a:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   1949e:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   194a2:	3e ff e2             	ds jmpq *%rdx
   194a5:	0f 0b                	ud2    
   194a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   194ae:	00 00 
   194b0:	f3 0f 6f 0e          	movdqu (%rsi),%xmm1
   194b4:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   194b9:	66 0f 7f 0f          	movdqa %xmm1,(%rdi)
   194bd:	48 83 ea 10          	sub    $0x10,%rdx
   194c1:	48 83 c6 10          	add    $0x10,%rsi
   194c5:	48 83 c7 10          	add    $0x10,%rdi
   194c9:	8b 0d b9 93 20 00    	mov    0x2093b9(%rip),%ecx        # 222888 <__libirc_largest_cache_size_half>
   194cf:	48 39 ca             	cmp    %rcx,%rdx
   194d2:	77 03                	ja     194d7 <__intel_ssse3_rep_memcpy+0x18c7>
   194d4:	48 89 d1             	mov    %rdx,%rcx
   194d7:	48 29 ca             	sub    %rcx,%rdx
   194da:	48 81 fa 00 10 00 00 	cmp    $0x1000,%rdx
   194e1:	0f 86 a6 00 00 00    	jbe    1958d <__intel_ssse3_rep_memcpy+0x197d>
   194e7:	49 89 c9             	mov    %rcx,%r9
   194ea:	49 c1 e1 03          	shl    $0x3,%r9
   194ee:	4c 39 ca             	cmp    %r9,%rdx
   194f1:	76 06                	jbe    194f9 <__intel_ssse3_rep_memcpy+0x18e9>
   194f3:	48 01 ca             	add    %rcx,%rdx
   194f6:	48 31 c9             	xor    %rcx,%rcx
   194f9:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   19500:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   19507:	0f 18 8e 00 02 00 00 	prefetcht0 0x200(%rsi)
   1950e:	0f 18 8e 00 03 00 00 	prefetcht0 0x300(%rsi)
   19515:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   19519:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
   1951e:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
   19523:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
   19528:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
   1952d:	f3 0f 6f 6e 50       	movdqu 0x50(%rsi),%xmm5
   19532:	f3 0f 6f 76 60       	movdqu 0x60(%rsi),%xmm6
   19537:	f3 0f 6f 7e 70       	movdqu 0x70(%rsi),%xmm7
   1953c:	0f ae e8             	lfence 
   1953f:	66 0f e7 07          	movntdq %xmm0,(%rdi)
   19543:	66 0f e7 4f 10       	movntdq %xmm1,0x10(%rdi)
   19548:	66 0f e7 57 20       	movntdq %xmm2,0x20(%rdi)
   1954d:	66 0f e7 5f 30       	movntdq %xmm3,0x30(%rdi)
   19552:	66 0f e7 67 40       	movntdq %xmm4,0x40(%rdi)
   19557:	66 0f e7 6f 50       	movntdq %xmm5,0x50(%rdi)
   1955c:	66 0f e7 77 60       	movntdq %xmm6,0x60(%rdi)
   19561:	66 0f e7 7f 70       	movntdq %xmm7,0x70(%rdi)
   19566:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   1956d:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   19574:	73 8a                	jae    19500 <__intel_ssse3_rep_memcpy+0x18f0>
   19576:	0f ae f8             	sfence 
   19579:	48 81 f9 80 00 00 00 	cmp    $0x80,%rcx
   19580:	0f 82 96 00 00 00    	jb     1961c <__intel_ssse3_rep_memcpy+0x1a0c>
   19586:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   1958d:	48 01 ca             	add    %rcx,%rdx
   19590:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   19597:	0f 18 86 c0 01 00 00 	prefetchnta 0x1c0(%rsi)
   1959e:	0f 18 86 80 02 00 00 	prefetchnta 0x280(%rsi)
   195a5:	0f 18 87 c0 01 00 00 	prefetchnta 0x1c0(%rdi)
   195ac:	0f 18 87 80 02 00 00 	prefetchnta 0x280(%rdi)
   195b3:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   195ba:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   195be:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
   195c3:	f3 0f 6f 56 20       	movdqu 0x20(%rsi),%xmm2
   195c8:	f3 0f 6f 5e 30       	movdqu 0x30(%rsi),%xmm3
   195cd:	f3 0f 6f 66 40       	movdqu 0x40(%rsi),%xmm4
   195d2:	f3 0f 6f 6e 50       	movdqu 0x50(%rsi),%xmm5
   195d7:	f3 0f 6f 76 60       	movdqu 0x60(%rsi),%xmm6
   195dc:	f3 0f 6f 7e 70       	movdqu 0x70(%rsi),%xmm7
   195e1:	66 0f 7f 07          	movdqa %xmm0,(%rdi)
   195e5:	66 0f 7f 4f 10       	movdqa %xmm1,0x10(%rdi)
   195ea:	66 0f 7f 57 20       	movdqa %xmm2,0x20(%rdi)
   195ef:	66 0f 7f 5f 30       	movdqa %xmm3,0x30(%rdi)
   195f4:	66 0f 7f 67 40       	movdqa %xmm4,0x40(%rdi)
   195f9:	66 0f 7f 6f 50       	movdqa %xmm5,0x50(%rdi)
   195fe:	66 0f 7f 77 60       	movdqa %xmm6,0x60(%rdi)
   19603:	66 0f 7f 7f 70       	movdqa %xmm7,0x70(%rdi)
   19608:	48 8d b6 80 00 00 00 	lea    0x80(%rsi),%rsi
   1960f:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   19616:	0f 83 7b ff ff ff    	jae    19597 <__intel_ssse3_rep_memcpy+0x1987>
   1961c:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   19623:	48 01 d6             	add    %rdx,%rsi
   19626:	48 01 d7             	add    %rdx,%rdi
   19629:	4c 8d 1d 60 54 00 00 	lea    0x5460(%rip),%r11        # 1ea90 <__func__.2431+0x407>
   19630:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   19634:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   19638:	3e ff e2             	ds jmpq *%rdx
   1963b:	0f 0b                	ud2    
   1963d:	0f 1f 00             	nopl   (%rax)
   19640:	48 01 d6             	add    %rdx,%rsi
   19643:	48 01 d7             	add    %rdx,%rdi
   19646:	f3 0f 6f 46 f0       	movdqu -0x10(%rsi),%xmm0
   1964b:	4c 8d 47 f0          	lea    -0x10(%rdi),%r8
   1964f:	49 89 f9             	mov    %rdi,%r9
   19652:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
   19656:	49 29 f9             	sub    %rdi,%r9
   19659:	4c 29 ce             	sub    %r9,%rsi
   1965c:	4c 29 ca             	sub    %r9,%rdx
   1965f:	8b 0d 23 92 20 00    	mov    0x209223(%rip),%ecx        # 222888 <__libirc_largest_cache_size_half>
   19665:	48 39 ca             	cmp    %rcx,%rdx
   19668:	77 03                	ja     1966d <__intel_ssse3_rep_memcpy+0x1a5d>
   1966a:	48 89 d1             	mov    %rdx,%rcx
   1966d:	48 29 ca             	sub    %rcx,%rdx
   19670:	48 81 fa 00 10 00 00 	cmp    $0x1000,%rdx
   19677:	0f 86 a4 00 00 00    	jbe    19721 <__intel_ssse3_rep_memcpy+0x1b11>
   1967d:	49 89 c9             	mov    %rcx,%r9
   19680:	49 c1 e1 03          	shl    $0x3,%r9
   19684:	4c 39 ca             	cmp    %r9,%rdx
   19687:	76 06                	jbe    1968f <__intel_ssse3_rep_memcpy+0x1a7f>
   19689:	48 01 ca             	add    %rcx,%rdx
   1968c:	48 31 c9             	xor    %rcx,%rcx
   1968f:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   19696:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   1969d:	0f 18 8e 00 fe ff ff 	prefetcht0 -0x200(%rsi)
   196a4:	0f 18 8e 00 fd ff ff 	prefetcht0 -0x300(%rsi)
   196ab:	f3 0f 6f 4e f0       	movdqu -0x10(%rsi),%xmm1
   196b0:	f3 0f 6f 56 e0       	movdqu -0x20(%rsi),%xmm2
   196b5:	f3 0f 6f 5e d0       	movdqu -0x30(%rsi),%xmm3
   196ba:	f3 0f 6f 66 c0       	movdqu -0x40(%rsi),%xmm4
   196bf:	f3 0f 6f 6e b0       	movdqu -0x50(%rsi),%xmm5
   196c4:	f3 0f 6f 76 a0       	movdqu -0x60(%rsi),%xmm6
   196c9:	f3 0f 6f 7e 90       	movdqu -0x70(%rsi),%xmm7
   196ce:	f3 44 0f 6f 46 80    	movdqu -0x80(%rsi),%xmm8
   196d4:	0f ae e8             	lfence 
   196d7:	66 0f e7 4f f0       	movntdq %xmm1,-0x10(%rdi)
   196dc:	66 0f e7 57 e0       	movntdq %xmm2,-0x20(%rdi)
   196e1:	66 0f e7 5f d0       	movntdq %xmm3,-0x30(%rdi)
   196e6:	66 0f e7 67 c0       	movntdq %xmm4,-0x40(%rdi)
   196eb:	66 0f e7 6f b0       	movntdq %xmm5,-0x50(%rdi)
   196f0:	66 0f e7 77 a0       	movntdq %xmm6,-0x60(%rdi)
   196f5:	66 0f e7 7f 90       	movntdq %xmm7,-0x70(%rdi)
   196fa:	66 44 0f e7 47 80    	movntdq %xmm8,-0x80(%rdi)
   19700:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   19704:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   19708:	73 8c                	jae    19696 <__intel_ssse3_rep_memcpy+0x1a86>
   1970a:	0f ae f8             	sfence 
   1970d:	48 81 f9 80 00 00 00 	cmp    $0x80,%rcx
   19714:	0f 82 90 00 00 00    	jb     197aa <__intel_ssse3_rep_memcpy+0x1b9a>
   1971a:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   19721:	48 01 ca             	add    %rcx,%rdx
   19724:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   1972b:	0f 18 86 40 fe ff ff 	prefetchnta -0x1c0(%rsi)
   19732:	0f 18 86 80 fd ff ff 	prefetchnta -0x280(%rsi)
   19739:	0f 18 87 40 fe ff ff 	prefetchnta -0x1c0(%rdi)
   19740:	0f 18 87 80 fd ff ff 	prefetchnta -0x280(%rdi)
   19747:	48 81 ea 80 00 00 00 	sub    $0x80,%rdx
   1974e:	f3 0f 6f 4e f0       	movdqu -0x10(%rsi),%xmm1
   19753:	f3 0f 6f 56 e0       	movdqu -0x20(%rsi),%xmm2
   19758:	f3 0f 6f 5e d0       	movdqu -0x30(%rsi),%xmm3
   1975d:	f3 0f 6f 66 c0       	movdqu -0x40(%rsi),%xmm4
   19762:	f3 0f 6f 6e b0       	movdqu -0x50(%rsi),%xmm5
   19767:	f3 0f 6f 76 a0       	movdqu -0x60(%rsi),%xmm6
   1976c:	f3 0f 6f 7e 90       	movdqu -0x70(%rsi),%xmm7
   19771:	f3 44 0f 6f 46 80    	movdqu -0x80(%rsi),%xmm8
   19777:	66 0f 7f 4f f0       	movdqa %xmm1,-0x10(%rdi)
   1977c:	66 0f 7f 57 e0       	movdqa %xmm2,-0x20(%rdi)
   19781:	66 0f 7f 5f d0       	movdqa %xmm3,-0x30(%rdi)
   19786:	66 0f 7f 67 c0       	movdqa %xmm4,-0x40(%rdi)
   1978b:	66 0f 7f 6f b0       	movdqa %xmm5,-0x50(%rdi)
   19790:	66 0f 7f 77 a0       	movdqa %xmm6,-0x60(%rdi)
   19795:	66 0f 7f 7f 90       	movdqa %xmm7,-0x70(%rdi)
   1979a:	66 44 0f 7f 47 80    	movdqa %xmm8,-0x80(%rdi)
   197a0:	48 8d 76 80          	lea    -0x80(%rsi),%rsi
   197a4:	48 8d 7f 80          	lea    -0x80(%rdi),%rdi
   197a8:	73 81                	jae    1972b <__intel_ssse3_rep_memcpy+0x1b1b>
   197aa:	f3 41 0f 7f 00       	movdqu %xmm0,(%r8)
   197af:	48 81 c2 80 00 00 00 	add    $0x80,%rdx
   197b6:	48 29 d6             	sub    %rdx,%rsi
   197b9:	48 29 d7             	sub    %rdx,%rdi
   197bc:	4c 8d 1d 8d 50 00 00 	lea    0x508d(%rip),%r11        # 1e850 <__func__.2431+0x1c7>
   197c3:	49 63 14 93          	movslq (%r11,%rdx,4),%rdx
   197c7:	49 8d 14 13          	lea    (%r11,%rdx,1),%rdx
   197cb:	3e ff e2             	ds jmpq *%rdx
   197ce:	0f 0b                	ud2    
   197d0:	f2 0f f0 46 80       	lddqu  -0x80(%rsi),%xmm0
   197d5:	f3 0f 7f 47 80       	movdqu %xmm0,-0x80(%rdi)
   197da:	f2 0f f0 46 90       	lddqu  -0x70(%rsi),%xmm0
   197df:	f3 0f 7f 47 90       	movdqu %xmm0,-0x70(%rdi)
   197e4:	f2 0f f0 46 a0       	lddqu  -0x60(%rsi),%xmm0
   197e9:	f3 0f 7f 47 a0       	movdqu %xmm0,-0x60(%rdi)
   197ee:	f2 0f f0 46 b0       	lddqu  -0x50(%rsi),%xmm0
   197f3:	f3 0f 7f 47 b0       	movdqu %xmm0,-0x50(%rdi)
   197f8:	f2 0f f0 46 c0       	lddqu  -0x40(%rsi),%xmm0
   197fd:	f3 0f 7f 47 c0       	movdqu %xmm0,-0x40(%rdi)
   19802:	f2 0f f0 46 d0       	lddqu  -0x30(%rsi),%xmm0
   19807:	f3 0f 7f 47 d0       	movdqu %xmm0,-0x30(%rdi)
   1980c:	f2 0f f0 46 e0       	lddqu  -0x20(%rsi),%xmm0
   19811:	f3 0f 7f 47 e0       	movdqu %xmm0,-0x20(%rdi)
   19816:	f2 0f f0 46 f0       	lddqu  -0x10(%rsi),%xmm0
   1981b:	f3 0f 7f 47 f0       	movdqu %xmm0,-0x10(%rdi)
   19820:	c3                   	retq   
   19821:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19826:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1982d:	00 00 00 
   19830:	f2 0f f0 86 71 ff ff 	lddqu  -0x8f(%rsi),%xmm0
   19837:	ff 
   19838:	f3 0f 7f 87 71 ff ff 	movdqu %xmm0,-0x8f(%rdi)
   1983f:	ff 
   19840:	f2 0f f0 46 81       	lddqu  -0x7f(%rsi),%xmm0
   19845:	f3 0f 7f 47 81       	movdqu %xmm0,-0x7f(%rdi)
   1984a:	f2 0f f0 46 91       	lddqu  -0x6f(%rsi),%xmm0
   1984f:	f3 0f 7f 47 91       	movdqu %xmm0,-0x6f(%rdi)
   19854:	f2 0f f0 46 a1       	lddqu  -0x5f(%rsi),%xmm0
   19859:	f3 0f 7f 47 a1       	movdqu %xmm0,-0x5f(%rdi)
   1985e:	f2 0f f0 46 b1       	lddqu  -0x4f(%rsi),%xmm0
   19863:	f3 0f 7f 47 b1       	movdqu %xmm0,-0x4f(%rdi)
   19868:	f2 0f f0 46 c1       	lddqu  -0x3f(%rsi),%xmm0
   1986d:	f3 0f 7f 47 c1       	movdqu %xmm0,-0x3f(%rdi)
   19872:	f2 0f f0 46 d1       	lddqu  -0x2f(%rsi),%xmm0
   19877:	f3 0f 7f 47 d1       	movdqu %xmm0,-0x2f(%rdi)
   1987c:	f2 0f f0 46 e1       	lddqu  -0x1f(%rsi),%xmm0
   19881:	f2 0f f0 4e f0       	lddqu  -0x10(%rsi),%xmm1
   19886:	f3 0f 7f 47 e1       	movdqu %xmm0,-0x1f(%rdi)
   1988b:	f3 0f 7f 4f f0       	movdqu %xmm1,-0x10(%rdi)
   19890:	c3                   	retq   
   19891:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19896:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1989d:	00 00 00 
   198a0:	48 8b 56 f1          	mov    -0xf(%rsi),%rdx
   198a4:	48 8b 4e f8          	mov    -0x8(%rsi),%rcx
   198a8:	48 89 57 f1          	mov    %rdx,-0xf(%rdi)
   198ac:	48 89 4f f8          	mov    %rcx,-0x8(%rdi)
   198b0:	c3                   	retq   
   198b1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   198b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   198bd:	00 00 00 
   198c0:	f2 0f f0 86 72 ff ff 	lddqu  -0x8e(%rsi),%xmm0
   198c7:	ff 
   198c8:	f3 0f 7f 87 72 ff ff 	movdqu %xmm0,-0x8e(%rdi)
   198cf:	ff 
   198d0:	f2 0f f0 46 82       	lddqu  -0x7e(%rsi),%xmm0
   198d5:	f3 0f 7f 47 82       	movdqu %xmm0,-0x7e(%rdi)
   198da:	f2 0f f0 46 92       	lddqu  -0x6e(%rsi),%xmm0
   198df:	f3 0f 7f 47 92       	movdqu %xmm0,-0x6e(%rdi)
   198e4:	f2 0f f0 46 a2       	lddqu  -0x5e(%rsi),%xmm0
   198e9:	f3 0f 7f 47 a2       	movdqu %xmm0,-0x5e(%rdi)
   198ee:	f2 0f f0 46 b2       	lddqu  -0x4e(%rsi),%xmm0
   198f3:	f3 0f 7f 47 b2       	movdqu %xmm0,-0x4e(%rdi)
   198f8:	f2 0f f0 46 c2       	lddqu  -0x3e(%rsi),%xmm0
   198fd:	f3 0f 7f 47 c2       	movdqu %xmm0,-0x3e(%rdi)
   19902:	f2 0f f0 46 d2       	lddqu  -0x2e(%rsi),%xmm0
   19907:	f3 0f 7f 47 d2       	movdqu %xmm0,-0x2e(%rdi)
   1990c:	f2 0f f0 46 e2       	lddqu  -0x1e(%rsi),%xmm0
   19911:	f2 0f f0 4e f0       	lddqu  -0x10(%rsi),%xmm1
   19916:	f3 0f 7f 47 e2       	movdqu %xmm0,-0x1e(%rdi)
   1991b:	f3 0f 7f 4f f0       	movdqu %xmm1,-0x10(%rdi)
   19920:	c3                   	retq   
   19921:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19926:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1992d:	00 00 00 
   19930:	48 8b 56 f2          	mov    -0xe(%rsi),%rdx
   19934:	48 8b 4e f8          	mov    -0x8(%rsi),%rcx
   19938:	48 89 57 f2          	mov    %rdx,-0xe(%rdi)
   1993c:	48 89 4f f8          	mov    %rcx,-0x8(%rdi)
   19940:	c3                   	retq   
   19941:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19946:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1994d:	00 00 00 
   19950:	f2 0f f0 86 73 ff ff 	lddqu  -0x8d(%rsi),%xmm0
   19957:	ff 
   19958:	f3 0f 7f 87 73 ff ff 	movdqu %xmm0,-0x8d(%rdi)
   1995f:	ff 
   19960:	f2 0f f0 46 83       	lddqu  -0x7d(%rsi),%xmm0
   19965:	f3 0f 7f 47 83       	movdqu %xmm0,-0x7d(%rdi)
   1996a:	f2 0f f0 46 93       	lddqu  -0x6d(%rsi),%xmm0
   1996f:	f3 0f 7f 47 93       	movdqu %xmm0,-0x6d(%rdi)
   19974:	f2 0f f0 46 a3       	lddqu  -0x5d(%rsi),%xmm0
   19979:	f3 0f 7f 47 a3       	movdqu %xmm0,-0x5d(%rdi)
   1997e:	f2 0f f0 46 b3       	lddqu  -0x4d(%rsi),%xmm0
   19983:	f3 0f 7f 47 b3       	movdqu %xmm0,-0x4d(%rdi)
   19988:	f2 0f f0 46 c3       	lddqu  -0x3d(%rsi),%xmm0
   1998d:	f3 0f 7f 47 c3       	movdqu %xmm0,-0x3d(%rdi)
   19992:	f2 0f f0 46 d3       	lddqu  -0x2d(%rsi),%xmm0
   19997:	f3 0f 7f 47 d3       	movdqu %xmm0,-0x2d(%rdi)
   1999c:	f2 0f f0 46 e3       	lddqu  -0x1d(%rsi),%xmm0
   199a1:	f2 0f f0 4e f0       	lddqu  -0x10(%rsi),%xmm1
   199a6:	f3 0f 7f 47 e3       	movdqu %xmm0,-0x1d(%rdi)
   199ab:	f3 0f 7f 4f f0       	movdqu %xmm1,-0x10(%rdi)
   199b0:	c3                   	retq   
   199b1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   199b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   199bd:	00 00 00 
   199c0:	48 8b 56 f3          	mov    -0xd(%rsi),%rdx
   199c4:	48 8b 4e f8          	mov    -0x8(%rsi),%rcx
   199c8:	48 89 57 f3          	mov    %rdx,-0xd(%rdi)
   199cc:	48 89 4f f8          	mov    %rcx,-0x8(%rdi)
   199d0:	c3                   	retq   
   199d1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   199d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   199dd:	00 00 00 
   199e0:	f2 0f f0 86 74 ff ff 	lddqu  -0x8c(%rsi),%xmm0
   199e7:	ff 
   199e8:	f3 0f 7f 87 74 ff ff 	movdqu %xmm0,-0x8c(%rdi)
   199ef:	ff 
   199f0:	f2 0f f0 46 84       	lddqu  -0x7c(%rsi),%xmm0
   199f5:	f3 0f 7f 47 84       	movdqu %xmm0,-0x7c(%rdi)
   199fa:	f2 0f f0 46 94       	lddqu  -0x6c(%rsi),%xmm0
   199ff:	f3 0f 7f 47 94       	movdqu %xmm0,-0x6c(%rdi)
   19a04:	f2 0f f0 46 a4       	lddqu  -0x5c(%rsi),%xmm0
   19a09:	f3 0f 7f 47 a4       	movdqu %xmm0,-0x5c(%rdi)
   19a0e:	f2 0f f0 46 b4       	lddqu  -0x4c(%rsi),%xmm0
   19a13:	f3 0f 7f 47 b4       	movdqu %xmm0,-0x4c(%rdi)
   19a18:	f2 0f f0 46 c4       	lddqu  -0x3c(%rsi),%xmm0
   19a1d:	f3 0f 7f 47 c4       	movdqu %xmm0,-0x3c(%rdi)
   19a22:	f2 0f f0 46 d4       	lddqu  -0x2c(%rsi),%xmm0
   19a27:	f3 0f 7f 47 d4       	movdqu %xmm0,-0x2c(%rdi)
   19a2c:	f2 0f f0 46 e4       	lddqu  -0x1c(%rsi),%xmm0
   19a31:	f2 0f f0 4e f0       	lddqu  -0x10(%rsi),%xmm1
   19a36:	f3 0f 7f 47 e4       	movdqu %xmm0,-0x1c(%rdi)
   19a3b:	f3 0f 7f 4f f0       	movdqu %xmm1,-0x10(%rdi)
   19a40:	c3                   	retq   
   19a41:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19a46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19a4d:	00 00 00 
   19a50:	48 8b 56 f4          	mov    -0xc(%rsi),%rdx
   19a54:	8b 4e fc             	mov    -0x4(%rsi),%ecx
   19a57:	48 89 57 f4          	mov    %rdx,-0xc(%rdi)
   19a5b:	89 4f fc             	mov    %ecx,-0x4(%rdi)
   19a5e:	c3                   	retq   
   19a5f:	90                   	nop
   19a60:	f2 0f f0 86 75 ff ff 	lddqu  -0x8b(%rsi),%xmm0
   19a67:	ff 
   19a68:	f3 0f 7f 87 75 ff ff 	movdqu %xmm0,-0x8b(%rdi)
   19a6f:	ff 
   19a70:	f2 0f f0 46 85       	lddqu  -0x7b(%rsi),%xmm0
   19a75:	f3 0f 7f 47 85       	movdqu %xmm0,-0x7b(%rdi)
   19a7a:	f2 0f f0 46 95       	lddqu  -0x6b(%rsi),%xmm0
   19a7f:	f3 0f 7f 47 95       	movdqu %xmm0,-0x6b(%rdi)
   19a84:	f2 0f f0 46 a5       	lddqu  -0x5b(%rsi),%xmm0
   19a89:	f3 0f 7f 47 a5       	movdqu %xmm0,-0x5b(%rdi)
   19a8e:	f2 0f f0 46 b5       	lddqu  -0x4b(%rsi),%xmm0
   19a93:	f3 0f 7f 47 b5       	movdqu %xmm0,-0x4b(%rdi)
   19a98:	f2 0f f0 46 c5       	lddqu  -0x3b(%rsi),%xmm0
   19a9d:	f3 0f 7f 47 c5       	movdqu %xmm0,-0x3b(%rdi)
   19aa2:	f2 0f f0 46 d5       	lddqu  -0x2b(%rsi),%xmm0
   19aa7:	f3 0f 7f 47 d5       	movdqu %xmm0,-0x2b(%rdi)
   19aac:	f2 0f f0 46 e5       	lddqu  -0x1b(%rsi),%xmm0
   19ab1:	f2 0f f0 4e f0       	lddqu  -0x10(%rsi),%xmm1
   19ab6:	f3 0f 7f 47 e5       	movdqu %xmm0,-0x1b(%rdi)
   19abb:	f3 0f 7f 4f f0       	movdqu %xmm1,-0x10(%rdi)
   19ac0:	c3                   	retq   
   19ac1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19ac6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19acd:	00 00 00 
   19ad0:	48 8b 56 f5          	mov    -0xb(%rsi),%rdx
   19ad4:	8b 4e fc             	mov    -0x4(%rsi),%ecx
   19ad7:	48 89 57 f5          	mov    %rdx,-0xb(%rdi)
   19adb:	89 4f fc             	mov    %ecx,-0x4(%rdi)
   19ade:	c3                   	retq   
   19adf:	90                   	nop
   19ae0:	f2 0f f0 86 76 ff ff 	lddqu  -0x8a(%rsi),%xmm0
   19ae7:	ff 
   19ae8:	f3 0f 7f 87 76 ff ff 	movdqu %xmm0,-0x8a(%rdi)
   19aef:	ff 
   19af0:	f2 0f f0 46 86       	lddqu  -0x7a(%rsi),%xmm0
   19af5:	f3 0f 7f 47 86       	movdqu %xmm0,-0x7a(%rdi)
   19afa:	f2 0f f0 46 96       	lddqu  -0x6a(%rsi),%xmm0
   19aff:	f3 0f 7f 47 96       	movdqu %xmm0,-0x6a(%rdi)
   19b04:	f2 0f f0 46 a6       	lddqu  -0x5a(%rsi),%xmm0
   19b09:	f3 0f 7f 47 a6       	movdqu %xmm0,-0x5a(%rdi)
   19b0e:	f2 0f f0 46 b6       	lddqu  -0x4a(%rsi),%xmm0
   19b13:	f3 0f 7f 47 b6       	movdqu %xmm0,-0x4a(%rdi)
   19b18:	f2 0f f0 46 c6       	lddqu  -0x3a(%rsi),%xmm0
   19b1d:	f3 0f 7f 47 c6       	movdqu %xmm0,-0x3a(%rdi)
   19b22:	f2 0f f0 46 d6       	lddqu  -0x2a(%rsi),%xmm0
   19b27:	f3 0f 7f 47 d6       	movdqu %xmm0,-0x2a(%rdi)
   19b2c:	f2 0f f0 46 e6       	lddqu  -0x1a(%rsi),%xmm0
   19b31:	f2 0f f0 4e f0       	lddqu  -0x10(%rsi),%xmm1
   19b36:	f3 0f 7f 47 e6       	movdqu %xmm0,-0x1a(%rdi)
   19b3b:	f3 0f 7f 4f f0       	movdqu %xmm1,-0x10(%rdi)
   19b40:	c3                   	retq   
   19b41:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19b46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19b4d:	00 00 00 
   19b50:	48 8b 56 f6          	mov    -0xa(%rsi),%rdx
   19b54:	8b 4e fc             	mov    -0x4(%rsi),%ecx
   19b57:	48 89 57 f6          	mov    %rdx,-0xa(%rdi)
   19b5b:	89 4f fc             	mov    %ecx,-0x4(%rdi)
   19b5e:	c3                   	retq   
   19b5f:	90                   	nop
   19b60:	f2 0f f0 86 77 ff ff 	lddqu  -0x89(%rsi),%xmm0
   19b67:	ff 
   19b68:	f3 0f 7f 87 77 ff ff 	movdqu %xmm0,-0x89(%rdi)
   19b6f:	ff 
   19b70:	f2 0f f0 46 87       	lddqu  -0x79(%rsi),%xmm0
   19b75:	f3 0f 7f 47 87       	movdqu %xmm0,-0x79(%rdi)
   19b7a:	f2 0f f0 46 97       	lddqu  -0x69(%rsi),%xmm0
   19b7f:	f3 0f 7f 47 97       	movdqu %xmm0,-0x69(%rdi)
   19b84:	f2 0f f0 46 a7       	lddqu  -0x59(%rsi),%xmm0
   19b89:	f3 0f 7f 47 a7       	movdqu %xmm0,-0x59(%rdi)
   19b8e:	f2 0f f0 46 b7       	lddqu  -0x49(%rsi),%xmm0
   19b93:	f3 0f 7f 47 b7       	movdqu %xmm0,-0x49(%rdi)
   19b98:	f2 0f f0 46 c7       	lddqu  -0x39(%rsi),%xmm0
   19b9d:	f3 0f 7f 47 c7       	movdqu %xmm0,-0x39(%rdi)
   19ba2:	f2 0f f0 46 d7       	lddqu  -0x29(%rsi),%xmm0
   19ba7:	f3 0f 7f 47 d7       	movdqu %xmm0,-0x29(%rdi)
   19bac:	f2 0f f0 46 e7       	lddqu  -0x19(%rsi),%xmm0
   19bb1:	f2 0f f0 4e f0       	lddqu  -0x10(%rsi),%xmm1
   19bb6:	f3 0f 7f 47 e7       	movdqu %xmm0,-0x19(%rdi)
   19bbb:	f3 0f 7f 4f f0       	movdqu %xmm1,-0x10(%rdi)
   19bc0:	c3                   	retq   
   19bc1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19bc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19bcd:	00 00 00 
   19bd0:	48 8b 56 f7          	mov    -0x9(%rsi),%rdx
   19bd4:	8b 4e fc             	mov    -0x4(%rsi),%ecx
   19bd7:	48 89 57 f7          	mov    %rdx,-0x9(%rdi)
   19bdb:	89 4f fc             	mov    %ecx,-0x4(%rdi)
   19bde:	c3                   	retq   
   19bdf:	90                   	nop
   19be0:	f2 0f f0 86 78 ff ff 	lddqu  -0x88(%rsi),%xmm0
   19be7:	ff 
   19be8:	f3 0f 7f 87 78 ff ff 	movdqu %xmm0,-0x88(%rdi)
   19bef:	ff 
   19bf0:	f2 0f f0 46 88       	lddqu  -0x78(%rsi),%xmm0
   19bf5:	f3 0f 7f 47 88       	movdqu %xmm0,-0x78(%rdi)
   19bfa:	f2 0f f0 46 98       	lddqu  -0x68(%rsi),%xmm0
   19bff:	f3 0f 7f 47 98       	movdqu %xmm0,-0x68(%rdi)
   19c04:	f2 0f f0 46 a8       	lddqu  -0x58(%rsi),%xmm0
   19c09:	f3 0f 7f 47 a8       	movdqu %xmm0,-0x58(%rdi)
   19c0e:	f2 0f f0 46 b8       	lddqu  -0x48(%rsi),%xmm0
   19c13:	f3 0f 7f 47 b8       	movdqu %xmm0,-0x48(%rdi)
   19c18:	f2 0f f0 46 c8       	lddqu  -0x38(%rsi),%xmm0
   19c1d:	f3 0f 7f 47 c8       	movdqu %xmm0,-0x38(%rdi)
   19c22:	f2 0f f0 46 d8       	lddqu  -0x28(%rsi),%xmm0
   19c27:	f3 0f 7f 47 d8       	movdqu %xmm0,-0x28(%rdi)
   19c2c:	f2 0f f0 46 e8       	lddqu  -0x18(%rsi),%xmm0
   19c31:	f2 0f f0 4e f0       	lddqu  -0x10(%rsi),%xmm1
   19c36:	f3 0f 7f 47 e8       	movdqu %xmm0,-0x18(%rdi)
   19c3b:	f3 0f 7f 4f f0       	movdqu %xmm1,-0x10(%rdi)
   19c40:	c3                   	retq   
   19c41:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19c46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19c4d:	00 00 00 
   19c50:	48 8b 56 f8          	mov    -0x8(%rsi),%rdx
   19c54:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   19c58:	c3                   	retq   
   19c59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19c60:	f2 0f f0 86 79 ff ff 	lddqu  -0x87(%rsi),%xmm0
   19c67:	ff 
   19c68:	f3 0f 7f 87 79 ff ff 	movdqu %xmm0,-0x87(%rdi)
   19c6f:	ff 
   19c70:	f2 0f f0 46 89       	lddqu  -0x77(%rsi),%xmm0
   19c75:	f3 0f 7f 47 89       	movdqu %xmm0,-0x77(%rdi)
   19c7a:	f2 0f f0 46 99       	lddqu  -0x67(%rsi),%xmm0
   19c7f:	f3 0f 7f 47 99       	movdqu %xmm0,-0x67(%rdi)
   19c84:	f2 0f f0 46 a9       	lddqu  -0x57(%rsi),%xmm0
   19c89:	f3 0f 7f 47 a9       	movdqu %xmm0,-0x57(%rdi)
   19c8e:	f2 0f f0 46 b9       	lddqu  -0x47(%rsi),%xmm0
   19c93:	f3 0f 7f 47 b9       	movdqu %xmm0,-0x47(%rdi)
   19c98:	f2 0f f0 46 c9       	lddqu  -0x37(%rsi),%xmm0
   19c9d:	f3 0f 7f 47 c9       	movdqu %xmm0,-0x37(%rdi)
   19ca2:	f2 0f f0 46 d9       	lddqu  -0x27(%rsi),%xmm0
   19ca7:	f3 0f 7f 47 d9       	movdqu %xmm0,-0x27(%rdi)
   19cac:	f2 0f f0 46 e9       	lddqu  -0x17(%rsi),%xmm0
   19cb1:	f2 0f f0 4e f0       	lddqu  -0x10(%rsi),%xmm1
   19cb6:	f3 0f 7f 47 e9       	movdqu %xmm0,-0x17(%rdi)
   19cbb:	f3 0f 7f 4f f0       	movdqu %xmm1,-0x10(%rdi)
   19cc0:	c3                   	retq   
   19cc1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19cc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19ccd:	00 00 00 
   19cd0:	8b 56 f9             	mov    -0x7(%rsi),%edx
   19cd3:	8b 4e fc             	mov    -0x4(%rsi),%ecx
   19cd6:	89 57 f9             	mov    %edx,-0x7(%rdi)
   19cd9:	89 4f fc             	mov    %ecx,-0x4(%rdi)
   19cdc:	c3                   	retq   
   19cdd:	0f 1f 00             	nopl   (%rax)
   19ce0:	f2 0f f0 86 7a ff ff 	lddqu  -0x86(%rsi),%xmm0
   19ce7:	ff 
   19ce8:	f3 0f 7f 87 7a ff ff 	movdqu %xmm0,-0x86(%rdi)
   19cef:	ff 
   19cf0:	f2 0f f0 46 8a       	lddqu  -0x76(%rsi),%xmm0
   19cf5:	f3 0f 7f 47 8a       	movdqu %xmm0,-0x76(%rdi)
   19cfa:	f2 0f f0 46 9a       	lddqu  -0x66(%rsi),%xmm0
   19cff:	f3 0f 7f 47 9a       	movdqu %xmm0,-0x66(%rdi)
   19d04:	f2 0f f0 46 aa       	lddqu  -0x56(%rsi),%xmm0
   19d09:	f3 0f 7f 47 aa       	movdqu %xmm0,-0x56(%rdi)
   19d0e:	f2 0f f0 46 ba       	lddqu  -0x46(%rsi),%xmm0
   19d13:	f3 0f 7f 47 ba       	movdqu %xmm0,-0x46(%rdi)
   19d18:	f2 0f f0 46 ca       	lddqu  -0x36(%rsi),%xmm0
   19d1d:	f3 0f 7f 47 ca       	movdqu %xmm0,-0x36(%rdi)
   19d22:	f2 0f f0 46 da       	lddqu  -0x26(%rsi),%xmm0
   19d27:	f3 0f 7f 47 da       	movdqu %xmm0,-0x26(%rdi)
   19d2c:	f2 0f f0 46 ea       	lddqu  -0x16(%rsi),%xmm0
   19d31:	f2 0f f0 4e f0       	lddqu  -0x10(%rsi),%xmm1
   19d36:	f3 0f 7f 47 ea       	movdqu %xmm0,-0x16(%rdi)
   19d3b:	f3 0f 7f 4f f0       	movdqu %xmm1,-0x10(%rdi)
   19d40:	c3                   	retq   
   19d41:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19d46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19d4d:	00 00 00 
   19d50:	8b 56 fa             	mov    -0x6(%rsi),%edx
   19d53:	8b 4e fc             	mov    -0x4(%rsi),%ecx
   19d56:	89 57 fa             	mov    %edx,-0x6(%rdi)
   19d59:	89 4f fc             	mov    %ecx,-0x4(%rdi)
   19d5c:	c3                   	retq   
   19d5d:	0f 1f 00             	nopl   (%rax)
   19d60:	f2 0f f0 86 7b ff ff 	lddqu  -0x85(%rsi),%xmm0
   19d67:	ff 
   19d68:	f3 0f 7f 87 7b ff ff 	movdqu %xmm0,-0x85(%rdi)
   19d6f:	ff 
   19d70:	f2 0f f0 46 8b       	lddqu  -0x75(%rsi),%xmm0
   19d75:	f3 0f 7f 47 8b       	movdqu %xmm0,-0x75(%rdi)
   19d7a:	f2 0f f0 46 9b       	lddqu  -0x65(%rsi),%xmm0
   19d7f:	f3 0f 7f 47 9b       	movdqu %xmm0,-0x65(%rdi)
   19d84:	f2 0f f0 46 ab       	lddqu  -0x55(%rsi),%xmm0
   19d89:	f3 0f 7f 47 ab       	movdqu %xmm0,-0x55(%rdi)
   19d8e:	f2 0f f0 46 bb       	lddqu  -0x45(%rsi),%xmm0
   19d93:	f3 0f 7f 47 bb       	movdqu %xmm0,-0x45(%rdi)
   19d98:	f2 0f f0 46 cb       	lddqu  -0x35(%rsi),%xmm0
   19d9d:	f3 0f 7f 47 cb       	movdqu %xmm0,-0x35(%rdi)
   19da2:	f2 0f f0 46 db       	lddqu  -0x25(%rsi),%xmm0
   19da7:	f3 0f 7f 47 db       	movdqu %xmm0,-0x25(%rdi)
   19dac:	f2 0f f0 46 eb       	lddqu  -0x15(%rsi),%xmm0
   19db1:	f2 0f f0 4e f0       	lddqu  -0x10(%rsi),%xmm1
   19db6:	f3 0f 7f 47 eb       	movdqu %xmm0,-0x15(%rdi)
   19dbb:	f3 0f 7f 4f f0       	movdqu %xmm1,-0x10(%rdi)
   19dc0:	c3                   	retq   
   19dc1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19dc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19dcd:	00 00 00 
   19dd0:	8b 56 fb             	mov    -0x5(%rsi),%edx
   19dd3:	8b 4e fc             	mov    -0x4(%rsi),%ecx
   19dd6:	89 57 fb             	mov    %edx,-0x5(%rdi)
   19dd9:	89 4f fc             	mov    %ecx,-0x4(%rdi)
   19ddc:	c3                   	retq   
   19ddd:	0f 1f 00             	nopl   (%rax)
   19de0:	f2 0f f0 86 7c ff ff 	lddqu  -0x84(%rsi),%xmm0
   19de7:	ff 
   19de8:	f3 0f 7f 87 7c ff ff 	movdqu %xmm0,-0x84(%rdi)
   19def:	ff 
   19df0:	f2 0f f0 46 8c       	lddqu  -0x74(%rsi),%xmm0
   19df5:	f3 0f 7f 47 8c       	movdqu %xmm0,-0x74(%rdi)
   19dfa:	f2 0f f0 46 9c       	lddqu  -0x64(%rsi),%xmm0
   19dff:	f3 0f 7f 47 9c       	movdqu %xmm0,-0x64(%rdi)
   19e04:	f2 0f f0 46 ac       	lddqu  -0x54(%rsi),%xmm0
   19e09:	f3 0f 7f 47 ac       	movdqu %xmm0,-0x54(%rdi)
   19e0e:	f2 0f f0 46 bc       	lddqu  -0x44(%rsi),%xmm0
   19e13:	f3 0f 7f 47 bc       	movdqu %xmm0,-0x44(%rdi)
   19e18:	f2 0f f0 46 cc       	lddqu  -0x34(%rsi),%xmm0
   19e1d:	f3 0f 7f 47 cc       	movdqu %xmm0,-0x34(%rdi)
   19e22:	f2 0f f0 46 dc       	lddqu  -0x24(%rsi),%xmm0
   19e27:	f3 0f 7f 47 dc       	movdqu %xmm0,-0x24(%rdi)
   19e2c:	f2 0f f0 46 ec       	lddqu  -0x14(%rsi),%xmm0
   19e31:	f2 0f f0 4e f0       	lddqu  -0x10(%rsi),%xmm1
   19e36:	f3 0f 7f 47 ec       	movdqu %xmm0,-0x14(%rdi)
   19e3b:	f3 0f 7f 4f f0       	movdqu %xmm1,-0x10(%rdi)
   19e40:	c3                   	retq   
   19e41:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19e46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19e4d:	00 00 00 
   19e50:	8b 56 fc             	mov    -0x4(%rsi),%edx
   19e53:	89 57 fc             	mov    %edx,-0x4(%rdi)
   19e56:	c3                   	retq   
   19e57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   19e5e:	00 00 
   19e60:	f2 0f f0 86 7d ff ff 	lddqu  -0x83(%rsi),%xmm0
   19e67:	ff 
   19e68:	f3 0f 7f 87 7d ff ff 	movdqu %xmm0,-0x83(%rdi)
   19e6f:	ff 
   19e70:	f2 0f f0 46 8d       	lddqu  -0x73(%rsi),%xmm0
   19e75:	f3 0f 7f 47 8d       	movdqu %xmm0,-0x73(%rdi)
   19e7a:	f2 0f f0 46 9d       	lddqu  -0x63(%rsi),%xmm0
   19e7f:	f3 0f 7f 47 9d       	movdqu %xmm0,-0x63(%rdi)
   19e84:	f2 0f f0 46 ad       	lddqu  -0x53(%rsi),%xmm0
   19e89:	f3 0f 7f 47 ad       	movdqu %xmm0,-0x53(%rdi)
   19e8e:	f2 0f f0 46 bd       	lddqu  -0x43(%rsi),%xmm0
   19e93:	f3 0f 7f 47 bd       	movdqu %xmm0,-0x43(%rdi)
   19e98:	f2 0f f0 46 cd       	lddqu  -0x33(%rsi),%xmm0
   19e9d:	f3 0f 7f 47 cd       	movdqu %xmm0,-0x33(%rdi)
   19ea2:	f2 0f f0 46 dd       	lddqu  -0x23(%rsi),%xmm0
   19ea7:	f3 0f 7f 47 dd       	movdqu %xmm0,-0x23(%rdi)
   19eac:	f2 0f f0 46 ed       	lddqu  -0x13(%rsi),%xmm0
   19eb1:	f2 0f f0 4e f0       	lddqu  -0x10(%rsi),%xmm1
   19eb6:	f3 0f 7f 47 ed       	movdqu %xmm0,-0x13(%rdi)
   19ebb:	f3 0f 7f 4f f0       	movdqu %xmm1,-0x10(%rdi)
   19ec0:	c3                   	retq   
   19ec1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19ec6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19ecd:	00 00 00 
   19ed0:	66 8b 56 fd          	mov    -0x3(%rsi),%dx
   19ed4:	66 8b 4e fe          	mov    -0x2(%rsi),%cx
   19ed8:	66 89 57 fd          	mov    %dx,-0x3(%rdi)
   19edc:	66 89 4f fe          	mov    %cx,-0x2(%rdi)
   19ee0:	c3                   	retq   
   19ee1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19ee6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19eed:	00 00 00 
   19ef0:	f2 0f f0 86 7e ff ff 	lddqu  -0x82(%rsi),%xmm0
   19ef7:	ff 
   19ef8:	f3 0f 7f 87 7e ff ff 	movdqu %xmm0,-0x82(%rdi)
   19eff:	ff 
   19f00:	f2 0f f0 46 8e       	lddqu  -0x72(%rsi),%xmm0
   19f05:	f3 0f 7f 47 8e       	movdqu %xmm0,-0x72(%rdi)
   19f0a:	f2 0f f0 46 9e       	lddqu  -0x62(%rsi),%xmm0
   19f0f:	f3 0f 7f 47 9e       	movdqu %xmm0,-0x62(%rdi)
   19f14:	f2 0f f0 46 ae       	lddqu  -0x52(%rsi),%xmm0
   19f19:	f3 0f 7f 47 ae       	movdqu %xmm0,-0x52(%rdi)
   19f1e:	f2 0f f0 46 be       	lddqu  -0x42(%rsi),%xmm0
   19f23:	f3 0f 7f 47 be       	movdqu %xmm0,-0x42(%rdi)
   19f28:	f2 0f f0 46 ce       	lddqu  -0x32(%rsi),%xmm0
   19f2d:	f3 0f 7f 47 ce       	movdqu %xmm0,-0x32(%rdi)
   19f32:	f2 0f f0 46 de       	lddqu  -0x22(%rsi),%xmm0
   19f37:	f3 0f 7f 47 de       	movdqu %xmm0,-0x22(%rdi)
   19f3c:	f2 0f f0 46 ee       	lddqu  -0x12(%rsi),%xmm0
   19f41:	f2 0f f0 4e f0       	lddqu  -0x10(%rsi),%xmm1
   19f46:	f3 0f 7f 47 ee       	movdqu %xmm0,-0x12(%rdi)
   19f4b:	f3 0f 7f 4f f0       	movdqu %xmm1,-0x10(%rdi)
   19f50:	c3                   	retq   
   19f51:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19f56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19f5d:	00 00 00 
   19f60:	0f b7 56 fe          	movzwl -0x2(%rsi),%edx
   19f64:	66 89 57 fe          	mov    %dx,-0x2(%rdi)
   19f68:	c3                   	retq   
   19f69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19f70:	f2 0f f0 86 7f ff ff 	lddqu  -0x81(%rsi),%xmm0
   19f77:	ff 
   19f78:	f3 0f 7f 87 7f ff ff 	movdqu %xmm0,-0x81(%rdi)
   19f7f:	ff 
   19f80:	f2 0f f0 46 8f       	lddqu  -0x71(%rsi),%xmm0
   19f85:	f3 0f 7f 47 8f       	movdqu %xmm0,-0x71(%rdi)
   19f8a:	f2 0f f0 46 9f       	lddqu  -0x61(%rsi),%xmm0
   19f8f:	f3 0f 7f 47 9f       	movdqu %xmm0,-0x61(%rdi)
   19f94:	f2 0f f0 46 af       	lddqu  -0x51(%rsi),%xmm0
   19f99:	f3 0f 7f 47 af       	movdqu %xmm0,-0x51(%rdi)
   19f9e:	f2 0f f0 46 bf       	lddqu  -0x41(%rsi),%xmm0
   19fa3:	f3 0f 7f 47 bf       	movdqu %xmm0,-0x41(%rdi)
   19fa8:	f2 0f f0 46 cf       	lddqu  -0x31(%rsi),%xmm0
   19fad:	f3 0f 7f 47 cf       	movdqu %xmm0,-0x31(%rdi)
   19fb2:	f2 0f f0 46 df       	lddqu  -0x21(%rsi),%xmm0
   19fb7:	f3 0f 7f 47 df       	movdqu %xmm0,-0x21(%rdi)
   19fbc:	f2 0f f0 46 ef       	lddqu  -0x11(%rsi),%xmm0
   19fc1:	f2 0f f0 4e f0       	lddqu  -0x10(%rsi),%xmm1
   19fc6:	f3 0f 7f 47 ef       	movdqu %xmm0,-0x11(%rdi)
   19fcb:	f3 0f 7f 4f f0       	movdqu %xmm1,-0x10(%rdi)
   19fd0:	c3                   	retq   
   19fd1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19fd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19fdd:	00 00 00 
   19fe0:	0f b6 56 ff          	movzbl -0x1(%rsi),%edx
   19fe4:	88 57 ff             	mov    %dl,-0x1(%rdi)
   19fe7:	c3                   	retq   
   19fe8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   19fef:	00 
   19ff0:	f2 0f f0 46 70       	lddqu  0x70(%rsi),%xmm0
   19ff5:	f3 0f 7f 47 70       	movdqu %xmm0,0x70(%rdi)
   19ffa:	f2 0f f0 46 60       	lddqu  0x60(%rsi),%xmm0
   19fff:	f3 0f 7f 47 60       	movdqu %xmm0,0x60(%rdi)
   1a004:	f2 0f f0 46 50       	lddqu  0x50(%rsi),%xmm0
   1a009:	f3 0f 7f 47 50       	movdqu %xmm0,0x50(%rdi)
   1a00e:	f2 0f f0 46 40       	lddqu  0x40(%rsi),%xmm0
   1a013:	f3 0f 7f 47 40       	movdqu %xmm0,0x40(%rdi)
   1a018:	f2 0f f0 46 30       	lddqu  0x30(%rsi),%xmm0
   1a01d:	f3 0f 7f 47 30       	movdqu %xmm0,0x30(%rdi)
   1a022:	f2 0f f0 46 20       	lddqu  0x20(%rsi),%xmm0
   1a027:	f3 0f 7f 47 20       	movdqu %xmm0,0x20(%rdi)
   1a02c:	f2 0f f0 46 10       	lddqu  0x10(%rsi),%xmm0
   1a031:	f3 0f 7f 47 10       	movdqu %xmm0,0x10(%rdi)
   1a036:	f2 0f f0 06          	lddqu  (%rsi),%xmm0
   1a03a:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
   1a03e:	c3                   	retq   
   1a03f:	90                   	nop
   1a040:	f2 0f f0 46 7f       	lddqu  0x7f(%rsi),%xmm0
   1a045:	f3 0f 7f 47 7f       	movdqu %xmm0,0x7f(%rdi)
   1a04a:	f2 0f f0 46 6f       	lddqu  0x6f(%rsi),%xmm0
   1a04f:	f3 0f 7f 47 6f       	movdqu %xmm0,0x6f(%rdi)
   1a054:	f2 0f f0 46 5f       	lddqu  0x5f(%rsi),%xmm0
   1a059:	f3 0f 7f 47 5f       	movdqu %xmm0,0x5f(%rdi)
   1a05e:	f2 0f f0 46 4f       	lddqu  0x4f(%rsi),%xmm0
   1a063:	f3 0f 7f 47 4f       	movdqu %xmm0,0x4f(%rdi)
   1a068:	f2 0f f0 46 3f       	lddqu  0x3f(%rsi),%xmm0
   1a06d:	f3 0f 7f 47 3f       	movdqu %xmm0,0x3f(%rdi)
   1a072:	f2 0f f0 46 2f       	lddqu  0x2f(%rsi),%xmm0
   1a077:	f3 0f 7f 47 2f       	movdqu %xmm0,0x2f(%rdi)
   1a07c:	f2 0f f0 46 1f       	lddqu  0x1f(%rsi),%xmm0
   1a081:	f3 0f 7f 47 1f       	movdqu %xmm0,0x1f(%rdi)
   1a086:	f2 0f f0 46 0f       	lddqu  0xf(%rsi),%xmm0
   1a08b:	f2 0f f0 0e          	lddqu  (%rsi),%xmm1
   1a08f:	f3 0f 7f 47 0f       	movdqu %xmm0,0xf(%rdi)
   1a094:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   1a098:	c3                   	retq   
   1a099:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a0a0:	48 8b 56 07          	mov    0x7(%rsi),%rdx
   1a0a4:	48 8b 0e             	mov    (%rsi),%rcx
   1a0a7:	48 89 57 07          	mov    %rdx,0x7(%rdi)
   1a0ab:	48 89 0f             	mov    %rcx,(%rdi)
   1a0ae:	c3                   	retq   
   1a0af:	90                   	nop
   1a0b0:	f2 0f f0 46 7e       	lddqu  0x7e(%rsi),%xmm0
   1a0b5:	f3 0f 7f 47 7e       	movdqu %xmm0,0x7e(%rdi)
   1a0ba:	f2 0f f0 46 6e       	lddqu  0x6e(%rsi),%xmm0
   1a0bf:	f3 0f 7f 47 6e       	movdqu %xmm0,0x6e(%rdi)
   1a0c4:	f2 0f f0 46 5e       	lddqu  0x5e(%rsi),%xmm0
   1a0c9:	f3 0f 7f 47 5e       	movdqu %xmm0,0x5e(%rdi)
   1a0ce:	f2 0f f0 46 4e       	lddqu  0x4e(%rsi),%xmm0
   1a0d3:	f3 0f 7f 47 4e       	movdqu %xmm0,0x4e(%rdi)
   1a0d8:	f2 0f f0 46 3e       	lddqu  0x3e(%rsi),%xmm0
   1a0dd:	f3 0f 7f 47 3e       	movdqu %xmm0,0x3e(%rdi)
   1a0e2:	f2 0f f0 46 2e       	lddqu  0x2e(%rsi),%xmm0
   1a0e7:	f3 0f 7f 47 2e       	movdqu %xmm0,0x2e(%rdi)
   1a0ec:	f2 0f f0 46 1e       	lddqu  0x1e(%rsi),%xmm0
   1a0f1:	f3 0f 7f 47 1e       	movdqu %xmm0,0x1e(%rdi)
   1a0f6:	f2 0f f0 46 0e       	lddqu  0xe(%rsi),%xmm0
   1a0fb:	f2 0f f0 0e          	lddqu  (%rsi),%xmm1
   1a0ff:	f3 0f 7f 47 0e       	movdqu %xmm0,0xe(%rdi)
   1a104:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   1a108:	c3                   	retq   
   1a109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a110:	48 8b 56 06          	mov    0x6(%rsi),%rdx
   1a114:	48 8b 0e             	mov    (%rsi),%rcx
   1a117:	48 89 57 06          	mov    %rdx,0x6(%rdi)
   1a11b:	48 89 0f             	mov    %rcx,(%rdi)
   1a11e:	c3                   	retq   
   1a11f:	90                   	nop
   1a120:	f2 0f f0 46 7d       	lddqu  0x7d(%rsi),%xmm0
   1a125:	f3 0f 7f 47 7d       	movdqu %xmm0,0x7d(%rdi)
   1a12a:	f2 0f f0 46 6d       	lddqu  0x6d(%rsi),%xmm0
   1a12f:	f3 0f 7f 47 6d       	movdqu %xmm0,0x6d(%rdi)
   1a134:	f2 0f f0 46 5d       	lddqu  0x5d(%rsi),%xmm0
   1a139:	f3 0f 7f 47 5d       	movdqu %xmm0,0x5d(%rdi)
   1a13e:	f2 0f f0 46 4d       	lddqu  0x4d(%rsi),%xmm0
   1a143:	f3 0f 7f 47 4d       	movdqu %xmm0,0x4d(%rdi)
   1a148:	f2 0f f0 46 3d       	lddqu  0x3d(%rsi),%xmm0
   1a14d:	f3 0f 7f 47 3d       	movdqu %xmm0,0x3d(%rdi)
   1a152:	f2 0f f0 46 2d       	lddqu  0x2d(%rsi),%xmm0
   1a157:	f3 0f 7f 47 2d       	movdqu %xmm0,0x2d(%rdi)
   1a15c:	f2 0f f0 46 1d       	lddqu  0x1d(%rsi),%xmm0
   1a161:	f3 0f 7f 47 1d       	movdqu %xmm0,0x1d(%rdi)
   1a166:	f2 0f f0 46 0d       	lddqu  0xd(%rsi),%xmm0
   1a16b:	f2 0f f0 0e          	lddqu  (%rsi),%xmm1
   1a16f:	f3 0f 7f 47 0d       	movdqu %xmm0,0xd(%rdi)
   1a174:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   1a178:	c3                   	retq   
   1a179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a180:	48 8b 56 05          	mov    0x5(%rsi),%rdx
   1a184:	48 8b 0e             	mov    (%rsi),%rcx
   1a187:	48 89 57 05          	mov    %rdx,0x5(%rdi)
   1a18b:	48 89 0f             	mov    %rcx,(%rdi)
   1a18e:	c3                   	retq   
   1a18f:	90                   	nop
   1a190:	f2 0f f0 46 7c       	lddqu  0x7c(%rsi),%xmm0
   1a195:	f3 0f 7f 47 7c       	movdqu %xmm0,0x7c(%rdi)
   1a19a:	f2 0f f0 46 6c       	lddqu  0x6c(%rsi),%xmm0
   1a19f:	f3 0f 7f 47 6c       	movdqu %xmm0,0x6c(%rdi)
   1a1a4:	f2 0f f0 46 5c       	lddqu  0x5c(%rsi),%xmm0
   1a1a9:	f3 0f 7f 47 5c       	movdqu %xmm0,0x5c(%rdi)
   1a1ae:	f2 0f f0 46 4c       	lddqu  0x4c(%rsi),%xmm0
   1a1b3:	f3 0f 7f 47 4c       	movdqu %xmm0,0x4c(%rdi)
   1a1b8:	f2 0f f0 46 3c       	lddqu  0x3c(%rsi),%xmm0
   1a1bd:	f3 0f 7f 47 3c       	movdqu %xmm0,0x3c(%rdi)
   1a1c2:	f2 0f f0 46 2c       	lddqu  0x2c(%rsi),%xmm0
   1a1c7:	f3 0f 7f 47 2c       	movdqu %xmm0,0x2c(%rdi)
   1a1cc:	f2 0f f0 46 1c       	lddqu  0x1c(%rsi),%xmm0
   1a1d1:	f3 0f 7f 47 1c       	movdqu %xmm0,0x1c(%rdi)
   1a1d6:	f2 0f f0 46 0c       	lddqu  0xc(%rsi),%xmm0
   1a1db:	f2 0f f0 0e          	lddqu  (%rsi),%xmm1
   1a1df:	f3 0f 7f 47 0c       	movdqu %xmm0,0xc(%rdi)
   1a1e4:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   1a1e8:	c3                   	retq   
   1a1e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a1f0:	48 8b 56 04          	mov    0x4(%rsi),%rdx
   1a1f4:	48 8b 0e             	mov    (%rsi),%rcx
   1a1f7:	48 89 57 04          	mov    %rdx,0x4(%rdi)
   1a1fb:	48 89 0f             	mov    %rcx,(%rdi)
   1a1fe:	c3                   	retq   
   1a1ff:	90                   	nop
   1a200:	f2 0f f0 46 7b       	lddqu  0x7b(%rsi),%xmm0
   1a205:	f3 0f 7f 47 7b       	movdqu %xmm0,0x7b(%rdi)
   1a20a:	f2 0f f0 46 6b       	lddqu  0x6b(%rsi),%xmm0
   1a20f:	f3 0f 7f 47 6b       	movdqu %xmm0,0x6b(%rdi)
   1a214:	f2 0f f0 46 5b       	lddqu  0x5b(%rsi),%xmm0
   1a219:	f3 0f 7f 47 5b       	movdqu %xmm0,0x5b(%rdi)
   1a21e:	f2 0f f0 46 4b       	lddqu  0x4b(%rsi),%xmm0
   1a223:	f3 0f 7f 47 4b       	movdqu %xmm0,0x4b(%rdi)
   1a228:	f2 0f f0 46 3b       	lddqu  0x3b(%rsi),%xmm0
   1a22d:	f3 0f 7f 47 3b       	movdqu %xmm0,0x3b(%rdi)
   1a232:	f2 0f f0 46 2b       	lddqu  0x2b(%rsi),%xmm0
   1a237:	f3 0f 7f 47 2b       	movdqu %xmm0,0x2b(%rdi)
   1a23c:	f2 0f f0 46 1b       	lddqu  0x1b(%rsi),%xmm0
   1a241:	f3 0f 7f 47 1b       	movdqu %xmm0,0x1b(%rdi)
   1a246:	f2 0f f0 46 0b       	lddqu  0xb(%rsi),%xmm0
   1a24b:	f2 0f f0 0e          	lddqu  (%rsi),%xmm1
   1a24f:	f3 0f 7f 47 0b       	movdqu %xmm0,0xb(%rdi)
   1a254:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   1a258:	c3                   	retq   
   1a259:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a260:	48 8b 56 03          	mov    0x3(%rsi),%rdx
   1a264:	48 8b 0e             	mov    (%rsi),%rcx
   1a267:	48 89 57 03          	mov    %rdx,0x3(%rdi)
   1a26b:	48 89 0f             	mov    %rcx,(%rdi)
   1a26e:	c3                   	retq   
   1a26f:	90                   	nop
   1a270:	f2 0f f0 46 7a       	lddqu  0x7a(%rsi),%xmm0
   1a275:	f3 0f 7f 47 7a       	movdqu %xmm0,0x7a(%rdi)
   1a27a:	f2 0f f0 46 6a       	lddqu  0x6a(%rsi),%xmm0
   1a27f:	f3 0f 7f 47 6a       	movdqu %xmm0,0x6a(%rdi)
   1a284:	f2 0f f0 46 5a       	lddqu  0x5a(%rsi),%xmm0
   1a289:	f3 0f 7f 47 5a       	movdqu %xmm0,0x5a(%rdi)
   1a28e:	f2 0f f0 46 4a       	lddqu  0x4a(%rsi),%xmm0
   1a293:	f3 0f 7f 47 4a       	movdqu %xmm0,0x4a(%rdi)
   1a298:	f2 0f f0 46 3a       	lddqu  0x3a(%rsi),%xmm0
   1a29d:	f3 0f 7f 47 3a       	movdqu %xmm0,0x3a(%rdi)
   1a2a2:	f2 0f f0 46 2a       	lddqu  0x2a(%rsi),%xmm0
   1a2a7:	f3 0f 7f 47 2a       	movdqu %xmm0,0x2a(%rdi)
   1a2ac:	f2 0f f0 46 1a       	lddqu  0x1a(%rsi),%xmm0
   1a2b1:	f3 0f 7f 47 1a       	movdqu %xmm0,0x1a(%rdi)
   1a2b6:	f2 0f f0 46 0a       	lddqu  0xa(%rsi),%xmm0
   1a2bb:	f2 0f f0 0e          	lddqu  (%rsi),%xmm1
   1a2bf:	f3 0f 7f 47 0a       	movdqu %xmm0,0xa(%rdi)
   1a2c4:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   1a2c8:	c3                   	retq   
   1a2c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a2d0:	48 8b 56 02          	mov    0x2(%rsi),%rdx
   1a2d4:	48 8b 0e             	mov    (%rsi),%rcx
   1a2d7:	48 89 57 02          	mov    %rdx,0x2(%rdi)
   1a2db:	48 89 0f             	mov    %rcx,(%rdi)
   1a2de:	c3                   	retq   
   1a2df:	90                   	nop
   1a2e0:	f2 0f f0 46 79       	lddqu  0x79(%rsi),%xmm0
   1a2e5:	f3 0f 7f 47 79       	movdqu %xmm0,0x79(%rdi)
   1a2ea:	f2 0f f0 46 69       	lddqu  0x69(%rsi),%xmm0
   1a2ef:	f3 0f 7f 47 69       	movdqu %xmm0,0x69(%rdi)
   1a2f4:	f2 0f f0 46 59       	lddqu  0x59(%rsi),%xmm0
   1a2f9:	f3 0f 7f 47 59       	movdqu %xmm0,0x59(%rdi)
   1a2fe:	f2 0f f0 46 49       	lddqu  0x49(%rsi),%xmm0
   1a303:	f3 0f 7f 47 49       	movdqu %xmm0,0x49(%rdi)
   1a308:	f2 0f f0 46 39       	lddqu  0x39(%rsi),%xmm0
   1a30d:	f3 0f 7f 47 39       	movdqu %xmm0,0x39(%rdi)
   1a312:	f2 0f f0 46 29       	lddqu  0x29(%rsi),%xmm0
   1a317:	f3 0f 7f 47 29       	movdqu %xmm0,0x29(%rdi)
   1a31c:	f2 0f f0 46 19       	lddqu  0x19(%rsi),%xmm0
   1a321:	f3 0f 7f 47 19       	movdqu %xmm0,0x19(%rdi)
   1a326:	f2 0f f0 46 09       	lddqu  0x9(%rsi),%xmm0
   1a32b:	f2 0f f0 0e          	lddqu  (%rsi),%xmm1
   1a32f:	f3 0f 7f 47 09       	movdqu %xmm0,0x9(%rdi)
   1a334:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   1a338:	c3                   	retq   
   1a339:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a340:	48 8b 56 01          	mov    0x1(%rsi),%rdx
   1a344:	48 8b 0e             	mov    (%rsi),%rcx
   1a347:	48 89 57 01          	mov    %rdx,0x1(%rdi)
   1a34b:	48 89 0f             	mov    %rcx,(%rdi)
   1a34e:	c3                   	retq   
   1a34f:	90                   	nop
   1a350:	f2 0f f0 46 78       	lddqu  0x78(%rsi),%xmm0
   1a355:	f3 0f 7f 47 78       	movdqu %xmm0,0x78(%rdi)
   1a35a:	f2 0f f0 46 68       	lddqu  0x68(%rsi),%xmm0
   1a35f:	f3 0f 7f 47 68       	movdqu %xmm0,0x68(%rdi)
   1a364:	f2 0f f0 46 58       	lddqu  0x58(%rsi),%xmm0
   1a369:	f3 0f 7f 47 58       	movdqu %xmm0,0x58(%rdi)
   1a36e:	f2 0f f0 46 48       	lddqu  0x48(%rsi),%xmm0
   1a373:	f3 0f 7f 47 48       	movdqu %xmm0,0x48(%rdi)
   1a378:	f2 0f f0 46 38       	lddqu  0x38(%rsi),%xmm0
   1a37d:	f3 0f 7f 47 38       	movdqu %xmm0,0x38(%rdi)
   1a382:	f2 0f f0 46 28       	lddqu  0x28(%rsi),%xmm0
   1a387:	f3 0f 7f 47 28       	movdqu %xmm0,0x28(%rdi)
   1a38c:	f2 0f f0 46 18       	lddqu  0x18(%rsi),%xmm0
   1a391:	f3 0f 7f 47 18       	movdqu %xmm0,0x18(%rdi)
   1a396:	f2 0f f0 46 08       	lddqu  0x8(%rsi),%xmm0
   1a39b:	f2 0f f0 0e          	lddqu  (%rsi),%xmm1
   1a39f:	f3 0f 7f 47 08       	movdqu %xmm0,0x8(%rdi)
   1a3a4:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   1a3a8:	c3                   	retq   
   1a3a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a3b0:	48 8b 16             	mov    (%rsi),%rdx
   1a3b3:	48 89 17             	mov    %rdx,(%rdi)
   1a3b6:	c3                   	retq   
   1a3b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1a3be:	00 00 
   1a3c0:	f2 0f f0 46 77       	lddqu  0x77(%rsi),%xmm0
   1a3c5:	f3 0f 7f 47 77       	movdqu %xmm0,0x77(%rdi)
   1a3ca:	f2 0f f0 46 67       	lddqu  0x67(%rsi),%xmm0
   1a3cf:	f3 0f 7f 47 67       	movdqu %xmm0,0x67(%rdi)
   1a3d4:	f2 0f f0 46 57       	lddqu  0x57(%rsi),%xmm0
   1a3d9:	f3 0f 7f 47 57       	movdqu %xmm0,0x57(%rdi)
   1a3de:	f2 0f f0 46 47       	lddqu  0x47(%rsi),%xmm0
   1a3e3:	f3 0f 7f 47 47       	movdqu %xmm0,0x47(%rdi)
   1a3e8:	f2 0f f0 46 37       	lddqu  0x37(%rsi),%xmm0
   1a3ed:	f3 0f 7f 47 37       	movdqu %xmm0,0x37(%rdi)
   1a3f2:	f2 0f f0 46 27       	lddqu  0x27(%rsi),%xmm0
   1a3f7:	f3 0f 7f 47 27       	movdqu %xmm0,0x27(%rdi)
   1a3fc:	f2 0f f0 46 17       	lddqu  0x17(%rsi),%xmm0
   1a401:	f3 0f 7f 47 17       	movdqu %xmm0,0x17(%rdi)
   1a406:	f2 0f f0 46 07       	lddqu  0x7(%rsi),%xmm0
   1a40b:	f2 0f f0 0e          	lddqu  (%rsi),%xmm1
   1a40f:	f3 0f 7f 47 07       	movdqu %xmm0,0x7(%rdi)
   1a414:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   1a418:	c3                   	retq   
   1a419:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a420:	8b 56 03             	mov    0x3(%rsi),%edx
   1a423:	8b 0e                	mov    (%rsi),%ecx
   1a425:	89 57 03             	mov    %edx,0x3(%rdi)
   1a428:	89 0f                	mov    %ecx,(%rdi)
   1a42a:	c3                   	retq   
   1a42b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a430:	f2 0f f0 46 76       	lddqu  0x76(%rsi),%xmm0
   1a435:	f3 0f 7f 47 76       	movdqu %xmm0,0x76(%rdi)
   1a43a:	f2 0f f0 46 66       	lddqu  0x66(%rsi),%xmm0
   1a43f:	f3 0f 7f 47 66       	movdqu %xmm0,0x66(%rdi)
   1a444:	f2 0f f0 46 56       	lddqu  0x56(%rsi),%xmm0
   1a449:	f3 0f 7f 47 56       	movdqu %xmm0,0x56(%rdi)
   1a44e:	f2 0f f0 46 46       	lddqu  0x46(%rsi),%xmm0
   1a453:	f3 0f 7f 47 46       	movdqu %xmm0,0x46(%rdi)
   1a458:	f2 0f f0 46 36       	lddqu  0x36(%rsi),%xmm0
   1a45d:	f3 0f 7f 47 36       	movdqu %xmm0,0x36(%rdi)
   1a462:	f2 0f f0 46 26       	lddqu  0x26(%rsi),%xmm0
   1a467:	f3 0f 7f 47 26       	movdqu %xmm0,0x26(%rdi)
   1a46c:	f2 0f f0 46 16       	lddqu  0x16(%rsi),%xmm0
   1a471:	f3 0f 7f 47 16       	movdqu %xmm0,0x16(%rdi)
   1a476:	f2 0f f0 46 06       	lddqu  0x6(%rsi),%xmm0
   1a47b:	f2 0f f0 0e          	lddqu  (%rsi),%xmm1
   1a47f:	f3 0f 7f 47 06       	movdqu %xmm0,0x6(%rdi)
   1a484:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   1a488:	c3                   	retq   
   1a489:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a490:	8b 56 02             	mov    0x2(%rsi),%edx
   1a493:	8b 0e                	mov    (%rsi),%ecx
   1a495:	89 57 02             	mov    %edx,0x2(%rdi)
   1a498:	89 0f                	mov    %ecx,(%rdi)
   1a49a:	c3                   	retq   
   1a49b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a4a0:	f2 0f f0 46 75       	lddqu  0x75(%rsi),%xmm0
   1a4a5:	f3 0f 7f 47 75       	movdqu %xmm0,0x75(%rdi)
   1a4aa:	f2 0f f0 46 65       	lddqu  0x65(%rsi),%xmm0
   1a4af:	f3 0f 7f 47 65       	movdqu %xmm0,0x65(%rdi)
   1a4b4:	f2 0f f0 46 55       	lddqu  0x55(%rsi),%xmm0
   1a4b9:	f3 0f 7f 47 55       	movdqu %xmm0,0x55(%rdi)
   1a4be:	f2 0f f0 46 45       	lddqu  0x45(%rsi),%xmm0
   1a4c3:	f3 0f 7f 47 45       	movdqu %xmm0,0x45(%rdi)
   1a4c8:	f2 0f f0 46 35       	lddqu  0x35(%rsi),%xmm0
   1a4cd:	f3 0f 7f 47 35       	movdqu %xmm0,0x35(%rdi)
   1a4d2:	f2 0f f0 46 25       	lddqu  0x25(%rsi),%xmm0
   1a4d7:	f3 0f 7f 47 25       	movdqu %xmm0,0x25(%rdi)
   1a4dc:	f2 0f f0 46 15       	lddqu  0x15(%rsi),%xmm0
   1a4e1:	f3 0f 7f 47 15       	movdqu %xmm0,0x15(%rdi)
   1a4e6:	f2 0f f0 46 05       	lddqu  0x5(%rsi),%xmm0
   1a4eb:	f2 0f f0 0e          	lddqu  (%rsi),%xmm1
   1a4ef:	f3 0f 7f 47 05       	movdqu %xmm0,0x5(%rdi)
   1a4f4:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   1a4f8:	c3                   	retq   
   1a4f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a500:	8b 56 01             	mov    0x1(%rsi),%edx
   1a503:	8b 0e                	mov    (%rsi),%ecx
   1a505:	89 57 01             	mov    %edx,0x1(%rdi)
   1a508:	89 0f                	mov    %ecx,(%rdi)
   1a50a:	c3                   	retq   
   1a50b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a510:	f2 0f f0 46 74       	lddqu  0x74(%rsi),%xmm0
   1a515:	f3 0f 7f 47 74       	movdqu %xmm0,0x74(%rdi)
   1a51a:	f2 0f f0 46 64       	lddqu  0x64(%rsi),%xmm0
   1a51f:	f3 0f 7f 47 64       	movdqu %xmm0,0x64(%rdi)
   1a524:	f2 0f f0 46 54       	lddqu  0x54(%rsi),%xmm0
   1a529:	f3 0f 7f 47 54       	movdqu %xmm0,0x54(%rdi)
   1a52e:	f2 0f f0 46 44       	lddqu  0x44(%rsi),%xmm0
   1a533:	f3 0f 7f 47 44       	movdqu %xmm0,0x44(%rdi)
   1a538:	f2 0f f0 46 34       	lddqu  0x34(%rsi),%xmm0
   1a53d:	f3 0f 7f 47 34       	movdqu %xmm0,0x34(%rdi)
   1a542:	f2 0f f0 46 24       	lddqu  0x24(%rsi),%xmm0
   1a547:	f3 0f 7f 47 24       	movdqu %xmm0,0x24(%rdi)
   1a54c:	f2 0f f0 46 14       	lddqu  0x14(%rsi),%xmm0
   1a551:	f3 0f 7f 47 14       	movdqu %xmm0,0x14(%rdi)
   1a556:	f2 0f f0 46 04       	lddqu  0x4(%rsi),%xmm0
   1a55b:	f2 0f f0 0e          	lddqu  (%rsi),%xmm1
   1a55f:	f3 0f 7f 47 04       	movdqu %xmm0,0x4(%rdi)
   1a564:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   1a568:	c3                   	retq   
   1a569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a570:	8b 16                	mov    (%rsi),%edx
   1a572:	89 17                	mov    %edx,(%rdi)
   1a574:	c3                   	retq   
   1a575:	90                   	nop
   1a576:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1a57d:	00 00 00 
   1a580:	f2 0f f0 46 73       	lddqu  0x73(%rsi),%xmm0
   1a585:	f3 0f 7f 47 73       	movdqu %xmm0,0x73(%rdi)
   1a58a:	f2 0f f0 46 63       	lddqu  0x63(%rsi),%xmm0
   1a58f:	f3 0f 7f 47 63       	movdqu %xmm0,0x63(%rdi)
   1a594:	f2 0f f0 46 53       	lddqu  0x53(%rsi),%xmm0
   1a599:	f3 0f 7f 47 53       	movdqu %xmm0,0x53(%rdi)
   1a59e:	f2 0f f0 46 43       	lddqu  0x43(%rsi),%xmm0
   1a5a3:	f3 0f 7f 47 43       	movdqu %xmm0,0x43(%rdi)
   1a5a8:	f2 0f f0 46 33       	lddqu  0x33(%rsi),%xmm0
   1a5ad:	f3 0f 7f 47 33       	movdqu %xmm0,0x33(%rdi)
   1a5b2:	f2 0f f0 46 23       	lddqu  0x23(%rsi),%xmm0
   1a5b7:	f3 0f 7f 47 23       	movdqu %xmm0,0x23(%rdi)
   1a5bc:	f2 0f f0 46 13       	lddqu  0x13(%rsi),%xmm0
   1a5c1:	f3 0f 7f 47 13       	movdqu %xmm0,0x13(%rdi)
   1a5c6:	f2 0f f0 46 03       	lddqu  0x3(%rsi),%xmm0
   1a5cb:	f2 0f f0 0e          	lddqu  (%rsi),%xmm1
   1a5cf:	f3 0f 7f 47 03       	movdqu %xmm0,0x3(%rdi)
   1a5d4:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   1a5d8:	c3                   	retq   
   1a5d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a5e0:	66 8b 56 01          	mov    0x1(%rsi),%dx
   1a5e4:	66 8b 0e             	mov    (%rsi),%cx
   1a5e7:	66 89 57 01          	mov    %dx,0x1(%rdi)
   1a5eb:	66 89 0f             	mov    %cx,(%rdi)
   1a5ee:	c3                   	retq   
   1a5ef:	90                   	nop
   1a5f0:	f2 0f f0 46 72       	lddqu  0x72(%rsi),%xmm0
   1a5f5:	f3 0f 7f 47 72       	movdqu %xmm0,0x72(%rdi)
   1a5fa:	f2 0f f0 46 62       	lddqu  0x62(%rsi),%xmm0
   1a5ff:	f3 0f 7f 47 62       	movdqu %xmm0,0x62(%rdi)
   1a604:	f2 0f f0 46 52       	lddqu  0x52(%rsi),%xmm0
   1a609:	f3 0f 7f 47 52       	movdqu %xmm0,0x52(%rdi)
   1a60e:	f2 0f f0 46 42       	lddqu  0x42(%rsi),%xmm0
   1a613:	f3 0f 7f 47 42       	movdqu %xmm0,0x42(%rdi)
   1a618:	f2 0f f0 46 32       	lddqu  0x32(%rsi),%xmm0
   1a61d:	f3 0f 7f 47 32       	movdqu %xmm0,0x32(%rdi)
   1a622:	f2 0f f0 46 22       	lddqu  0x22(%rsi),%xmm0
   1a627:	f3 0f 7f 47 22       	movdqu %xmm0,0x22(%rdi)
   1a62c:	f2 0f f0 46 12       	lddqu  0x12(%rsi),%xmm0
   1a631:	f3 0f 7f 47 12       	movdqu %xmm0,0x12(%rdi)
   1a636:	f2 0f f0 46 02       	lddqu  0x2(%rsi),%xmm0
   1a63b:	f2 0f f0 0e          	lddqu  (%rsi),%xmm1
   1a63f:	f3 0f 7f 47 02       	movdqu %xmm0,0x2(%rdi)
   1a644:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   1a648:	c3                   	retq   
   1a649:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a650:	0f b7 16             	movzwl (%rsi),%edx
   1a653:	66 89 17             	mov    %dx,(%rdi)
   1a656:	c3                   	retq   
   1a657:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1a65e:	00 00 
   1a660:	f2 0f f0 46 71       	lddqu  0x71(%rsi),%xmm0
   1a665:	f3 0f 7f 47 71       	movdqu %xmm0,0x71(%rdi)
   1a66a:	f2 0f f0 46 61       	lddqu  0x61(%rsi),%xmm0
   1a66f:	f3 0f 7f 47 61       	movdqu %xmm0,0x61(%rdi)
   1a674:	f2 0f f0 46 51       	lddqu  0x51(%rsi),%xmm0
   1a679:	f3 0f 7f 47 51       	movdqu %xmm0,0x51(%rdi)
   1a67e:	f2 0f f0 46 41       	lddqu  0x41(%rsi),%xmm0
   1a683:	f3 0f 7f 47 41       	movdqu %xmm0,0x41(%rdi)
   1a688:	f2 0f f0 46 31       	lddqu  0x31(%rsi),%xmm0
   1a68d:	f3 0f 7f 47 31       	movdqu %xmm0,0x31(%rdi)
   1a692:	f2 0f f0 46 21       	lddqu  0x21(%rsi),%xmm0
   1a697:	f3 0f 7f 47 21       	movdqu %xmm0,0x21(%rdi)
   1a69c:	f2 0f f0 46 11       	lddqu  0x11(%rsi),%xmm0
   1a6a1:	f3 0f 7f 47 11       	movdqu %xmm0,0x11(%rdi)
   1a6a6:	f2 0f f0 46 01       	lddqu  0x1(%rsi),%xmm0
   1a6ab:	f2 0f f0 0e          	lddqu  (%rsi),%xmm1
   1a6af:	f3 0f 7f 47 01       	movdqu %xmm0,0x1(%rdi)
   1a6b4:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   1a6b8:	c3                   	retq   
   1a6b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a6c0:	0f b6 16             	movzbl (%rsi),%edx
   1a6c3:	88 17                	mov    %dl,(%rdi)
   1a6c5:	c3                   	retq   

000000000001a6c6 <__errno>:
   1a6c6:	55                   	push   %rbp
   1a6c7:	48 89 e5             	mov    %rsp,%rbp
   1a6ca:	e8 bc 8a fe ff       	callq  318b <get_errno_addr>
   1a6cf:	5d                   	pop    %rbp
   1a6d0:	c3                   	retq   
   1a6d1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1a6d8:	00 00 00 
   1a6db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001a6e0 <__cacheSize>:
   1a6e0:	f3 0f 1e fa          	repz nop %edx
   1a6e4:	55                   	push   %rbp
   1a6e5:	48 89 e5             	mov    %rsp,%rbp
   1a6e8:	41 57                	push   %r15
   1a6ea:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
   1a6f1:	41 89 fa             	mov    %edi,%r10d
   1a6f4:	48 8d 05 2d 77 20 00 	lea    0x20772d(%rip),%rax        # 221e28 <__intel_security_cookie>
   1a6fb:	48 8b 10             	mov    (%rax),%rdx
   1a6fe:	41 8d 4a ff          	lea    -0x1(%r10),%ecx
   1a702:	48 33 d5             	xor    %rbp,%rdx
   1a705:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1a709:	83 f9 02             	cmp    $0x2,%ecx
   1a70c:	77 2f                	ja     1a73d <__cacheSize+0x5d>
   1a70e:	83 3d 97 86 20 00 00 	cmpl   $0x0,0x208697(%rip)        # 222dac <__libirc_cache_tbl+0xc>
   1a715:	74 3c                	je     1a753 <__cacheSize+0x73>
   1a717:	48 8d 35 82 86 20 00 	lea    0x208682(%rip),%rsi        # 222da0 <__libirc_cache_tbl>
   1a71e:	41 c1 e2 02          	shl    $0x2,%r10d
   1a722:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
   1a726:	48 33 fd             	xor    %rbp,%rdi
   1a729:	46 8b 3c 96          	mov    (%rsi,%r10,4),%r15d
   1a72d:	e8 10 a5 fe ff       	callq  4c42 <__intel_security_check_cookie>
   1a732:	44 89 f8             	mov    %r15d,%eax
   1a735:	48 8d 65 f8          	lea    -0x8(%rbp),%rsp
   1a739:	41 5f                	pop    %r15
   1a73b:	5d                   	pop    %rbp
   1a73c:	c3                   	retq   
   1a73d:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
   1a741:	48 33 fd             	xor    %rbp,%rdi
   1a744:	e8 f9 a4 fe ff       	callq  4c42 <__intel_security_check_cookie>
   1a749:	33 c0                	xor    %eax,%eax
   1a74b:	48 8d 65 f8          	lea    -0x8(%rbp),%rsp
   1a74f:	41 5f                	pop    %r15
   1a751:	5d                   	pop    %rbp
   1a752:	c3                   	retq   
   1a753:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%rbp)
   1a75a:	50                   	push   %rax
   1a75b:	51                   	push   %rcx
   1a75c:	9c                   	pushfq 
   1a75d:	58                   	pop    %rax
   1a75e:	89 c1                	mov    %eax,%ecx
   1a760:	35 00 00 20 00       	xor    $0x200000,%eax
   1a765:	50                   	push   %rax
   1a766:	9d                   	popfq  
   1a767:	9c                   	pushfq 
   1a768:	58                   	pop    %rax
   1a769:	3b c1                	cmp    %ecx,%eax
   1a76b:	74 08                	je     1a775 <__cacheSize+0x95>
   1a76d:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%rbp)
   1a774:	51                   	push   %rcx
   1a775:	9d                   	popfq  
   1a776:	59                   	pop    %rcx
   1a777:	58                   	pop    %rax
   1a778:	83 7d 90 00          	cmpl   $0x0,-0x70(%rbp)
   1a77c:	75 0c                	jne    1a78a <__cacheSize+0xaa>
   1a77e:	48 8d 35 1b 86 20 00 	lea    0x20861b(%rip),%rsi        # 222da0 <__libirc_cache_tbl>
   1a785:	e9 40 03 00 00       	jmpq   1aaca <__cacheSize+0x3ea>
   1a78a:	48 ba 47 65 6e 75 69 	movabs $0x49656e69756e6547,%rdx
   1a791:	6e 65 49 
   1a794:	48 8d 45 88          	lea    -0x78(%rbp),%rax
   1a798:	33 c9                	xor    %ecx,%ecx
   1a79a:	48 89 40 f0          	mov    %rax,-0x10(%rax)
   1a79e:	48 89 55 d4          	mov    %rdx,-0x2c(%rbp)
   1a7a2:	48 c7 45 dc 6e 74 65 	movq   $0x6c65746e,-0x24(%rbp)
   1a7a9:	6c 
   1a7aa:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
   1a7ad:	89 08                	mov    %ecx,(%rax)
   1a7af:	48 89 5d 80          	mov    %rbx,-0x80(%rbp)
   1a7b3:	50                   	push   %rax
   1a7b4:	53                   	push   %rbx
   1a7b5:	51                   	push   %rcx
   1a7b6:	52                   	push   %rdx
   1a7b7:	b8 00 00 00 00       	mov    $0x0,%eax
   1a7bc:	0f a2                	cpuid  
   1a7be:	39 5d d4             	cmp    %ebx,-0x2c(%rbp)
   1a7c1:	75 1a                	jne    1a7dd <__cacheSize+0xfd>
   1a7c3:	39 55 d8             	cmp    %edx,-0x28(%rbp)
   1a7c6:	75 15                	jne    1a7dd <__cacheSize+0xfd>
   1a7c8:	39 4d dc             	cmp    %ecx,-0x24(%rbp)
   1a7cb:	75 10                	jne    1a7dd <__cacheSize+0xfd>
   1a7cd:	c7 45 8c 01 00 00 00 	movl   $0x1,-0x74(%rbp)
   1a7d4:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1a7db:	89 02                	mov    %eax,(%rdx)
   1a7dd:	5a                   	pop    %rdx
   1a7de:	59                   	pop    %rcx
   1a7df:	5b                   	pop    %rbx
   1a7e0:	58                   	pop    %rax
   1a7e1:	8b 45 8c             	mov    -0x74(%rbp),%eax
   1a7e4:	8b 55 88             	mov    -0x78(%rbp),%edx
   1a7e7:	48 8b 5d 80          	mov    -0x80(%rbp),%rbx
   1a7eb:	89 05 af 85 20 00    	mov    %eax,0x2085af(%rip)        # 222da0 <__libirc_cache_tbl>
   1a7f1:	89 15 ad 85 20 00    	mov    %edx,0x2085ad(%rip)        # 222da4 <__libirc_cache_tbl+0x4>
   1a7f7:	83 fa 04             	cmp    $0x4,%edx
   1a7fa:	7d 0c                	jge    1a808 <__cacheSize+0x128>
   1a7fc:	48 8d 35 9d 85 20 00 	lea    0x20859d(%rip),%rsi        # 222da0 <__libirc_cache_tbl>
   1a803:	e9 23 01 00 00       	jmpq   1a92b <__cacheSize+0x24b>
   1a808:	c7 85 cc fe ff ff 00 	movl   $0x0,-0x134(%rbp)
   1a80f:	00 00 00 
   1a812:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
   1a819:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   1a820:	48 89 5d 80          	mov    %rbx,-0x80(%rbp)
   1a824:	50                   	push   %rax
   1a825:	53                   	push   %rbx
   1a826:	51                   	push   %rcx
   1a827:	52                   	push   %rdx
   1a828:	57                   	push   %rdi
   1a829:	4c 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%r8
   1a830:	bf 00 00 00 00       	mov    $0x0,%edi
   1a835:	89 f9                	mov    %edi,%ecx
   1a837:	b8 04 00 00 00       	mov    $0x4,%eax
   1a83c:	0f a2                	cpuid  
   1a83e:	a9 1f 00 00 00       	test   $0x1f,%eax
   1a843:	74 1d                	je     1a862 <__cacheSize+0x182>
   1a845:	41 89 00             	mov    %eax,(%r8)
   1a848:	41 89 58 04          	mov    %ebx,0x4(%r8)
   1a84c:	41 89 48 08          	mov    %ecx,0x8(%r8)
   1a850:	41 89 50 0c          	mov    %edx,0xc(%r8)
   1a854:	83 c7 01             	add    $0x1,%edi
   1a857:	83 ff 08             	cmp    $0x8,%edi
   1a85a:	7d 06                	jge    1a862 <__cacheSize+0x182>
   1a85c:	49 83 c0 10          	add    $0x10,%r8
   1a860:	eb d3                	jmp    1a835 <__cacheSize+0x155>
   1a862:	89 bd cc fe ff ff    	mov    %edi,-0x134(%rbp)
   1a868:	5f                   	pop    %rdi
   1a869:	5a                   	pop    %rdx
   1a86a:	59                   	pop    %rcx
   1a86b:	5b                   	pop    %rbx
   1a86c:	58                   	pop    %rax
   1a86d:	33 c0                	xor    %eax,%eax
   1a86f:	48 63 95 cc fe ff ff 	movslq -0x134(%rbp),%rdx
   1a876:	33 c9                	xor    %ecx,%ecx
   1a878:	48 8b 5d 80          	mov    -0x80(%rbp),%rbx
   1a87c:	48 85 d2             	test   %rdx,%rdx
   1a87f:	0f 8e 77 ff ff ff    	jle    1a7fc <__cacheSize+0x11c>
   1a885:	48 8d 35 14 85 20 00 	lea    0x208514(%rip),%rsi        # 222da0 <__libirc_cache_tbl>
   1a88c:	44 8a 84 0d d8 fe ff 	mov    -0x128(%rbp,%rcx,1),%r8b
   1a893:	ff 
   1a894:	44 88 c7             	mov    %r8b,%dil
   1a897:	40 80 e7 1d          	and    $0x1d,%dil
   1a89b:	40 80 ff 01          	cmp    $0x1,%dil
   1a89f:	75 7a                	jne    1a91b <__cacheSize+0x23b>
   1a8a1:	41 80 e0 e0          	and    $0xe0,%r8b
   1a8a5:	41 c0 e8 05          	shr    $0x5,%r8b
   1a8a9:	45 0f b6 f8          	movzbl %r8b,%r15d
   1a8ad:	49 c1 e7 04          	shl    $0x4,%r15
   1a8b1:	44 8b 8c 0d dc fe ff 	mov    -0x124(%rbp,%rcx,1),%r9d
   1a8b8:	ff 
   1a8b9:	0f b7 bc 0d de fe ff 	movzwl -0x122(%rbp,%rcx,1),%edi
   1a8c0:	ff 
   1a8c1:	41 81 e1 00 f0 3f 00 	and    $0x3ff000,%r9d
   1a8c8:	81 e7 c0 ff 00 00    	and    $0xffc0,%edi
   1a8ce:	44 0f b7 84 0d dc fe 	movzwl -0x124(%rbp,%rcx,1),%r8d
   1a8d5:	ff ff 
   1a8d7:	41 c1 e9 0c          	shr    $0xc,%r9d
   1a8db:	41 81 e0 ff 0f 00 00 	and    $0xfff,%r8d
   1a8e2:	c1 ef 06             	shr    $0x6,%edi
   1a8e5:	41 ff c0             	inc    %r8d
   1a8e8:	44 8b 9c 0d e0 fe ff 	mov    -0x120(%rbp,%rcx,1),%r11d
   1a8ef:	ff 
   1a8f0:	41 ff c1             	inc    %r9d
   1a8f3:	ff c7                	inc    %edi
   1a8f5:	41 ff c3             	inc    %r11d
   1a8f8:	45 89 4c 37 08       	mov    %r9d,0x8(%r15,%rsi,1)
   1a8fd:	44 0f af cf          	imul   %edi,%r9d
   1a901:	45 0f af d8          	imul   %r8d,%r11d
   1a905:	45 0f af d9          	imul   %r9d,%r11d
   1a909:	41 c1 eb 0a          	shr    $0xa,%r11d
   1a90d:	45 89 44 37 04       	mov    %r8d,0x4(%r15,%rsi,1)
   1a912:	41 89 7c 37 0c       	mov    %edi,0xc(%r15,%rsi,1)
   1a917:	45 89 1c 37          	mov    %r11d,(%r15,%rsi,1)
   1a91b:	48 ff c0             	inc    %rax
   1a91e:	48 83 c1 10          	add    $0x10,%rcx
   1a922:	48 3b c2             	cmp    %rdx,%rax
   1a925:	0f 8c 61 ff ff ff    	jl     1a88c <__cacheSize+0x1ac>
   1a92b:	83 3d 7e 84 20 00 00 	cmpl   $0x0,0x20847e(%rip)        # 222db0 <__libirc_cache_tbl+0x10>
   1a932:	0f 85 92 01 00 00    	jne    1aaca <__cacheSize+0x3ea>
   1a938:	83 7d 88 02          	cmpl   $0x2,-0x78(%rbp)
   1a93c:	0f 8c 88 01 00 00    	jl     1aaca <__cacheSize+0x3ea>
   1a942:	48 89 5d 80          	mov    %rbx,-0x80(%rbp)
   1a946:	48 8d 45 94          	lea    -0x6c(%rbp),%rax
   1a94a:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
   1a951:	50                   	push   %rax
   1a952:	53                   	push   %rbx
   1a953:	51                   	push   %rcx
   1a954:	52                   	push   %rdx
   1a955:	4c 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%r8
   1a95c:	b8 02 00 00 00       	mov    $0x2,%eax
   1a961:	0f a2                	cpuid  
   1a963:	41 89 00             	mov    %eax,(%r8)
   1a966:	41 89 58 04          	mov    %ebx,0x4(%r8)
   1a96a:	41 89 48 08          	mov    %ecx,0x8(%r8)
   1a96e:	41 89 50 0c          	mov    %edx,0xc(%r8)
   1a972:	3c 01                	cmp    $0x1,%al
   1a974:	7e 4d                	jle    1a9c3 <__cacheSize+0x2e3>
   1a976:	3c 02                	cmp    $0x2,%al
   1a978:	7e 32                	jle    1a9ac <__cacheSize+0x2cc>
   1a97a:	3c 03                	cmp    $0x3,%al
   1a97c:	7e 17                	jle    1a995 <__cacheSize+0x2b5>
   1a97e:	b8 02 00 00 00       	mov    $0x2,%eax
   1a983:	0f a2                	cpuid  
   1a985:	41 89 40 30          	mov    %eax,0x30(%r8)
   1a989:	41 89 58 34          	mov    %ebx,0x34(%r8)
   1a98d:	41 89 48 38          	mov    %ecx,0x38(%r8)
   1a991:	41 89 50 3c          	mov    %edx,0x3c(%r8)
   1a995:	b8 02 00 00 00       	mov    $0x2,%eax
   1a99a:	0f a2                	cpuid  
   1a99c:	41 89 40 20          	mov    %eax,0x20(%r8)
   1a9a0:	41 89 58 24          	mov    %ebx,0x24(%r8)
   1a9a4:	41 89 48 28          	mov    %ecx,0x28(%r8)
   1a9a8:	41 89 50 2c          	mov    %edx,0x2c(%r8)
   1a9ac:	b8 02 00 00 00       	mov    $0x2,%eax
   1a9b1:	0f a2                	cpuid  
   1a9b3:	41 89 40 10          	mov    %eax,0x10(%r8)
   1a9b7:	41 89 58 14          	mov    %ebx,0x14(%r8)
   1a9bb:	41 89 48 18          	mov    %ecx,0x18(%r8)
   1a9bf:	41 89 50 1c          	mov    %edx,0x1c(%r8)
   1a9c3:	5a                   	pop    %rdx
   1a9c4:	59                   	pop    %rcx
   1a9c5:	5b                   	pop    %rbx
   1a9c6:	58                   	pop    %rax
   1a9c7:	0f b6 7d 94          	movzbl -0x6c(%rbp),%edi
   1a9cb:	48 8b 5d 80          	mov    -0x80(%rbp),%rbx
   1a9cf:	83 ff 04             	cmp    $0x4,%edi
   1a9d2:	7e 07                	jle    1a9db <__cacheSize+0x2fb>
   1a9d4:	bf 10 00 00 00       	mov    $0x10,%edi
   1a9d9:	eb 0d                	jmp    1a9e8 <__cacheSize+0x308>
   1a9db:	48 c1 e7 02          	shl    $0x2,%rdi
   1a9df:	48 85 ff             	test   %rdi,%rdi
   1a9e2:	0f 8e e2 00 00 00    	jle    1aaca <__cacheSize+0x3ea>
   1a9e8:	48 89 5d 80          	mov    %rbx,-0x80(%rbp)
   1a9ec:	45 33 c9             	xor    %r9d,%r9d
   1a9ef:	4c 89 a5 58 ff ff ff 	mov    %r12,-0xa8(%rbp)
   1a9f6:	4c 89 ad 60 ff ff ff 	mov    %r13,-0xa0(%rbp)
   1a9fd:	4c 89 b5 68 ff ff ff 	mov    %r14,-0x98(%rbp)
   1aa04:	42 f6 44 8d 97 80    	testb  $0x80,-0x69(%rbp,%r9,4)
   1aa0a:	0f 85 8d 00 00 00    	jne    1aa9d <__cacheSize+0x3bd>
   1aa10:	45 33 ed             	xor    %r13d,%r13d
   1aa13:	4e 8d 64 8d 94       	lea    -0x6c(%rbp,%r9,4),%r12
   1aa18:	47 0f b6 74 25 00    	movzbl 0x0(%r13,%r12,1),%r14d
   1aa1e:	49 81 fe ff 00 00 00 	cmp    $0xff,%r14
   1aa25:	0f 84 3a 01 00 00    	je     1ab65 <__cacheSize+0x485>
   1aa2b:	4c 8d 3d 4e 76 20 00 	lea    0x20764e(%rip),%r15        # 222080 <cpuid2_cache_tbl>
   1aa32:	43 8a 04 f7          	mov    (%r15,%r14,8),%al
   1aa36:	24 07                	and    $0x7,%al
   1aa38:	44 0f b6 d8          	movzbl %al,%r11d
   1aa3c:	4d 85 db             	test   %r11,%r11
   1aa3f:	74 4f                	je     1aa90 <__cacheSize+0x3b0>
   1aa41:	49 83 fb 02          	cmp    $0x2,%r11
   1aa45:	0f 84 8e 00 00 00    	je     1aad9 <__cacheSize+0x3f9>
   1aa4b:	49 c1 e3 04          	shl    $0x4,%r11
   1aa4f:	43 0f b7 04 f7       	movzwl (%r15,%r14,8),%eax
   1aa54:	43 8b 14 f7          	mov    (%r15,%r14,8),%edx
   1aa58:	25 f8 7f 00 00       	and    $0x7ff8,%eax
   1aa5d:	43 0f b7 4c f7 02    	movzwl 0x2(%r15,%r14,8),%ecx
   1aa63:	81 e2 00 80 3f 00    	and    $0x3f8000,%edx
   1aa69:	81 e1 c0 ff 00 00    	and    $0xffc0,%ecx
   1aa6f:	43 8b 5c f7 04       	mov    0x4(%r15,%r14,8),%ebx
   1aa74:	c1 e8 03             	shr    $0x3,%eax
   1aa77:	c1 ea 0f             	shr    $0xf,%edx
   1aa7a:	c1 e9 06             	shr    $0x6,%ecx
   1aa7d:	41 89 44 33 04       	mov    %eax,0x4(%r11,%rsi,1)
   1aa82:	41 89 54 33 08       	mov    %edx,0x8(%r11,%rsi,1)
   1aa87:	41 89 4c 33 0c       	mov    %ecx,0xc(%r11,%rsi,1)
   1aa8c:	41 89 1c 33          	mov    %ebx,(%r11,%rsi,1)
   1aa90:	49 ff c5             	inc    %r13
   1aa93:	49 83 fd 04          	cmp    $0x4,%r13
   1aa97:	0f 8c 7b ff ff ff    	jl     1aa18 <__cacheSize+0x338>
   1aa9d:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1aaa4:	00 
   1aaa5:	49 ff c1             	inc    %r9
   1aaa8:	4c 3b cf             	cmp    %rdi,%r9
   1aaab:	0f 8c 53 ff ff ff    	jl     1aa04 <__cacheSize+0x324>
   1aab1:	48 8b 5d 80          	mov    -0x80(%rbp),%rbx
   1aab5:	4c 8b a5 58 ff ff ff 	mov    -0xa8(%rbp),%r12
   1aabc:	4c 8b ad 60 ff ff ff 	mov    -0xa0(%rbp),%r13
   1aac3:	4c 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%r14
   1aaca:	c7 05 d8 82 20 00 01 	movl   $0x1,0x2082d8(%rip)        # 222dac <__libirc_cache_tbl+0xc>
   1aad1:	00 00 00 
   1aad4:	e9 45 fc ff ff       	jmpq   1a71e <__cacheSize+0x3e>
   1aad9:	49 83 fe 49          	cmp    $0x49,%r14
   1aadd:	0f 85 68 ff ff ff    	jne    1aa4b <__cacheSize+0x36b>
   1aae3:	c7 85 c8 fe ff ff 01 	movl   $0x1,-0x138(%rbp)
   1aaea:	00 00 00 
   1aaed:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   1aaf4:	48 89 40 10          	mov    %rax,0x10(%rax)
   1aaf8:	50                   	push   %rax
   1aaf9:	53                   	push   %rbx
   1aafa:	51                   	push   %rcx
   1aafb:	52                   	push   %rdx
   1aafc:	4c 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%r8
   1ab03:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
   1ab09:	0f a2                	cpuid  
   1ab0b:	41 89 00             	mov    %eax,(%r8)
   1ab0e:	41 89 58 04          	mov    %ebx,0x4(%r8)
   1ab12:	41 89 48 08          	mov    %ecx,0x8(%r8)
   1ab16:	41 89 50 0c          	mov    %edx,0xc(%r8)
   1ab1a:	5a                   	pop    %rdx
   1ab1b:	59                   	pop    %rcx
   1ab1c:	5b                   	pop    %rbx
   1ab1d:	58                   	pop    %rax
   1ab1e:	8b 95 b0 fe ff ff    	mov    -0x150(%rbp),%edx
   1ab24:	89 d0                	mov    %edx,%eax
   1ab26:	25 00 0f 00 00       	and    $0xf00,%eax
   1ab2b:	3d 00 0f 00 00       	cmp    $0xf00,%eax
   1ab30:	0f 85 15 ff ff ff    	jne    1aa4b <__cacheSize+0x36b>
   1ab36:	f7 c2 00 00 00 0f    	test   $0xf000000,%edx
   1ab3c:	0f 85 09 ff ff ff    	jne    1aa4b <__cacheSize+0x36b>
   1ab42:	89 d0                	mov    %edx,%eax
   1ab44:	b9 03 00 00 00       	mov    $0x3,%ecx
   1ab49:	c1 e8 0c             	shr    $0xc,%eax
   1ab4c:	c1 ea 04             	shr    $0x4,%edx
   1ab4f:	25 f0 00 00 00       	and    $0xf0,%eax
   1ab54:	83 e2 0f             	and    $0xf,%edx
   1ab57:	0b c2                	or     %edx,%eax
   1ab59:	83 f8 06             	cmp    $0x6,%eax
   1ab5c:	4c 0f 44 d9          	cmove  %rcx,%r11
   1ab60:	e9 e6 fe ff ff       	jmpq   1aa4b <__cacheSize+0x36b>
   1ab65:	48 8b 5d 80          	mov    -0x80(%rbp),%rbx
   1ab69:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1ab6d:	4c 8b a5 58 ff ff ff 	mov    -0xa8(%rbp),%r12
   1ab74:	4c 8b ad 60 ff ff ff 	mov    -0xa0(%rbp),%r13
   1ab7b:	4c 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%r14
   1ab82:	f3 0f 7f 05 26 82 20 	movdqu %xmm0,0x208226(%rip)        # 222db0 <__libirc_cache_tbl+0x10>
   1ab89:	00 
   1ab8a:	f3 0f 7f 05 2e 82 20 	movdqu %xmm0,0x20822e(%rip)        # 222dc0 <__libirc_cache_tbl+0x20>
   1ab91:	00 
   1ab92:	f3 0f 7f 05 36 82 20 	movdqu %xmm0,0x208236(%rip)        # 222dd0 <__libirc_cache_tbl+0x30>
   1ab99:	00 
   1ab9a:	e9 2b ff ff ff       	jmpq   1aaca <__cacheSize+0x3ea>
   1ab9f:	90                   	nop

000000000001aba0 <__sti__$E>:
   1aba0:	f3 0f 1e fa          	repz nop %edx
   1aba4:	8b 05 e6 7c 20 00    	mov    0x207ce6(%rip),%eax        # 222890 <__libirc_data_cache_size_half>
   1abaa:	8b 15 d8 7c 20 00    	mov    0x207cd8(%rip),%edx        # 222888 <__libirc_largest_cache_size_half>
   1abb0:	8b 0d d6 7c 20 00    	mov    0x207cd6(%rip),%ecx        # 22288c <__libirc_data_cache_size>
   1abb6:	89 05 28 82 20 00    	mov    %eax,0x208228(%rip)        # 222de4 <__libirc_copy_loop_threshold>
   1abbc:	89 15 26 82 20 00    	mov    %edx,0x208226(%rip)        # 222de8 <__libirc_rep_move_threshold>
   1abc2:	89 0d 24 82 20 00    	mov    %ecx,0x208224(%rip)        # 222dec <__libirc_set_loop_threshold>
   1abc8:	c3                   	retq   
   1abc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001abd0 <__intel_memcpy>:
   1abd0:	49 89 d0             	mov    %rdx,%r8
   1abd3:	48 89 f9             	mov    %rdi,%rcx
   1abd6:	48 89 f2             	mov    %rsi,%rdx
   1abd9:	49 83 f8 01          	cmp    $0x1,%r8
   1abdd:	48 89 c8             	mov    %rcx,%rax
   1abe0:	75 07                	jne    1abe9 <__intel_memcpy+0x19>
   1abe2:	44 8a 0a             	mov    (%rdx),%r9b
   1abe5:	44 88 09             	mov    %r9b,(%rcx)
   1abe8:	c3                   	retq   
   1abe9:	4c 8d 1d 80 01 00 00 	lea    0x180(%rip),%r11        # 1ad70 <__intel_memcpy+0x1a0>
   1abf0:	49 83 f8 08          	cmp    $0x8,%r8
   1abf4:	7f 1a                	jg     1ac10 <__intel_memcpy+0x40>
   1abf6:	4c 01 c1             	add    %r8,%rcx
   1abf9:	4c 01 c2             	add    %r8,%rdx
   1abfc:	4f 8b 14 c3          	mov    (%r11,%r8,8),%r10
   1ac00:	4f 8d 1c 1a          	lea    (%r10,%r11,1),%r11
   1ac04:	41 ff e3             	jmpq   *%r11
   1ac07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1ac0e:	00 00 
   1ac10:	48 f7 c1 07 00 00 00 	test   $0x7,%rcx
   1ac17:	75 25                	jne    1ac3e <__intel_memcpy+0x6e>
   1ac19:	4c 8d 1d 50 01 00 00 	lea    0x150(%rip),%r11        # 1ad70 <__intel_memcpy+0x1a0>
   1ac20:	49 81 f8 b0 00 00 00 	cmp    $0xb0,%r8
   1ac27:	0f 8f a3 0e 00 00    	jg     1bad0 <__intel_memcpy+0xf00>
   1ac2d:	4c 01 c1             	add    %r8,%rcx
   1ac30:	4c 01 c2             	add    %r8,%rdx
   1ac33:	4f 8b 14 c3          	mov    (%r11,%r8,8),%r10
   1ac37:	4f 8d 1c 1a          	lea    (%r10,%r11,1),%r11
   1ac3b:	41 ff e3             	jmpq   *%r11
   1ac3e:	4c 8d 1d eb 00 00 00 	lea    0xeb(%rip),%r11        # 1ad30 <__intel_memcpy+0x160>
   1ac45:	49 89 c9             	mov    %rcx,%r9
   1ac48:	49 83 e1 07          	and    $0x7,%r9
   1ac4c:	4f 8b 14 cb          	mov    (%r11,%r9,8),%r10
   1ac50:	4f 8d 1c 1a          	lea    (%r10,%r11,1),%r11
   1ac54:	41 ff e3             	jmpq   *%r11
   1ac57:	44 8a 1a             	mov    (%rdx),%r11b
   1ac5a:	66 44 8b 52 01       	mov    0x1(%rdx),%r10w
   1ac5f:	44 8b 4a 03          	mov    0x3(%rdx),%r9d
   1ac63:	44 88 19             	mov    %r11b,(%rcx)
   1ac66:	66 44 89 51 01       	mov    %r10w,0x1(%rcx)
   1ac6b:	44 89 49 03          	mov    %r9d,0x3(%rcx)
   1ac6f:	49 83 e8 07          	sub    $0x7,%r8
   1ac73:	48 83 c1 07          	add    $0x7,%rcx
   1ac77:	48 83 c2 07          	add    $0x7,%rdx
   1ac7b:	eb 9c                	jmp    1ac19 <__intel_memcpy+0x49>
   1ac7d:	66 44 8b 12          	mov    (%rdx),%r10w
   1ac81:	44 8b 4a 02          	mov    0x2(%rdx),%r9d
   1ac85:	66 44 89 11          	mov    %r10w,(%rcx)
   1ac89:	44 89 49 02          	mov    %r9d,0x2(%rcx)
   1ac8d:	49 83 e8 06          	sub    $0x6,%r8
   1ac91:	48 83 c1 06          	add    $0x6,%rcx
   1ac95:	48 83 c2 06          	add    $0x6,%rdx
   1ac99:	e9 7b ff ff ff       	jmpq   1ac19 <__intel_memcpy+0x49>
   1ac9e:	44 8a 1a             	mov    (%rdx),%r11b
   1aca1:	44 8b 4a 01          	mov    0x1(%rdx),%r9d
   1aca5:	44 88 19             	mov    %r11b,(%rcx)
   1aca8:	44 89 49 01          	mov    %r9d,0x1(%rcx)
   1acac:	49 83 e8 05          	sub    $0x5,%r8
   1acb0:	48 83 c1 05          	add    $0x5,%rcx
   1acb4:	48 83 c2 05          	add    $0x5,%rdx
   1acb8:	e9 5c ff ff ff       	jmpq   1ac19 <__intel_memcpy+0x49>
   1acbd:	44 8b 0a             	mov    (%rdx),%r9d
   1acc0:	44 89 09             	mov    %r9d,(%rcx)
   1acc3:	49 83 e8 04          	sub    $0x4,%r8
   1acc7:	48 83 c1 04          	add    $0x4,%rcx
   1accb:	48 83 c2 04          	add    $0x4,%rdx
   1accf:	e9 45 ff ff ff       	jmpq   1ac19 <__intel_memcpy+0x49>
   1acd4:	44 8a 1a             	mov    (%rdx),%r11b
   1acd7:	66 44 8b 52 01       	mov    0x1(%rdx),%r10w
   1acdc:	44 88 19             	mov    %r11b,(%rcx)
   1acdf:	66 44 89 51 01       	mov    %r10w,0x1(%rcx)
   1ace4:	49 83 e8 03          	sub    $0x3,%r8
   1ace8:	48 83 c1 03          	add    $0x3,%rcx
   1acec:	48 83 c2 03          	add    $0x3,%rdx
   1acf0:	e9 24 ff ff ff       	jmpq   1ac19 <__intel_memcpy+0x49>
   1acf5:	66 44 8b 12          	mov    (%rdx),%r10w
   1acf9:	66 44 89 11          	mov    %r10w,(%rcx)
   1acfd:	49 83 e8 02          	sub    $0x2,%r8
   1ad01:	48 83 c1 02          	add    $0x2,%rcx
   1ad05:	48 83 c2 02          	add    $0x2,%rdx
   1ad09:	e9 0b ff ff ff       	jmpq   1ac19 <__intel_memcpy+0x49>
   1ad0e:	44 8a 1a             	mov    (%rdx),%r11b
   1ad11:	44 88 19             	mov    %r11b,(%rcx)
   1ad14:	49 ff c8             	dec    %r8
   1ad17:	48 ff c1             	inc    %rcx
   1ad1a:	48 ff c2             	inc    %rdx
   1ad1d:	e9 f7 fe ff ff       	jmpq   1ac19 <__intel_memcpy+0x49>
   1ad22:	0f 1f 40 00          	nopl   0x0(%rax)
   1ad26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1ad2d:	00 00 00 
   1ad30:	e9 fe ff ff ff       	jmpq   1ad33 <__intel_memcpy+0x163>
   1ad35:	ff                   	(bad)  
   1ad36:	ff                   	(bad)  
   1ad37:	ff 27                	jmpq   *(%rdi)
   1ad39:	ff                   	(bad)  
   1ad3a:	ff                   	(bad)  
   1ad3b:	ff                   	(bad)  
   1ad3c:	ff                   	(bad)  
   1ad3d:	ff                   	(bad)  
   1ad3e:	ff                   	(bad)  
   1ad3f:	ff 4d ff             	decl   -0x1(%rbp)
   1ad42:	ff                   	(bad)  
   1ad43:	ff                   	(bad)  
   1ad44:	ff                   	(bad)  
   1ad45:	ff                   	(bad)  
   1ad46:	ff                   	(bad)  
   1ad47:	ff 6e ff             	ljmp   *-0x1(%rsi)
   1ad4a:	ff                   	(bad)  
   1ad4b:	ff                   	(bad)  
   1ad4c:	ff                   	(bad)  
   1ad4d:	ff                   	(bad)  
   1ad4e:	ff                   	(bad)  
   1ad4f:	ff 8d ff ff ff ff    	decl   -0x1(%rbp)
   1ad55:	ff                   	(bad)  
   1ad56:	ff                   	(bad)  
   1ad57:	ff a4 ff ff ff ff ff 	jmpq   *-0x1(%rdi,%rdi,8)
   1ad5e:	ff                   	(bad)  
   1ad5f:	ff c5                	inc    %ebp
   1ad61:	ff                   	(bad)  
   1ad62:	ff                   	(bad)  
   1ad63:	ff                   	(bad)  
   1ad64:	ff                   	(bad)  
   1ad65:	ff                   	(bad)  
   1ad66:	ff                   	(bad)  
   1ad67:	ff                   	(bad)  
   1ad68:	de ff                	fdivrp %st,%st(7)
   1ad6a:	ff                   	(bad)  
   1ad6b:	ff                   	(bad)  
   1ad6c:	ff                   	(bad)  
   1ad6d:	ff                   	(bad)  
   1ad6e:	ff                   	(bad)  
   1ad6f:	ff f4                	push   %rsp
   1ad71:	06                   	(bad)  
   1ad72:	00 00                	add    %al,(%rax)
   1ad74:	00 00                	add    %al,(%rax)
   1ad76:	00 00                	add    %al,(%rax)
   1ad78:	cf                   	iret   
   1ad79:	07                   	(bad)  
   1ad7a:	00 00                	add    %al,(%rax)
   1ad7c:	00 00                	add    %al,(%rax)
   1ad7e:	00 00                	add    %al,(%rax)
   1ad80:	b2 08                	mov    $0x8,%dl
   1ad82:	00 00                	add    %al,(%rax)
   1ad84:	00 00                	add    %al,(%rax)
   1ad86:	00 00                	add    %al,(%rax)
   1ad88:	97                   	xchg   %eax,%edi
   1ad89:	09 00                	or     %eax,(%rax)
   1ad8b:	00 00                	add    %al,(%rax)
   1ad8d:	00 00                	add    %al,(%rax)
   1ad8f:	00 84 0a 00 00 00 00 	add    %al,0x0(%rdx,%rcx,1)
   1ad96:	00 00                	add    %al,(%rax)
   1ad98:	67 0b 00             	or     (%eax),%eax
   1ad9b:	00 00                	add    %al,(%rax)
   1ad9d:	00 00                	add    %al,(%rax)
   1ad9f:	00 52 0c             	add    %dl,0xc(%rdx)
   1ada2:	00 00                	add    %al,(%rax)
   1ada4:	00 00                	add    %al,(%rax)
   1ada6:	00 00                	add    %al,(%rax)
   1ada8:	3f                   	(bad)  
   1ada9:	0d 00 00 00 00       	or     $0x0,%eax
   1adae:	00 00                	add    %al,(%rax)
   1adb0:	ec                   	in     (%dx),%al
   1adb1:	06                   	(bad)  
   1adb2:	00 00                	add    %al,(%rax)
   1adb4:	00 00                	add    %al,(%rax)
   1adb6:	00 00                	add    %al,(%rax)
   1adb8:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   1adbe:	00 00                	add    %al,(%rax)
   1adc0:	aa                   	stos   %al,%es:(%rdi)
   1adc1:	08 00                	or     %al,(%rax)
   1adc3:	00 00                	add    %al,(%rax)
   1adc5:	00 00                	add    %al,(%rax)
   1adc7:	00 8f 09 00 00 00    	add    %cl,0x9(%rdi)
   1adcd:	00 00                	add    %al,(%rax)
   1adcf:	00 7c 0a 00          	add    %bh,0x0(%rdx,%rcx,1)
   1add3:	00 00                	add    %al,(%rax)
   1add5:	00 00                	add    %al,(%rax)
   1add7:	00 5f 0b             	add    %bl,0xb(%rdi)
   1adda:	00 00                	add    %al,(%rax)
   1addc:	00 00                	add    %al,(%rax)
   1adde:	00 00                	add    %al,(%rax)
   1ade0:	4a 0c 00             	rex.WX or $0x0,%al
   1ade3:	00 00                	add    %al,(%rax)
   1ade5:	00 00                	add    %al,(%rax)
   1ade7:	00 37                	add    %dh,(%rdi)
   1ade9:	0d 00 00 00 00       	or     $0x0,%eax
   1adee:	00 00                	add    %al,(%rax)
   1adf0:	e4 06                	in     $0x6,%al
   1adf2:	00 00                	add    %al,(%rax)
   1adf4:	00 00                	add    %al,(%rax)
   1adf6:	00 00                	add    %al,(%rax)
   1adf8:	bf 07 00 00 00       	mov    $0x7,%edi
   1adfd:	00 00                	add    %al,(%rax)
   1adff:	00 a2 08 00 00 00    	add    %ah,0x8(%rdx)
   1ae05:	00 00                	add    %al,(%rax)
   1ae07:	00 87 09 00 00 00    	add    %al,0x9(%rdi)
   1ae0d:	00 00                	add    %al,(%rax)
   1ae0f:	00 74 0a 00          	add    %dh,0x0(%rdx,%rcx,1)
   1ae13:	00 00                	add    %al,(%rax)
   1ae15:	00 00                	add    %al,(%rax)
   1ae17:	00 57 0b             	add    %dl,0xb(%rdi)
   1ae1a:	00 00                	add    %al,(%rax)
   1ae1c:	00 00                	add    %al,(%rax)
   1ae1e:	00 00                	add    %al,(%rax)
   1ae20:	42 0c 00             	rex.X or $0x0,%al
   1ae23:	00 00                	add    %al,(%rax)
   1ae25:	00 00                	add    %al,(%rax)
   1ae27:	00 2f                	add    %ch,(%rdi)
   1ae29:	0d 00 00 00 00       	or     $0x0,%eax
   1ae2e:	00 00                	add    %al,(%rax)
   1ae30:	dc 06                	faddl  (%rsi)
   1ae32:	00 00                	add    %al,(%rax)
   1ae34:	00 00                	add    %al,(%rax)
   1ae36:	00 00                	add    %al,(%rax)
   1ae38:	b7 07                	mov    $0x7,%bh
   1ae3a:	00 00                	add    %al,(%rax)
   1ae3c:	00 00                	add    %al,(%rax)
   1ae3e:	00 00                	add    %al,(%rax)
   1ae40:	9a                   	(bad)  
   1ae41:	08 00                	or     %al,(%rax)
   1ae43:	00 00                	add    %al,(%rax)
   1ae45:	00 00                	add    %al,(%rax)
   1ae47:	00 7f 09             	add    %bh,0x9(%rdi)
   1ae4a:	00 00                	add    %al,(%rax)
   1ae4c:	00 00                	add    %al,(%rax)
   1ae4e:	00 00                	add    %al,(%rax)
   1ae50:	6c                   	insb   (%dx),%es:(%rdi)
   1ae51:	0a 00                	or     (%rax),%al
   1ae53:	00 00                	add    %al,(%rax)
   1ae55:	00 00                	add    %al,(%rax)
   1ae57:	00 4f 0b             	add    %cl,0xb(%rdi)
   1ae5a:	00 00                	add    %al,(%rax)
   1ae5c:	00 00                	add    %al,(%rax)
   1ae5e:	00 00                	add    %al,(%rax)
   1ae60:	3a 0c 00             	cmp    (%rax,%rax,1),%cl
   1ae63:	00 00                	add    %al,(%rax)
   1ae65:	00 00                	add    %al,(%rax)
   1ae67:	00 27                	add    %ah,(%rdi)
   1ae69:	0d 00 00 00 00       	or     $0x0,%eax
   1ae6e:	00 00                	add    %al,(%rax)
   1ae70:	d4                   	(bad)  
   1ae71:	06                   	(bad)  
   1ae72:	00 00                	add    %al,(%rax)
   1ae74:	00 00                	add    %al,(%rax)
   1ae76:	00 00                	add    %al,(%rax)
   1ae78:	af                   	scas   %es:(%rdi),%eax
   1ae79:	07                   	(bad)  
   1ae7a:	00 00                	add    %al,(%rax)
   1ae7c:	00 00                	add    %al,(%rax)
   1ae7e:	00 00                	add    %al,(%rax)
   1ae80:	92                   	xchg   %eax,%edx
   1ae81:	08 00                	or     %al,(%rax)
   1ae83:	00 00                	add    %al,(%rax)
   1ae85:	00 00                	add    %al,(%rax)
   1ae87:	00 77 09             	add    %dh,0x9(%rdi)
   1ae8a:	00 00                	add    %al,(%rax)
   1ae8c:	00 00                	add    %al,(%rax)
   1ae8e:	00 00                	add    %al,(%rax)
   1ae90:	64 0a 00             	or     %fs:(%rax),%al
   1ae93:	00 00                	add    %al,(%rax)
   1ae95:	00 00                	add    %al,(%rax)
   1ae97:	00 47 0b             	add    %al,0xb(%rdi)
   1ae9a:	00 00                	add    %al,(%rax)
   1ae9c:	00 00                	add    %al,(%rax)
   1ae9e:	00 00                	add    %al,(%rax)
   1aea0:	32 0c 00             	xor    (%rax,%rax,1),%cl
   1aea3:	00 00                	add    %al,(%rax)
   1aea5:	00 00                	add    %al,(%rax)
   1aea7:	00 1f                	add    %bl,(%rdi)
   1aea9:	0d 00 00 00 00       	or     $0x0,%eax
   1aeae:	00 00                	add    %al,(%rax)
   1aeb0:	cc                   	int3   
   1aeb1:	06                   	(bad)  
   1aeb2:	00 00                	add    %al,(%rax)
   1aeb4:	00 00                	add    %al,(%rax)
   1aeb6:	00 00                	add    %al,(%rax)
   1aeb8:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
   1aeb9:	07                   	(bad)  
   1aeba:	00 00                	add    %al,(%rax)
   1aebc:	00 00                	add    %al,(%rax)
   1aebe:	00 00                	add    %al,(%rax)
   1aec0:	8a 08                	mov    (%rax),%cl
   1aec2:	00 00                	add    %al,(%rax)
   1aec4:	00 00                	add    %al,(%rax)
   1aec6:	00 00                	add    %al,(%rax)
   1aec8:	6f                   	outsl  %ds:(%rsi),(%dx)
   1aec9:	09 00                	or     %eax,(%rax)
   1aecb:	00 00                	add    %al,(%rax)
   1aecd:	00 00                	add    %al,(%rax)
   1aecf:	00 5c 0a 00          	add    %bl,0x0(%rdx,%rcx,1)
   1aed3:	00 00                	add    %al,(%rax)
   1aed5:	00 00                	add    %al,(%rax)
   1aed7:	00 3f                	add    %bh,(%rdi)
   1aed9:	0b 00                	or     (%rax),%eax
   1aedb:	00 00                	add    %al,(%rax)
   1aedd:	00 00                	add    %al,(%rax)
   1aedf:	00 2a                	add    %ch,(%rdx)
   1aee1:	0c 00                	or     $0x0,%al
   1aee3:	00 00                	add    %al,(%rax)
   1aee5:	00 00                	add    %al,(%rax)
   1aee7:	00 17                	add    %dl,(%rdi)
   1aee9:	0d 00 00 00 00       	or     $0x0,%eax
   1aeee:	00 00                	add    %al,(%rax)
   1aef0:	c4                   	(bad)  
   1aef1:	06                   	(bad)  
   1aef2:	00 00                	add    %al,(%rax)
   1aef4:	00 00                	add    %al,(%rax)
   1aef6:	00 00                	add    %al,(%rax)
   1aef8:	9f                   	lahf   
   1aef9:	07                   	(bad)  
   1aefa:	00 00                	add    %al,(%rax)
   1aefc:	00 00                	add    %al,(%rax)
   1aefe:	00 00                	add    %al,(%rax)
   1af00:	82                   	(bad)  
   1af01:	08 00                	or     %al,(%rax)
   1af03:	00 00                	add    %al,(%rax)
   1af05:	00 00                	add    %al,(%rax)
   1af07:	00 67 09             	add    %ah,0x9(%rdi)
   1af0a:	00 00                	add    %al,(%rax)
   1af0c:	00 00                	add    %al,(%rax)
   1af0e:	00 00                	add    %al,(%rax)
   1af10:	54                   	push   %rsp
   1af11:	0a 00                	or     (%rax),%al
   1af13:	00 00                	add    %al,(%rax)
   1af15:	00 00                	add    %al,(%rax)
   1af17:	00 37                	add    %dh,(%rdi)
   1af19:	0b 00                	or     (%rax),%eax
   1af1b:	00 00                	add    %al,(%rax)
   1af1d:	00 00                	add    %al,(%rax)
   1af1f:	00 22                	add    %ah,(%rdx)
   1af21:	0c 00                	or     $0x0,%al
   1af23:	00 00                	add    %al,(%rax)
   1af25:	00 00                	add    %al,(%rax)
   1af27:	00 0f                	add    %cl,(%rdi)
   1af29:	0d 00 00 00 00       	or     $0x0,%eax
   1af2e:	00 00                	add    %al,(%rax)
   1af30:	bc 06 00 00 00       	mov    $0x6,%esp
   1af35:	00 00                	add    %al,(%rax)
   1af37:	00 97 07 00 00 00    	add    %dl,0x7(%rdi)
   1af3d:	00 00                	add    %al,(%rax)
   1af3f:	00 7a 08             	add    %bh,0x8(%rdx)
   1af42:	00 00                	add    %al,(%rax)
   1af44:	00 00                	add    %al,(%rax)
   1af46:	00 00                	add    %al,(%rax)
   1af48:	5f                   	pop    %rdi
   1af49:	09 00                	or     %eax,(%rax)
   1af4b:	00 00                	add    %al,(%rax)
   1af4d:	00 00                	add    %al,(%rax)
   1af4f:	00 4c 0a 00          	add    %cl,0x0(%rdx,%rcx,1)
   1af53:	00 00                	add    %al,(%rax)
   1af55:	00 00                	add    %al,(%rax)
   1af57:	00 2f                	add    %ch,(%rdi)
   1af59:	0b 00                	or     (%rax),%eax
   1af5b:	00 00                	add    %al,(%rax)
   1af5d:	00 00                	add    %al,(%rax)
   1af5f:	00 1a                	add    %bl,(%rdx)
   1af61:	0c 00                	or     $0x0,%al
   1af63:	00 00                	add    %al,(%rax)
   1af65:	00 00                	add    %al,(%rax)
   1af67:	00 07                	add    %al,(%rdi)
   1af69:	0d 00 00 00 00       	or     $0x0,%eax
   1af6e:	00 00                	add    %al,(%rax)
   1af70:	b4 06                	mov    $0x6,%ah
   1af72:	00 00                	add    %al,(%rax)
   1af74:	00 00                	add    %al,(%rax)
   1af76:	00 00                	add    %al,(%rax)
   1af78:	8f 07                	popq   (%rdi)
   1af7a:	00 00                	add    %al,(%rax)
   1af7c:	00 00                	add    %al,(%rax)
   1af7e:	00 00                	add    %al,(%rax)
   1af80:	72 08                	jb     1af8a <__intel_memcpy+0x3ba>
   1af82:	00 00                	add    %al,(%rax)
   1af84:	00 00                	add    %al,(%rax)
   1af86:	00 00                	add    %al,(%rax)
   1af88:	57                   	push   %rdi
   1af89:	09 00                	or     %eax,(%rax)
   1af8b:	00 00                	add    %al,(%rax)
   1af8d:	00 00                	add    %al,(%rax)
   1af8f:	00 44 0a 00          	add    %al,0x0(%rdx,%rcx,1)
   1af93:	00 00                	add    %al,(%rax)
   1af95:	00 00                	add    %al,(%rax)
   1af97:	00 27                	add    %ah,(%rdi)
   1af99:	0b 00                	or     (%rax),%eax
   1af9b:	00 00                	add    %al,(%rax)
   1af9d:	00 00                	add    %al,(%rax)
   1af9f:	00 12                	add    %dl,(%rdx)
   1afa1:	0c 00                	or     $0x0,%al
   1afa3:	00 00                	add    %al,(%rax)
   1afa5:	00 00                	add    %al,(%rax)
   1afa7:	00 ff                	add    %bh,%bh
   1afa9:	0c 00                	or     $0x0,%al
   1afab:	00 00                	add    %al,(%rax)
   1afad:	00 00                	add    %al,(%rax)
   1afaf:	00 ac 06 00 00 00 00 	add    %ch,0x0(%rsi,%rax,1)
   1afb6:	00 00                	add    %al,(%rax)
   1afb8:	87 07                	xchg   %eax,(%rdi)
   1afba:	00 00                	add    %al,(%rax)
   1afbc:	00 00                	add    %al,(%rax)
   1afbe:	00 00                	add    %al,(%rax)
   1afc0:	6a 08                	pushq  $0x8
   1afc2:	00 00                	add    %al,(%rax)
   1afc4:	00 00                	add    %al,(%rax)
   1afc6:	00 00                	add    %al,(%rax)
   1afc8:	4f 09 00             	rex.WRXB or %r8,(%r8)
   1afcb:	00 00                	add    %al,(%rax)
   1afcd:	00 00                	add    %al,(%rax)
   1afcf:	00 3c 0a             	add    %bh,(%rdx,%rcx,1)
   1afd2:	00 00                	add    %al,(%rax)
   1afd4:	00 00                	add    %al,(%rax)
   1afd6:	00 00                	add    %al,(%rax)
   1afd8:	1f                   	(bad)  
   1afd9:	0b 00                	or     (%rax),%eax
   1afdb:	00 00                	add    %al,(%rax)
   1afdd:	00 00                	add    %al,(%rax)
   1afdf:	00 0a                	add    %cl,(%rdx)
   1afe1:	0c 00                	or     $0x0,%al
   1afe3:	00 00                	add    %al,(%rax)
   1afe5:	00 00                	add    %al,(%rax)
   1afe7:	00 f7                	add    %dh,%bh
   1afe9:	0c 00                	or     $0x0,%al
   1afeb:	00 00                	add    %al,(%rax)
   1afed:	00 00                	add    %al,(%rax)
   1afef:	00 a4 06 00 00 00 00 	add    %ah,0x0(%rsi,%rax,1)
   1aff6:	00 00                	add    %al,(%rax)
   1aff8:	7f 07                	jg     1b001 <__intel_memcpy+0x431>
   1affa:	00 00                	add    %al,(%rax)
   1affc:	00 00                	add    %al,(%rax)
   1affe:	00 00                	add    %al,(%rax)
   1b000:	62                   	(bad)  
   1b001:	08 00                	or     %al,(%rax)
   1b003:	00 00                	add    %al,(%rax)
   1b005:	00 00                	add    %al,(%rax)
   1b007:	00 47 09             	add    %al,0x9(%rdi)
   1b00a:	00 00                	add    %al,(%rax)
   1b00c:	00 00                	add    %al,(%rax)
   1b00e:	00 00                	add    %al,(%rax)
   1b010:	34 0a                	xor    $0xa,%al
   1b012:	00 00                	add    %al,(%rax)
   1b014:	00 00                	add    %al,(%rax)
   1b016:	00 00                	add    %al,(%rax)
   1b018:	17                   	(bad)  
   1b019:	0b 00                	or     (%rax),%eax
   1b01b:	00 00                	add    %al,(%rax)
   1b01d:	00 00                	add    %al,(%rax)
   1b01f:	00 02                	add    %al,(%rdx)
   1b021:	0c 00                	or     $0x0,%al
   1b023:	00 00                	add    %al,(%rax)
   1b025:	00 00                	add    %al,(%rax)
   1b027:	00 ef                	add    %ch,%bh
   1b029:	0c 00                	or     $0x0,%al
   1b02b:	00 00                	add    %al,(%rax)
   1b02d:	00 00                	add    %al,(%rax)
   1b02f:	00 9c 06 00 00 00 00 	add    %bl,0x0(%rsi,%rax,1)
   1b036:	00 00                	add    %al,(%rax)
   1b038:	77 07                	ja     1b041 <__intel_memcpy+0x471>
   1b03a:	00 00                	add    %al,(%rax)
   1b03c:	00 00                	add    %al,(%rax)
   1b03e:	00 00                	add    %al,(%rax)
   1b040:	5a                   	pop    %rdx
   1b041:	08 00                	or     %al,(%rax)
   1b043:	00 00                	add    %al,(%rax)
   1b045:	00 00                	add    %al,(%rax)
   1b047:	00 3f                	add    %bh,(%rdi)
   1b049:	09 00                	or     %eax,(%rax)
   1b04b:	00 00                	add    %al,(%rax)
   1b04d:	00 00                	add    %al,(%rax)
   1b04f:	00 2c 0a             	add    %ch,(%rdx,%rcx,1)
   1b052:	00 00                	add    %al,(%rax)
   1b054:	00 00                	add    %al,(%rax)
   1b056:	00 00                	add    %al,(%rax)
   1b058:	0f 0b                	ud2    
   1b05a:	00 00                	add    %al,(%rax)
   1b05c:	00 00                	add    %al,(%rax)
   1b05e:	00 00                	add    %al,(%rax)
   1b060:	fa                   	cli    
   1b061:	0b 00                	or     (%rax),%eax
   1b063:	00 00                	add    %al,(%rax)
   1b065:	00 00                	add    %al,(%rax)
   1b067:	00 e7                	add    %ah,%bh
   1b069:	0c 00                	or     $0x0,%al
   1b06b:	00 00                	add    %al,(%rax)
   1b06d:	00 00                	add    %al,(%rax)
   1b06f:	00 94 06 00 00 00 00 	add    %dl,0x0(%rsi,%rax,1)
   1b076:	00 00                	add    %al,(%rax)
   1b078:	6f                   	outsl  %ds:(%rsi),(%dx)
   1b079:	07                   	(bad)  
   1b07a:	00 00                	add    %al,(%rax)
   1b07c:	00 00                	add    %al,(%rax)
   1b07e:	00 00                	add    %al,(%rax)
   1b080:	52                   	push   %rdx
   1b081:	08 00                	or     %al,(%rax)
   1b083:	00 00                	add    %al,(%rax)
   1b085:	00 00                	add    %al,(%rax)
   1b087:	00 37                	add    %dh,(%rdi)
   1b089:	09 00                	or     %eax,(%rax)
   1b08b:	00 00                	add    %al,(%rax)
   1b08d:	00 00                	add    %al,(%rax)
   1b08f:	00 24 0a             	add    %ah,(%rdx,%rcx,1)
   1b092:	00 00                	add    %al,(%rax)
   1b094:	00 00                	add    %al,(%rax)
   1b096:	00 00                	add    %al,(%rax)
   1b098:	07                   	(bad)  
   1b099:	0b 00                	or     (%rax),%eax
   1b09b:	00 00                	add    %al,(%rax)
   1b09d:	00 00                	add    %al,(%rax)
   1b09f:	00 f2                	add    %dh,%dl
   1b0a1:	0b 00                	or     (%rax),%eax
   1b0a3:	00 00                	add    %al,(%rax)
   1b0a5:	00 00                	add    %al,(%rax)
   1b0a7:	00 df                	add    %bl,%bh
   1b0a9:	0c 00                	or     $0x0,%al
   1b0ab:	00 00                	add    %al,(%rax)
   1b0ad:	00 00                	add    %al,(%rax)
   1b0af:	00 8c 06 00 00 00 00 	add    %cl,0x0(%rsi,%rax,1)
   1b0b6:	00 00                	add    %al,(%rax)
   1b0b8:	67 07                	addr32 (bad) 
   1b0ba:	00 00                	add    %al,(%rax)
   1b0bc:	00 00                	add    %al,(%rax)
   1b0be:	00 00                	add    %al,(%rax)
   1b0c0:	4a 08 00             	rex.WX or %al,(%rax)
   1b0c3:	00 00                	add    %al,(%rax)
   1b0c5:	00 00                	add    %al,(%rax)
   1b0c7:	00 2f                	add    %ch,(%rdi)
   1b0c9:	09 00                	or     %eax,(%rax)
   1b0cb:	00 00                	add    %al,(%rax)
   1b0cd:	00 00                	add    %al,(%rax)
   1b0cf:	00 1c 0a             	add    %bl,(%rdx,%rcx,1)
   1b0d2:	00 00                	add    %al,(%rax)
   1b0d4:	00 00                	add    %al,(%rax)
   1b0d6:	00 00                	add    %al,(%rax)
   1b0d8:	ff 0a                	decl   (%rdx)
   1b0da:	00 00                	add    %al,(%rax)
   1b0dc:	00 00                	add    %al,(%rax)
   1b0de:	00 00                	add    %al,(%rax)
   1b0e0:	ea                   	(bad)  
   1b0e1:	0b 00                	or     (%rax),%eax
   1b0e3:	00 00                	add    %al,(%rax)
   1b0e5:	00 00                	add    %al,(%rax)
   1b0e7:	00 d7                	add    %dl,%bh
   1b0e9:	0c 00                	or     $0x0,%al
   1b0eb:	00 00                	add    %al,(%rax)
   1b0ed:	00 00                	add    %al,(%rax)
   1b0ef:	00 84 06 00 00 00 00 	add    %al,0x0(%rsi,%rax,1)
   1b0f6:	00 00                	add    %al,(%rax)
   1b0f8:	5f                   	pop    %rdi
   1b0f9:	07                   	(bad)  
   1b0fa:	00 00                	add    %al,(%rax)
   1b0fc:	00 00                	add    %al,(%rax)
   1b0fe:	00 00                	add    %al,(%rax)
   1b100:	42 08 00             	rex.X or %al,(%rax)
   1b103:	00 00                	add    %al,(%rax)
   1b105:	00 00                	add    %al,(%rax)
   1b107:	00 27                	add    %ah,(%rdi)
   1b109:	09 00                	or     %eax,(%rax)
   1b10b:	00 00                	add    %al,(%rax)
   1b10d:	00 00                	add    %al,(%rax)
   1b10f:	00 14 0a             	add    %dl,(%rdx,%rcx,1)
   1b112:	00 00                	add    %al,(%rax)
   1b114:	00 00                	add    %al,(%rax)
   1b116:	00 00                	add    %al,(%rax)
   1b118:	f7                   	(bad)  
   1b119:	0a 00                	or     (%rax),%al
   1b11b:	00 00                	add    %al,(%rax)
   1b11d:	00 00                	add    %al,(%rax)
   1b11f:	00 e2                	add    %ah,%dl
   1b121:	0b 00                	or     (%rax),%eax
   1b123:	00 00                	add    %al,(%rax)
   1b125:	00 00                	add    %al,(%rax)
   1b127:	00 cf                	add    %cl,%bh
   1b129:	0c 00                	or     $0x0,%al
   1b12b:	00 00                	add    %al,(%rax)
   1b12d:	00 00                	add    %al,(%rax)
   1b12f:	00 7c 06 00          	add    %bh,0x0(%rsi,%rax,1)
   1b133:	00 00                	add    %al,(%rax)
   1b135:	00 00                	add    %al,(%rax)
   1b137:	00 57 07             	add    %dl,0x7(%rdi)
   1b13a:	00 00                	add    %al,(%rax)
   1b13c:	00 00                	add    %al,(%rax)
   1b13e:	00 00                	add    %al,(%rax)
   1b140:	3a 08                	cmp    (%rax),%cl
   1b142:	00 00                	add    %al,(%rax)
   1b144:	00 00                	add    %al,(%rax)
   1b146:	00 00                	add    %al,(%rax)
   1b148:	1f                   	(bad)  
   1b149:	09 00                	or     %eax,(%rax)
   1b14b:	00 00                	add    %al,(%rax)
   1b14d:	00 00                	add    %al,(%rax)
   1b14f:	00 0c 0a             	add    %cl,(%rdx,%rcx,1)
   1b152:	00 00                	add    %al,(%rax)
   1b154:	00 00                	add    %al,(%rax)
   1b156:	00 00                	add    %al,(%rax)
   1b158:	ef                   	out    %eax,(%dx)
   1b159:	0a 00                	or     (%rax),%al
   1b15b:	00 00                	add    %al,(%rax)
   1b15d:	00 00                	add    %al,(%rax)
   1b15f:	00 da                	add    %bl,%dl
   1b161:	0b 00                	or     (%rax),%eax
   1b163:	00 00                	add    %al,(%rax)
   1b165:	00 00                	add    %al,(%rax)
   1b167:	00 c7                	add    %al,%bh
   1b169:	0c 00                	or     $0x0,%al
   1b16b:	00 00                	add    %al,(%rax)
   1b16d:	00 00                	add    %al,(%rax)
   1b16f:	00 74 06 00          	add    %dh,0x0(%rsi,%rax,1)
   1b173:	00 00                	add    %al,(%rax)
   1b175:	00 00                	add    %al,(%rax)
   1b177:	00 49 07             	add    %cl,0x7(%rcx)
   1b17a:	00 00                	add    %al,(%rax)
   1b17c:	00 00                	add    %al,(%rax)
   1b17e:	00 00                	add    %al,(%rax)
   1b180:	2c 08                	sub    $0x8,%al
   1b182:	00 00                	add    %al,(%rax)
   1b184:	00 00                	add    %al,(%rax)
   1b186:	00 00                	add    %al,(%rax)
   1b188:	11 09                	adc    %ecx,(%rcx)
   1b18a:	00 00                	add    %al,(%rax)
   1b18c:	00 00                	add    %al,(%rax)
   1b18e:	00 00                	add    %al,(%rax)
   1b190:	fe 09                	decb   (%rcx)
   1b192:	00 00                	add    %al,(%rax)
   1b194:	00 00                	add    %al,(%rax)
   1b196:	00 00                	add    %al,(%rax)
   1b198:	e1 0a                	loope  1b1a4 <__intel_memcpy+0x5d4>
   1b19a:	00 00                	add    %al,(%rax)
   1b19c:	00 00                	add    %al,(%rax)
   1b19e:	00 00                	add    %al,(%rax)
   1b1a0:	cc                   	int3   
   1b1a1:	0b 00                	or     (%rax),%eax
   1b1a3:	00 00                	add    %al,(%rax)
   1b1a5:	00 00                	add    %al,(%rax)
   1b1a7:	00 b9 0c 00 00 00    	add    %bh,0xc(%rcx)
   1b1ad:	00 00                	add    %al,(%rax)
   1b1af:	00 66 06             	add    %ah,0x6(%rsi)
   1b1b2:	00 00                	add    %al,(%rax)
   1b1b4:	00 00                	add    %al,(%rax)
   1b1b6:	00 00                	add    %al,(%rax)
   1b1b8:	3b 07                	cmp    (%rdi),%eax
   1b1ba:	00 00                	add    %al,(%rax)
   1b1bc:	00 00                	add    %al,(%rax)
   1b1be:	00 00                	add    %al,(%rax)
   1b1c0:	1e                   	(bad)  
   1b1c1:	08 00                	or     %al,(%rax)
   1b1c3:	00 00                	add    %al,(%rax)
   1b1c5:	00 00                	add    %al,(%rax)
   1b1c7:	00 03                	add    %al,(%rbx)
   1b1c9:	09 00                	or     %eax,(%rax)
   1b1cb:	00 00                	add    %al,(%rax)
   1b1cd:	00 00                	add    %al,(%rax)
   1b1cf:	00 f0                	add    %dh,%al
   1b1d1:	09 00                	or     %eax,(%rax)
   1b1d3:	00 00                	add    %al,(%rax)
   1b1d5:	00 00                	add    %al,(%rax)
   1b1d7:	00 d3                	add    %dl,%bl
   1b1d9:	0a 00                	or     (%rax),%al
   1b1db:	00 00                	add    %al,(%rax)
   1b1dd:	00 00                	add    %al,(%rax)
   1b1df:	00 be 0b 00 00 00    	add    %bh,0xb(%rsi)
   1b1e5:	00 00                	add    %al,(%rax)
   1b1e7:	00 ab 0c 00 00 00    	add    %ch,0xc(%rbx)
   1b1ed:	00 00                	add    %al,(%rax)
   1b1ef:	00 58 06             	add    %bl,0x6(%rax)
   1b1f2:	00 00                	add    %al,(%rax)
   1b1f4:	00 00                	add    %al,(%rax)
   1b1f6:	00 00                	add    %al,(%rax)
   1b1f8:	2d 07 00 00 00       	sub    $0x7,%eax
   1b1fd:	00 00                	add    %al,(%rax)
   1b1ff:	00 10                	add    %dl,(%rax)
   1b201:	08 00                	or     %al,(%rax)
   1b203:	00 00                	add    %al,(%rax)
   1b205:	00 00                	add    %al,(%rax)
   1b207:	00 f5                	add    %dh,%ch
   1b209:	08 00                	or     %al,(%rax)
   1b20b:	00 00                	add    %al,(%rax)
   1b20d:	00 00                	add    %al,(%rax)
   1b20f:	00 e2                	add    %ah,%dl
   1b211:	09 00                	or     %eax,(%rax)
   1b213:	00 00                	add    %al,(%rax)
   1b215:	00 00                	add    %al,(%rax)
   1b217:	00 c5                	add    %al,%ch
   1b219:	0a 00                	or     (%rax),%al
   1b21b:	00 00                	add    %al,(%rax)
   1b21d:	00 00                	add    %al,(%rax)
   1b21f:	00 b0 0b 00 00 00    	add    %dh,0xb(%rax)
   1b225:	00 00                	add    %al,(%rax)
   1b227:	00 9d 0c 00 00 00    	add    %bl,0xc(%rbp)
   1b22d:	00 00                	add    %al,(%rax)
   1b22f:	00 4a 06             	add    %cl,0x6(%rdx)
   1b232:	00 00                	add    %al,(%rax)
   1b234:	00 00                	add    %al,(%rax)
   1b236:	00 00                	add    %al,(%rax)
   1b238:	1f                   	(bad)  
   1b239:	07                   	(bad)  
   1b23a:	00 00                	add    %al,(%rax)
   1b23c:	00 00                	add    %al,(%rax)
   1b23e:	00 00                	add    %al,(%rax)
   1b240:	02 08                	add    (%rax),%cl
   1b242:	00 00                	add    %al,(%rax)
   1b244:	00 00                	add    %al,(%rax)
   1b246:	00 00                	add    %al,(%rax)
   1b248:	e7 08                	out    %eax,$0x8
   1b24a:	00 00                	add    %al,(%rax)
   1b24c:	00 00                	add    %al,(%rax)
   1b24e:	00 00                	add    %al,(%rax)
   1b250:	d4                   	(bad)  
   1b251:	09 00                	or     %eax,(%rax)
   1b253:	00 00                	add    %al,(%rax)
   1b255:	00 00                	add    %al,(%rax)
   1b257:	00 b7 0a 00 00 00    	add    %dh,0xa(%rdi)
   1b25d:	00 00                	add    %al,(%rax)
   1b25f:	00 a2 0b 00 00 00    	add    %ah,0xb(%rdx)
   1b265:	00 00                	add    %al,(%rax)
   1b267:	00 8f 0c 00 00 00    	add    %cl,0xc(%rdi)
   1b26d:	00 00                	add    %al,(%rax)
   1b26f:	00 3c 06             	add    %bh,(%rsi,%rax,1)
   1b272:	00 00                	add    %al,(%rax)
   1b274:	00 00                	add    %al,(%rax)
   1b276:	00 00                	add    %al,(%rax)
   1b278:	11 07                	adc    %eax,(%rdi)
   1b27a:	00 00                	add    %al,(%rax)
   1b27c:	00 00                	add    %al,(%rax)
   1b27e:	00 00                	add    %al,(%rax)
   1b280:	f4                   	hlt    
   1b281:	07                   	(bad)  
   1b282:	00 00                	add    %al,(%rax)
   1b284:	00 00                	add    %al,(%rax)
   1b286:	00 00                	add    %al,(%rax)
   1b288:	d9 08                	(bad)  (%rax)
   1b28a:	00 00                	add    %al,(%rax)
   1b28c:	00 00                	add    %al,(%rax)
   1b28e:	00 00                	add    %al,(%rax)
   1b290:	c6                   	(bad)  
   1b291:	09 00                	or     %eax,(%rax)
   1b293:	00 00                	add    %al,(%rax)
   1b295:	00 00                	add    %al,(%rax)
   1b297:	00 a9 0a 00 00 00    	add    %ch,0xa(%rcx)
   1b29d:	00 00                	add    %al,(%rax)
   1b29f:	00 94 0b 00 00 00 00 	add    %dl,0x0(%rbx,%rcx,1)
   1b2a6:	00 00                	add    %al,(%rax)
   1b2a8:	81 0c 00 00 00 00 00 	orl    $0x0,(%rax,%rax,1)
   1b2af:	00 2e                	add    %ch,(%rsi)
   1b2b1:	06                   	(bad)  
   1b2b2:	00 00                	add    %al,(%rax)
   1b2b4:	00 00                	add    %al,(%rax)
   1b2b6:	00 00                	add    %al,(%rax)
   1b2b8:	03 07                	add    (%rdi),%eax
   1b2ba:	00 00                	add    %al,(%rax)
   1b2bc:	00 00                	add    %al,(%rax)
   1b2be:	00 00                	add    %al,(%rax)
   1b2c0:	e6 07                	out    %al,$0x7
   1b2c2:	00 00                	add    %al,(%rax)
   1b2c4:	00 00                	add    %al,(%rax)
   1b2c6:	00 00                	add    %al,(%rax)
   1b2c8:	cb                   	lret   
   1b2c9:	08 00                	or     %al,(%rax)
   1b2cb:	00 00                	add    %al,(%rax)
   1b2cd:	00 00                	add    %al,(%rax)
   1b2cf:	00 b8 09 00 00 00    	add    %bh,0x9(%rax)
   1b2d5:	00 00                	add    %al,(%rax)
   1b2d7:	00 9b 0a 00 00 00    	add    %bl,0xa(%rbx)
   1b2dd:	00 00                	add    %al,(%rax)
   1b2df:	00 86 0b 00 00 00    	add    %al,0xb(%rsi)
   1b2e5:	00 00                	add    %al,(%rax)
   1b2e7:	00 73 0c             	add    %dh,0xc(%rbx)
   1b2ea:	00 00                	add    %al,(%rax)
   1b2ec:	00 00                	add    %al,(%rax)
   1b2ee:	00 00                	add    %al,(%rax)
   1b2f0:	20 06                	and    %al,(%rsi)
   1b2f2:	00 00                	add    %al,(%rax)
   1b2f4:	00 00                	add    %al,(%rax)
   1b2f6:	00 00                	add    %al,(%rax)
   1b2f8:	f5                   	cmc    
   1b2f9:	06                   	(bad)  
   1b2fa:	00 00                	add    %al,(%rax)
   1b2fc:	00 00                	add    %al,(%rax)
   1b2fe:	00 00                	add    %al,(%rax)
   1b300:	d8 07                	fadds  (%rdi)
   1b302:	00 00                	add    %al,(%rax)
   1b304:	00 00                	add    %al,(%rax)
   1b306:	00 00                	add    %al,(%rax)
   1b308:	bd 08 00 00 00       	mov    $0x8,%ebp
   1b30d:	00 00                	add    %al,(%rax)
   1b30f:	00 aa 09 00 00 00    	add    %ch,0x9(%rdx)
   1b315:	00 00                	add    %al,(%rax)
   1b317:	00 8d 0a 00 00 00    	add    %cl,0xa(%rbp)
   1b31d:	00 00                	add    %al,(%rax)
   1b31f:	00 78 0b             	add    %bh,0xb(%rax)
   1b322:	00 00                	add    %al,(%rax)
   1b324:	00 00                	add    %al,(%rax)
   1b326:	00 00                	add    %al,(%rax)
   1b328:	65 0c 00             	gs or  $0x0,%al
   1b32b:	00 00                	add    %al,(%rax)
   1b32d:	00 00                	add    %al,(%rax)
   1b32f:	00 c3                	add    %al,%bl
   1b331:	48 f7 c1 01 00 00 00 	test   $0x1,%rcx
   1b338:	74 12                	je     1b34c <__intel_memcpy+0x77c>
   1b33a:	44 8a 12             	mov    (%rdx),%r10b
   1b33d:	44 88 11             	mov    %r10b,(%rcx)
   1b340:	48 83 c1 01          	add    $0x1,%rcx
   1b344:	49 83 e8 01          	sub    $0x1,%r8
   1b348:	48 83 c2 01          	add    $0x1,%rdx
   1b34c:	48 f7 c1 02 00 00 00 	test   $0x2,%rcx
   1b353:	74 14                	je     1b369 <__intel_memcpy+0x799>
   1b355:	66 44 8b 12          	mov    (%rdx),%r10w
   1b359:	66 44 89 11          	mov    %r10w,(%rcx)
   1b35d:	48 83 c1 02          	add    $0x2,%rcx
   1b361:	49 83 e8 02          	sub    $0x2,%r8
   1b365:	48 83 c2 02          	add    $0x2,%rdx
   1b369:	48 f7 c1 04 00 00 00 	test   $0x4,%rcx
   1b370:	0f 84 a3 f8 ff ff    	je     1ac19 <__intel_memcpy+0x49>
   1b376:	44 8b 12             	mov    (%rdx),%r10d
   1b379:	44 89 11             	mov    %r10d,(%rcx)
   1b37c:	49 83 e8 04          	sub    $0x4,%r8
   1b380:	48 83 c2 04          	add    $0x4,%rdx
   1b384:	48 83 c1 04          	add    $0x4,%rcx
   1b388:	e9 8c f8 ff ff       	jmpq   1ac19 <__intel_memcpy+0x49>
   1b38d:	0f 1f 00             	nopl   (%rax)
   1b390:	4c 8b 8a 50 ff ff ff 	mov    -0xb0(%rdx),%r9
   1b397:	4c 89 89 50 ff ff ff 	mov    %r9,-0xb0(%rcx)
   1b39e:	4c 8b 9a 58 ff ff ff 	mov    -0xa8(%rdx),%r11
   1b3a5:	4c 89 99 58 ff ff ff 	mov    %r11,-0xa8(%rcx)
   1b3ac:	4c 8b 8a 60 ff ff ff 	mov    -0xa0(%rdx),%r9
   1b3b3:	4c 89 89 60 ff ff ff 	mov    %r9,-0xa0(%rcx)
   1b3ba:	4c 8b 92 68 ff ff ff 	mov    -0x98(%rdx),%r10
   1b3c1:	4c 89 91 68 ff ff ff 	mov    %r10,-0x98(%rcx)
   1b3c8:	4c 8b 8a 70 ff ff ff 	mov    -0x90(%rdx),%r9
   1b3cf:	4c 89 89 70 ff ff ff 	mov    %r9,-0x90(%rcx)
   1b3d6:	4c 8b 92 78 ff ff ff 	mov    -0x88(%rdx),%r10
   1b3dd:	4c 89 91 78 ff ff ff 	mov    %r10,-0x88(%rcx)
   1b3e4:	4c 8b 4a 80          	mov    -0x80(%rdx),%r9
   1b3e8:	4c 89 49 80          	mov    %r9,-0x80(%rcx)
   1b3ec:	4c 8b 52 88          	mov    -0x78(%rdx),%r10
   1b3f0:	4c 89 51 88          	mov    %r10,-0x78(%rcx)
   1b3f4:	4c 8b 4a 90          	mov    -0x70(%rdx),%r9
   1b3f8:	4c 89 49 90          	mov    %r9,-0x70(%rcx)
   1b3fc:	4c 8b 52 98          	mov    -0x68(%rdx),%r10
   1b400:	4c 89 51 98          	mov    %r10,-0x68(%rcx)
   1b404:	4c 8b 4a a0          	mov    -0x60(%rdx),%r9
   1b408:	4c 89 49 a0          	mov    %r9,-0x60(%rcx)
   1b40c:	4c 8b 52 a8          	mov    -0x58(%rdx),%r10
   1b410:	4c 89 51 a8          	mov    %r10,-0x58(%rcx)
   1b414:	4c 8b 4a b0          	mov    -0x50(%rdx),%r9
   1b418:	4c 89 49 b0          	mov    %r9,-0x50(%rcx)
   1b41c:	4c 8b 52 b8          	mov    -0x48(%rdx),%r10
   1b420:	4c 89 51 b8          	mov    %r10,-0x48(%rcx)
   1b424:	4c 8b 4a c0          	mov    -0x40(%rdx),%r9
   1b428:	4c 89 49 c0          	mov    %r9,-0x40(%rcx)
   1b42c:	4c 8b 52 c8          	mov    -0x38(%rdx),%r10
   1b430:	4c 89 51 c8          	mov    %r10,-0x38(%rcx)
   1b434:	4c 8b 4a d0          	mov    -0x30(%rdx),%r9
   1b438:	4c 89 49 d0          	mov    %r9,-0x30(%rcx)
   1b43c:	4c 8b 52 d8          	mov    -0x28(%rdx),%r10
   1b440:	4c 89 51 d8          	mov    %r10,-0x28(%rcx)
   1b444:	4c 8b 4a e0          	mov    -0x20(%rdx),%r9
   1b448:	4c 89 49 e0          	mov    %r9,-0x20(%rcx)
   1b44c:	4c 8b 52 e8          	mov    -0x18(%rdx),%r10
   1b450:	4c 89 51 e8          	mov    %r10,-0x18(%rcx)
   1b454:	4c 8b 4a f0          	mov    -0x10(%rdx),%r9
   1b458:	4c 89 49 f0          	mov    %r9,-0x10(%rcx)
   1b45c:	4c 8b 52 f8          	mov    -0x8(%rdx),%r10
   1b460:	4c 89 51 f8          	mov    %r10,-0x8(%rcx)
   1b464:	c3                   	retq   
   1b465:	4c 8b 8a 4f ff ff ff 	mov    -0xb1(%rdx),%r9
   1b46c:	4c 89 89 4f ff ff ff 	mov    %r9,-0xb1(%rcx)
   1b473:	4c 8b 8a 57 ff ff ff 	mov    -0xa9(%rdx),%r9
   1b47a:	4c 89 89 57 ff ff ff 	mov    %r9,-0xa9(%rcx)
   1b481:	4c 8b 8a 5f ff ff ff 	mov    -0xa1(%rdx),%r9
   1b488:	4c 89 89 5f ff ff ff 	mov    %r9,-0xa1(%rcx)
   1b48f:	4c 8b 8a 67 ff ff ff 	mov    -0x99(%rdx),%r9
   1b496:	4c 89 89 67 ff ff ff 	mov    %r9,-0x99(%rcx)
   1b49d:	4c 8b 8a 6f ff ff ff 	mov    -0x91(%rdx),%r9
   1b4a4:	4c 89 89 6f ff ff ff 	mov    %r9,-0x91(%rcx)
   1b4ab:	4c 8b 8a 77 ff ff ff 	mov    -0x89(%rdx),%r9
   1b4b2:	4c 89 89 77 ff ff ff 	mov    %r9,-0x89(%rcx)
   1b4b9:	4c 8b 8a 7f ff ff ff 	mov    -0x81(%rdx),%r9
   1b4c0:	4c 89 89 7f ff ff ff 	mov    %r9,-0x81(%rcx)
   1b4c7:	4c 8b 4a 87          	mov    -0x79(%rdx),%r9
   1b4cb:	4c 89 49 87          	mov    %r9,-0x79(%rcx)
   1b4cf:	4c 8b 4a 8f          	mov    -0x71(%rdx),%r9
   1b4d3:	4c 89 49 8f          	mov    %r9,-0x71(%rcx)
   1b4d7:	4c 8b 4a 97          	mov    -0x69(%rdx),%r9
   1b4db:	4c 89 49 97          	mov    %r9,-0x69(%rcx)
   1b4df:	4c 8b 4a 9f          	mov    -0x61(%rdx),%r9
   1b4e3:	4c 89 49 9f          	mov    %r9,-0x61(%rcx)
   1b4e7:	4c 8b 5a a7          	mov    -0x59(%rdx),%r11
   1b4eb:	4c 89 59 a7          	mov    %r11,-0x59(%rcx)
   1b4ef:	4c 8b 52 af          	mov    -0x51(%rdx),%r10
   1b4f3:	4c 89 51 af          	mov    %r10,-0x51(%rcx)
   1b4f7:	4c 8b 4a b7          	mov    -0x49(%rdx),%r9
   1b4fb:	4c 89 49 b7          	mov    %r9,-0x49(%rcx)
   1b4ff:	4c 8b 5a bf          	mov    -0x41(%rdx),%r11
   1b503:	4c 89 59 bf          	mov    %r11,-0x41(%rcx)
   1b507:	4c 8b 52 c7          	mov    -0x39(%rdx),%r10
   1b50b:	4c 89 51 c7          	mov    %r10,-0x39(%rcx)
   1b50f:	4c 8b 4a cf          	mov    -0x31(%rdx),%r9
   1b513:	4c 89 49 cf          	mov    %r9,-0x31(%rcx)
   1b517:	4c 8b 5a d7          	mov    -0x29(%rdx),%r11
   1b51b:	4c 89 59 d7          	mov    %r11,-0x29(%rcx)
   1b51f:	4c 8b 52 df          	mov    -0x21(%rdx),%r10
   1b523:	4c 89 51 df          	mov    %r10,-0x21(%rcx)
   1b527:	4c 8b 4a e7          	mov    -0x19(%rdx),%r9
   1b52b:	4c 89 49 e7          	mov    %r9,-0x19(%rcx)
   1b52f:	4c 8b 5a ef          	mov    -0x11(%rdx),%r11
   1b533:	4c 89 59 ef          	mov    %r11,-0x11(%rcx)
   1b537:	4c 8b 52 f7          	mov    -0x9(%rdx),%r10
   1b53b:	4c 89 51 f7          	mov    %r10,-0x9(%rcx)
   1b53f:	44 8a 4a ff          	mov    -0x1(%rdx),%r9b
   1b543:	44 88 49 ff          	mov    %r9b,-0x1(%rcx)
   1b547:	c3                   	retq   
   1b548:	4c 8b 8a 4e ff ff ff 	mov    -0xb2(%rdx),%r9
   1b54f:	4c 89 89 4e ff ff ff 	mov    %r9,-0xb2(%rcx)
   1b556:	4c 8b 8a 56 ff ff ff 	mov    -0xaa(%rdx),%r9
   1b55d:	4c 89 89 56 ff ff ff 	mov    %r9,-0xaa(%rcx)
   1b564:	4c 8b 8a 5e ff ff ff 	mov    -0xa2(%rdx),%r9
   1b56b:	4c 89 89 5e ff ff ff 	mov    %r9,-0xa2(%rcx)
   1b572:	4c 8b 8a 66 ff ff ff 	mov    -0x9a(%rdx),%r9
   1b579:	4c 89 89 66 ff ff ff 	mov    %r9,-0x9a(%rcx)
   1b580:	4c 8b 8a 6e ff ff ff 	mov    -0x92(%rdx),%r9
   1b587:	4c 89 89 6e ff ff ff 	mov    %r9,-0x92(%rcx)
   1b58e:	4c 8b 8a 76 ff ff ff 	mov    -0x8a(%rdx),%r9
   1b595:	4c 89 89 76 ff ff ff 	mov    %r9,-0x8a(%rcx)
   1b59c:	4c 8b 8a 7e ff ff ff 	mov    -0x82(%rdx),%r9
   1b5a3:	4c 89 89 7e ff ff ff 	mov    %r9,-0x82(%rcx)
   1b5aa:	4c 8b 4a 86          	mov    -0x7a(%rdx),%r9
   1b5ae:	4c 89 49 86          	mov    %r9,-0x7a(%rcx)
   1b5b2:	4c 8b 4a 8e          	mov    -0x72(%rdx),%r9
   1b5b6:	4c 89 49 8e          	mov    %r9,-0x72(%rcx)
   1b5ba:	4c 8b 4a 96          	mov    -0x6a(%rdx),%r9
   1b5be:	4c 89 49 96          	mov    %r9,-0x6a(%rcx)
   1b5c2:	4c 8b 4a 9e          	mov    -0x62(%rdx),%r9
   1b5c6:	4c 89 49 9e          	mov    %r9,-0x62(%rcx)
   1b5ca:	4c 8b 4a a6          	mov    -0x5a(%rdx),%r9
   1b5ce:	4c 89 49 a6          	mov    %r9,-0x5a(%rcx)
   1b5d2:	4c 8b 4a ae          	mov    -0x52(%rdx),%r9
   1b5d6:	4c 89 49 ae          	mov    %r9,-0x52(%rcx)
   1b5da:	4c 8b 4a b6          	mov    -0x4a(%rdx),%r9
   1b5de:	4c 89 49 b6          	mov    %r9,-0x4a(%rcx)
   1b5e2:	4c 8b 4a be          	mov    -0x42(%rdx),%r9
   1b5e6:	4c 89 49 be          	mov    %r9,-0x42(%rcx)
   1b5ea:	4c 8b 4a c6          	mov    -0x3a(%rdx),%r9
   1b5ee:	4c 89 49 c6          	mov    %r9,-0x3a(%rcx)
   1b5f2:	4c 8b 4a ce          	mov    -0x32(%rdx),%r9
   1b5f6:	4c 89 49 ce          	mov    %r9,-0x32(%rcx)
   1b5fa:	4c 8b 4a d6          	mov    -0x2a(%rdx),%r9
   1b5fe:	4c 89 49 d6          	mov    %r9,-0x2a(%rcx)
   1b602:	4c 8b 4a de          	mov    -0x22(%rdx),%r9
   1b606:	4c 89 49 de          	mov    %r9,-0x22(%rcx)
   1b60a:	4c 8b 4a e6          	mov    -0x1a(%rdx),%r9
   1b60e:	4c 89 49 e6          	mov    %r9,-0x1a(%rcx)
   1b612:	4c 8b 4a ee          	mov    -0x12(%rdx),%r9
   1b616:	4c 89 49 ee          	mov    %r9,-0x12(%rcx)
   1b61a:	4c 8b 4a f6          	mov    -0xa(%rdx),%r9
   1b61e:	4c 89 49 f6          	mov    %r9,-0xa(%rcx)
   1b622:	66 44 8b 4a fe       	mov    -0x2(%rdx),%r9w
   1b627:	66 44 89 49 fe       	mov    %r9w,-0x2(%rcx)
   1b62c:	c3                   	retq   
   1b62d:	4c 8b 8a 4d ff ff ff 	mov    -0xb3(%rdx),%r9
   1b634:	4c 89 89 4d ff ff ff 	mov    %r9,-0xb3(%rcx)
   1b63b:	4c 8b 8a 55 ff ff ff 	mov    -0xab(%rdx),%r9
   1b642:	4c 89 89 55 ff ff ff 	mov    %r9,-0xab(%rcx)
   1b649:	4c 8b 8a 5d ff ff ff 	mov    -0xa3(%rdx),%r9
   1b650:	4c 89 89 5d ff ff ff 	mov    %r9,-0xa3(%rcx)
   1b657:	4c 8b 8a 65 ff ff ff 	mov    -0x9b(%rdx),%r9
   1b65e:	4c 89 89 65 ff ff ff 	mov    %r9,-0x9b(%rcx)
   1b665:	4c 8b 8a 6d ff ff ff 	mov    -0x93(%rdx),%r9
   1b66c:	4c 89 89 6d ff ff ff 	mov    %r9,-0x93(%rcx)
   1b673:	4c 8b 8a 75 ff ff ff 	mov    -0x8b(%rdx),%r9
   1b67a:	4c 89 89 75 ff ff ff 	mov    %r9,-0x8b(%rcx)
   1b681:	4c 8b 8a 7d ff ff ff 	mov    -0x83(%rdx),%r9
   1b688:	4c 89 89 7d ff ff ff 	mov    %r9,-0x83(%rcx)
   1b68f:	4c 8b 4a 85          	mov    -0x7b(%rdx),%r9
   1b693:	4c 89 49 85          	mov    %r9,-0x7b(%rcx)
   1b697:	4c 8b 4a 8d          	mov    -0x73(%rdx),%r9
   1b69b:	4c 89 49 8d          	mov    %r9,-0x73(%rcx)
   1b69f:	4c 8b 4a 95          	mov    -0x6b(%rdx),%r9
   1b6a3:	4c 89 49 95          	mov    %r9,-0x6b(%rcx)
   1b6a7:	4c 8b 4a 9d          	mov    -0x63(%rdx),%r9
   1b6ab:	4c 89 49 9d          	mov    %r9,-0x63(%rcx)
   1b6af:	4c 8b 4a a5          	mov    -0x5b(%rdx),%r9
   1b6b3:	4c 89 49 a5          	mov    %r9,-0x5b(%rcx)
   1b6b7:	4c 8b 4a ad          	mov    -0x53(%rdx),%r9
   1b6bb:	4c 89 49 ad          	mov    %r9,-0x53(%rcx)
   1b6bf:	4c 8b 4a b5          	mov    -0x4b(%rdx),%r9
   1b6c3:	4c 89 49 b5          	mov    %r9,-0x4b(%rcx)
   1b6c7:	4c 8b 4a bd          	mov    -0x43(%rdx),%r9
   1b6cb:	4c 89 49 bd          	mov    %r9,-0x43(%rcx)
   1b6cf:	4c 8b 4a c5          	mov    -0x3b(%rdx),%r9
   1b6d3:	4c 89 49 c5          	mov    %r9,-0x3b(%rcx)
   1b6d7:	4c 8b 4a cd          	mov    -0x33(%rdx),%r9
   1b6db:	4c 89 49 cd          	mov    %r9,-0x33(%rcx)
   1b6df:	4c 8b 4a d5          	mov    -0x2b(%rdx),%r9
   1b6e3:	4c 89 49 d5          	mov    %r9,-0x2b(%rcx)
   1b6e7:	4c 8b 4a dd          	mov    -0x23(%rdx),%r9
   1b6eb:	4c 89 49 dd          	mov    %r9,-0x23(%rcx)
   1b6ef:	4c 8b 4a e5          	mov    -0x1b(%rdx),%r9
   1b6f3:	4c 89 49 e5          	mov    %r9,-0x1b(%rcx)
   1b6f7:	4c 8b 4a ed          	mov    -0x13(%rdx),%r9
   1b6fb:	4c 89 49 ed          	mov    %r9,-0x13(%rcx)
   1b6ff:	4c 8b 4a f5          	mov    -0xb(%rdx),%r9
   1b703:	4c 89 49 f5          	mov    %r9,-0xb(%rcx)
   1b707:	66 44 8b 4a fd       	mov    -0x3(%rdx),%r9w
   1b70c:	44 8a 52 ff          	mov    -0x1(%rdx),%r10b
   1b710:	66 44 89 49 fd       	mov    %r9w,-0x3(%rcx)
   1b715:	44 88 51 ff          	mov    %r10b,-0x1(%rcx)
   1b719:	c3                   	retq   
   1b71a:	4c 8b 8a 4c ff ff ff 	mov    -0xb4(%rdx),%r9
   1b721:	4c 89 89 4c ff ff ff 	mov    %r9,-0xb4(%rcx)
   1b728:	4c 8b 8a 54 ff ff ff 	mov    -0xac(%rdx),%r9
   1b72f:	4c 89 89 54 ff ff ff 	mov    %r9,-0xac(%rcx)
   1b736:	4c 8b 8a 5c ff ff ff 	mov    -0xa4(%rdx),%r9
   1b73d:	4c 89 89 5c ff ff ff 	mov    %r9,-0xa4(%rcx)
   1b744:	4c 8b 8a 64 ff ff ff 	mov    -0x9c(%rdx),%r9
   1b74b:	4c 89 89 64 ff ff ff 	mov    %r9,-0x9c(%rcx)
   1b752:	4c 8b 8a 6c ff ff ff 	mov    -0x94(%rdx),%r9
   1b759:	4c 89 89 6c ff ff ff 	mov    %r9,-0x94(%rcx)
   1b760:	4c 8b 8a 74 ff ff ff 	mov    -0x8c(%rdx),%r9
   1b767:	4c 89 89 74 ff ff ff 	mov    %r9,-0x8c(%rcx)
   1b76e:	4c 8b 8a 7c ff ff ff 	mov    -0x84(%rdx),%r9
   1b775:	4c 89 89 7c ff ff ff 	mov    %r9,-0x84(%rcx)
   1b77c:	4c 8b 4a 84          	mov    -0x7c(%rdx),%r9
   1b780:	4c 89 49 84          	mov    %r9,-0x7c(%rcx)
   1b784:	4c 8b 4a 8c          	mov    -0x74(%rdx),%r9
   1b788:	4c 89 49 8c          	mov    %r9,-0x74(%rcx)
   1b78c:	4c 8b 4a 94          	mov    -0x6c(%rdx),%r9
   1b790:	4c 89 49 94          	mov    %r9,-0x6c(%rcx)
   1b794:	4c 8b 4a 9c          	mov    -0x64(%rdx),%r9
   1b798:	4c 89 49 9c          	mov    %r9,-0x64(%rcx)
   1b79c:	4c 8b 4a a4          	mov    -0x5c(%rdx),%r9
   1b7a0:	4c 89 49 a4          	mov    %r9,-0x5c(%rcx)
   1b7a4:	4c 8b 4a ac          	mov    -0x54(%rdx),%r9
   1b7a8:	4c 89 49 ac          	mov    %r9,-0x54(%rcx)
   1b7ac:	4c 8b 4a b4          	mov    -0x4c(%rdx),%r9
   1b7b0:	4c 89 49 b4          	mov    %r9,-0x4c(%rcx)
   1b7b4:	4c 8b 4a bc          	mov    -0x44(%rdx),%r9
   1b7b8:	4c 89 49 bc          	mov    %r9,-0x44(%rcx)
   1b7bc:	4c 8b 4a c4          	mov    -0x3c(%rdx),%r9
   1b7c0:	4c 89 49 c4          	mov    %r9,-0x3c(%rcx)
   1b7c4:	4c 8b 4a cc          	mov    -0x34(%rdx),%r9
   1b7c8:	4c 89 49 cc          	mov    %r9,-0x34(%rcx)
   1b7cc:	4c 8b 4a d4          	mov    -0x2c(%rdx),%r9
   1b7d0:	4c 89 49 d4          	mov    %r9,-0x2c(%rcx)
   1b7d4:	4c 8b 4a dc          	mov    -0x24(%rdx),%r9
   1b7d8:	4c 89 49 dc          	mov    %r9,-0x24(%rcx)
   1b7dc:	4c 8b 4a e4          	mov    -0x1c(%rdx),%r9
   1b7e0:	4c 89 49 e4          	mov    %r9,-0x1c(%rcx)
   1b7e4:	4c 8b 4a ec          	mov    -0x14(%rdx),%r9
   1b7e8:	4c 89 49 ec          	mov    %r9,-0x14(%rcx)
   1b7ec:	4c 8b 4a f4          	mov    -0xc(%rdx),%r9
   1b7f0:	4c 89 49 f4          	mov    %r9,-0xc(%rcx)
   1b7f4:	44 8b 4a fc          	mov    -0x4(%rdx),%r9d
   1b7f8:	44 89 49 fc          	mov    %r9d,-0x4(%rcx)
   1b7fc:	c3                   	retq   
   1b7fd:	4c 8b 8a 4b ff ff ff 	mov    -0xb5(%rdx),%r9
   1b804:	4c 89 89 4b ff ff ff 	mov    %r9,-0xb5(%rcx)
   1b80b:	4c 8b 8a 53 ff ff ff 	mov    -0xad(%rdx),%r9
   1b812:	4c 89 89 53 ff ff ff 	mov    %r9,-0xad(%rcx)
   1b819:	4c 8b 8a 5b ff ff ff 	mov    -0xa5(%rdx),%r9
   1b820:	4c 89 89 5b ff ff ff 	mov    %r9,-0xa5(%rcx)
   1b827:	4c 8b 8a 63 ff ff ff 	mov    -0x9d(%rdx),%r9
   1b82e:	4c 89 89 63 ff ff ff 	mov    %r9,-0x9d(%rcx)
   1b835:	4c 8b 8a 6b ff ff ff 	mov    -0x95(%rdx),%r9
   1b83c:	4c 89 89 6b ff ff ff 	mov    %r9,-0x95(%rcx)
   1b843:	4c 8b 8a 73 ff ff ff 	mov    -0x8d(%rdx),%r9
   1b84a:	4c 89 89 73 ff ff ff 	mov    %r9,-0x8d(%rcx)
   1b851:	4c 8b 8a 7b ff ff ff 	mov    -0x85(%rdx),%r9
   1b858:	4c 89 89 7b ff ff ff 	mov    %r9,-0x85(%rcx)
   1b85f:	4c 8b 4a 83          	mov    -0x7d(%rdx),%r9
   1b863:	4c 89 49 83          	mov    %r9,-0x7d(%rcx)
   1b867:	4c 8b 4a 8b          	mov    -0x75(%rdx),%r9
   1b86b:	4c 89 49 8b          	mov    %r9,-0x75(%rcx)
   1b86f:	4c 8b 4a 93          	mov    -0x6d(%rdx),%r9
   1b873:	4c 89 49 93          	mov    %r9,-0x6d(%rcx)
   1b877:	4c 8b 4a 9b          	mov    -0x65(%rdx),%r9
   1b87b:	4c 89 49 9b          	mov    %r9,-0x65(%rcx)
   1b87f:	4c 8b 4a a3          	mov    -0x5d(%rdx),%r9
   1b883:	4c 89 49 a3          	mov    %r9,-0x5d(%rcx)
   1b887:	4c 8b 4a ab          	mov    -0x55(%rdx),%r9
   1b88b:	4c 89 49 ab          	mov    %r9,-0x55(%rcx)
   1b88f:	4c 8b 4a b3          	mov    -0x4d(%rdx),%r9
   1b893:	4c 89 49 b3          	mov    %r9,-0x4d(%rcx)
   1b897:	4c 8b 4a bb          	mov    -0x45(%rdx),%r9
   1b89b:	4c 89 49 bb          	mov    %r9,-0x45(%rcx)
   1b89f:	4c 8b 4a c3          	mov    -0x3d(%rdx),%r9
   1b8a3:	4c 89 49 c3          	mov    %r9,-0x3d(%rcx)
   1b8a7:	4c 8b 4a cb          	mov    -0x35(%rdx),%r9
   1b8ab:	4c 89 49 cb          	mov    %r9,-0x35(%rcx)
   1b8af:	4c 8b 4a d3          	mov    -0x2d(%rdx),%r9
   1b8b3:	4c 89 49 d3          	mov    %r9,-0x2d(%rcx)
   1b8b7:	4c 8b 4a db          	mov    -0x25(%rdx),%r9
   1b8bb:	4c 89 49 db          	mov    %r9,-0x25(%rcx)
   1b8bf:	4c 8b 4a e3          	mov    -0x1d(%rdx),%r9
   1b8c3:	4c 89 49 e3          	mov    %r9,-0x1d(%rcx)
   1b8c7:	4c 8b 4a eb          	mov    -0x15(%rdx),%r9
   1b8cb:	4c 89 49 eb          	mov    %r9,-0x15(%rcx)
   1b8cf:	4c 8b 4a f3          	mov    -0xd(%rdx),%r9
   1b8d3:	4c 89 49 f3          	mov    %r9,-0xd(%rcx)
   1b8d7:	44 8b 4a fb          	mov    -0x5(%rdx),%r9d
   1b8db:	44 8a 52 ff          	mov    -0x1(%rdx),%r10b
   1b8df:	44 89 49 fb          	mov    %r9d,-0x5(%rcx)
   1b8e3:	44 88 51 ff          	mov    %r10b,-0x1(%rcx)
   1b8e7:	c3                   	retq   
   1b8e8:	4c 8b 8a 4a ff ff ff 	mov    -0xb6(%rdx),%r9
   1b8ef:	4c 89 89 4a ff ff ff 	mov    %r9,-0xb6(%rcx)
   1b8f6:	4c 8b 8a 52 ff ff ff 	mov    -0xae(%rdx),%r9
   1b8fd:	4c 89 89 52 ff ff ff 	mov    %r9,-0xae(%rcx)
   1b904:	4c 8b 8a 5a ff ff ff 	mov    -0xa6(%rdx),%r9
   1b90b:	4c 89 89 5a ff ff ff 	mov    %r9,-0xa6(%rcx)
   1b912:	4c 8b 8a 62 ff ff ff 	mov    -0x9e(%rdx),%r9
   1b919:	4c 89 89 62 ff ff ff 	mov    %r9,-0x9e(%rcx)
   1b920:	4c 8b 8a 6a ff ff ff 	mov    -0x96(%rdx),%r9
   1b927:	4c 89 89 6a ff ff ff 	mov    %r9,-0x96(%rcx)
   1b92e:	4c 8b 8a 72 ff ff ff 	mov    -0x8e(%rdx),%r9
   1b935:	4c 89 89 72 ff ff ff 	mov    %r9,-0x8e(%rcx)
   1b93c:	4c 8b 8a 7a ff ff ff 	mov    -0x86(%rdx),%r9
   1b943:	4c 89 89 7a ff ff ff 	mov    %r9,-0x86(%rcx)
   1b94a:	4c 8b 4a 82          	mov    -0x7e(%rdx),%r9
   1b94e:	4c 89 49 82          	mov    %r9,-0x7e(%rcx)
   1b952:	4c 8b 4a 8a          	mov    -0x76(%rdx),%r9
   1b956:	4c 89 49 8a          	mov    %r9,-0x76(%rcx)
   1b95a:	4c 8b 4a 92          	mov    -0x6e(%rdx),%r9
   1b95e:	4c 89 49 92          	mov    %r9,-0x6e(%rcx)
   1b962:	4c 8b 4a 9a          	mov    -0x66(%rdx),%r9
   1b966:	4c 89 49 9a          	mov    %r9,-0x66(%rcx)
   1b96a:	4c 8b 4a a2          	mov    -0x5e(%rdx),%r9
   1b96e:	4c 89 49 a2          	mov    %r9,-0x5e(%rcx)
   1b972:	4c 8b 4a aa          	mov    -0x56(%rdx),%r9
   1b976:	4c 89 49 aa          	mov    %r9,-0x56(%rcx)
   1b97a:	4c 8b 4a b2          	mov    -0x4e(%rdx),%r9
   1b97e:	4c 89 49 b2          	mov    %r9,-0x4e(%rcx)
   1b982:	4c 8b 4a ba          	mov    -0x46(%rdx),%r9
   1b986:	4c 89 49 ba          	mov    %r9,-0x46(%rcx)
   1b98a:	4c 8b 4a c2          	mov    -0x3e(%rdx),%r9
   1b98e:	4c 89 49 c2          	mov    %r9,-0x3e(%rcx)
   1b992:	4c 8b 4a ca          	mov    -0x36(%rdx),%r9
   1b996:	4c 89 49 ca          	mov    %r9,-0x36(%rcx)
   1b99a:	4c 8b 4a d2          	mov    -0x2e(%rdx),%r9
   1b99e:	4c 89 49 d2          	mov    %r9,-0x2e(%rcx)
   1b9a2:	4c 8b 4a da          	mov    -0x26(%rdx),%r9
   1b9a6:	4c 89 49 da          	mov    %r9,-0x26(%rcx)
   1b9aa:	4c 8b 4a e2          	mov    -0x1e(%rdx),%r9
   1b9ae:	4c 89 49 e2          	mov    %r9,-0x1e(%rcx)
   1b9b2:	4c 8b 4a ea          	mov    -0x16(%rdx),%r9
   1b9b6:	4c 89 49 ea          	mov    %r9,-0x16(%rcx)
   1b9ba:	4c 8b 4a f2          	mov    -0xe(%rdx),%r9
   1b9be:	4c 89 49 f2          	mov    %r9,-0xe(%rcx)
   1b9c2:	44 8b 4a fa          	mov    -0x6(%rdx),%r9d
   1b9c6:	66 44 8b 52 fe       	mov    -0x2(%rdx),%r10w
   1b9cb:	44 89 49 fa          	mov    %r9d,-0x6(%rcx)
   1b9cf:	66 44 89 51 fe       	mov    %r10w,-0x2(%rcx)
   1b9d4:	c3                   	retq   
   1b9d5:	4c 8b 8a 49 ff ff ff 	mov    -0xb7(%rdx),%r9
   1b9dc:	4c 89 89 49 ff ff ff 	mov    %r9,-0xb7(%rcx)
   1b9e3:	4c 8b 8a 51 ff ff ff 	mov    -0xaf(%rdx),%r9
   1b9ea:	4c 89 89 51 ff ff ff 	mov    %r9,-0xaf(%rcx)
   1b9f1:	4c 8b 8a 59 ff ff ff 	mov    -0xa7(%rdx),%r9
   1b9f8:	4c 89 89 59 ff ff ff 	mov    %r9,-0xa7(%rcx)
   1b9ff:	4c 8b 8a 61 ff ff ff 	mov    -0x9f(%rdx),%r9
   1ba06:	4c 89 89 61 ff ff ff 	mov    %r9,-0x9f(%rcx)
   1ba0d:	4c 8b 8a 69 ff ff ff 	mov    -0x97(%rdx),%r9
   1ba14:	4c 89 89 69 ff ff ff 	mov    %r9,-0x97(%rcx)
   1ba1b:	4c 8b 8a 71 ff ff ff 	mov    -0x8f(%rdx),%r9
   1ba22:	4c 89 89 71 ff ff ff 	mov    %r9,-0x8f(%rcx)
   1ba29:	4c 8b 8a 79 ff ff ff 	mov    -0x87(%rdx),%r9
   1ba30:	4c 89 89 79 ff ff ff 	mov    %r9,-0x87(%rcx)
   1ba37:	4c 8b 4a 81          	mov    -0x7f(%rdx),%r9
   1ba3b:	4c 89 49 81          	mov    %r9,-0x7f(%rcx)
   1ba3f:	4c 8b 4a 89          	mov    -0x77(%rdx),%r9
   1ba43:	4c 89 49 89          	mov    %r9,-0x77(%rcx)
   1ba47:	4c 8b 4a 91          	mov    -0x6f(%rdx),%r9
   1ba4b:	4c 89 49 91          	mov    %r9,-0x6f(%rcx)
   1ba4f:	4c 8b 4a 99          	mov    -0x67(%rdx),%r9
   1ba53:	4c 89 49 99          	mov    %r9,-0x67(%rcx)
   1ba57:	4c 8b 4a a1          	mov    -0x5f(%rdx),%r9
   1ba5b:	4c 89 49 a1          	mov    %r9,-0x5f(%rcx)
   1ba5f:	4c 8b 4a a9          	mov    -0x57(%rdx),%r9
   1ba63:	4c 89 49 a9          	mov    %r9,-0x57(%rcx)
   1ba67:	4c 8b 4a b1          	mov    -0x4f(%rdx),%r9
   1ba6b:	4c 89 49 b1          	mov    %r9,-0x4f(%rcx)
   1ba6f:	4c 8b 4a b9          	mov    -0x47(%rdx),%r9
   1ba73:	4c 89 49 b9          	mov    %r9,-0x47(%rcx)
   1ba77:	4c 8b 4a c1          	mov    -0x3f(%rdx),%r9
   1ba7b:	4c 89 49 c1          	mov    %r9,-0x3f(%rcx)
   1ba7f:	4c 8b 4a c9          	mov    -0x37(%rdx),%r9
   1ba83:	4c 89 49 c9          	mov    %r9,-0x37(%rcx)
   1ba87:	4c 8b 4a d1          	mov    -0x2f(%rdx),%r9
   1ba8b:	4c 89 49 d1          	mov    %r9,-0x2f(%rcx)
   1ba8f:	4c 8b 4a d9          	mov    -0x27(%rdx),%r9
   1ba93:	4c 89 49 d9          	mov    %r9,-0x27(%rcx)
   1ba97:	4c 8b 4a e1          	mov    -0x1f(%rdx),%r9
   1ba9b:	4c 89 49 e1          	mov    %r9,-0x1f(%rcx)
   1ba9f:	4c 8b 4a e9          	mov    -0x17(%rdx),%r9
   1baa3:	4c 89 49 e9          	mov    %r9,-0x17(%rcx)
   1baa7:	4c 8b 4a f1          	mov    -0xf(%rdx),%r9
   1baab:	4c 89 49 f1          	mov    %r9,-0xf(%rcx)
   1baaf:	44 8b 4a f9          	mov    -0x7(%rdx),%r9d
   1bab3:	66 44 8b 52 fd       	mov    -0x3(%rdx),%r10w
   1bab8:	44 8a 5a ff          	mov    -0x1(%rdx),%r11b
   1babc:	44 89 49 f9          	mov    %r9d,-0x7(%rcx)
   1bac0:	66 44 89 51 fd       	mov    %r10w,-0x3(%rcx)
   1bac5:	44 88 59 ff          	mov    %r11b,-0x1(%rcx)
   1bac9:	c3                   	retq   
   1baca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1bad0:	83 3d a9 6d 20 00 02 	cmpl   $0x2,0x206da9(%rip)        # 222880 <__libirc_mem_ops_method>
   1bad7:	0f 85 e3 06 00 00    	jne    1c1c0 <__intel_memcpy+0x15f0>
   1badd:	48 f7 c1 0f 00 00 00 	test   $0xf,%rcx
   1bae4:	0f 85 76 08 00 00    	jne    1c360 <__intel_memcpy+0x1790>
   1baea:	44 8b 0d 97 6d 20 00 	mov    0x206d97(%rip),%r9d        # 222888 <__libirc_largest_cache_size_half>
   1baf1:	4d 39 c8             	cmp    %r9,%r8
   1baf4:	0f 8f c6 05 00 00    	jg     1c0c0 <__intel_memcpy+0x14f0>
   1bafa:	48 f7 c2 0f 00 00 00 	test   $0xf,%rdx
   1bb01:	0f 84 29 06 00 00    	je     1c130 <__intel_memcpy+0x1560>
   1bb07:	4c 8d 15 32 00 00 00 	lea    0x32(%rip),%r10        # 1bb40 <__intel_memcpy+0xf70>
   1bb0e:	49 89 d3             	mov    %rdx,%r11
   1bb11:	49 83 e3 0f          	and    $0xf,%r11
   1bb15:	f3 0f 6f 02          	movdqu (%rdx),%xmm0
   1bb19:	66 0f 7f 01          	movdqa %xmm0,(%rcx)
   1bb1d:	48 83 c2 10          	add    $0x10,%rdx
   1bb21:	4c 29 da             	sub    %r11,%rdx
   1bb24:	48 83 c1 10          	add    $0x10,%rcx
   1bb28:	49 83 e8 10          	sub    $0x10,%r8
   1bb2c:	66 0f 6f 0a          	movdqa (%rdx),%xmm1
   1bb30:	4f 8b 0c da          	mov    (%r10,%r11,8),%r9
   1bb34:	4f 8d 14 11          	lea    (%r9,%r10,1),%r10
   1bb38:	41 ff e2             	jmpq   *%r10
   1bb3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1bb40:	f0 05 00 00 00 00    	lock add $0x0,%eax
   1bb46:	00 00                	add    %al,(%rax)
   1bb48:	b0 00                	mov    $0x0,%al
   1bb4a:	00 00                	add    %al,(%rax)
   1bb4c:	00 00                	add    %al,(%rax)
   1bb4e:	00 00                	add    %al,(%rax)
   1bb50:	00 01                	add    %al,(%rcx)
   1bb52:	00 00                	add    %al,(%rax)
   1bb54:	00 00                	add    %al,(%rax)
   1bb56:	00 00                	add    %al,(%rax)
   1bb58:	50                   	push   %rax
   1bb59:	01 00                	add    %eax,(%rax)
   1bb5b:	00 00                	add    %al,(%rax)
   1bb5d:	00 00                	add    %al,(%rax)
   1bb5f:	00 a0 01 00 00 00    	add    %ah,0x1(%rax)
   1bb65:	00 00                	add    %al,(%rax)
   1bb67:	00 f0                	add    %dh,%al
   1bb69:	01 00                	add    %eax,(%rax)
   1bb6b:	00 00                	add    %al,(%rax)
   1bb6d:	00 00                	add    %al,(%rax)
   1bb6f:	00 40 02             	add    %al,0x2(%rax)
   1bb72:	00 00                	add    %al,(%rax)
   1bb74:	00 00                	add    %al,(%rax)
   1bb76:	00 00                	add    %al,(%rax)
   1bb78:	90                   	nop
   1bb79:	02 00                	add    (%rax),%al
   1bb7b:	00 00                	add    %al,(%rax)
   1bb7d:	00 00                	add    %al,(%rax)
   1bb7f:	00 e0                	add    %ah,%al
   1bb81:	02 00                	add    (%rax),%al
   1bb83:	00 00                	add    %al,(%rax)
   1bb85:	00 00                	add    %al,(%rax)
   1bb87:	00 30                	add    %dh,(%rax)
   1bb89:	03 00                	add    (%rax),%eax
   1bb8b:	00 00                	add    %al,(%rax)
   1bb8d:	00 00                	add    %al,(%rax)
   1bb8f:	00 80 03 00 00 00    	add    %al,0x3(%rax)
   1bb95:	00 00                	add    %al,(%rax)
   1bb97:	00 d0                	add    %dl,%al
   1bb99:	03 00                	add    (%rax),%eax
   1bb9b:	00 00                	add    %al,(%rax)
   1bb9d:	00 00                	add    %al,(%rax)
   1bb9f:	00 20                	add    %ah,(%rax)
   1bba1:	04 00                	add    $0x0,%al
   1bba3:	00 00                	add    %al,(%rax)
   1bba5:	00 00                	add    %al,(%rax)
   1bba7:	00 70 04             	add    %dh,0x4(%rax)
   1bbaa:	00 00                	add    %al,(%rax)
   1bbac:	00 00                	add    %al,(%rax)
   1bbae:	00 00                	add    %al,(%rax)
   1bbb0:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
   1bbb4:	00 00                	add    %al,(%rax)
   1bbb6:	00 00                	add    %al,(%rax)
   1bbb8:	10 05 00 00 00 00    	adc    %al,0x0(%rip)        # 1bbbe <__intel_memcpy+0xfee>
   1bbbe:	00 00                	add    %al,(%rax)
   1bbc0:	4c 8d 15 e9 06 00 00 	lea    0x6e9(%rip),%r10        # 1c2b0 <__intel_memcpy+0x16e0>
   1bbc7:	4d 89 c1             	mov    %r8,%r9
   1bbca:	49 c1 e9 04          	shr    $0x4,%r9
   1bbce:	49 c1 e1 04          	shl    $0x4,%r9
   1bbd2:	4c 01 c9             	add    %r9,%rcx
   1bbd5:	4c 01 ca             	add    %r9,%rdx
   1bbd8:	4d 29 c8             	sub    %r9,%r8
   1bbdb:	49 c1 e9 04          	shr    $0x4,%r9
   1bbdf:	4f 8b 1c ca          	mov    (%r10,%r9,8),%r11
   1bbe3:	4f 8d 14 13          	lea    (%r11,%r10,1),%r10
   1bbe7:	41 ff e2             	jmpq   *%r10
   1bbea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1bbf0:	66 0f 6f 5a 10       	movdqa 0x10(%rdx),%xmm3
   1bbf5:	66 0f 6f 42 20       	movdqa 0x20(%rdx),%xmm0
   1bbfa:	48 8d 52 20          	lea    0x20(%rdx),%rdx
   1bbfe:	4d 8d 40 e0          	lea    -0x20(%r8),%r8
   1bc02:	66 0f 73 d9 01       	psrldq $0x1,%xmm1
   1bc07:	66 0f 6f d3          	movdqa %xmm3,%xmm2
   1bc0b:	66 0f 73 fb 0f       	pslldq $0xf,%xmm3
   1bc10:	66 0f eb d9          	por    %xmm1,%xmm3
   1bc14:	49 83 f8 20          	cmp    $0x20,%r8
   1bc18:	66 0f 73 da 01       	psrldq $0x1,%xmm2
   1bc1d:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   1bc21:	66 0f 73 f8 0f       	pslldq $0xf,%xmm0
   1bc26:	66 0f eb c2          	por    %xmm2,%xmm0
   1bc2a:	66 0f 7f 19          	movdqa %xmm3,(%rcx)
   1bc2e:	66 0f 7f 41 10       	movdqa %xmm0,0x10(%rcx)
   1bc33:	48 8d 49 20          	lea    0x20(%rcx),%rcx
   1bc37:	7d b7                	jge    1bbf0 <__intel_memcpy+0x1020>
   1bc39:	e9 5b 04 00 00       	jmpq   1c099 <__intel_memcpy+0x14c9>
   1bc3e:	66 90                	xchg   %ax,%ax
   1bc40:	49 83 e8 20          	sub    $0x20,%r8
   1bc44:	66 0f 6f 5a 10       	movdqa 0x10(%rdx),%xmm3
   1bc49:	66 0f 6f 42 20       	movdqa 0x20(%rdx),%xmm0
   1bc4e:	48 83 c2 20          	add    $0x20,%rdx
   1bc52:	66 0f 73 d9 02       	psrldq $0x2,%xmm1
   1bc57:	66 0f 6f d3          	movdqa %xmm3,%xmm2
   1bc5b:	66 0f 73 fb 0e       	pslldq $0xe,%xmm3
   1bc60:	66 0f eb d9          	por    %xmm1,%xmm3
   1bc64:	66 0f 73 da 02       	psrldq $0x2,%xmm2
   1bc69:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   1bc6d:	66 0f 73 f8 0e       	pslldq $0xe,%xmm0
   1bc72:	66 0f eb c2          	por    %xmm2,%xmm0
   1bc76:	66 0f 7f 19          	movdqa %xmm3,(%rcx)
   1bc7a:	66 0f 7f 41 10       	movdqa %xmm0,0x10(%rcx)
   1bc7f:	48 83 c1 20          	add    $0x20,%rcx
   1bc83:	49 83 f8 20          	cmp    $0x20,%r8
   1bc87:	7d b7                	jge    1bc40 <__intel_memcpy+0x1070>
   1bc89:	e9 0b 04 00 00       	jmpq   1c099 <__intel_memcpy+0x14c9>
   1bc8e:	66 90                	xchg   %ax,%ax
   1bc90:	49 83 e8 20          	sub    $0x20,%r8
   1bc94:	66 0f 6f 5a 10       	movdqa 0x10(%rdx),%xmm3
   1bc99:	66 0f 6f 42 20       	movdqa 0x20(%rdx),%xmm0
   1bc9e:	48 83 c2 20          	add    $0x20,%rdx
   1bca2:	66 0f 73 d9 03       	psrldq $0x3,%xmm1
   1bca7:	66 0f 6f d3          	movdqa %xmm3,%xmm2
   1bcab:	66 0f 73 fb 0d       	pslldq $0xd,%xmm3
   1bcb0:	66 0f eb d9          	por    %xmm1,%xmm3
   1bcb4:	66 0f 73 da 03       	psrldq $0x3,%xmm2
   1bcb9:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   1bcbd:	66 0f 73 f8 0d       	pslldq $0xd,%xmm0
   1bcc2:	66 0f eb c2          	por    %xmm2,%xmm0
   1bcc6:	66 0f 7f 19          	movdqa %xmm3,(%rcx)
   1bcca:	66 0f 7f 41 10       	movdqa %xmm0,0x10(%rcx)
   1bccf:	48 83 c1 20          	add    $0x20,%rcx
   1bcd3:	49 83 f8 20          	cmp    $0x20,%r8
   1bcd7:	7d b7                	jge    1bc90 <__intel_memcpy+0x10c0>
   1bcd9:	e9 bb 03 00 00       	jmpq   1c099 <__intel_memcpy+0x14c9>
   1bcde:	66 90                	xchg   %ax,%ax
   1bce0:	49 83 e8 20          	sub    $0x20,%r8
   1bce4:	66 0f 6f 5a 10       	movdqa 0x10(%rdx),%xmm3
   1bce9:	66 0f 6f 42 20       	movdqa 0x20(%rdx),%xmm0
   1bcee:	48 83 c2 20          	add    $0x20,%rdx
   1bcf2:	66 0f 73 d9 04       	psrldq $0x4,%xmm1
   1bcf7:	66 0f 6f d3          	movdqa %xmm3,%xmm2
   1bcfb:	66 0f 73 fb 0c       	pslldq $0xc,%xmm3
   1bd00:	66 0f eb d9          	por    %xmm1,%xmm3
   1bd04:	66 0f 73 da 04       	psrldq $0x4,%xmm2
   1bd09:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   1bd0d:	66 0f 73 f8 0c       	pslldq $0xc,%xmm0
   1bd12:	66 0f eb c2          	por    %xmm2,%xmm0
   1bd16:	66 0f 7f 19          	movdqa %xmm3,(%rcx)
   1bd1a:	66 0f 7f 41 10       	movdqa %xmm0,0x10(%rcx)
   1bd1f:	48 83 c1 20          	add    $0x20,%rcx
   1bd23:	49 83 f8 20          	cmp    $0x20,%r8
   1bd27:	7d b7                	jge    1bce0 <__intel_memcpy+0x1110>
   1bd29:	e9 6b 03 00 00       	jmpq   1c099 <__intel_memcpy+0x14c9>
   1bd2e:	66 90                	xchg   %ax,%ax
   1bd30:	49 83 e8 20          	sub    $0x20,%r8
   1bd34:	66 0f 6f 5a 10       	movdqa 0x10(%rdx),%xmm3
   1bd39:	66 0f 6f 42 20       	movdqa 0x20(%rdx),%xmm0
   1bd3e:	48 83 c2 20          	add    $0x20,%rdx
   1bd42:	66 0f 73 d9 05       	psrldq $0x5,%xmm1
   1bd47:	66 0f 6f d3          	movdqa %xmm3,%xmm2
   1bd4b:	66 0f 73 fb 0b       	pslldq $0xb,%xmm3
   1bd50:	66 0f eb d9          	por    %xmm1,%xmm3
   1bd54:	66 0f 73 da 05       	psrldq $0x5,%xmm2
   1bd59:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   1bd5d:	66 0f 73 f8 0b       	pslldq $0xb,%xmm0
   1bd62:	66 0f eb c2          	por    %xmm2,%xmm0
   1bd66:	66 0f 7f 19          	movdqa %xmm3,(%rcx)
   1bd6a:	66 0f 7f 41 10       	movdqa %xmm0,0x10(%rcx)
   1bd6f:	48 83 c1 20          	add    $0x20,%rcx
   1bd73:	49 83 f8 20          	cmp    $0x20,%r8
   1bd77:	7d b7                	jge    1bd30 <__intel_memcpy+0x1160>
   1bd79:	e9 1b 03 00 00       	jmpq   1c099 <__intel_memcpy+0x14c9>
   1bd7e:	66 90                	xchg   %ax,%ax
   1bd80:	49 83 e8 20          	sub    $0x20,%r8
   1bd84:	66 0f 6f 5a 10       	movdqa 0x10(%rdx),%xmm3
   1bd89:	66 0f 6f 42 20       	movdqa 0x20(%rdx),%xmm0
   1bd8e:	48 83 c2 20          	add    $0x20,%rdx
   1bd92:	66 0f 73 d9 06       	psrldq $0x6,%xmm1
   1bd97:	66 0f 6f d3          	movdqa %xmm3,%xmm2
   1bd9b:	66 0f 73 fb 0a       	pslldq $0xa,%xmm3
   1bda0:	66 0f eb d9          	por    %xmm1,%xmm3
   1bda4:	66 0f 73 da 06       	psrldq $0x6,%xmm2
   1bda9:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   1bdad:	66 0f 73 f8 0a       	pslldq $0xa,%xmm0
   1bdb2:	66 0f eb c2          	por    %xmm2,%xmm0
   1bdb6:	66 0f 7f 19          	movdqa %xmm3,(%rcx)
   1bdba:	66 0f 7f 41 10       	movdqa %xmm0,0x10(%rcx)
   1bdbf:	48 83 c1 20          	add    $0x20,%rcx
   1bdc3:	49 83 f8 20          	cmp    $0x20,%r8
   1bdc7:	7d b7                	jge    1bd80 <__intel_memcpy+0x11b0>
   1bdc9:	e9 cb 02 00 00       	jmpq   1c099 <__intel_memcpy+0x14c9>
   1bdce:	66 90                	xchg   %ax,%ax
   1bdd0:	49 83 e8 20          	sub    $0x20,%r8
   1bdd4:	66 0f 6f 5a 10       	movdqa 0x10(%rdx),%xmm3
   1bdd9:	66 0f 6f 42 20       	movdqa 0x20(%rdx),%xmm0
   1bdde:	48 83 c2 20          	add    $0x20,%rdx
   1bde2:	66 0f 73 d9 07       	psrldq $0x7,%xmm1
   1bde7:	66 0f 6f d3          	movdqa %xmm3,%xmm2
   1bdeb:	66 0f 73 fb 09       	pslldq $0x9,%xmm3
   1bdf0:	66 0f eb d9          	por    %xmm1,%xmm3
   1bdf4:	66 0f 73 da 07       	psrldq $0x7,%xmm2
   1bdf9:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   1bdfd:	66 0f 73 f8 09       	pslldq $0x9,%xmm0
   1be02:	66 0f eb c2          	por    %xmm2,%xmm0
   1be06:	66 0f 7f 19          	movdqa %xmm3,(%rcx)
   1be0a:	66 0f 7f 41 10       	movdqa %xmm0,0x10(%rcx)
   1be0f:	48 83 c1 20          	add    $0x20,%rcx
   1be13:	49 83 f8 20          	cmp    $0x20,%r8
   1be17:	7d b7                	jge    1bdd0 <__intel_memcpy+0x1200>
   1be19:	e9 7b 02 00 00       	jmpq   1c099 <__intel_memcpy+0x14c9>
   1be1e:	66 90                	xchg   %ax,%ax
   1be20:	49 83 e8 20          	sub    $0x20,%r8
   1be24:	66 0f 6f 5a 10       	movdqa 0x10(%rdx),%xmm3
   1be29:	66 0f 6f 42 20       	movdqa 0x20(%rdx),%xmm0
   1be2e:	48 83 c2 20          	add    $0x20,%rdx
   1be32:	66 0f 73 d9 08       	psrldq $0x8,%xmm1
   1be37:	66 0f 6f d3          	movdqa %xmm3,%xmm2
   1be3b:	66 0f 73 fb 08       	pslldq $0x8,%xmm3
   1be40:	66 0f eb d9          	por    %xmm1,%xmm3
   1be44:	66 0f 73 da 08       	psrldq $0x8,%xmm2
   1be49:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   1be4d:	66 0f 73 f8 08       	pslldq $0x8,%xmm0
   1be52:	66 0f eb c2          	por    %xmm2,%xmm0
   1be56:	66 0f 7f 19          	movdqa %xmm3,(%rcx)
   1be5a:	66 0f 7f 41 10       	movdqa %xmm0,0x10(%rcx)
   1be5f:	48 83 c1 20          	add    $0x20,%rcx
   1be63:	49 83 f8 20          	cmp    $0x20,%r8
   1be67:	7d b7                	jge    1be20 <__intel_memcpy+0x1250>
   1be69:	e9 2b 02 00 00       	jmpq   1c099 <__intel_memcpy+0x14c9>
   1be6e:	66 90                	xchg   %ax,%ax
   1be70:	49 83 e8 20          	sub    $0x20,%r8
   1be74:	66 0f 6f 5a 10       	movdqa 0x10(%rdx),%xmm3
   1be79:	66 0f 6f 42 20       	movdqa 0x20(%rdx),%xmm0
   1be7e:	48 83 c2 20          	add    $0x20,%rdx
   1be82:	66 0f 73 d9 09       	psrldq $0x9,%xmm1
   1be87:	66 0f 6f d3          	movdqa %xmm3,%xmm2
   1be8b:	66 0f 73 fb 07       	pslldq $0x7,%xmm3
   1be90:	66 0f eb d9          	por    %xmm1,%xmm3
   1be94:	66 0f 73 da 09       	psrldq $0x9,%xmm2
   1be99:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   1be9d:	66 0f 73 f8 07       	pslldq $0x7,%xmm0
   1bea2:	66 0f eb c2          	por    %xmm2,%xmm0
   1bea6:	66 0f 7f 19          	movdqa %xmm3,(%rcx)
   1beaa:	66 0f 7f 41 10       	movdqa %xmm0,0x10(%rcx)
   1beaf:	48 83 c1 20          	add    $0x20,%rcx
   1beb3:	49 83 f8 20          	cmp    $0x20,%r8
   1beb7:	7d b7                	jge    1be70 <__intel_memcpy+0x12a0>
   1beb9:	e9 db 01 00 00       	jmpq   1c099 <__intel_memcpy+0x14c9>
   1bebe:	66 90                	xchg   %ax,%ax
   1bec0:	49 83 e8 20          	sub    $0x20,%r8
   1bec4:	66 0f 6f 5a 10       	movdqa 0x10(%rdx),%xmm3
   1bec9:	66 0f 6f 42 20       	movdqa 0x20(%rdx),%xmm0
   1bece:	48 83 c2 20          	add    $0x20,%rdx
   1bed2:	66 0f 73 d9 0a       	psrldq $0xa,%xmm1
   1bed7:	66 0f 6f d3          	movdqa %xmm3,%xmm2
   1bedb:	66 0f 73 fb 06       	pslldq $0x6,%xmm3
   1bee0:	66 0f eb d9          	por    %xmm1,%xmm3
   1bee4:	66 0f 73 da 0a       	psrldq $0xa,%xmm2
   1bee9:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   1beed:	66 0f 73 f8 06       	pslldq $0x6,%xmm0
   1bef2:	66 0f eb c2          	por    %xmm2,%xmm0
   1bef6:	66 0f 7f 19          	movdqa %xmm3,(%rcx)
   1befa:	66 0f 7f 41 10       	movdqa %xmm0,0x10(%rcx)
   1beff:	48 83 c1 20          	add    $0x20,%rcx
   1bf03:	49 83 f8 20          	cmp    $0x20,%r8
   1bf07:	7d b7                	jge    1bec0 <__intel_memcpy+0x12f0>
   1bf09:	e9 8b 01 00 00       	jmpq   1c099 <__intel_memcpy+0x14c9>
   1bf0e:	66 90                	xchg   %ax,%ax
   1bf10:	49 83 e8 20          	sub    $0x20,%r8
   1bf14:	66 0f 6f 5a 10       	movdqa 0x10(%rdx),%xmm3
   1bf19:	66 0f 6f 42 20       	movdqa 0x20(%rdx),%xmm0
   1bf1e:	48 83 c2 20          	add    $0x20,%rdx
   1bf22:	66 0f 73 d9 0b       	psrldq $0xb,%xmm1
   1bf27:	66 0f 6f d3          	movdqa %xmm3,%xmm2
   1bf2b:	66 0f 73 fb 05       	pslldq $0x5,%xmm3
   1bf30:	66 0f eb d9          	por    %xmm1,%xmm3
   1bf34:	66 0f 73 da 0b       	psrldq $0xb,%xmm2
   1bf39:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   1bf3d:	66 0f 73 f8 05       	pslldq $0x5,%xmm0
   1bf42:	66 0f eb c2          	por    %xmm2,%xmm0
   1bf46:	66 0f 7f 19          	movdqa %xmm3,(%rcx)
   1bf4a:	66 0f 7f 41 10       	movdqa %xmm0,0x10(%rcx)
   1bf4f:	48 83 c1 20          	add    $0x20,%rcx
   1bf53:	49 83 f8 20          	cmp    $0x20,%r8
   1bf57:	7d b7                	jge    1bf10 <__intel_memcpy+0x1340>
   1bf59:	e9 3b 01 00 00       	jmpq   1c099 <__intel_memcpy+0x14c9>
   1bf5e:	66 90                	xchg   %ax,%ax
   1bf60:	49 83 e8 20          	sub    $0x20,%r8
   1bf64:	66 0f 6f 5a 10       	movdqa 0x10(%rdx),%xmm3
   1bf69:	66 0f 6f 42 20       	movdqa 0x20(%rdx),%xmm0
   1bf6e:	48 83 c2 20          	add    $0x20,%rdx
   1bf72:	66 0f 73 d9 0c       	psrldq $0xc,%xmm1
   1bf77:	66 0f 6f d3          	movdqa %xmm3,%xmm2
   1bf7b:	66 0f 73 fb 04       	pslldq $0x4,%xmm3
   1bf80:	66 0f eb d9          	por    %xmm1,%xmm3
   1bf84:	66 0f 73 da 0c       	psrldq $0xc,%xmm2
   1bf89:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   1bf8d:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   1bf92:	66 0f eb c2          	por    %xmm2,%xmm0
   1bf96:	66 0f 7f 19          	movdqa %xmm3,(%rcx)
   1bf9a:	66 0f 7f 41 10       	movdqa %xmm0,0x10(%rcx)
   1bf9f:	48 83 c1 20          	add    $0x20,%rcx
   1bfa3:	49 83 f8 20          	cmp    $0x20,%r8
   1bfa7:	7d b7                	jge    1bf60 <__intel_memcpy+0x1390>
   1bfa9:	e9 eb 00 00 00       	jmpq   1c099 <__intel_memcpy+0x14c9>
   1bfae:	66 90                	xchg   %ax,%ax
   1bfb0:	49 83 e8 20          	sub    $0x20,%r8
   1bfb4:	66 0f 6f 5a 10       	movdqa 0x10(%rdx),%xmm3
   1bfb9:	66 0f 6f 42 20       	movdqa 0x20(%rdx),%xmm0
   1bfbe:	48 83 c2 20          	add    $0x20,%rdx
   1bfc2:	66 0f 73 d9 0d       	psrldq $0xd,%xmm1
   1bfc7:	66 0f 6f d3          	movdqa %xmm3,%xmm2
   1bfcb:	66 0f 73 fb 03       	pslldq $0x3,%xmm3
   1bfd0:	66 0f eb d9          	por    %xmm1,%xmm3
   1bfd4:	66 0f 73 da 0d       	psrldq $0xd,%xmm2
   1bfd9:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   1bfdd:	66 0f 73 f8 03       	pslldq $0x3,%xmm0
   1bfe2:	66 0f eb c2          	por    %xmm2,%xmm0
   1bfe6:	66 0f 7f 19          	movdqa %xmm3,(%rcx)
   1bfea:	66 0f 7f 41 10       	movdqa %xmm0,0x10(%rcx)
   1bfef:	48 83 c1 20          	add    $0x20,%rcx
   1bff3:	49 83 f8 20          	cmp    $0x20,%r8
   1bff7:	7d b7                	jge    1bfb0 <__intel_memcpy+0x13e0>
   1bff9:	e9 9b 00 00 00       	jmpq   1c099 <__intel_memcpy+0x14c9>
   1bffe:	66 90                	xchg   %ax,%ax
   1c000:	49 83 e8 20          	sub    $0x20,%r8
   1c004:	66 0f 6f 5a 10       	movdqa 0x10(%rdx),%xmm3
   1c009:	66 0f 6f 42 20       	movdqa 0x20(%rdx),%xmm0
   1c00e:	48 83 c2 20          	add    $0x20,%rdx
   1c012:	66 0f 73 d9 0e       	psrldq $0xe,%xmm1
   1c017:	66 0f 6f d3          	movdqa %xmm3,%xmm2
   1c01b:	66 0f 73 fb 02       	pslldq $0x2,%xmm3
   1c020:	66 0f eb d9          	por    %xmm1,%xmm3
   1c024:	66 0f 73 da 0e       	psrldq $0xe,%xmm2
   1c029:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   1c02d:	66 0f 73 f8 02       	pslldq $0x2,%xmm0
   1c032:	66 0f eb c2          	por    %xmm2,%xmm0
   1c036:	66 0f 7f 19          	movdqa %xmm3,(%rcx)
   1c03a:	66 0f 7f 41 10       	movdqa %xmm0,0x10(%rcx)
   1c03f:	48 83 c1 20          	add    $0x20,%rcx
   1c043:	49 83 f8 20          	cmp    $0x20,%r8
   1c047:	7d b7                	jge    1c000 <__intel_memcpy+0x1430>
   1c049:	eb 4e                	jmp    1c099 <__intel_memcpy+0x14c9>
   1c04b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c050:	49 83 e8 20          	sub    $0x20,%r8
   1c054:	66 0f 6f 5a 10       	movdqa 0x10(%rdx),%xmm3
   1c059:	66 0f 6f 42 20       	movdqa 0x20(%rdx),%xmm0
   1c05e:	48 83 c2 20          	add    $0x20,%rdx
   1c062:	66 0f 73 d9 0f       	psrldq $0xf,%xmm1
   1c067:	66 0f 6f d3          	movdqa %xmm3,%xmm2
   1c06b:	66 0f 73 fb 01       	pslldq $0x1,%xmm3
   1c070:	66 0f eb d9          	por    %xmm1,%xmm3
   1c074:	66 0f 73 da 0f       	psrldq $0xf,%xmm2
   1c079:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   1c07d:	66 0f 73 f8 01       	pslldq $0x1,%xmm0
   1c082:	66 0f eb c2          	por    %xmm2,%xmm0
   1c086:	66 0f 7f 19          	movdqa %xmm3,(%rcx)
   1c08a:	66 0f 7f 41 10       	movdqa %xmm0,0x10(%rcx)
   1c08f:	48 83 c1 20          	add    $0x20,%rcx
   1c093:	49 83 f8 20          	cmp    $0x20,%r8
   1c097:	7d b7                	jge    1c050 <__intel_memcpy+0x1480>
   1c099:	4c 8d 15 d0 ec ff ff 	lea    -0x1330(%rip),%r10        # 1ad70 <__intel_memcpy+0x1a0>
   1c0a0:	4c 01 da             	add    %r11,%rdx
   1c0a3:	4c 01 c1             	add    %r8,%rcx
   1c0a6:	4c 01 c2             	add    %r8,%rdx
   1c0a9:	4f 8b 0c c2          	mov    (%r10,%r8,8),%r9
   1c0ad:	4f 8d 14 11          	lea    (%r9,%r10,1),%r10
   1c0b1:	41 ff e2             	jmpq   *%r10
   1c0b4:	66 90                	xchg   %ax,%ax
   1c0b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c0bd:	00 00 00 
   1c0c0:	48 8d 49 40          	lea    0x40(%rcx),%rcx
   1c0c4:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   1c0c8:	4d 8d 40 c0          	lea    -0x40(%r8),%r8
   1c0cc:	0f 18 82 80 01 00 00 	prefetchnta 0x180(%rdx)
   1c0d3:	f3 0f 6f 42 c0       	movdqu -0x40(%rdx),%xmm0
   1c0d8:	f3 0f 6f 4a d0       	movdqu -0x30(%rdx),%xmm1
   1c0dd:	49 83 f8 40          	cmp    $0x40,%r8
   1c0e1:	66 0f e7 41 c0       	movntdq %xmm0,-0x40(%rcx)
   1c0e6:	66 0f e7 49 d0       	movntdq %xmm1,-0x30(%rcx)
   1c0eb:	f3 0f 6f 52 e0       	movdqu -0x20(%rdx),%xmm2
   1c0f0:	f3 0f 6f 5a f0       	movdqu -0x10(%rdx),%xmm3
   1c0f5:	66 0f e7 51 e0       	movntdq %xmm2,-0x20(%rcx)
   1c0fa:	66 0f e7 59 f0       	movntdq %xmm3,-0x10(%rcx)
   1c0ff:	7d bf                	jge    1c0c0 <__intel_memcpy+0x14f0>
   1c101:	4c 8d 15 a8 01 00 00 	lea    0x1a8(%rip),%r10        # 1c2b0 <__intel_memcpy+0x16e0>
   1c108:	4d 89 c1             	mov    %r8,%r9
   1c10b:	49 c1 e9 04          	shr    $0x4,%r9
   1c10f:	49 c1 e1 04          	shl    $0x4,%r9
   1c113:	4c 01 c9             	add    %r9,%rcx
   1c116:	4c 01 ca             	add    %r9,%rdx
   1c119:	4d 29 c8             	sub    %r9,%r8
   1c11c:	49 c1 e9 04          	shr    $0x4,%r9
   1c120:	0f ae f8             	sfence 
   1c123:	4f 8b 1c ca          	mov    (%r10,%r9,8),%r11
   1c127:	4f 8d 14 13          	lea    (%r11,%r10,1),%r10
   1c12b:	41 ff e2             	jmpq   *%r10
   1c12e:	66 90                	xchg   %ax,%ax
   1c130:	66 0f 6f 02          	movdqa (%rdx),%xmm0
   1c134:	66 0f 6f 4a 10       	movdqa 0x10(%rdx),%xmm1
   1c139:	66 0f 7f 01          	movdqa %xmm0,(%rcx)
   1c13d:	66 0f 7f 49 10       	movdqa %xmm1,0x10(%rcx)
   1c142:	4d 8d 40 80          	lea    -0x80(%r8),%r8
   1c146:	66 0f 6f 52 20       	movdqa 0x20(%rdx),%xmm2
   1c14b:	66 0f 6f 5a 30       	movdqa 0x30(%rdx),%xmm3
   1c150:	66 0f 7f 51 20       	movdqa %xmm2,0x20(%rcx)
   1c155:	66 0f 7f 59 30       	movdqa %xmm3,0x30(%rcx)
   1c15a:	66 0f 6f 42 40       	movdqa 0x40(%rdx),%xmm0
   1c15f:	66 0f 6f 4a 50       	movdqa 0x50(%rdx),%xmm1
   1c164:	49 81 f8 a8 00 00 00 	cmp    $0xa8,%r8
   1c16b:	66 0f 7f 41 40       	movdqa %xmm0,0x40(%rcx)
   1c170:	66 0f 7f 49 50       	movdqa %xmm1,0x50(%rcx)
   1c175:	66 0f 6f 52 60       	movdqa 0x60(%rdx),%xmm2
   1c17a:	66 0f 6f 5a 70       	movdqa 0x70(%rdx),%xmm3
   1c17f:	48 8d 92 80 00 00 00 	lea    0x80(%rdx),%rdx
   1c186:	66 0f 7f 51 60       	movdqa %xmm2,0x60(%rcx)
   1c18b:	66 0f 7f 59 70       	movdqa %xmm3,0x70(%rcx)
   1c190:	48 8d 89 80 00 00 00 	lea    0x80(%rcx),%rcx
   1c197:	7d 97                	jge    1c130 <__intel_memcpy+0x1560>
   1c199:	4c 8d 15 d0 eb ff ff 	lea    -0x1430(%rip),%r10        # 1ad70 <__intel_memcpy+0x1a0>
   1c1a0:	4c 01 c1             	add    %r8,%rcx
   1c1a3:	4c 01 c2             	add    %r8,%rdx
   1c1a6:	4f 8b 0c c2          	mov    (%r10,%r8,8),%r9
   1c1aa:	4f 8d 14 11          	lea    (%r9,%r10,1),%r10
   1c1ae:	41 ff e2             	jmpq   *%r10
   1c1b1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c1b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c1bd:	00 00 00 
   1c1c0:	44 8b 0d c1 66 20 00 	mov    0x2066c1(%rip),%r9d        # 222888 <__libirc_largest_cache_size_half>
   1c1c7:	4d 39 c8             	cmp    %r9,%r8
   1c1ca:	7f 74                	jg     1c240 <__intel_memcpy+0x1670>
   1c1cc:	eb 02                	jmp    1c1d0 <__intel_memcpy+0x1600>
   1c1ce:	66 90                	xchg   %ax,%ax
   1c1d0:	4c 8b 0a             	mov    (%rdx),%r9
   1c1d3:	4c 8b 52 08          	mov    0x8(%rdx),%r10
   1c1d7:	4d 8d 40 c0          	lea    -0x40(%r8),%r8
   1c1db:	4c 89 09             	mov    %r9,(%rcx)
   1c1de:	4c 89 51 08          	mov    %r10,0x8(%rcx)
   1c1e2:	4c 8b 5a 10          	mov    0x10(%rdx),%r11
   1c1e6:	4c 8b 4a 18          	mov    0x18(%rdx),%r9
   1c1ea:	4c 89 59 10          	mov    %r11,0x10(%rcx)
   1c1ee:	4c 89 49 18          	mov    %r9,0x18(%rcx)
   1c1f2:	49 83 f8 40          	cmp    $0x40,%r8
   1c1f6:	4c 8b 52 20          	mov    0x20(%rdx),%r10
   1c1fa:	4c 8b 5a 28          	mov    0x28(%rdx),%r11
   1c1fe:	4c 89 51 20          	mov    %r10,0x20(%rcx)
   1c202:	4c 89 59 28          	mov    %r11,0x28(%rcx)
   1c206:	4c 8b 4a 30          	mov    0x30(%rdx),%r9
   1c20a:	4c 8b 52 38          	mov    0x38(%rdx),%r10
   1c20e:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   1c212:	4c 89 49 30          	mov    %r9,0x30(%rcx)
   1c216:	4c 89 51 38          	mov    %r10,0x38(%rcx)
   1c21a:	48 8d 49 40          	lea    0x40(%rcx),%rcx
   1c21e:	7f b0                	jg     1c1d0 <__intel_memcpy+0x1600>
   1c220:	4c 8d 15 49 eb ff ff 	lea    -0x14b7(%rip),%r10        # 1ad70 <__intel_memcpy+0x1a0>
   1c227:	4a 8d 14 02          	lea    (%rdx,%r8,1),%rdx
   1c22b:	4a 8d 0c 01          	lea    (%rcx,%r8,1),%rcx
   1c22f:	4f 8b 0c c2          	mov    (%r10,%r8,8),%r9
   1c233:	4f 8d 14 11          	lea    (%r9,%r10,1),%r10
   1c237:	41 ff e2             	jmpq   *%r10
   1c23a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1c240:	49 83 e8 40          	sub    $0x40,%r8
   1c244:	0f 18 82 80 01 00 00 	prefetchnta 0x180(%rdx)
   1c24b:	4c 8b 0a             	mov    (%rdx),%r9
   1c24e:	4c 0f c3 09          	movnti %r9,(%rcx)
   1c252:	4c 8b 52 08          	mov    0x8(%rdx),%r10
   1c256:	4c 0f c3 51 08       	movnti %r10,0x8(%rcx)
   1c25b:	4c 8b 5a 10          	mov    0x10(%rdx),%r11
   1c25f:	4c 0f c3 59 10       	movnti %r11,0x10(%rcx)
   1c264:	4c 8b 4a 18          	mov    0x18(%rdx),%r9
   1c268:	4c 0f c3 49 18       	movnti %r9,0x18(%rcx)
   1c26d:	4c 8b 52 20          	mov    0x20(%rdx),%r10
   1c271:	4c 0f c3 51 20       	movnti %r10,0x20(%rcx)
   1c276:	4c 8b 5a 28          	mov    0x28(%rdx),%r11
   1c27a:	4c 0f c3 59 28       	movnti %r11,0x28(%rcx)
   1c27f:	4c 8b 4a 30          	mov    0x30(%rdx),%r9
   1c283:	4c 0f c3 49 30       	movnti %r9,0x30(%rcx)
   1c288:	4c 8b 52 38          	mov    0x38(%rdx),%r10
   1c28c:	4c 0f c3 51 38       	movnti %r10,0x38(%rcx)
   1c291:	48 8d 52 40          	lea    0x40(%rdx),%rdx
   1c295:	48 8d 49 40          	lea    0x40(%rcx),%rcx
   1c299:	49 83 f8 40          	cmp    $0x40,%r8
   1c29d:	7d a1                	jge    1c240 <__intel_memcpy+0x1670>
   1c29f:	0f ae f8             	sfence 
   1c2a2:	e9 79 ff ff ff       	jmpq   1c220 <__intel_memcpy+0x1650>
   1c2a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c2ae:	00 00 
   1c2b0:	98                   	cwtl   
   1c2b1:	00 00                	add    %al,(%rax)
   1c2b3:	00 00                	add    %al,(%rax)
   1c2b5:	00 00                	add    %al,(%rax)
   1c2b7:	00 8e 00 00 00 00    	add    %cl,0x0(%rsi)
   1c2bd:	00 00                	add    %al,(%rax)
   1c2bf:	00 84 00 00 00 00 00 	add    %al,0x0(%rax,%rax,1)
   1c2c6:	00 00                	add    %al,(%rax)
   1c2c8:	7a 00                	jp     1c2ca <__intel_memcpy+0x16fa>
   1c2ca:	00 00                	add    %al,(%rax)
   1c2cc:	00 00                	add    %al,(%rax)
   1c2ce:	00 00                	add    %al,(%rax)
   1c2d0:	70 00                	jo     1c2d2 <__intel_memcpy+0x1702>
   1c2d2:	00 00                	add    %al,(%rax)
   1c2d4:	00 00                	add    %al,(%rax)
   1c2d6:	00 00                	add    %al,(%rax)
   1c2d8:	66 00 00             	data16 add %al,(%rax)
   1c2db:	00 00                	add    %al,(%rax)
   1c2dd:	00 00                	add    %al,(%rax)
   1c2df:	00 5c 00 00          	add    %bl,0x0(%rax,%rax,1)
   1c2e3:	00 00                	add    %al,(%rax)
   1c2e5:	00 00                	add    %al,(%rax)
   1c2e7:	00 52 00             	add    %dl,0x0(%rdx)
   1c2ea:	00 00                	add    %al,(%rax)
   1c2ec:	00 00                	add    %al,(%rax)
   1c2ee:	00 00                	add    %al,(%rax)
   1c2f0:	48 00 00             	rex.W add %al,(%rax)
   1c2f3:	00 00                	add    %al,(%rax)
   1c2f5:	00 00                	add    %al,(%rax)
   1c2f7:	00 f3                	add    %dh,%bl
   1c2f9:	0f 6f 42 80          	movq   -0x80(%rdx),%mm0
   1c2fd:	66 0f 7f 41 80       	movdqa %xmm0,-0x80(%rcx)
   1c302:	f3 0f 6f 4a 90       	movdqu -0x70(%rdx),%xmm1
   1c307:	66 0f 7f 49 90       	movdqa %xmm1,-0x70(%rcx)
   1c30c:	f3 0f 6f 52 a0       	movdqu -0x60(%rdx),%xmm2
   1c311:	66 0f 7f 51 a0       	movdqa %xmm2,-0x60(%rcx)
   1c316:	f3 0f 6f 5a b0       	movdqu -0x50(%rdx),%xmm3
   1c31b:	66 0f 7f 59 b0       	movdqa %xmm3,-0x50(%rcx)
   1c320:	f3 0f 6f 42 c0       	movdqu -0x40(%rdx),%xmm0
   1c325:	66 0f 7f 41 c0       	movdqa %xmm0,-0x40(%rcx)
   1c32a:	f3 0f 6f 4a d0       	movdqu -0x30(%rdx),%xmm1
   1c32f:	66 0f 7f 49 d0       	movdqa %xmm1,-0x30(%rcx)
   1c334:	f3 0f 6f 52 e0       	movdqu -0x20(%rdx),%xmm2
   1c339:	66 0f 7f 51 e0       	movdqa %xmm2,-0x20(%rcx)
   1c33e:	f3 0f 6f 5a f0       	movdqu -0x10(%rdx),%xmm3
   1c343:	66 0f 7f 59 f0       	movdqa %xmm3,-0x10(%rcx)
   1c348:	4c 8d 15 21 ea ff ff 	lea    -0x15df(%rip),%r10        # 1ad70 <__intel_memcpy+0x1a0>
   1c34f:	4c 01 c2             	add    %r8,%rdx
   1c352:	4c 01 c1             	add    %r8,%rcx
   1c355:	4f 8b 0c c2          	mov    (%r10,%r8,8),%r9
   1c359:	4f 8d 14 11          	lea    (%r9,%r10,1),%r10
   1c35d:	41 ff e2             	jmpq   *%r10
   1c360:	4c 8b 0a             	mov    (%rdx),%r9
   1c363:	4c 89 09             	mov    %r9,(%rcx)
   1c366:	48 83 c1 08          	add    $0x8,%rcx
   1c36a:	48 83 c2 08          	add    $0x8,%rdx
   1c36e:	49 83 e8 08          	sub    $0x8,%r8
   1c372:	e9 73 f7 ff ff       	jmpq   1baea <__intel_memcpy+0xf1a>
   1c377:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c37e:	00 00 

000000000001c380 <__intel_memset>:
   1c380:	48 83 fa 01          	cmp    $0x1,%rdx
   1c384:	48 89 f8             	mov    %rdi,%rax
   1c387:	75 04                	jne    1c38d <__intel_memset+0xd>
   1c389:	40 88 37             	mov    %sil,(%rdi)
   1c38c:	c3                   	retq   
   1c38d:	49 b9 01 01 01 01 01 	movabs $0x101010101010101,%r9
   1c394:	01 01 01 
   1c397:	49 89 d0             	mov    %rdx,%r8
   1c39a:	48 0f b6 d6          	movzbq %sil,%rdx
   1c39e:	49 0f af d1          	imul   %r9,%rdx
   1c3a2:	49 83 f8 41          	cmp    $0x41,%r8
   1c3a6:	0f 8d 04 04 00 00    	jge    1c7b0 <__intel_memset+0x430>
   1c3ac:	4c 8d 1d 1d 00 00 00 	lea    0x1d(%rip),%r11        # 1c3d0 <__intel_memset+0x50>
   1c3b3:	4c 01 c7             	add    %r8,%rdi
   1c3b6:	4b 8b 0c c3          	mov    (%r11,%r8,8),%rcx
   1c3ba:	4e 8d 1c 19          	lea    (%rcx,%r11,1),%r11
   1c3be:	41 ff e3             	jmpq   *%r11
   1c3c1:	c2 00 00             	retq   $0x0
   1c3c4:	66 90                	xchg   %ax,%ax
   1c3c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c3cd:	00 00 00 
   1c3d0:	f1                   	icebp  
   1c3d1:	ff                   	(bad)  
   1c3d2:	ff                   	(bad)  
   1c3d3:	ff                   	(bad)  
   1c3d4:	ff                   	(bad)  
   1c3d5:	ff                   	(bad)  
   1c3d6:	ff                   	(bad)  
   1c3d7:	ff a4 02 00 00 00 00 	jmpq   *0x0(%rdx,%rax,1)
   1c3de:	00 00                	add    %al,(%rax)
   1c3e0:	f5                   	cmc    
   1c3e1:	02 00                	add    (%rax),%al
   1c3e3:	00 00                	add    %al,(%rax)
   1c3e5:	00 00                	add    %al,(%rax)
   1c3e7:	00 20                	add    %ah,(%rax)
   1c3e9:	03 00                	add    (%rax),%eax
   1c3eb:	00 00                	add    %al,(%rax)
   1c3ed:	00 00                	add    %al,(%rax)
   1c3ef:	00 4e 03             	add    %cl,0x3(%rsi)
   1c3f2:	00 00                	add    %al,(%rax)
   1c3f4:	00 00                	add    %al,(%rax)
   1c3f6:	00 00                	add    %al,(%rax)
   1c3f8:	78 03                	js     1c3fd <__intel_memset+0x7d>
   1c3fa:	00 00                	add    %al,(%rax)
   1c3fc:	00 00                	add    %al,(%rax)
   1c3fe:	00 00                	add    %al,(%rax)
   1c400:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1c401:	03 00                	add    (%rax),%eax
   1c403:	00 00                	add    %al,(%rax)
   1c405:	00 00                	add    %al,(%rax)
   1c407:	00 d3                	add    %dl,%bl
   1c409:	03 00                	add    (%rax),%eax
   1c40b:	00 00                	add    %al,(%rax)
   1c40d:	00 00                	add    %al,(%rax)
   1c40f:	00 ca                	add    %cl,%dl
   1c411:	02 00                	add    (%rax),%al
   1c413:	00 00                	add    %al,(%rax)
   1c415:	00 00                	add    %al,(%rax)
   1c417:	00 a0 02 00 00 00    	add    %ah,0x2(%rax)
   1c41d:	00 00                	add    %al,(%rax)
   1c41f:	00 f1                	add    %dh,%cl
   1c421:	02 00                	add    (%rax),%al
   1c423:	00 00                	add    %al,(%rax)
   1c425:	00 00                	add    %al,(%rax)
   1c427:	00 1c 03             	add    %bl,(%rbx,%rax,1)
   1c42a:	00 00                	add    %al,(%rax)
   1c42c:	00 00                	add    %al,(%rax)
   1c42e:	00 00                	add    %al,(%rax)
   1c430:	4a 03 00             	rex.WX add (%rax),%rax
   1c433:	00 00                	add    %al,(%rax)
   1c435:	00 00                	add    %al,(%rax)
   1c437:	00 74 03 00          	add    %dh,0x0(%rbx,%rax,1)
   1c43b:	00 00                	add    %al,(%rax)
   1c43d:	00 00                	add    %al,(%rax)
   1c43f:	00 a1 03 00 00 00    	add    %ah,0x3(%rcx)
   1c445:	00 00                	add    %al,(%rax)
   1c447:	00 cf                	add    %cl,%bh
   1c449:	03 00                	add    (%rax),%eax
   1c44b:	00 00                	add    %al,(%rax)
   1c44d:	00 00                	add    %al,(%rax)
   1c44f:	00 c6                	add    %al,%dh
   1c451:	02 00                	add    (%rax),%al
   1c453:	00 00                	add    %al,(%rax)
   1c455:	00 00                	add    %al,(%rax)
   1c457:	00 9c 02 00 00 00 00 	add    %bl,0x0(%rdx,%rax,1)
   1c45e:	00 00                	add    %al,(%rax)
   1c460:	ed                   	in     (%dx),%eax
   1c461:	02 00                	add    (%rax),%al
   1c463:	00 00                	add    %al,(%rax)
   1c465:	00 00                	add    %al,(%rax)
   1c467:	00 18                	add    %bl,(%rax)
   1c469:	03 00                	add    (%rax),%eax
   1c46b:	00 00                	add    %al,(%rax)
   1c46d:	00 00                	add    %al,(%rax)
   1c46f:	00 46 03             	add    %al,0x3(%rsi)
   1c472:	00 00                	add    %al,(%rax)
   1c474:	00 00                	add    %al,(%rax)
   1c476:	00 00                	add    %al,(%rax)
   1c478:	70 03                	jo     1c47d <__intel_memset+0xfd>
   1c47a:	00 00                	add    %al,(%rax)
   1c47c:	00 00                	add    %al,(%rax)
   1c47e:	00 00                	add    %al,(%rax)
   1c480:	9d                   	popfq  
   1c481:	03 00                	add    (%rax),%eax
   1c483:	00 00                	add    %al,(%rax)
   1c485:	00 00                	add    %al,(%rax)
   1c487:	00 cb                	add    %cl,%bl
   1c489:	03 00                	add    (%rax),%eax
   1c48b:	00 00                	add    %al,(%rax)
   1c48d:	00 00                	add    %al,(%rax)
   1c48f:	00 c2                	add    %al,%dl
   1c491:	02 00                	add    (%rax),%al
   1c493:	00 00                	add    %al,(%rax)
   1c495:	00 00                	add    %al,(%rax)
   1c497:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
   1c49d:	00 00                	add    %al,(%rax)
   1c49f:	00 e9                	add    %ch,%cl
   1c4a1:	02 00                	add    (%rax),%al
   1c4a3:	00 00                	add    %al,(%rax)
   1c4a5:	00 00                	add    %al,(%rax)
   1c4a7:	00 14 03             	add    %dl,(%rbx,%rax,1)
   1c4aa:	00 00                	add    %al,(%rax)
   1c4ac:	00 00                	add    %al,(%rax)
   1c4ae:	00 00                	add    %al,(%rax)
   1c4b0:	42 03 00             	rex.X add (%rax),%eax
   1c4b3:	00 00                	add    %al,(%rax)
   1c4b5:	00 00                	add    %al,(%rax)
   1c4b7:	00 6c 03 00          	add    %ch,0x0(%rbx,%rax,1)
   1c4bb:	00 00                	add    %al,(%rax)
   1c4bd:	00 00                	add    %al,(%rax)
   1c4bf:	00 99 03 00 00 00    	add    %bl,0x3(%rcx)
   1c4c5:	00 00                	add    %al,(%rax)
   1c4c7:	00 c7                	add    %al,%bh
   1c4c9:	03 00                	add    (%rax),%eax
   1c4cb:	00 00                	add    %al,(%rax)
   1c4cd:	00 00                	add    %al,(%rax)
   1c4cf:	00 be 02 00 00 00    	add    %bh,0x2(%rsi)
   1c4d5:	00 00                	add    %al,(%rax)
   1c4d7:	00 94 02 00 00 00 00 	add    %dl,0x0(%rdx,%rax,1)
   1c4de:	00 00                	add    %al,(%rax)
   1c4e0:	e5 02                	in     $0x2,%eax
   1c4e2:	00 00                	add    %al,(%rax)
   1c4e4:	00 00                	add    %al,(%rax)
   1c4e6:	00 00                	add    %al,(%rax)
   1c4e8:	10 03                	adc    %al,(%rbx)
   1c4ea:	00 00                	add    %al,(%rax)
   1c4ec:	00 00                	add    %al,(%rax)
   1c4ee:	00 00                	add    %al,(%rax)
   1c4f0:	3e 03 00             	add    %ds:(%rax),%eax
   1c4f3:	00 00                	add    %al,(%rax)
   1c4f5:	00 00                	add    %al,(%rax)
   1c4f7:	00 68 03             	add    %ch,0x3(%rax)
   1c4fa:	00 00                	add    %al,(%rax)
   1c4fc:	00 00                	add    %al,(%rax)
   1c4fe:	00 00                	add    %al,(%rax)
   1c500:	95                   	xchg   %eax,%ebp
   1c501:	03 00                	add    (%rax),%eax
   1c503:	00 00                	add    %al,(%rax)
   1c505:	00 00                	add    %al,(%rax)
   1c507:	00 c3                	add    %al,%bl
   1c509:	03 00                	add    (%rax),%eax
   1c50b:	00 00                	add    %al,(%rax)
   1c50d:	00 00                	add    %al,(%rax)
   1c50f:	00 ba 02 00 00 00    	add    %bh,0x2(%rdx)
   1c515:	00 00                	add    %al,(%rax)
   1c517:	00 90 02 00 00 00    	add    %dl,0x2(%rax)
   1c51d:	00 00                	add    %al,(%rax)
   1c51f:	00 e1                	add    %ah,%cl
   1c521:	02 00                	add    (%rax),%al
   1c523:	00 00                	add    %al,(%rax)
   1c525:	00 00                	add    %al,(%rax)
   1c527:	00 0c 03             	add    %cl,(%rbx,%rax,1)
   1c52a:	00 00                	add    %al,(%rax)
   1c52c:	00 00                	add    %al,(%rax)
   1c52e:	00 00                	add    %al,(%rax)
   1c530:	3a 03                	cmp    (%rbx),%al
   1c532:	00 00                	add    %al,(%rax)
   1c534:	00 00                	add    %al,(%rax)
   1c536:	00 00                	add    %al,(%rax)
   1c538:	64 03 00             	add    %fs:(%rax),%eax
   1c53b:	00 00                	add    %al,(%rax)
   1c53d:	00 00                	add    %al,(%rax)
   1c53f:	00 91 03 00 00 00    	add    %dl,0x3(%rcx)
   1c545:	00 00                	add    %al,(%rax)
   1c547:	00 bf 03 00 00 00    	add    %bh,0x3(%rdi)
   1c54d:	00 00                	add    %al,(%rax)
   1c54f:	00 b6 02 00 00 00    	add    %dh,0x2(%rsi)
   1c555:	00 00                	add    %al,(%rax)
   1c557:	00 8c 02 00 00 00 00 	add    %cl,0x0(%rdx,%rax,1)
   1c55e:	00 00                	add    %al,(%rax)
   1c560:	dd 02                	fldl   (%rdx)
   1c562:	00 00                	add    %al,(%rax)
   1c564:	00 00                	add    %al,(%rax)
   1c566:	00 00                	add    %al,(%rax)
   1c568:	08 03                	or     %al,(%rbx)
   1c56a:	00 00                	add    %al,(%rax)
   1c56c:	00 00                	add    %al,(%rax)
   1c56e:	00 00                	add    %al,(%rax)
   1c570:	36 03 00             	add    %ss:(%rax),%eax
   1c573:	00 00                	add    %al,(%rax)
   1c575:	00 00                	add    %al,(%rax)
   1c577:	00 60 03             	add    %ah,0x3(%rax)
   1c57a:	00 00                	add    %al,(%rax)
   1c57c:	00 00                	add    %al,(%rax)
   1c57e:	00 00                	add    %al,(%rax)
   1c580:	8d 03                	lea    (%rbx),%eax
   1c582:	00 00                	add    %al,(%rax)
   1c584:	00 00                	add    %al,(%rax)
   1c586:	00 00                	add    %al,(%rax)
   1c588:	bb 03 00 00 00       	mov    $0x3,%ebx
   1c58d:	00 00                	add    %al,(%rax)
   1c58f:	00 b2 02 00 00 00    	add    %dh,0x2(%rdx)
   1c595:	00 00                	add    %al,(%rax)
   1c597:	00 88 02 00 00 00    	add    %cl,0x2(%rax)
   1c59d:	00 00                	add    %al,(%rax)
   1c59f:	00 d9                	add    %bl,%cl
   1c5a1:	02 00                	add    (%rax),%al
   1c5a3:	00 00                	add    %al,(%rax)
   1c5a5:	00 00                	add    %al,(%rax)
   1c5a7:	00 04 03             	add    %al,(%rbx,%rax,1)
   1c5aa:	00 00                	add    %al,(%rax)
   1c5ac:	00 00                	add    %al,(%rax)
   1c5ae:	00 00                	add    %al,(%rax)
   1c5b0:	32 03                	xor    (%rbx),%al
   1c5b2:	00 00                	add    %al,(%rax)
   1c5b4:	00 00                	add    %al,(%rax)
   1c5b6:	00 00                	add    %al,(%rax)
   1c5b8:	5c                   	pop    %rsp
   1c5b9:	03 00                	add    (%rax),%eax
   1c5bb:	00 00                	add    %al,(%rax)
   1c5bd:	00 00                	add    %al,(%rax)
   1c5bf:	00 89 03 00 00 00    	add    %cl,0x3(%rcx)
   1c5c5:	00 00                	add    %al,(%rax)
   1c5c7:	00 b7 03 00 00 00    	add    %dh,0x3(%rdi)
   1c5cd:	00 00                	add    %al,(%rax)
   1c5cf:	00 ae 02 00 00 00    	add    %ch,0x2(%rsi)
   1c5d5:	00 00                	add    %al,(%rax)
   1c5d7:	00 84 02 00 00 00 00 	add    %al,0x0(%rdx,%rax,1)
   1c5de:	00 00                	add    %al,(%rax)
   1c5e0:	d5                   	(bad)  
   1c5e1:	02 00                	add    (%rax),%al
   1c5e3:	00 00                	add    %al,(%rax)
   1c5e5:	00 00                	add    %al,(%rax)
   1c5e7:	00 00                	add    %al,(%rax)
   1c5e9:	03 00                	add    (%rax),%eax
   1c5eb:	00 00                	add    %al,(%rax)
   1c5ed:	00 00                	add    %al,(%rax)
   1c5ef:	00 2e                	add    %ch,(%rsi)
   1c5f1:	03 00                	add    (%rax),%eax
   1c5f3:	00 00                	add    %al,(%rax)
   1c5f5:	00 00                	add    %al,(%rax)
   1c5f7:	00 58 03             	add    %bl,0x3(%rax)
   1c5fa:	00 00                	add    %al,(%rax)
   1c5fc:	00 00                	add    %al,(%rax)
   1c5fe:	00 00                	add    %al,(%rax)
   1c600:	85 03                	test   %eax,(%rbx)
   1c602:	00 00                	add    %al,(%rax)
   1c604:	00 00                	add    %al,(%rax)
   1c606:	00 00                	add    %al,(%rax)
   1c608:	b3 03                	mov    $0x3,%bl
   1c60a:	00 00                	add    %al,(%rax)
   1c60c:	00 00                	add    %al,(%rax)
   1c60e:	00 00                	add    %al,(%rax)
   1c610:	aa                   	stos   %al,%es:(%rdi)
   1c611:	02 00                	add    (%rax),%al
   1c613:	00 00                	add    %al,(%rax)
   1c615:	00 00                	add    %al,(%rax)
   1c617:	00 80 02 00 00 00    	add    %al,0x2(%rax)
   1c61d:	00 00                	add    %al,(%rax)
   1c61f:	00 d1                	add    %dl,%cl
   1c621:	02 00                	add    (%rax),%al
   1c623:	00 00                	add    %al,(%rax)
   1c625:	00 00                	add    %al,(%rax)
   1c627:	00 fc                	add    %bh,%ah
   1c629:	02 00                	add    (%rax),%al
   1c62b:	00 00                	add    %al,(%rax)
   1c62d:	00 00                	add    %al,(%rax)
   1c62f:	00 2a                	add    %ch,(%rdx)
   1c631:	03 00                	add    (%rax),%eax
   1c633:	00 00                	add    %al,(%rax)
   1c635:	00 00                	add    %al,(%rax)
   1c637:	00 54 03 00          	add    %dl,0x0(%rbx,%rax,1)
   1c63b:	00 00                	add    %al,(%rax)
   1c63d:	00 00                	add    %al,(%rax)
   1c63f:	00 81 03 00 00 00    	add    %al,0x3(%rcx)
   1c645:	00 00                	add    %al,(%rax)
   1c647:	00 af 03 00 00 00    	add    %ch,0x3(%rdi)
   1c64d:	00 00                	add    %al,(%rax)
   1c64f:	00 48 89             	add    %cl,-0x77(%rax)
   1c652:	57                   	push   %rdi
   1c653:	b7 48                	mov    $0x48,%bh
   1c655:	89 57 bf             	mov    %edx,-0x41(%rdi)
   1c658:	48 89 57 c7          	mov    %rdx,-0x39(%rdi)
   1c65c:	48 89 57 cf          	mov    %rdx,-0x31(%rdi)
   1c660:	48 89 57 d7          	mov    %rdx,-0x29(%rdi)
   1c664:	48 89 57 df          	mov    %rdx,-0x21(%rdi)
   1c668:	48 89 57 e7          	mov    %rdx,-0x19(%rdi)
   1c66c:	48 89 57 ef          	mov    %rdx,-0x11(%rdi)
   1c670:	48 89 57 f7          	mov    %rdx,-0x9(%rdi)
   1c674:	88 57 ff             	mov    %dl,-0x1(%rdi)
   1c677:	c2 00 00             	retq   $0x0
   1c67a:	48 89 57 b8          	mov    %rdx,-0x48(%rdi)
   1c67e:	48 89 57 c0          	mov    %rdx,-0x40(%rdi)
   1c682:	48 89 57 c8          	mov    %rdx,-0x38(%rdi)
   1c686:	48 89 57 d0          	mov    %rdx,-0x30(%rdi)
   1c68a:	48 89 57 d8          	mov    %rdx,-0x28(%rdi)
   1c68e:	48 89 57 e0          	mov    %rdx,-0x20(%rdi)
   1c692:	48 89 57 e8          	mov    %rdx,-0x18(%rdi)
   1c696:	48 89 57 f0          	mov    %rdx,-0x10(%rdi)
   1c69a:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   1c69e:	c2 00 00             	retq   $0x0
   1c6a1:	48 89 57 b6          	mov    %rdx,-0x4a(%rdi)
   1c6a5:	48 89 57 be          	mov    %rdx,-0x42(%rdi)
   1c6a9:	48 89 57 c6          	mov    %rdx,-0x3a(%rdi)
   1c6ad:	48 89 57 ce          	mov    %rdx,-0x32(%rdi)
   1c6b1:	48 89 57 d6          	mov    %rdx,-0x2a(%rdi)
   1c6b5:	48 89 57 de          	mov    %rdx,-0x22(%rdi)
   1c6b9:	48 89 57 e6          	mov    %rdx,-0x1a(%rdi)
   1c6bd:	48 89 57 ee          	mov    %rdx,-0x12(%rdi)
   1c6c1:	48 89 57 f6          	mov    %rdx,-0xa(%rdi)
   1c6c5:	66 89 57 fe          	mov    %dx,-0x2(%rdi)
   1c6c9:	c2 00 00             	retq   $0x0
   1c6cc:	48 89 57 b5          	mov    %rdx,-0x4b(%rdi)
   1c6d0:	48 89 57 bd          	mov    %rdx,-0x43(%rdi)
   1c6d4:	48 89 57 c5          	mov    %rdx,-0x3b(%rdi)
   1c6d8:	48 89 57 cd          	mov    %rdx,-0x33(%rdi)
   1c6dc:	48 89 57 d5          	mov    %rdx,-0x2b(%rdi)
   1c6e0:	48 89 57 dd          	mov    %rdx,-0x23(%rdi)
   1c6e4:	48 89 57 e5          	mov    %rdx,-0x1b(%rdi)
   1c6e8:	48 89 57 ed          	mov    %rdx,-0x13(%rdi)
   1c6ec:	48 89 57 f5          	mov    %rdx,-0xb(%rdi)
   1c6f0:	66 89 57 fd          	mov    %dx,-0x3(%rdi)
   1c6f4:	88 57 ff             	mov    %dl,-0x1(%rdi)
   1c6f7:	c2 00 00             	retq   $0x0
   1c6fa:	48 89 57 b4          	mov    %rdx,-0x4c(%rdi)
   1c6fe:	48 89 57 bc          	mov    %rdx,-0x44(%rdi)
   1c702:	48 89 57 c4          	mov    %rdx,-0x3c(%rdi)
   1c706:	48 89 57 cc          	mov    %rdx,-0x34(%rdi)
   1c70a:	48 89 57 d4          	mov    %rdx,-0x2c(%rdi)
   1c70e:	48 89 57 dc          	mov    %rdx,-0x24(%rdi)
   1c712:	48 89 57 e4          	mov    %rdx,-0x1c(%rdi)
   1c716:	48 89 57 ec          	mov    %rdx,-0x14(%rdi)
   1c71a:	48 89 57 f4          	mov    %rdx,-0xc(%rdi)
   1c71e:	89 57 fc             	mov    %edx,-0x4(%rdi)
   1c721:	c2 00 00             	retq   $0x0
   1c724:	48 89 57 b3          	mov    %rdx,-0x4d(%rdi)
   1c728:	48 89 57 bb          	mov    %rdx,-0x45(%rdi)
   1c72c:	48 89 57 c3          	mov    %rdx,-0x3d(%rdi)
   1c730:	48 89 57 cb          	mov    %rdx,-0x35(%rdi)
   1c734:	48 89 57 d3          	mov    %rdx,-0x2d(%rdi)
   1c738:	48 89 57 db          	mov    %rdx,-0x25(%rdi)
   1c73c:	48 89 57 e3          	mov    %rdx,-0x1d(%rdi)
   1c740:	48 89 57 eb          	mov    %rdx,-0x15(%rdi)
   1c744:	48 89 57 f3          	mov    %rdx,-0xd(%rdi)
   1c748:	89 57 fb             	mov    %edx,-0x5(%rdi)
   1c74b:	88 57 ff             	mov    %dl,-0x1(%rdi)
   1c74e:	c2 00 00             	retq   $0x0
   1c751:	48 89 57 b2          	mov    %rdx,-0x4e(%rdi)
   1c755:	48 89 57 ba          	mov    %rdx,-0x46(%rdi)
   1c759:	48 89 57 c2          	mov    %rdx,-0x3e(%rdi)
   1c75d:	48 89 57 ca          	mov    %rdx,-0x36(%rdi)
   1c761:	48 89 57 d2          	mov    %rdx,-0x2e(%rdi)
   1c765:	48 89 57 da          	mov    %rdx,-0x26(%rdi)
   1c769:	48 89 57 e2          	mov    %rdx,-0x1e(%rdi)
   1c76d:	48 89 57 ea          	mov    %rdx,-0x16(%rdi)
   1c771:	48 89 57 f2          	mov    %rdx,-0xe(%rdi)
   1c775:	89 57 fa             	mov    %edx,-0x6(%rdi)
   1c778:	66 89 57 fe          	mov    %dx,-0x2(%rdi)
   1c77c:	c2 00 00             	retq   $0x0
   1c77f:	48 89 57 b1          	mov    %rdx,-0x4f(%rdi)
   1c783:	48 89 57 b9          	mov    %rdx,-0x47(%rdi)
   1c787:	48 89 57 c1          	mov    %rdx,-0x3f(%rdi)
   1c78b:	48 89 57 c9          	mov    %rdx,-0x37(%rdi)
   1c78f:	48 89 57 d1          	mov    %rdx,-0x2f(%rdi)
   1c793:	48 89 57 d9          	mov    %rdx,-0x27(%rdi)
   1c797:	48 89 57 e1          	mov    %rdx,-0x1f(%rdi)
   1c79b:	48 89 57 e9          	mov    %rdx,-0x17(%rdi)
   1c79f:	48 89 57 f1          	mov    %rdx,-0xf(%rdi)
   1c7a3:	89 57 f9             	mov    %edx,-0x7(%rdi)
   1c7a6:	66 89 57 fd          	mov    %dx,-0x3(%rdi)
   1c7aa:	88 57 ff             	mov    %dl,-0x1(%rdi)
   1c7ad:	c2 00 00             	retq   $0x0
   1c7b0:	83 3d c9 60 20 00 02 	cmpl   $0x2,0x2060c9(%rip)        # 222880 <__libirc_mem_ops_method>
   1c7b7:	0f 8c e3 06 00 00    	jl     1cea0 <__intel_memset+0xb20>
   1c7bd:	66 48 0f 6e c2       	movq   %rdx,%xmm0
   1c7c2:	4c 8d 1d 37 00 00 00 	lea    0x37(%rip),%r11        # 1c800 <__intel_memset+0x480>
   1c7c9:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
   1c7cd:	49 c7 c2 10 00 00 00 	mov    $0x10,%r10
   1c7d4:	49 89 f9             	mov    %rdi,%r9
   1c7d7:	49 83 e1 0f          	and    $0xf,%r9
   1c7db:	4d 29 ca             	sub    %r9,%r10
   1c7de:	49 83 e2 0f          	and    $0xf,%r10
   1c7e2:	4c 01 d7             	add    %r10,%rdi
   1c7e5:	4d 29 d0             	sub    %r10,%r8
   1c7e8:	4b 8b 0c d3          	mov    (%r11,%r10,8),%rcx
   1c7ec:	4e 8d 1c 19          	lea    (%rcx,%r11,1),%r11
   1c7f0:	41 ff e3             	jmpq   *%r11
   1c7f3:	0f 1f 00             	nopl   (%rax)
   1c7f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c7fd:	00 00 00 
   1c800:	92                   	xchg   %eax,%edx
   1c801:	00 00                	add    %al,(%rax)
   1c803:	00 00                	add    %al,(%rax)
   1c805:	00 00                	add    %al,(%rax)
   1c807:	00 9d 00 00 00 00    	add    %bl,0x0(%rbp)
   1c80d:	00 00                	add    %al,(%rax)
   1c80f:	00 b2 00 00 00 00    	add    %dh,0x0(%rdx)
   1c815:	00 00                	add    %al,(%rax)
   1c817:	00 af 00 00 00 00    	add    %ch,0x0(%rdi)
   1c81d:	00 00                	add    %al,(%rax)
   1c81f:	00 bb 00 00 00 00    	add    %bh,0x0(%rbx)
   1c825:	00 00                	add    %al,(%rax)
   1c827:	00 b8 00 00 00 00    	add    %bh,0x0(%rax)
   1c82d:	00 00                	add    %al,(%rax)
   1c82f:	00 d3                	add    %dl,%bl
   1c831:	00 00                	add    %al,(%rax)
   1c833:	00 00                	add    %al,(%rax)
   1c835:	00 00                	add    %al,(%rax)
   1c837:	00 d0                	add    %dl,%al
   1c839:	00 00                	add    %al,(%rax)
   1c83b:	00 00                	add    %al,(%rax)
   1c83d:	00 00                	add    %al,(%rax)
   1c83f:	00 8e 00 00 00 00    	add    %cl,0x0(%rsi)
   1c845:	00 00                	add    %al,(%rax)
   1c847:	00 94 00 00 00 00 00 	add    %dl,0x0(%rax,%rax,1)
   1c84e:	00 00                	add    %al,(%rax)
   1c850:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1c851:	00 00                	add    %al,(%rax)
   1c853:	00 00                	add    %al,(%rax)
   1c855:	00 00                	add    %al,(%rax)
   1c857:	00 a2 00 00 00 00    	add    %ah,0x0(%rdx)
   1c85d:	00 00                	add    %al,(%rax)
   1c85f:	00 8b 00 00 00 00    	add    %cl,0x0(%rbx)
   1c865:	00 00                	add    %al,(%rax)
   1c867:	00 88 00 00 00 00    	add    %cl,0x0(%rax)
   1c86d:	00 00                	add    %al,(%rax)
   1c86f:	00 c3                	add    %al,%bl
   1c871:	00 00                	add    %al,(%rax)
   1c873:	00 00                	add    %al,(%rax)
   1c875:	00 00                	add    %al,(%rax)
   1c877:	00 c0                	add    %al,%al
   1c879:	00 00                	add    %al,(%rax)
   1c87b:	00 00                	add    %al,(%rax)
   1c87d:	00 00                	add    %al,(%rax)
   1c87f:	00 92 00 00 00 00    	add    %dl,0x0(%rdx)
   1c885:	00 00                	add    %al,(%rax)
   1c887:	00 88 57 f3 89 57    	add    %cl,0x5789f357(%rax)
   1c88d:	f4                   	hlt    
   1c88e:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   1c892:	eb 48                	jmp    1c8dc <__intel_memset+0x55c>
   1c894:	88 57 f7             	mov    %dl,-0x9(%rdi)
   1c897:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   1c89b:	eb 3f                	jmp    1c8dc <__intel_memset+0x55c>
   1c89d:	88 57 ff             	mov    %dl,-0x1(%rdi)
   1c8a0:	eb 3a                	jmp    1c8dc <__intel_memset+0x55c>
   1c8a2:	88 57 f5             	mov    %dl,-0xb(%rdi)
   1c8a5:	66 89 57 f6          	mov    %dx,-0xa(%rdi)
   1c8a9:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   1c8ad:	eb 2d                	jmp    1c8dc <__intel_memset+0x55c>
   1c8af:	88 57 fd             	mov    %dl,-0x3(%rdi)
   1c8b2:	66 89 57 fe          	mov    %dx,-0x2(%rdi)
   1c8b6:	eb 24                	jmp    1c8dc <__intel_memset+0x55c>
   1c8b8:	88 57 fb             	mov    %dl,-0x5(%rdi)
   1c8bb:	89 57 fc             	mov    %edx,-0x4(%rdi)
   1c8be:	eb 1c                	jmp    1c8dc <__intel_memset+0x55c>
   1c8c0:	88 57 f1             	mov    %dl,-0xf(%rdi)
   1c8c3:	66 89 57 f2          	mov    %dx,-0xe(%rdi)
   1c8c7:	89 57 f4             	mov    %edx,-0xc(%rdi)
   1c8ca:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   1c8ce:	eb 0c                	jmp    1c8dc <__intel_memset+0x55c>
   1c8d0:	88 57 f9             	mov    %dl,-0x7(%rdi)
   1c8d3:	66 89 57 fa          	mov    %dx,-0x6(%rdi)
   1c8d7:	89 57 fc             	mov    %edx,-0x4(%rdi)
   1c8da:	eb 00                	jmp    1c8dc <__intel_memset+0x55c>
   1c8dc:	4c 8d 0d 7d 06 00 00 	lea    0x67d(%rip),%r9        # 1cf60 <__intel_memset+0xbe0>
   1c8e3:	49 81 f8 b0 00 00 00 	cmp    $0xb0,%r8
   1c8ea:	0f 8d d9 04 00 00    	jge    1cdc9 <__intel_memset+0xa49>
   1c8f0:	4c 01 c7             	add    %r8,%rdi
   1c8f3:	4b 8b 0c c1          	mov    (%r9,%r8,8),%rcx
   1c8f7:	4e 8d 0c 09          	lea    (%rcx,%r9,1),%r9
   1c8fb:	41 ff e1             	jmpq   *%r9
   1c8fe:	66 90                	xchg   %ax,%ax
   1c900:	66 0f 7f 87 50 ff ff 	movdqa %xmm0,-0xb0(%rdi)
   1c907:	ff 
   1c908:	66 0f 7f 87 60 ff ff 	movdqa %xmm0,-0xa0(%rdi)
   1c90f:	ff 
   1c910:	66 0f 7f 87 70 ff ff 	movdqa %xmm0,-0x90(%rdi)
   1c917:	ff 
   1c918:	66 0f 7f 47 80       	movdqa %xmm0,-0x80(%rdi)
   1c91d:	66 0f 7f 47 90       	movdqa %xmm0,-0x70(%rdi)
   1c922:	66 0f 7f 47 a0       	movdqa %xmm0,-0x60(%rdi)
   1c927:	66 0f 7f 47 b0       	movdqa %xmm0,-0x50(%rdi)
   1c92c:	66 0f 7f 47 c0       	movdqa %xmm0,-0x40(%rdi)
   1c931:	66 0f 7f 47 d0       	movdqa %xmm0,-0x30(%rdi)
   1c936:	66 0f 7f 47 e0       	movdqa %xmm0,-0x20(%rdi)
   1c93b:	66 0f 7f 47 f0       	movdqa %xmm0,-0x10(%rdi)
   1c940:	c3                   	retq   
   1c941:	66 0f 7f 87 4f ff ff 	movdqa %xmm0,-0xb1(%rdi)
   1c948:	ff 
   1c949:	66 0f 7f 87 5f ff ff 	movdqa %xmm0,-0xa1(%rdi)
   1c950:	ff 
   1c951:	66 0f 7f 87 6f ff ff 	movdqa %xmm0,-0x91(%rdi)
   1c958:	ff 
   1c959:	66 0f 7f 87 7f ff ff 	movdqa %xmm0,-0x81(%rdi)
   1c960:	ff 
   1c961:	66 0f 7f 47 8f       	movdqa %xmm0,-0x71(%rdi)
   1c966:	66 0f 7f 47 9f       	movdqa %xmm0,-0x61(%rdi)
   1c96b:	66 0f 7f 47 af       	movdqa %xmm0,-0x51(%rdi)
   1c970:	66 0f 7f 47 bf       	movdqa %xmm0,-0x41(%rdi)
   1c975:	66 0f 7f 47 cf       	movdqa %xmm0,-0x31(%rdi)
   1c97a:	66 0f 7f 47 df       	movdqa %xmm0,-0x21(%rdi)
   1c97f:	66 0f 7f 47 ef       	movdqa %xmm0,-0x11(%rdi)
   1c984:	88 57 ff             	mov    %dl,-0x1(%rdi)
   1c987:	c3                   	retq   
   1c988:	66 0f 7f 87 4e ff ff 	movdqa %xmm0,-0xb2(%rdi)
   1c98f:	ff 
   1c990:	66 0f 7f 87 5e ff ff 	movdqa %xmm0,-0xa2(%rdi)
   1c997:	ff 
   1c998:	66 0f 7f 87 6e ff ff 	movdqa %xmm0,-0x92(%rdi)
   1c99f:	ff 
   1c9a0:	66 0f 7f 87 7e ff ff 	movdqa %xmm0,-0x82(%rdi)
   1c9a7:	ff 
   1c9a8:	66 0f 7f 47 8e       	movdqa %xmm0,-0x72(%rdi)
   1c9ad:	66 0f 7f 47 9e       	movdqa %xmm0,-0x62(%rdi)
   1c9b2:	66 0f 7f 47 ae       	movdqa %xmm0,-0x52(%rdi)
   1c9b7:	66 0f 7f 47 be       	movdqa %xmm0,-0x42(%rdi)
   1c9bc:	66 0f 7f 47 ce       	movdqa %xmm0,-0x32(%rdi)
   1c9c1:	66 0f 7f 47 de       	movdqa %xmm0,-0x22(%rdi)
   1c9c6:	66 0f 7f 47 ee       	movdqa %xmm0,-0x12(%rdi)
   1c9cb:	66 89 57 fe          	mov    %dx,-0x2(%rdi)
   1c9cf:	c2 00 00             	retq   $0x0
   1c9d2:	66 0f 7f 87 4d ff ff 	movdqa %xmm0,-0xb3(%rdi)
   1c9d9:	ff 
   1c9da:	66 0f 7f 87 5d ff ff 	movdqa %xmm0,-0xa3(%rdi)
   1c9e1:	ff 
   1c9e2:	66 0f 7f 87 6d ff ff 	movdqa %xmm0,-0x93(%rdi)
   1c9e9:	ff 
   1c9ea:	66 0f 7f 87 7d ff ff 	movdqa %xmm0,-0x83(%rdi)
   1c9f1:	ff 
   1c9f2:	66 0f 7f 47 8d       	movdqa %xmm0,-0x73(%rdi)
   1c9f7:	66 0f 7f 47 9d       	movdqa %xmm0,-0x63(%rdi)
   1c9fc:	66 0f 7f 47 ad       	movdqa %xmm0,-0x53(%rdi)
   1ca01:	66 0f 7f 47 bd       	movdqa %xmm0,-0x43(%rdi)
   1ca06:	66 0f 7f 47 cd       	movdqa %xmm0,-0x33(%rdi)
   1ca0b:	66 0f 7f 47 dd       	movdqa %xmm0,-0x23(%rdi)
   1ca10:	66 0f 7f 47 ed       	movdqa %xmm0,-0x13(%rdi)
   1ca15:	66 89 57 fd          	mov    %dx,-0x3(%rdi)
   1ca19:	88 57 ff             	mov    %dl,-0x1(%rdi)
   1ca1c:	c2 00 00             	retq   $0x0
   1ca1f:	66 0f 7f 87 4c ff ff 	movdqa %xmm0,-0xb4(%rdi)
   1ca26:	ff 
   1ca27:	66 0f 7f 87 5c ff ff 	movdqa %xmm0,-0xa4(%rdi)
   1ca2e:	ff 
   1ca2f:	66 0f 7f 87 6c ff ff 	movdqa %xmm0,-0x94(%rdi)
   1ca36:	ff 
   1ca37:	66 0f 7f 87 7c ff ff 	movdqa %xmm0,-0x84(%rdi)
   1ca3e:	ff 
   1ca3f:	66 0f 7f 47 8c       	movdqa %xmm0,-0x74(%rdi)
   1ca44:	66 0f 7f 47 9c       	movdqa %xmm0,-0x64(%rdi)
   1ca49:	66 0f 7f 47 ac       	movdqa %xmm0,-0x54(%rdi)
   1ca4e:	66 0f 7f 47 bc       	movdqa %xmm0,-0x44(%rdi)
   1ca53:	66 0f 7f 47 cc       	movdqa %xmm0,-0x34(%rdi)
   1ca58:	66 0f 7f 47 dc       	movdqa %xmm0,-0x24(%rdi)
   1ca5d:	66 0f 7f 47 ec       	movdqa %xmm0,-0x14(%rdi)
   1ca62:	89 57 fc             	mov    %edx,-0x4(%rdi)
   1ca65:	c2 00 00             	retq   $0x0
   1ca68:	66 0f 7f 87 4b ff ff 	movdqa %xmm0,-0xb5(%rdi)
   1ca6f:	ff 
   1ca70:	66 0f 7f 87 5b ff ff 	movdqa %xmm0,-0xa5(%rdi)
   1ca77:	ff 
   1ca78:	66 0f 7f 87 6b ff ff 	movdqa %xmm0,-0x95(%rdi)
   1ca7f:	ff 
   1ca80:	66 0f 7f 87 7b ff ff 	movdqa %xmm0,-0x85(%rdi)
   1ca87:	ff 
   1ca88:	66 0f 7f 47 8b       	movdqa %xmm0,-0x75(%rdi)
   1ca8d:	66 0f 7f 47 9b       	movdqa %xmm0,-0x65(%rdi)
   1ca92:	66 0f 7f 47 ab       	movdqa %xmm0,-0x55(%rdi)
   1ca97:	66 0f 7f 47 bb       	movdqa %xmm0,-0x45(%rdi)
   1ca9c:	66 0f 7f 47 cb       	movdqa %xmm0,-0x35(%rdi)
   1caa1:	66 0f 7f 47 db       	movdqa %xmm0,-0x25(%rdi)
   1caa6:	66 0f 7f 47 eb       	movdqa %xmm0,-0x15(%rdi)
   1caab:	89 57 fb             	mov    %edx,-0x5(%rdi)
   1caae:	88 57 ff             	mov    %dl,-0x1(%rdi)
   1cab1:	c2 00 00             	retq   $0x0
   1cab4:	66 0f 7f 87 4a ff ff 	movdqa %xmm0,-0xb6(%rdi)
   1cabb:	ff 
   1cabc:	66 0f 7f 87 5a ff ff 	movdqa %xmm0,-0xa6(%rdi)
   1cac3:	ff 
   1cac4:	66 0f 7f 87 6a ff ff 	movdqa %xmm0,-0x96(%rdi)
   1cacb:	ff 
   1cacc:	66 0f 7f 87 7a ff ff 	movdqa %xmm0,-0x86(%rdi)
   1cad3:	ff 
   1cad4:	66 0f 7f 47 8a       	movdqa %xmm0,-0x76(%rdi)
   1cad9:	66 0f 7f 47 9a       	movdqa %xmm0,-0x66(%rdi)
   1cade:	66 0f 7f 47 aa       	movdqa %xmm0,-0x56(%rdi)
   1cae3:	66 0f 7f 47 ba       	movdqa %xmm0,-0x46(%rdi)
   1cae8:	66 0f 7f 47 ca       	movdqa %xmm0,-0x36(%rdi)
   1caed:	66 0f 7f 47 da       	movdqa %xmm0,-0x26(%rdi)
   1caf2:	66 0f 7f 47 ea       	movdqa %xmm0,-0x16(%rdi)
   1caf7:	89 57 fa             	mov    %edx,-0x6(%rdi)
   1cafa:	66 89 57 fe          	mov    %dx,-0x2(%rdi)
   1cafe:	c2 00 00             	retq   $0x0
   1cb01:	66 0f 7f 87 49 ff ff 	movdqa %xmm0,-0xb7(%rdi)
   1cb08:	ff 
   1cb09:	66 0f 7f 87 59 ff ff 	movdqa %xmm0,-0xa7(%rdi)
   1cb10:	ff 
   1cb11:	66 0f 7f 87 69 ff ff 	movdqa %xmm0,-0x97(%rdi)
   1cb18:	ff 
   1cb19:	66 0f 7f 87 79 ff ff 	movdqa %xmm0,-0x87(%rdi)
   1cb20:	ff 
   1cb21:	66 0f 7f 47 89       	movdqa %xmm0,-0x77(%rdi)
   1cb26:	66 0f 7f 47 99       	movdqa %xmm0,-0x67(%rdi)
   1cb2b:	66 0f 7f 47 a9       	movdqa %xmm0,-0x57(%rdi)
   1cb30:	66 0f 7f 47 b9       	movdqa %xmm0,-0x47(%rdi)
   1cb35:	66 0f 7f 47 c9       	movdqa %xmm0,-0x37(%rdi)
   1cb3a:	66 0f 7f 47 d9       	movdqa %xmm0,-0x27(%rdi)
   1cb3f:	66 0f 7f 47 e9       	movdqa %xmm0,-0x17(%rdi)
   1cb44:	89 57 f9             	mov    %edx,-0x7(%rdi)
   1cb47:	66 89 57 fd          	mov    %dx,-0x3(%rdi)
   1cb4b:	88 57 ff             	mov    %dl,-0x1(%rdi)
   1cb4e:	c2 00 00             	retq   $0x0
   1cb51:	66 0f 7f 87 48 ff ff 	movdqa %xmm0,-0xb8(%rdi)
   1cb58:	ff 
   1cb59:	66 0f 7f 87 58 ff ff 	movdqa %xmm0,-0xa8(%rdi)
   1cb60:	ff 
   1cb61:	66 0f 7f 87 68 ff ff 	movdqa %xmm0,-0x98(%rdi)
   1cb68:	ff 
   1cb69:	66 0f 7f 87 78 ff ff 	movdqa %xmm0,-0x88(%rdi)
   1cb70:	ff 
   1cb71:	66 0f 7f 47 88       	movdqa %xmm0,-0x78(%rdi)
   1cb76:	66 0f 7f 47 98       	movdqa %xmm0,-0x68(%rdi)
   1cb7b:	66 0f 7f 47 a8       	movdqa %xmm0,-0x58(%rdi)
   1cb80:	66 0f 7f 47 b8       	movdqa %xmm0,-0x48(%rdi)
   1cb85:	66 0f 7f 47 c8       	movdqa %xmm0,-0x38(%rdi)
   1cb8a:	66 0f 7f 47 d8       	movdqa %xmm0,-0x28(%rdi)
   1cb8f:	66 0f 7f 47 e8       	movdqa %xmm0,-0x18(%rdi)
   1cb94:	48 89 57 f8          	mov    %rdx,-0x8(%rdi)
   1cb98:	c2 00 00             	retq   $0x0
   1cb9b:	66 0f 7f 87 47 ff ff 	movdqa %xmm0,-0xb9(%rdi)
   1cba2:	ff 
   1cba3:	66 0f 7f 87 57 ff ff 	movdqa %xmm0,-0xa9(%rdi)
   1cbaa:	ff 
   1cbab:	66 0f 7f 87 67 ff ff 	movdqa %xmm0,-0x99(%rdi)
   1cbb2:	ff 
   1cbb3:	66 0f 7f 87 77 ff ff 	movdqa %xmm0,-0x89(%rdi)
   1cbba:	ff 
   1cbbb:	66 0f 7f 47 87       	movdqa %xmm0,-0x79(%rdi)
   1cbc0:	66 0f 7f 47 97       	movdqa %xmm0,-0x69(%rdi)
   1cbc5:	66 0f 7f 47 a7       	movdqa %xmm0,-0x59(%rdi)
   1cbca:	66 0f 7f 47 b7       	movdqa %xmm0,-0x49(%rdi)
   1cbcf:	66 0f 7f 47 c7       	movdqa %xmm0,-0x39(%rdi)
   1cbd4:	66 0f 7f 47 d7       	movdqa %xmm0,-0x29(%rdi)
   1cbd9:	66 0f 7f 47 e7       	movdqa %xmm0,-0x19(%rdi)
   1cbde:	48 89 57 f7          	mov    %rdx,-0x9(%rdi)
   1cbe2:	88 57 ff             	mov    %dl,-0x1(%rdi)
   1cbe5:	c2 00 00             	retq   $0x0
   1cbe8:	66 0f 7f 87 46 ff ff 	movdqa %xmm0,-0xba(%rdi)
   1cbef:	ff 
   1cbf0:	66 0f 7f 87 56 ff ff 	movdqa %xmm0,-0xaa(%rdi)
   1cbf7:	ff 
   1cbf8:	66 0f 7f 87 66 ff ff 	movdqa %xmm0,-0x9a(%rdi)
   1cbff:	ff 
   1cc00:	66 0f 7f 87 76 ff ff 	movdqa %xmm0,-0x8a(%rdi)
   1cc07:	ff 
   1cc08:	66 0f 7f 47 86       	movdqa %xmm0,-0x7a(%rdi)
   1cc0d:	66 0f 7f 47 96       	movdqa %xmm0,-0x6a(%rdi)
   1cc12:	66 0f 7f 47 a6       	movdqa %xmm0,-0x5a(%rdi)
   1cc17:	66 0f 7f 47 b6       	movdqa %xmm0,-0x4a(%rdi)
   1cc1c:	66 0f 7f 47 c6       	movdqa %xmm0,-0x3a(%rdi)
   1cc21:	66 0f 7f 47 d6       	movdqa %xmm0,-0x2a(%rdi)
   1cc26:	66 0f 7f 47 e6       	movdqa %xmm0,-0x1a(%rdi)
   1cc2b:	48 89 57 f6          	mov    %rdx,-0xa(%rdi)
   1cc2f:	66 89 57 fe          	mov    %dx,-0x2(%rdi)
   1cc33:	c2 00 00             	retq   $0x0
   1cc36:	66 0f 7f 87 45 ff ff 	movdqa %xmm0,-0xbb(%rdi)
   1cc3d:	ff 
   1cc3e:	66 0f 7f 87 55 ff ff 	movdqa %xmm0,-0xab(%rdi)
   1cc45:	ff 
   1cc46:	66 0f 7f 87 65 ff ff 	movdqa %xmm0,-0x9b(%rdi)
   1cc4d:	ff 
   1cc4e:	66 0f 7f 87 75 ff ff 	movdqa %xmm0,-0x8b(%rdi)
   1cc55:	ff 
   1cc56:	66 0f 7f 47 85       	movdqa %xmm0,-0x7b(%rdi)
   1cc5b:	66 0f 7f 47 95       	movdqa %xmm0,-0x6b(%rdi)
   1cc60:	66 0f 7f 47 a5       	movdqa %xmm0,-0x5b(%rdi)
   1cc65:	66 0f 7f 47 b5       	movdqa %xmm0,-0x4b(%rdi)
   1cc6a:	66 0f 7f 47 c5       	movdqa %xmm0,-0x3b(%rdi)
   1cc6f:	66 0f 7f 47 d5       	movdqa %xmm0,-0x2b(%rdi)
   1cc74:	66 0f 7f 47 e5       	movdqa %xmm0,-0x1b(%rdi)
   1cc79:	48 89 57 f5          	mov    %rdx,-0xb(%rdi)
   1cc7d:	66 89 57 fd          	mov    %dx,-0x3(%rdi)
   1cc81:	88 57 ff             	mov    %dl,-0x1(%rdi)
   1cc84:	c2 00 00             	retq   $0x0
   1cc87:	66 0f 7f 87 44 ff ff 	movdqa %xmm0,-0xbc(%rdi)
   1cc8e:	ff 
   1cc8f:	66 0f 7f 87 54 ff ff 	movdqa %xmm0,-0xac(%rdi)
   1cc96:	ff 
   1cc97:	66 0f 7f 87 64 ff ff 	movdqa %xmm0,-0x9c(%rdi)
   1cc9e:	ff 
   1cc9f:	66 0f 7f 87 74 ff ff 	movdqa %xmm0,-0x8c(%rdi)
   1cca6:	ff 
   1cca7:	66 0f 7f 47 84       	movdqa %xmm0,-0x7c(%rdi)
   1ccac:	66 0f 7f 47 94       	movdqa %xmm0,-0x6c(%rdi)
   1ccb1:	66 0f 7f 47 a4       	movdqa %xmm0,-0x5c(%rdi)
   1ccb6:	66 0f 7f 47 b4       	movdqa %xmm0,-0x4c(%rdi)
   1ccbb:	66 0f 7f 47 c4       	movdqa %xmm0,-0x3c(%rdi)
   1ccc0:	66 0f 7f 47 d4       	movdqa %xmm0,-0x2c(%rdi)
   1ccc5:	66 0f 7f 47 e4       	movdqa %xmm0,-0x1c(%rdi)
   1ccca:	48 89 57 f4          	mov    %rdx,-0xc(%rdi)
   1ccce:	89 57 fc             	mov    %edx,-0x4(%rdi)
   1ccd1:	c2 00 00             	retq   $0x0
   1ccd4:	66 0f 7f 87 43 ff ff 	movdqa %xmm0,-0xbd(%rdi)
   1ccdb:	ff 
   1ccdc:	66 0f 7f 87 53 ff ff 	movdqa %xmm0,-0xad(%rdi)
   1cce3:	ff 
   1cce4:	66 0f 7f 87 63 ff ff 	movdqa %xmm0,-0x9d(%rdi)
   1cceb:	ff 
   1ccec:	66 0f 7f 87 73 ff ff 	movdqa %xmm0,-0x8d(%rdi)
   1ccf3:	ff 
   1ccf4:	66 0f 7f 47 83       	movdqa %xmm0,-0x7d(%rdi)
   1ccf9:	66 0f 7f 47 93       	movdqa %xmm0,-0x6d(%rdi)
   1ccfe:	66 0f 7f 47 a3       	movdqa %xmm0,-0x5d(%rdi)
   1cd03:	66 0f 7f 47 b3       	movdqa %xmm0,-0x4d(%rdi)
   1cd08:	66 0f 7f 47 c3       	movdqa %xmm0,-0x3d(%rdi)
   1cd0d:	66 0f 7f 47 d3       	movdqa %xmm0,-0x2d(%rdi)
   1cd12:	66 0f 7f 47 e3       	movdqa %xmm0,-0x1d(%rdi)
   1cd17:	48 89 57 f3          	mov    %rdx,-0xd(%rdi)
   1cd1b:	89 57 fb             	mov    %edx,-0x5(%rdi)
   1cd1e:	88 57 ff             	mov    %dl,-0x1(%rdi)
   1cd21:	c2 00 00             	retq   $0x0
   1cd24:	66 0f 7f 87 42 ff ff 	movdqa %xmm0,-0xbe(%rdi)
   1cd2b:	ff 
   1cd2c:	66 0f 7f 87 52 ff ff 	movdqa %xmm0,-0xae(%rdi)
   1cd33:	ff 
   1cd34:	66 0f 7f 87 62 ff ff 	movdqa %xmm0,-0x9e(%rdi)
   1cd3b:	ff 
   1cd3c:	66 0f 7f 87 72 ff ff 	movdqa %xmm0,-0x8e(%rdi)
   1cd43:	ff 
   1cd44:	66 0f 7f 47 82       	movdqa %xmm0,-0x7e(%rdi)
   1cd49:	66 0f 7f 47 92       	movdqa %xmm0,-0x6e(%rdi)
   1cd4e:	66 0f 7f 47 a2       	movdqa %xmm0,-0x5e(%rdi)
   1cd53:	66 0f 7f 47 b2       	movdqa %xmm0,-0x4e(%rdi)
   1cd58:	66 0f 7f 47 c2       	movdqa %xmm0,-0x3e(%rdi)
   1cd5d:	66 0f 7f 47 d2       	movdqa %xmm0,-0x2e(%rdi)
   1cd62:	66 0f 7f 47 e2       	movdqa %xmm0,-0x1e(%rdi)
   1cd67:	48 89 57 f2          	mov    %rdx,-0xe(%rdi)
   1cd6b:	89 57 fa             	mov    %edx,-0x6(%rdi)
   1cd6e:	66 89 57 fe          	mov    %dx,-0x2(%rdi)
   1cd72:	c2 00 00             	retq   $0x0
   1cd75:	66 0f 7f 87 41 ff ff 	movdqa %xmm0,-0xbf(%rdi)
   1cd7c:	ff 
   1cd7d:	66 0f 7f 87 51 ff ff 	movdqa %xmm0,-0xaf(%rdi)
   1cd84:	ff 
   1cd85:	66 0f 7f 87 61 ff ff 	movdqa %xmm0,-0x9f(%rdi)
   1cd8c:	ff 
   1cd8d:	66 0f 7f 87 71 ff ff 	movdqa %xmm0,-0x8f(%rdi)
   1cd94:	ff 
   1cd95:	66 0f 7f 47 81       	movdqa %xmm0,-0x7f(%rdi)
   1cd9a:	66 0f 7f 47 91       	movdqa %xmm0,-0x6f(%rdi)
   1cd9f:	66 0f 7f 47 a1       	movdqa %xmm0,-0x5f(%rdi)
   1cda4:	66 0f 7f 47 b1       	movdqa %xmm0,-0x4f(%rdi)
   1cda9:	66 0f 7f 47 c1       	movdqa %xmm0,-0x3f(%rdi)
   1cdae:	66 0f 7f 47 d1       	movdqa %xmm0,-0x2f(%rdi)
   1cdb3:	66 0f 7f 47 e1       	movdqa %xmm0,-0x1f(%rdi)
   1cdb8:	48 89 57 f1          	mov    %rdx,-0xf(%rdi)
   1cdbc:	89 57 f9             	mov    %edx,-0x7(%rdi)
   1cdbf:	66 89 57 fd          	mov    %dx,-0x3(%rdi)
   1cdc3:	88 57 ff             	mov    %dl,-0x1(%rdi)
   1cdc6:	c2 00 00             	retq   $0x0
   1cdc9:	44 8b 0d b4 5a 20 00 	mov    0x205ab4(%rip),%r9d        # 222884 <__libirc_largest_cache_size>
   1cdd0:	4d 39 c8             	cmp    %r9,%r8
   1cdd3:	7f 5b                	jg     1ce30 <__intel_memset+0xab0>
   1cdd5:	eb 09                	jmp    1cde0 <__intel_memset+0xa60>
   1cdd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1cdde:	00 00 
   1cde0:	4d 8d 40 80          	lea    -0x80(%r8),%r8
   1cde4:	66 0f 7f 07          	movdqa %xmm0,(%rdi)
   1cde8:	66 0f 7f 47 10       	movdqa %xmm0,0x10(%rdi)
   1cded:	66 0f 7f 47 20       	movdqa %xmm0,0x20(%rdi)
   1cdf2:	66 0f 7f 47 30       	movdqa %xmm0,0x30(%rdi)
   1cdf7:	49 81 f8 80 00 00 00 	cmp    $0x80,%r8
   1cdfe:	66 0f 7f 47 40       	movdqa %xmm0,0x40(%rdi)
   1ce03:	66 0f 7f 47 50       	movdqa %xmm0,0x50(%rdi)
   1ce08:	66 0f 7f 47 60       	movdqa %xmm0,0x60(%rdi)
   1ce0d:	66 0f 7f 47 70       	movdqa %xmm0,0x70(%rdi)
   1ce12:	48 8d bf 80 00 00 00 	lea    0x80(%rdi),%rdi
   1ce19:	7d c5                	jge    1cde0 <__intel_memset+0xa60>
   1ce1b:	4c 8d 1d 3e 01 00 00 	lea    0x13e(%rip),%r11        # 1cf60 <__intel_memset+0xbe0>
   1ce22:	4c 01 c7             	add    %r8,%rdi
   1ce25:	4b 8b 0c c3          	mov    (%r11,%r8,8),%rcx
   1ce29:	4e 8d 1c 19          	lea    (%rcx,%r11,1),%r11
   1ce2d:	41 ff e3             	jmpq   *%r11
   1ce30:	49 83 f9 00          	cmp    $0x0,%r9
   1ce34:	74 aa                	je     1cde0 <__intel_memset+0xa60>
   1ce36:	eb 08                	jmp    1ce40 <__intel_memset+0xac0>
   1ce38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1ce3f:	00 
   1ce40:	49 81 e8 80 00 00 00 	sub    $0x80,%r8
   1ce47:	66 0f e7 07          	movntdq %xmm0,(%rdi)
   1ce4b:	66 0f e7 47 10       	movntdq %xmm0,0x10(%rdi)
   1ce50:	66 0f e7 47 20       	movntdq %xmm0,0x20(%rdi)
   1ce55:	66 0f e7 47 30       	movntdq %xmm0,0x30(%rdi)
   1ce5a:	66 0f e7 47 40       	movntdq %xmm0,0x40(%rdi)
   1ce5f:	66 0f e7 47 50       	movntdq %xmm0,0x50(%rdi)
   1ce64:	66 0f e7 47 60       	movntdq %xmm0,0x60(%rdi)
   1ce69:	66 0f e7 47 70       	movntdq %xmm0,0x70(%rdi)
   1ce6e:	48 81 c7 80 00 00 00 	add    $0x80,%rdi
   1ce75:	49 81 f8 80 00 00 00 	cmp    $0x80,%r8
   1ce7c:	7d c2                	jge    1ce40 <__intel_memset+0xac0>
   1ce7e:	0f ae f8             	sfence 
   1ce81:	4c 8d 1d d8 00 00 00 	lea    0xd8(%rip),%r11        # 1cf60 <__intel_memset+0xbe0>
   1ce88:	4c 01 c7             	add    %r8,%rdi
   1ce8b:	4b 8b 0c c3          	mov    (%r11,%r8,8),%rcx
   1ce8f:	4e 8d 1c 19          	lea    (%rcx,%r11,1),%r11
   1ce93:	41 ff e3             	jmpq   *%r11
   1ce96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1ce9d:	00 00 00 
   1cea0:	44 8b 0d dd 59 20 00 	mov    0x2059dd(%rip),%r9d        # 222884 <__libirc_largest_cache_size>
   1cea7:	4d 39 c8             	cmp    %r9,%r8
   1ceaa:	7f 54                	jg     1cf00 <__intel_memset+0xb80>
   1ceac:	eb 02                	jmp    1ceb0 <__intel_memset+0xb30>
   1ceae:	66 90                	xchg   %ax,%ax
   1ceb0:	48 89 17             	mov    %rdx,(%rdi)
   1ceb3:	48 89 57 08          	mov    %rdx,0x8(%rdi)
   1ceb7:	4d 8d 40 c0          	lea    -0x40(%r8),%r8
   1cebb:	48 89 57 10          	mov    %rdx,0x10(%rdi)
   1cebf:	48 89 57 18          	mov    %rdx,0x18(%rdi)
   1cec3:	49 83 f8 40          	cmp    $0x40,%r8
   1cec7:	48 89 57 20          	mov    %rdx,0x20(%rdi)
   1cecb:	48 89 57 28          	mov    %rdx,0x28(%rdi)
   1cecf:	48 89 57 30          	mov    %rdx,0x30(%rdi)
   1ced3:	48 89 57 38          	mov    %rdx,0x38(%rdi)
   1ced7:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   1cedb:	7f d3                	jg     1ceb0 <__intel_memset+0xb30>
   1cedd:	4c 8d 1d ec f4 ff ff 	lea    -0xb14(%rip),%r11        # 1c3d0 <__intel_memset+0x50>
   1cee4:	4a 8d 3c 07          	lea    (%rdi,%r8,1),%rdi
   1cee8:	4b 8b 0c c3          	mov    (%r11,%r8,8),%rcx
   1ceec:	4e 8d 1c 19          	lea    (%rcx,%r11,1),%r11
   1cef0:	41 ff e3             	jmpq   *%r11
   1cef3:	0f 1f 00             	nopl   (%rax)
   1cef6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1cefd:	00 00 00 
   1cf00:	49 83 f9 00          	cmp    $0x0,%r9
   1cf04:	74 aa                	je     1ceb0 <__intel_memset+0xb30>
   1cf06:	eb 08                	jmp    1cf10 <__intel_memset+0xb90>
   1cf08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1cf0f:	00 
   1cf10:	48 0f c3 17          	movnti %rdx,(%rdi)
   1cf14:	48 0f c3 57 08       	movnti %rdx,0x8(%rdi)
   1cf19:	4d 8d 40 c0          	lea    -0x40(%r8),%r8
   1cf1d:	48 0f c3 57 10       	movnti %rdx,0x10(%rdi)
   1cf22:	48 0f c3 57 18       	movnti %rdx,0x18(%rdi)
   1cf27:	48 0f c3 57 20       	movnti %rdx,0x20(%rdi)
   1cf2c:	49 83 f8 40          	cmp    $0x40,%r8
   1cf30:	48 0f c3 57 28       	movnti %rdx,0x28(%rdi)
   1cf35:	48 0f c3 57 30       	movnti %rdx,0x30(%rdi)
   1cf3a:	48 0f c3 57 38       	movnti %rdx,0x38(%rdi)
   1cf3f:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   1cf43:	7d cb                	jge    1cf10 <__intel_memset+0xb90>
   1cf45:	4c 8d 1d 84 f4 ff ff 	lea    -0xb7c(%rip),%r11        # 1c3d0 <__intel_memset+0x50>
   1cf4c:	4a 8d 3c 07          	lea    (%rdi,%r8,1),%rdi
   1cf50:	4b 8b 0c c3          	mov    (%r11,%r8,8),%rcx
   1cf54:	4e 8d 1c 19          	lea    (%rcx,%r11,1),%r11
   1cf58:	41 ff e3             	jmpq   *%r11
   1cf5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1cf60:	e0 f9                	loopne 1cf5b <__intel_memset+0xbdb>
   1cf62:	ff                   	(bad)  
   1cf63:	ff                   	(bad)  
   1cf64:	ff                   	(bad)  
   1cf65:	ff                   	(bad)  
   1cf66:	ff                   	(bad)  
   1cf67:	ff 24 fa             	jmpq   *(%rdx,%rdi,8)
   1cf6a:	ff                   	(bad)  
   1cf6b:	ff                   	(bad)  
   1cf6c:	ff                   	(bad)  
   1cf6d:	ff                   	(bad)  
   1cf6e:	ff                   	(bad)  
   1cf6f:	ff 6b fa             	ljmp   *-0x6(%rbx)
   1cf72:	ff                   	(bad)  
   1cf73:	ff                   	(bad)  
   1cf74:	ff                   	(bad)  
   1cf75:	ff                   	(bad)  
   1cf76:	ff                   	(bad)  
   1cf77:	ff b5 fa ff ff ff    	pushq  -0x6(%rbp)
   1cf7d:	ff                   	(bad)  
   1cf7e:	ff                   	(bad)  
   1cf7f:	ff 02                	incl   (%rdx)
   1cf81:	fb                   	sti    
   1cf82:	ff                   	(bad)  
   1cf83:	ff                   	(bad)  
   1cf84:	ff                   	(bad)  
   1cf85:	ff                   	(bad)  
   1cf86:	ff                   	(bad)  
   1cf87:	ff 4b fb             	decl   -0x5(%rbx)
   1cf8a:	ff                   	(bad)  
   1cf8b:	ff                   	(bad)  
   1cf8c:	ff                   	(bad)  
   1cf8d:	ff                   	(bad)  
   1cf8e:	ff                   	(bad)  
   1cf8f:	ff 97 fb ff ff ff    	callq  *-0x5(%rdi)
   1cf95:	ff                   	(bad)  
   1cf96:	ff                   	(bad)  
   1cf97:	ff e4                	jmpq   *%rsp
   1cf99:	fb                   	sti    
   1cf9a:	ff                   	(bad)  
   1cf9b:	ff                   	(bad)  
   1cf9c:	ff                   	(bad)  
   1cf9d:	ff                   	(bad)  
   1cf9e:	ff                   	(bad)  
   1cf9f:	ff 34 fc             	pushq  (%rsp,%rdi,8)
   1cfa2:	ff                   	(bad)  
   1cfa3:	ff                   	(bad)  
   1cfa4:	ff                   	(bad)  
   1cfa5:	ff                   	(bad)  
   1cfa6:	ff                   	(bad)  
   1cfa7:	ff                   	(bad)  
   1cfa8:	7e fc                	jle    1cfa6 <__intel_memset+0xc26>
   1cfaa:	ff                   	(bad)  
   1cfab:	ff                   	(bad)  
   1cfac:	ff                   	(bad)  
   1cfad:	ff                   	(bad)  
   1cfae:	ff                   	(bad)  
   1cfaf:	ff cb                	dec    %ebx
   1cfb1:	fc                   	cld    
   1cfb2:	ff                   	(bad)  
   1cfb3:	ff                   	(bad)  
   1cfb4:	ff                   	(bad)  
   1cfb5:	ff                   	(bad)  
   1cfb6:	ff                   	(bad)  
   1cfb7:	ff 19                	lcall  *(%rcx)
   1cfb9:	fd                   	std    
   1cfba:	ff                   	(bad)  
   1cfbb:	ff                   	(bad)  
   1cfbc:	ff                   	(bad)  
   1cfbd:	ff                   	(bad)  
   1cfbe:	ff                   	(bad)  
   1cfbf:	ff 6a fd             	ljmp   *-0x3(%rdx)
   1cfc2:	ff                   	(bad)  
   1cfc3:	ff                   	(bad)  
   1cfc4:	ff                   	(bad)  
   1cfc5:	ff                   	(bad)  
   1cfc6:	ff                   	(bad)  
   1cfc7:	ff b7 fd ff ff ff    	pushq  -0x3(%rdi)
   1cfcd:	ff                   	(bad)  
   1cfce:	ff                   	(bad)  
   1cfcf:	ff 07                	incl   (%rdi)
   1cfd1:	fe                   	(bad)  
   1cfd2:	ff                   	(bad)  
   1cfd3:	ff                   	(bad)  
   1cfd4:	ff                   	(bad)  
   1cfd5:	ff                   	(bad)  
   1cfd6:	ff                   	(bad)  
   1cfd7:	ff 58 fe             	lcall  *-0x2(%rax)
   1cfda:	ff                   	(bad)  
   1cfdb:	ff                   	(bad)  
   1cfdc:	ff                   	(bad)  
   1cfdd:	ff                   	(bad)  
   1cfde:	ff                   	(bad)  
   1cfdf:	ff                   	(bad)  
   1cfe0:	db f9                	(bad)  
   1cfe2:	ff                   	(bad)  
   1cfe3:	ff                   	(bad)  
   1cfe4:	ff                   	(bad)  
   1cfe5:	ff                   	(bad)  
   1cfe6:	ff                   	(bad)  
   1cfe7:	ff 1f                	lcall  *(%rdi)
   1cfe9:	fa                   	cli    
   1cfea:	ff                   	(bad)  
   1cfeb:	ff                   	(bad)  
   1cfec:	ff                   	(bad)  
   1cfed:	ff                   	(bad)  
   1cfee:	ff                   	(bad)  
   1cfef:	ff 66 fa             	jmpq   *-0x6(%rsi)
   1cff2:	ff                   	(bad)  
   1cff3:	ff                   	(bad)  
   1cff4:	ff                   	(bad)  
   1cff5:	ff                   	(bad)  
   1cff6:	ff                   	(bad)  
   1cff7:	ff b0 fa ff ff ff    	pushq  -0x6(%rax)
   1cffd:	ff                   	(bad)  
   1cffe:	ff                   	(bad)  
   1cfff:	ff                   	(bad)  
   1d000:	fd                   	std    
   1d001:	fa                   	cli    
   1d002:	ff                   	(bad)  
   1d003:	ff                   	(bad)  
   1d004:	ff                   	(bad)  
   1d005:	ff                   	(bad)  
   1d006:	ff                   	(bad)  
   1d007:	ff 46 fb             	incl   -0x5(%rsi)
   1d00a:	ff                   	(bad)  
   1d00b:	ff                   	(bad)  
   1d00c:	ff                   	(bad)  
   1d00d:	ff                   	(bad)  
   1d00e:	ff                   	(bad)  
   1d00f:	ff 92 fb ff ff ff    	callq  *-0x5(%rdx)
   1d015:	ff                   	(bad)  
   1d016:	ff                   	(bad)  
   1d017:	ff                   	(bad)  
   1d018:	df fb                	(bad)  
   1d01a:	ff                   	(bad)  
   1d01b:	ff                   	(bad)  
   1d01c:	ff                   	(bad)  
   1d01d:	ff                   	(bad)  
   1d01e:	ff                   	(bad)  
   1d01f:	ff 2f                	ljmp   *(%rdi)
   1d021:	fc                   	cld    
   1d022:	ff                   	(bad)  
   1d023:	ff                   	(bad)  
   1d024:	ff                   	(bad)  
   1d025:	ff                   	(bad)  
   1d026:	ff                   	(bad)  
   1d027:	ff                   	(bad)  
   1d028:	79 fc                	jns    1d026 <__intel_memset+0xca6>
   1d02a:	ff                   	(bad)  
   1d02b:	ff                   	(bad)  
   1d02c:	ff                   	(bad)  
   1d02d:	ff                   	(bad)  
   1d02e:	ff                   	(bad)  
   1d02f:	ff c6                	inc    %esi
   1d031:	fc                   	cld    
   1d032:	ff                   	(bad)  
   1d033:	ff                   	(bad)  
   1d034:	ff                   	(bad)  
   1d035:	ff                   	(bad)  
   1d036:	ff                   	(bad)  
   1d037:	ff 14 fd ff ff ff ff 	callq  *-0x1(,%rdi,8)
   1d03e:	ff                   	(bad)  
   1d03f:	ff 65 fd             	jmpq   *-0x3(%rbp)
   1d042:	ff                   	(bad)  
   1d043:	ff                   	(bad)  
   1d044:	ff                   	(bad)  
   1d045:	ff                   	(bad)  
   1d046:	ff                   	(bad)  
   1d047:	ff b2 fd ff ff ff    	pushq  -0x3(%rdx)
   1d04d:	ff                   	(bad)  
   1d04e:	ff                   	(bad)  
   1d04f:	ff 02                	incl   (%rdx)
   1d051:	fe                   	(bad)  
   1d052:	ff                   	(bad)  
   1d053:	ff                   	(bad)  
   1d054:	ff                   	(bad)  
   1d055:	ff                   	(bad)  
   1d056:	ff                   	(bad)  
   1d057:	ff 53 fe             	callq  *-0x2(%rbx)
   1d05a:	ff                   	(bad)  
   1d05b:	ff                   	(bad)  
   1d05c:	ff                   	(bad)  
   1d05d:	ff                   	(bad)  
   1d05e:	ff                   	(bad)  
   1d05f:	ff d6                	callq  *%rsi
   1d061:	f9                   	stc    
   1d062:	ff                   	(bad)  
   1d063:	ff                   	(bad)  
   1d064:	ff                   	(bad)  
   1d065:	ff                   	(bad)  
   1d066:	ff                   	(bad)  
   1d067:	ff 1a                	lcall  *(%rdx)
   1d069:	fa                   	cli    
   1d06a:	ff                   	(bad)  
   1d06b:	ff                   	(bad)  
   1d06c:	ff                   	(bad)  
   1d06d:	ff                   	(bad)  
   1d06e:	ff                   	(bad)  
   1d06f:	ff 61 fa             	jmpq   *-0x6(%rcx)
   1d072:	ff                   	(bad)  
   1d073:	ff                   	(bad)  
   1d074:	ff                   	(bad)  
   1d075:	ff                   	(bad)  
   1d076:	ff                   	(bad)  
   1d077:	ff ab fa ff ff ff    	ljmp   *-0x6(%rbx)
   1d07d:	ff                   	(bad)  
   1d07e:	ff                   	(bad)  
   1d07f:	ff                   	(bad)  
   1d080:	f8                   	clc    
   1d081:	fa                   	cli    
   1d082:	ff                   	(bad)  
   1d083:	ff                   	(bad)  
   1d084:	ff                   	(bad)  
   1d085:	ff                   	(bad)  
   1d086:	ff                   	(bad)  
   1d087:	ff 41 fb             	incl   -0x5(%rcx)
   1d08a:	ff                   	(bad)  
   1d08b:	ff                   	(bad)  
   1d08c:	ff                   	(bad)  
   1d08d:	ff                   	(bad)  
   1d08e:	ff                   	(bad)  
   1d08f:	ff 8d fb ff ff ff    	decl   -0x5(%rbp)
   1d095:	ff                   	(bad)  
   1d096:	ff                   	(bad)  
   1d097:	ff                   	(bad)  
   1d098:	da fb                	(bad)  
   1d09a:	ff                   	(bad)  
   1d09b:	ff                   	(bad)  
   1d09c:	ff                   	(bad)  
   1d09d:	ff                   	(bad)  
   1d09e:	ff                   	(bad)  
   1d09f:	ff 2a                	ljmp   *(%rdx)
   1d0a1:	fc                   	cld    
   1d0a2:	ff                   	(bad)  
   1d0a3:	ff                   	(bad)  
   1d0a4:	ff                   	(bad)  
   1d0a5:	ff                   	(bad)  
   1d0a6:	ff                   	(bad)  
   1d0a7:	ff 74 fc ff          	pushq  -0x1(%rsp,%rdi,8)
   1d0ab:	ff                   	(bad)  
   1d0ac:	ff                   	(bad)  
   1d0ad:	ff                   	(bad)  
   1d0ae:	ff                   	(bad)  
   1d0af:	ff c1                	inc    %ecx
   1d0b1:	fc                   	cld    
   1d0b2:	ff                   	(bad)  
   1d0b3:	ff                   	(bad)  
   1d0b4:	ff                   	(bad)  
   1d0b5:	ff                   	(bad)  
   1d0b6:	ff                   	(bad)  
   1d0b7:	ff 0f                	decl   (%rdi)
   1d0b9:	fd                   	std    
   1d0ba:	ff                   	(bad)  
   1d0bb:	ff                   	(bad)  
   1d0bc:	ff                   	(bad)  
   1d0bd:	ff                   	(bad)  
   1d0be:	ff                   	(bad)  
   1d0bf:	ff 60 fd             	jmpq   *-0x3(%rax)
   1d0c2:	ff                   	(bad)  
   1d0c3:	ff                   	(bad)  
   1d0c4:	ff                   	(bad)  
   1d0c5:	ff                   	(bad)  
   1d0c6:	ff                   	(bad)  
   1d0c7:	ff ad fd ff ff ff    	ljmp   *-0x3(%rbp)
   1d0cd:	ff                   	(bad)  
   1d0ce:	ff                   	(bad)  
   1d0cf:	ff                   	(bad)  
   1d0d0:	fd                   	std    
   1d0d1:	fd                   	std    
   1d0d2:	ff                   	(bad)  
   1d0d3:	ff                   	(bad)  
   1d0d4:	ff                   	(bad)  
   1d0d5:	ff                   	(bad)  
   1d0d6:	ff                   	(bad)  
   1d0d7:	ff 4e fe             	decl   -0x2(%rsi)
   1d0da:	ff                   	(bad)  
   1d0db:	ff                   	(bad)  
   1d0dc:	ff                   	(bad)  
   1d0dd:	ff                   	(bad)  
   1d0de:	ff                   	(bad)  
   1d0df:	ff d1                	callq  *%rcx
   1d0e1:	f9                   	stc    
   1d0e2:	ff                   	(bad)  
   1d0e3:	ff                   	(bad)  
   1d0e4:	ff                   	(bad)  
   1d0e5:	ff                   	(bad)  
   1d0e6:	ff                   	(bad)  
   1d0e7:	ff 15 fa ff ff ff    	callq  *-0x6(%rip)        # 1d0e7 <__intel_memset+0xd67>
   1d0ed:	ff                   	(bad)  
   1d0ee:	ff                   	(bad)  
   1d0ef:	ff 5c fa ff          	lcall  *-0x1(%rdx,%rdi,8)
   1d0f3:	ff                   	(bad)  
   1d0f4:	ff                   	(bad)  
   1d0f5:	ff                   	(bad)  
   1d0f6:	ff                   	(bad)  
   1d0f7:	ff a6 fa ff ff ff    	jmpq   *-0x6(%rsi)
   1d0fd:	ff                   	(bad)  
   1d0fe:	ff                   	(bad)  
   1d0ff:	ff f3                	push   %rbx
   1d101:	fa                   	cli    
   1d102:	ff                   	(bad)  
   1d103:	ff                   	(bad)  
   1d104:	ff                   	(bad)  
   1d105:	ff                   	(bad)  
   1d106:	ff                   	(bad)  
   1d107:	ff                   	(bad)  
   1d108:	3c fb                	cmp    $0xfb,%al
   1d10a:	ff                   	(bad)  
   1d10b:	ff                   	(bad)  
   1d10c:	ff                   	(bad)  
   1d10d:	ff                   	(bad)  
   1d10e:	ff                   	(bad)  
   1d10f:	ff 88 fb ff ff ff    	decl   -0x5(%rax)
   1d115:	ff                   	(bad)  
   1d116:	ff                   	(bad)  
   1d117:	ff d5                	callq  *%rbp
   1d119:	fb                   	sti    
   1d11a:	ff                   	(bad)  
   1d11b:	ff                   	(bad)  
   1d11c:	ff                   	(bad)  
   1d11d:	ff                   	(bad)  
   1d11e:	ff                   	(bad)  
   1d11f:	ff 25 fc ff ff ff    	jmpq   *-0x4(%rip)        # 1d121 <__intel_memset+0xda1>
   1d125:	ff                   	(bad)  
   1d126:	ff                   	(bad)  
   1d127:	ff 6f fc             	ljmp   *-0x4(%rdi)
   1d12a:	ff                   	(bad)  
   1d12b:	ff                   	(bad)  
   1d12c:	ff                   	(bad)  
   1d12d:	ff                   	(bad)  
   1d12e:	ff                   	(bad)  
   1d12f:	ff                   	(bad)  
   1d130:	bc fc ff ff ff       	mov    $0xfffffffc,%esp
   1d135:	ff                   	(bad)  
   1d136:	ff                   	(bad)  
   1d137:	ff 0a                	decl   (%rdx)
   1d139:	fd                   	std    
   1d13a:	ff                   	(bad)  
   1d13b:	ff                   	(bad)  
   1d13c:	ff                   	(bad)  
   1d13d:	ff                   	(bad)  
   1d13e:	ff                   	(bad)  
   1d13f:	ff 5b fd             	lcall  *-0x3(%rbx)
   1d142:	ff                   	(bad)  
   1d143:	ff                   	(bad)  
   1d144:	ff                   	(bad)  
   1d145:	ff                   	(bad)  
   1d146:	ff                   	(bad)  
   1d147:	ff a8 fd ff ff ff    	ljmp   *-0x3(%rax)
   1d14d:	ff                   	(bad)  
   1d14e:	ff                   	(bad)  
   1d14f:	ff                   	(bad)  
   1d150:	f8                   	clc    
   1d151:	fd                   	std    
   1d152:	ff                   	(bad)  
   1d153:	ff                   	(bad)  
   1d154:	ff                   	(bad)  
   1d155:	ff                   	(bad)  
   1d156:	ff                   	(bad)  
   1d157:	ff 49 fe             	decl   -0x2(%rcx)
   1d15a:	ff                   	(bad)  
   1d15b:	ff                   	(bad)  
   1d15c:	ff                   	(bad)  
   1d15d:	ff                   	(bad)  
   1d15e:	ff                   	(bad)  
   1d15f:	ff cc                	dec    %esp
   1d161:	f9                   	stc    
   1d162:	ff                   	(bad)  
   1d163:	ff                   	(bad)  
   1d164:	ff                   	(bad)  
   1d165:	ff                   	(bad)  
   1d166:	ff                   	(bad)  
   1d167:	ff 10                	callq  *(%rax)
   1d169:	fa                   	cli    
   1d16a:	ff                   	(bad)  
   1d16b:	ff                   	(bad)  
   1d16c:	ff                   	(bad)  
   1d16d:	ff                   	(bad)  
   1d16e:	ff                   	(bad)  
   1d16f:	ff 57 fa             	callq  *-0x6(%rdi)
   1d172:	ff                   	(bad)  
   1d173:	ff                   	(bad)  
   1d174:	ff                   	(bad)  
   1d175:	ff                   	(bad)  
   1d176:	ff                   	(bad)  
   1d177:	ff a1 fa ff ff ff    	jmpq   *-0x6(%rcx)
   1d17d:	ff                   	(bad)  
   1d17e:	ff                   	(bad)  
   1d17f:	ff                   	(bad)  
   1d180:	ee                   	out    %al,(%dx)
   1d181:	fa                   	cli    
   1d182:	ff                   	(bad)  
   1d183:	ff                   	(bad)  
   1d184:	ff                   	(bad)  
   1d185:	ff                   	(bad)  
   1d186:	ff                   	(bad)  
   1d187:	ff 37                	pushq  (%rdi)
   1d189:	fb                   	sti    
   1d18a:	ff                   	(bad)  
   1d18b:	ff                   	(bad)  
   1d18c:	ff                   	(bad)  
   1d18d:	ff                   	(bad)  
   1d18e:	ff                   	(bad)  
   1d18f:	ff 83 fb ff ff ff    	incl   -0x5(%rbx)
   1d195:	ff                   	(bad)  
   1d196:	ff                   	(bad)  
   1d197:	ff d0                	callq  *%rax
   1d199:	fb                   	sti    
   1d19a:	ff                   	(bad)  
   1d19b:	ff                   	(bad)  
   1d19c:	ff                   	(bad)  
   1d19d:	ff                   	(bad)  
   1d19e:	ff                   	(bad)  
   1d19f:	ff 20                	jmpq   *(%rax)
   1d1a1:	fc                   	cld    
   1d1a2:	ff                   	(bad)  
   1d1a3:	ff                   	(bad)  
   1d1a4:	ff                   	(bad)  
   1d1a5:	ff                   	(bad)  
   1d1a6:	ff                   	(bad)  
   1d1a7:	ff 6a fc             	ljmp   *-0x4(%rdx)
   1d1aa:	ff                   	(bad)  
   1d1ab:	ff                   	(bad)  
   1d1ac:	ff                   	(bad)  
   1d1ad:	ff                   	(bad)  
   1d1ae:	ff                   	(bad)  
   1d1af:	ff b7 fc ff ff ff    	pushq  -0x4(%rdi)
   1d1b5:	ff                   	(bad)  
   1d1b6:	ff                   	(bad)  
   1d1b7:	ff 05 fd ff ff ff    	incl   -0x3(%rip)        # 1d1ba <__intel_memset+0xe3a>
   1d1bd:	ff                   	(bad)  
   1d1be:	ff                   	(bad)  
   1d1bf:	ff 56 fd             	callq  *-0x3(%rsi)
   1d1c2:	ff                   	(bad)  
   1d1c3:	ff                   	(bad)  
   1d1c4:	ff                   	(bad)  
   1d1c5:	ff                   	(bad)  
   1d1c6:	ff                   	(bad)  
   1d1c7:	ff a3 fd ff ff ff    	jmpq   *-0x3(%rbx)
   1d1cd:	ff                   	(bad)  
   1d1ce:	ff                   	(bad)  
   1d1cf:	ff f3                	push   %rbx
   1d1d1:	fd                   	std    
   1d1d2:	ff                   	(bad)  
   1d1d3:	ff                   	(bad)  
   1d1d4:	ff                   	(bad)  
   1d1d5:	ff                   	(bad)  
   1d1d6:	ff                   	(bad)  
   1d1d7:	ff 44 fe ff          	incl   -0x1(%rsi,%rdi,8)
   1d1db:	ff                   	(bad)  
   1d1dc:	ff                   	(bad)  
   1d1dd:	ff                   	(bad)  
   1d1de:	ff                   	(bad)  
   1d1df:	ff c7                	inc    %edi
   1d1e1:	f9                   	stc    
   1d1e2:	ff                   	(bad)  
   1d1e3:	ff                   	(bad)  
   1d1e4:	ff                   	(bad)  
   1d1e5:	ff                   	(bad)  
   1d1e6:	ff                   	(bad)  
   1d1e7:	ff 0b                	decl   (%rbx)
   1d1e9:	fa                   	cli    
   1d1ea:	ff                   	(bad)  
   1d1eb:	ff                   	(bad)  
   1d1ec:	ff                   	(bad)  
   1d1ed:	ff                   	(bad)  
   1d1ee:	ff                   	(bad)  
   1d1ef:	ff 52 fa             	callq  *-0x6(%rdx)
   1d1f2:	ff                   	(bad)  
   1d1f3:	ff                   	(bad)  
   1d1f4:	ff                   	(bad)  
   1d1f5:	ff                   	(bad)  
   1d1f6:	ff                   	(bad)  
   1d1f7:	ff 9c fa ff ff ff ff 	lcall  *-0x1(%rdx,%rdi,8)
   1d1fe:	ff                   	(bad)  
   1d1ff:	ff                   	(bad)  
   1d200:	e9 fa ff ff ff       	jmpq   1d1ff <__intel_memset+0xe7f>
   1d205:	ff                   	(bad)  
   1d206:	ff                   	(bad)  
   1d207:	ff 32                	pushq  (%rdx)
   1d209:	fb                   	sti    
   1d20a:	ff                   	(bad)  
   1d20b:	ff                   	(bad)  
   1d20c:	ff                   	(bad)  
   1d20d:	ff                   	(bad)  
   1d20e:	ff                   	(bad)  
   1d20f:	ff                   	(bad)  
   1d210:	7e fb                	jle    1d20d <__intel_memset+0xe8d>
   1d212:	ff                   	(bad)  
   1d213:	ff                   	(bad)  
   1d214:	ff                   	(bad)  
   1d215:	ff                   	(bad)  
   1d216:	ff                   	(bad)  
   1d217:	ff cb                	dec    %ebx
   1d219:	fb                   	sti    
   1d21a:	ff                   	(bad)  
   1d21b:	ff                   	(bad)  
   1d21c:	ff                   	(bad)  
   1d21d:	ff                   	(bad)  
   1d21e:	ff                   	(bad)  
   1d21f:	ff 1b                	lcall  *(%rbx)
   1d221:	fc                   	cld    
   1d222:	ff                   	(bad)  
   1d223:	ff                   	(bad)  
   1d224:	ff                   	(bad)  
   1d225:	ff                   	(bad)  
   1d226:	ff                   	(bad)  
   1d227:	ff 65 fc             	jmpq   *-0x4(%rbp)
   1d22a:	ff                   	(bad)  
   1d22b:	ff                   	(bad)  
   1d22c:	ff                   	(bad)  
   1d22d:	ff                   	(bad)  
   1d22e:	ff                   	(bad)  
   1d22f:	ff b2 fc ff ff ff    	pushq  -0x4(%rdx)
   1d235:	ff                   	(bad)  
   1d236:	ff                   	(bad)  
   1d237:	ff 00                	incl   (%rax)
   1d239:	fd                   	std    
   1d23a:	ff                   	(bad)  
   1d23b:	ff                   	(bad)  
   1d23c:	ff                   	(bad)  
   1d23d:	ff                   	(bad)  
   1d23e:	ff                   	(bad)  
   1d23f:	ff 51 fd             	callq  *-0x3(%rcx)
   1d242:	ff                   	(bad)  
   1d243:	ff                   	(bad)  
   1d244:	ff                   	(bad)  
   1d245:	ff                   	(bad)  
   1d246:	ff                   	(bad)  
   1d247:	ff 9e fd ff ff ff    	lcall  *-0x3(%rsi)
   1d24d:	ff                   	(bad)  
   1d24e:	ff                   	(bad)  
   1d24f:	ff                   	(bad)  
   1d250:	ee                   	out    %al,(%dx)
   1d251:	fd                   	std    
   1d252:	ff                   	(bad)  
   1d253:	ff                   	(bad)  
   1d254:	ff                   	(bad)  
   1d255:	ff                   	(bad)  
   1d256:	ff                   	(bad)  
   1d257:	ff                   	(bad)  
   1d258:	3f                   	(bad)  
   1d259:	fe                   	(bad)  
   1d25a:	ff                   	(bad)  
   1d25b:	ff                   	(bad)  
   1d25c:	ff                   	(bad)  
   1d25d:	ff                   	(bad)  
   1d25e:	ff                   	(bad)  
   1d25f:	ff c2                	inc    %edx
   1d261:	f9                   	stc    
   1d262:	ff                   	(bad)  
   1d263:	ff                   	(bad)  
   1d264:	ff                   	(bad)  
   1d265:	ff                   	(bad)  
   1d266:	ff                   	(bad)  
   1d267:	ff 06                	incl   (%rsi)
   1d269:	fa                   	cli    
   1d26a:	ff                   	(bad)  
   1d26b:	ff                   	(bad)  
   1d26c:	ff                   	(bad)  
   1d26d:	ff                   	(bad)  
   1d26e:	ff                   	(bad)  
   1d26f:	ff 4d fa             	decl   -0x6(%rbp)
   1d272:	ff                   	(bad)  
   1d273:	ff                   	(bad)  
   1d274:	ff                   	(bad)  
   1d275:	ff                   	(bad)  
   1d276:	ff                   	(bad)  
   1d277:	ff 97 fa ff ff ff    	callq  *-0x6(%rdi)
   1d27d:	ff                   	(bad)  
   1d27e:	ff                   	(bad)  
   1d27f:	ff e4                	jmpq   *%rsp
   1d281:	fa                   	cli    
   1d282:	ff                   	(bad)  
   1d283:	ff                   	(bad)  
   1d284:	ff                   	(bad)  
   1d285:	ff                   	(bad)  
   1d286:	ff                   	(bad)  
   1d287:	ff 2d fb ff ff ff    	ljmp   *-0x5(%rip)        # 1d288 <__intel_memset+0xf08>
   1d28d:	ff                   	(bad)  
   1d28e:	ff                   	(bad)  
   1d28f:	ff                   	(bad)  
   1d290:	79 fb                	jns    1d28d <__intel_memset+0xf0d>
   1d292:	ff                   	(bad)  
   1d293:	ff                   	(bad)  
   1d294:	ff                   	(bad)  
   1d295:	ff                   	(bad)  
   1d296:	ff                   	(bad)  
   1d297:	ff c6                	inc    %esi
   1d299:	fb                   	sti    
   1d29a:	ff                   	(bad)  
   1d29b:	ff                   	(bad)  
   1d29c:	ff                   	(bad)  
   1d29d:	ff                   	(bad)  
   1d29e:	ff                   	(bad)  
   1d29f:	ff 16                	callq  *(%rsi)
   1d2a1:	fc                   	cld    
   1d2a2:	ff                   	(bad)  
   1d2a3:	ff                   	(bad)  
   1d2a4:	ff                   	(bad)  
   1d2a5:	ff                   	(bad)  
   1d2a6:	ff                   	(bad)  
   1d2a7:	ff 60 fc             	jmpq   *-0x4(%rax)
   1d2aa:	ff                   	(bad)  
   1d2ab:	ff                   	(bad)  
   1d2ac:	ff                   	(bad)  
   1d2ad:	ff                   	(bad)  
   1d2ae:	ff                   	(bad)  
   1d2af:	ff ad fc ff ff ff    	ljmp   *-0x4(%rbp)
   1d2b5:	ff                   	(bad)  
   1d2b6:	ff                   	(bad)  
   1d2b7:	ff                   	(bad)  
   1d2b8:	fb                   	sti    
   1d2b9:	fc                   	cld    
   1d2ba:	ff                   	(bad)  
   1d2bb:	ff                   	(bad)  
   1d2bc:	ff                   	(bad)  
   1d2bd:	ff                   	(bad)  
   1d2be:	ff                   	(bad)  
   1d2bf:	ff 4c fd ff          	decl   -0x1(%rbp,%rdi,8)
   1d2c3:	ff                   	(bad)  
   1d2c4:	ff                   	(bad)  
   1d2c5:	ff                   	(bad)  
   1d2c6:	ff                   	(bad)  
   1d2c7:	ff 99 fd ff ff ff    	lcall  *-0x3(%rcx)
   1d2cd:	ff                   	(bad)  
   1d2ce:	ff                   	(bad)  
   1d2cf:	ff                   	(bad)  
   1d2d0:	e9 fd ff ff ff       	jmpq   1d2d2 <__intel_memset+0xf52>
   1d2d5:	ff                   	(bad)  
   1d2d6:	ff                   	(bad)  
   1d2d7:	ff                   	(bad)  
   1d2d8:	3a fe                	cmp    %dh,%bh
   1d2da:	ff                   	(bad)  
   1d2db:	ff                   	(bad)  
   1d2dc:	ff                   	(bad)  
   1d2dd:	ff                   	(bad)  
   1d2de:	ff                   	(bad)  
   1d2df:	ff                   	(bad)  
   1d2e0:	bd f9 ff ff ff       	mov    $0xfffffff9,%ebp
   1d2e5:	ff                   	(bad)  
   1d2e6:	ff                   	(bad)  
   1d2e7:	ff 01                	incl   (%rcx)
   1d2e9:	fa                   	cli    
   1d2ea:	ff                   	(bad)  
   1d2eb:	ff                   	(bad)  
   1d2ec:	ff                   	(bad)  
   1d2ed:	ff                   	(bad)  
   1d2ee:	ff                   	(bad)  
   1d2ef:	ff 48 fa             	decl   -0x6(%rax)
   1d2f2:	ff                   	(bad)  
   1d2f3:	ff                   	(bad)  
   1d2f4:	ff                   	(bad)  
   1d2f5:	ff                   	(bad)  
   1d2f6:	ff                   	(bad)  
   1d2f7:	ff 92 fa ff ff ff    	callq  *-0x6(%rdx)
   1d2fd:	ff                   	(bad)  
   1d2fe:	ff                   	(bad)  
   1d2ff:	ff                   	(bad)  
   1d300:	df fa                	(bad)  
   1d302:	ff                   	(bad)  
   1d303:	ff                   	(bad)  
   1d304:	ff                   	(bad)  
   1d305:	ff                   	(bad)  
   1d306:	ff                   	(bad)  
   1d307:	ff 28                	ljmp   *(%rax)
   1d309:	fb                   	sti    
   1d30a:	ff                   	(bad)  
   1d30b:	ff                   	(bad)  
   1d30c:	ff                   	(bad)  
   1d30d:	ff                   	(bad)  
   1d30e:	ff                   	(bad)  
   1d30f:	ff 74 fb ff          	pushq  -0x1(%rbx,%rdi,8)
   1d313:	ff                   	(bad)  
   1d314:	ff                   	(bad)  
   1d315:	ff                   	(bad)  
   1d316:	ff                   	(bad)  
   1d317:	ff c1                	inc    %ecx
   1d319:	fb                   	sti    
   1d31a:	ff                   	(bad)  
   1d31b:	ff                   	(bad)  
   1d31c:	ff                   	(bad)  
   1d31d:	ff                   	(bad)  
   1d31e:	ff                   	(bad)  
   1d31f:	ff 11                	callq  *(%rcx)
   1d321:	fc                   	cld    
   1d322:	ff                   	(bad)  
   1d323:	ff                   	(bad)  
   1d324:	ff                   	(bad)  
   1d325:	ff                   	(bad)  
   1d326:	ff                   	(bad)  
   1d327:	ff 5b fc             	lcall  *-0x4(%rbx)
   1d32a:	ff                   	(bad)  
   1d32b:	ff                   	(bad)  
   1d32c:	ff                   	(bad)  
   1d32d:	ff                   	(bad)  
   1d32e:	ff                   	(bad)  
   1d32f:	ff a8 fc ff ff ff    	ljmp   *-0x4(%rax)
   1d335:	ff                   	(bad)  
   1d336:	ff                   	(bad)  
   1d337:	ff f6                	push   %rsi
   1d339:	fc                   	cld    
   1d33a:	ff                   	(bad)  
   1d33b:	ff                   	(bad)  
   1d33c:	ff                   	(bad)  
   1d33d:	ff                   	(bad)  
   1d33e:	ff                   	(bad)  
   1d33f:	ff 47 fd             	incl   -0x3(%rdi)
   1d342:	ff                   	(bad)  
   1d343:	ff                   	(bad)  
   1d344:	ff                   	(bad)  
   1d345:	ff                   	(bad)  
   1d346:	ff                   	(bad)  
   1d347:	ff 94 fd ff ff ff ff 	callq  *-0x1(%rbp,%rdi,8)
   1d34e:	ff                   	(bad)  
   1d34f:	ff e4                	jmpq   *%rsp
   1d351:	fd                   	std    
   1d352:	ff                   	(bad)  
   1d353:	ff                   	(bad)  
   1d354:	ff                   	(bad)  
   1d355:	ff                   	(bad)  
   1d356:	ff                   	(bad)  
   1d357:	ff 35 fe ff ff ff    	pushq  -0x2(%rip)        # 1d35b <__intel_memset+0xfdb>
   1d35d:	ff                   	(bad)  
   1d35e:	ff                   	(bad)  
   1d35f:	ff                   	(bad)  
   1d360:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
   1d365:	ff                   	(bad)  
   1d366:	ff                   	(bad)  
   1d367:	ff                   	(bad)  
   1d368:	f9                   	stc    
   1d369:	f9                   	stc    
   1d36a:	ff                   	(bad)  
   1d36b:	ff                   	(bad)  
   1d36c:	ff                   	(bad)  
   1d36d:	ff                   	(bad)  
   1d36e:	ff                   	(bad)  
   1d36f:	ff 40 fa             	incl   -0x6(%rax)
   1d372:	ff                   	(bad)  
   1d373:	ff                   	(bad)  
   1d374:	ff                   	(bad)  
   1d375:	ff                   	(bad)  
   1d376:	ff                   	(bad)  
   1d377:	ff 8a fa ff ff ff    	decl   -0x6(%rdx)
   1d37d:	ff                   	(bad)  
   1d37e:	ff                   	(bad)  
   1d37f:	ff d7                	callq  *%rdi
   1d381:	fa                   	cli    
   1d382:	ff                   	(bad)  
   1d383:	ff                   	(bad)  
   1d384:	ff                   	(bad)  
   1d385:	ff                   	(bad)  
   1d386:	ff                   	(bad)  
   1d387:	ff 20                	jmpq   *(%rax)
   1d389:	fb                   	sti    
   1d38a:	ff                   	(bad)  
   1d38b:	ff                   	(bad)  
   1d38c:	ff                   	(bad)  
   1d38d:	ff                   	(bad)  
   1d38e:	ff                   	(bad)  
   1d38f:	ff 6c fb ff          	ljmp   *-0x1(%rbx,%rdi,8)
   1d393:	ff                   	(bad)  
   1d394:	ff                   	(bad)  
   1d395:	ff                   	(bad)  
   1d396:	ff                   	(bad)  
   1d397:	ff                   	(bad)  
   1d398:	b9 fb ff ff ff       	mov    $0xfffffffb,%ecx
   1d39d:	ff                   	(bad)  
   1d39e:	ff                   	(bad)  
   1d39f:	ff 09                	decl   (%rcx)
   1d3a1:	fc                   	cld    
   1d3a2:	ff                   	(bad)  
   1d3a3:	ff                   	(bad)  
   1d3a4:	ff                   	(bad)  
   1d3a5:	ff                   	(bad)  
   1d3a6:	ff                   	(bad)  
   1d3a7:	ff 53 fc             	callq  *-0x4(%rbx)
   1d3aa:	ff                   	(bad)  
   1d3ab:	ff                   	(bad)  
   1d3ac:	ff                   	(bad)  
   1d3ad:	ff                   	(bad)  
   1d3ae:	ff                   	(bad)  
   1d3af:	ff a0 fc ff ff ff    	jmpq   *-0x4(%rax)
   1d3b5:	ff                   	(bad)  
   1d3b6:	ff                   	(bad)  
   1d3b7:	ff                   	(bad)  
   1d3b8:	ee                   	out    %al,(%dx)
   1d3b9:	fc                   	cld    
   1d3ba:	ff                   	(bad)  
   1d3bb:	ff                   	(bad)  
   1d3bc:	ff                   	(bad)  
   1d3bd:	ff                   	(bad)  
   1d3be:	ff                   	(bad)  
   1d3bf:	ff                   	(bad)  
   1d3c0:	3f                   	(bad)  
   1d3c1:	fd                   	std    
   1d3c2:	ff                   	(bad)  
   1d3c3:	ff                   	(bad)  
   1d3c4:	ff                   	(bad)  
   1d3c5:	ff                   	(bad)  
   1d3c6:	ff                   	(bad)  
   1d3c7:	ff 8c fd ff ff ff ff 	decl   -0x1(%rbp,%rdi,8)
   1d3ce:	ff                   	(bad)  
   1d3cf:	ff                   	(bad)  
   1d3d0:	dc fd                	fdivr  %st,%st(5)
   1d3d2:	ff                   	(bad)  
   1d3d3:	ff                   	(bad)  
   1d3d4:	ff                   	(bad)  
   1d3d5:	ff                   	(bad)  
   1d3d6:	ff                   	(bad)  
   1d3d7:	ff 2d fe ff ff ff    	ljmp   *-0x2(%rip)        # 1d3db <__intel_memset+0x105b>
   1d3dd:	ff                   	(bad)  
   1d3de:	ff                   	(bad)  
   1d3df:	ff b0 f9 ff ff ff    	pushq  -0x7(%rax)
   1d3e5:	ff                   	(bad)  
   1d3e6:	ff                   	(bad)  
   1d3e7:	ff f1                	push   %rcx
   1d3e9:	f9                   	stc    
   1d3ea:	ff                   	(bad)  
   1d3eb:	ff                   	(bad)  
   1d3ec:	ff                   	(bad)  
   1d3ed:	ff                   	(bad)  
   1d3ee:	ff                   	(bad)  
   1d3ef:	ff                   	(bad)  
   1d3f0:	38 fa                	cmp    %bh,%dl
   1d3f2:	ff                   	(bad)  
   1d3f3:	ff                   	(bad)  
   1d3f4:	ff                   	(bad)  
   1d3f5:	ff                   	(bad)  
   1d3f6:	ff                   	(bad)  
   1d3f7:	ff 82 fa ff ff ff    	incl   -0x6(%rdx)
   1d3fd:	ff                   	(bad)  
   1d3fe:	ff                   	(bad)  
   1d3ff:	ff cf                	dec    %edi
   1d401:	fa                   	cli    
   1d402:	ff                   	(bad)  
   1d403:	ff                   	(bad)  
   1d404:	ff                   	(bad)  
   1d405:	ff                   	(bad)  
   1d406:	ff                   	(bad)  
   1d407:	ff 18                	lcall  *(%rax)
   1d409:	fb                   	sti    
   1d40a:	ff                   	(bad)  
   1d40b:	ff                   	(bad)  
   1d40c:	ff                   	(bad)  
   1d40d:	ff                   	(bad)  
   1d40e:	ff                   	(bad)  
   1d40f:	ff 64 fb ff          	jmpq   *-0x1(%rbx,%rdi,8)
   1d413:	ff                   	(bad)  
   1d414:	ff                   	(bad)  
   1d415:	ff                   	(bad)  
   1d416:	ff                   	(bad)  
   1d417:	ff b1 fb ff ff ff    	pushq  -0x5(%rcx)
   1d41d:	ff                   	(bad)  
   1d41e:	ff                   	(bad)  
   1d41f:	ff 01                	incl   (%rcx)
   1d421:	fc                   	cld    
   1d422:	ff                   	(bad)  
   1d423:	ff                   	(bad)  
   1d424:	ff                   	(bad)  
   1d425:	ff                   	(bad)  
   1d426:	ff                   	(bad)  
   1d427:	ff 4b fc             	decl   -0x4(%rbx)
   1d42a:	ff                   	(bad)  
   1d42b:	ff                   	(bad)  
   1d42c:	ff                   	(bad)  
   1d42d:	ff                   	(bad)  
   1d42e:	ff                   	(bad)  
   1d42f:	ff 98 fc ff ff ff    	lcall  *-0x4(%rax)
   1d435:	ff                   	(bad)  
   1d436:	ff                   	(bad)  
   1d437:	ff e6                	jmpq   *%rsi
   1d439:	fc                   	cld    
   1d43a:	ff                   	(bad)  
   1d43b:	ff                   	(bad)  
   1d43c:	ff                   	(bad)  
   1d43d:	ff                   	(bad)  
   1d43e:	ff                   	(bad)  
   1d43f:	ff 37                	pushq  (%rdi)
   1d441:	fd                   	std    
   1d442:	ff                   	(bad)  
   1d443:	ff                   	(bad)  
   1d444:	ff                   	(bad)  
   1d445:	ff                   	(bad)  
   1d446:	ff                   	(bad)  
   1d447:	ff 84 fd ff ff ff ff 	incl   -0x1(%rbp,%rdi,8)
   1d44e:	ff                   	(bad)  
   1d44f:	ff d4                	callq  *%rsp
   1d451:	fd                   	std    
   1d452:	ff                   	(bad)  
   1d453:	ff                   	(bad)  
   1d454:	ff                   	(bad)  
   1d455:	ff                   	(bad)  
   1d456:	ff                   	(bad)  
   1d457:	ff 25 fe ff ff ff    	jmpq   *-0x2(%rip)        # 1d45b <__intel_memset+0x10db>
   1d45d:	ff                   	(bad)  
   1d45e:	ff                   	(bad)  
   1d45f:	ff a8 f9 ff ff ff    	ljmp   *-0x7(%rax)
   1d465:	ff                   	(bad)  
   1d466:	ff                   	(bad)  
   1d467:	ff                   	(bad)  
   1d468:	e9 f9 ff ff ff       	jmpq   1d466 <__intel_memset+0x10e6>
   1d46d:	ff                   	(bad)  
   1d46e:	ff                   	(bad)  
   1d46f:	ff 30                	pushq  (%rax)
   1d471:	fa                   	cli    
   1d472:	ff                   	(bad)  
   1d473:	ff                   	(bad)  
   1d474:	ff                   	(bad)  
   1d475:	ff                   	(bad)  
   1d476:	ff                   	(bad)  
   1d477:	ff                   	(bad)  
   1d478:	7a fa                	jp     1d474 <__intel_memset+0x10f4>
   1d47a:	ff                   	(bad)  
   1d47b:	ff                   	(bad)  
   1d47c:	ff                   	(bad)  
   1d47d:	ff                   	(bad)  
   1d47e:	ff                   	(bad)  
   1d47f:	ff c7                	inc    %edi
   1d481:	fa                   	cli    
   1d482:	ff                   	(bad)  
   1d483:	ff                   	(bad)  
   1d484:	ff                   	(bad)  
   1d485:	ff                   	(bad)  
   1d486:	ff                   	(bad)  
   1d487:	ff 10                	callq  *(%rax)
   1d489:	fb                   	sti    
   1d48a:	ff                   	(bad)  
   1d48b:	ff                   	(bad)  
   1d48c:	ff                   	(bad)  
   1d48d:	ff                   	(bad)  
   1d48e:	ff                   	(bad)  
   1d48f:	ff 5c fb ff          	lcall  *-0x1(%rbx,%rdi,8)
   1d493:	ff                   	(bad)  
   1d494:	ff                   	(bad)  
   1d495:	ff                   	(bad)  
   1d496:	ff                   	(bad)  
   1d497:	ff a9 fb ff ff ff    	ljmp   *-0x5(%rcx)
   1d49d:	ff                   	(bad)  
   1d49e:	ff                   	(bad)  
   1d49f:	ff                   	(bad)  
   1d4a0:	f9                   	stc    
   1d4a1:	fb                   	sti    
   1d4a2:	ff                   	(bad)  
   1d4a3:	ff                   	(bad)  
   1d4a4:	ff                   	(bad)  
   1d4a5:	ff                   	(bad)  
   1d4a6:	ff                   	(bad)  
   1d4a7:	ff 43 fc             	incl   -0x4(%rbx)
   1d4aa:	ff                   	(bad)  
   1d4ab:	ff                   	(bad)  
   1d4ac:	ff                   	(bad)  
   1d4ad:	ff                   	(bad)  
   1d4ae:	ff                   	(bad)  
   1d4af:	ff 90 fc ff ff ff    	callq  *-0x4(%rax)
   1d4b5:	ff                   	(bad)  
   1d4b6:	ff                   	(bad)  
   1d4b7:	ff                   	(bad)  
   1d4b8:	de fc                	fdivrp %st,%st(4)
   1d4ba:	ff                   	(bad)  
   1d4bb:	ff                   	(bad)  
   1d4bc:	ff                   	(bad)  
   1d4bd:	ff                   	(bad)  
   1d4be:	ff                   	(bad)  
   1d4bf:	ff 2f                	ljmp   *(%rdi)
   1d4c1:	fd                   	std    
   1d4c2:	ff                   	(bad)  
   1d4c3:	ff                   	(bad)  
   1d4c4:	ff                   	(bad)  
   1d4c5:	ff                   	(bad)  
   1d4c6:	ff                   	(bad)  
   1d4c7:	ff                   	(bad)  
   1d4c8:	7c fd                	jl     1d4c7 <__intel_memset+0x1147>
   1d4ca:	ff                   	(bad)  
   1d4cb:	ff                   	(bad)  
   1d4cc:	ff                   	(bad)  
   1d4cd:	ff                   	(bad)  
   1d4ce:	ff                   	(bad)  
   1d4cf:	ff cc                	dec    %esp
   1d4d1:	fd                   	std    
   1d4d2:	ff                   	(bad)  
   1d4d3:	ff                   	(bad)  
   1d4d4:	ff                   	(bad)  
   1d4d5:	ff                   	(bad)  
   1d4d6:	ff                   	(bad)  
   1d4d7:	ff 1d fe ff ff ff    	lcall  *-0x2(%rip)        # 1d4db <__intel_memset+0x115b>
   1d4dd:	ff                   	(bad)  
   1d4de:	ff                   	(bad)  
   1d4df:	ff a0 f9 ff ff ff    	jmpq   *-0x7(%rax)
   1d4e5:	ff                   	(bad)  
   1d4e6:	ff                   	(bad)  
   1d4e7:	ff e1                	jmpq   *%rcx
   1d4e9:	f9                   	stc    
   1d4ea:	ff                   	(bad)  
   1d4eb:	ff                   	(bad)  
   1d4ec:	ff                   	(bad)  
   1d4ed:	ff                   	(bad)  
   1d4ee:	ff                   	(bad)  
   1d4ef:	ff 28                	ljmp   *(%rax)
   1d4f1:	fa                   	cli    
   1d4f2:	ff                   	(bad)  
   1d4f3:	ff                   	(bad)  
   1d4f4:	ff                   	(bad)  
   1d4f5:	ff                   	(bad)  
   1d4f6:	ff                   	(bad)  
   1d4f7:	ff 72 fa             	pushq  -0x6(%rdx)
   1d4fa:	ff                   	(bad)  
   1d4fb:	ff                   	(bad)  
   1d4fc:	ff                   	(bad)  
   1d4fd:	ff                   	(bad)  
   1d4fe:	ff                   	(bad)  
   1d4ff:	ff                   	(bad)  
   1d500:	bf fa ff ff ff       	mov    $0xfffffffa,%edi
   1d505:	ff                   	(bad)  
   1d506:	ff                   	(bad)  
   1d507:	ff 08                	decl   (%rax)
   1d509:	fb                   	sti    
   1d50a:	ff                   	(bad)  
   1d50b:	ff                   	(bad)  
   1d50c:	ff                   	(bad)  
   1d50d:	ff                   	(bad)  
   1d50e:	ff                   	(bad)  
   1d50f:	ff 54 fb ff          	callq  *-0x1(%rbx,%rdi,8)
   1d513:	ff                   	(bad)  
   1d514:	ff                   	(bad)  
   1d515:	ff                   	(bad)  
   1d516:	ff                   	(bad)  
   1d517:	ff a1 fb ff ff ff    	jmpq   *-0x5(%rcx)
   1d51d:	ff                   	(bad)  
   1d51e:	ff                   	(bad)  
   1d51f:	ff f1                	push   %rcx
   1d521:	fb                   	sti    
   1d522:	ff                   	(bad)  
   1d523:	ff                   	(bad)  
   1d524:	ff                   	(bad)  
   1d525:	ff                   	(bad)  
   1d526:	ff                   	(bad)  
   1d527:	ff                   	(bad)  
   1d528:	3b fc                	cmp    %esp,%edi
   1d52a:	ff                   	(bad)  
   1d52b:	ff                   	(bad)  
   1d52c:	ff                   	(bad)  
   1d52d:	ff                   	(bad)  
   1d52e:	ff                   	(bad)  
   1d52f:	ff 88 fc ff ff ff    	decl   -0x4(%rax)
   1d535:	ff                   	(bad)  
   1d536:	ff                   	(bad)  
   1d537:	ff d6                	callq  *%rsi
   1d539:	fc                   	cld    
   1d53a:	ff                   	(bad)  
   1d53b:	ff                   	(bad)  
   1d53c:	ff                   	(bad)  
   1d53d:	ff                   	(bad)  
   1d53e:	ff                   	(bad)  
   1d53f:	ff 27                	jmpq   *(%rdi)
   1d541:	fd                   	std    
   1d542:	ff                   	(bad)  
   1d543:	ff                   	(bad)  
   1d544:	ff                   	(bad)  
   1d545:	ff                   	(bad)  
   1d546:	ff                   	(bad)  
   1d547:	ff 74 fd ff          	pushq  -0x1(%rbp,%rdi,8)
   1d54b:	ff                   	(bad)  
   1d54c:	ff                   	(bad)  
   1d54d:	ff                   	(bad)  
   1d54e:	ff                   	(bad)  
   1d54f:	ff c4                	inc    %esp
   1d551:	fd                   	std    
   1d552:	ff                   	(bad)  
   1d553:	ff                   	(bad)  
   1d554:	ff                   	(bad)  
   1d555:	ff                   	(bad)  
   1d556:	ff                   	(bad)  
   1d557:	ff 15 fe ff ff ff    	callq  *-0x2(%rip)        # 1d55b <__intel_memset+0x11db>
   1d55d:	ff                   	(bad)  
   1d55e:	ff                   	(bad)  
   1d55f:	ff                   	.byte 0xff

000000000001d560 <tcrypto_access_version_dummy1>:
   1d560:	55                   	push   %rbp
   1d561:	48 89 e5             	mov    %rsp,%rbp
   1d564:	c6 05 35 53 20 00 73 	movb   $0x73,0x205335(%rip)        # 2228a0 <sgx_tcrypto_version>
   1d56b:	48 8d 05 2e 53 20 00 	lea    0x20532e(%rip),%rax        # 2228a0 <sgx_tcrypto_version>
   1d572:	5d                   	pop    %rbp
   1d573:	c3                   	retq   

000000000001d574 <sgx_init_crypto_lib>:
   1d574:	55                   	push   %rbp
   1d575:	48 89 e5             	mov    %rsp,%rbp
   1d578:	48 83 ec 10          	sub    $0x10,%rsp
   1d57c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d580:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d584:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d588:	48 89 c7             	mov    %rax,%rdi
   1d58b:	e8 02 00 00 00       	callq  1d592 <init_ipp_cpuid>
   1d590:	c9                   	leaveq 
   1d591:	c3                   	retq   

000000000001d592 <init_ipp_cpuid>:
   1d592:	55                   	push   %rbp
   1d593:	48 89 e5             	mov    %rsp,%rbp
   1d596:	48 83 ec 20          	sub    $0x20,%rsp
   1d59a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1d59e:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
   1d5a5:	48 8b 05 4c 4a 20 00 	mov    0x204a4c(%rip),%rax        # 221ff8 <_DYNAMIC+0x1a8>
   1d5ac:	48 85 c0             	test   %rax,%rax
   1d5af:	75 0a                	jne    1d5bb <init_ipp_cpuid+0x29>
   1d5b1:	b8 00 00 00 00       	mov    $0x0,%eax
   1d5b6:	e9 81 02 00 00       	jmpq   1d83c <init_ipp_cpuid+0x2aa>
   1d5bb:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   1d5c2:	00 
   1d5c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d5c7:	25 00 02 00 00       	and    $0x200,%eax
   1d5cc:	48 85 c0             	test   %rax,%rax
   1d5cf:	0f 84 31 02 00 00    	je     1d806 <init_ipp_cpuid+0x274>
   1d5d5:	48 83 4d f8 5f       	orq    $0x5f,-0x8(%rbp)
   1d5da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d5de:	25 00 08 00 00       	and    $0x800,%eax
   1d5e3:	48 85 c0             	test   %rax,%rax
   1d5e6:	74 05                	je     1d5ed <init_ipp_cpuid+0x5b>
   1d5e8:	48 83 4d f8 20       	orq    $0x20,-0x8(%rbp)
   1d5ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d5f1:	25 00 04 00 00       	and    $0x400,%eax
   1d5f6:	48 85 c0             	test   %rax,%rax
   1d5f9:	74 08                	je     1d603 <init_ipp_cpuid+0x71>
   1d5fb:	48 81 4d f8 80 00 00 	orq    $0x80,-0x8(%rbp)
   1d602:	00 
   1d603:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d607:	25 00 00 01 00       	and    $0x10000,%eax
   1d60c:	48 85 c0             	test   %rax,%rax
   1d60f:	74 10                	je     1d621 <init_ipp_cpuid+0x8f>
   1d611:	48 81 4d f8 00 01 00 	orq    $0x100,-0x8(%rbp)
   1d618:	00 
   1d619:	48 81 4d f8 00 02 00 	orq    $0x200,-0x8(%rbp)
   1d620:	00 
   1d621:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d625:	25 00 40 00 00       	and    $0x4000,%eax
   1d62a:	48 85 c0             	test   %rax,%rax
   1d62d:	74 08                	je     1d637 <init_ipp_cpuid+0xa5>
   1d62f:	48 81 4d f8 00 04 00 	orq    $0x400,-0x8(%rbp)
   1d636:	00 
   1d637:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d63b:	25 00 20 00 00       	and    $0x2000,%eax
   1d640:	48 85 c0             	test   %rax,%rax
   1d643:	74 08                	je     1d64d <init_ipp_cpuid+0xbb>
   1d645:	48 81 4d f8 00 08 00 	orq    $0x800,-0x8(%rbp)
   1d64c:	00 
   1d64d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d651:	25 00 00 02 00       	and    $0x20000,%eax
   1d656:	48 85 c0             	test   %rax,%rax
   1d659:	74 08                	je     1d663 <init_ipp_cpuid+0xd1>
   1d65b:	48 81 4d f8 00 20 00 	orq    $0x2000,-0x8(%rbp)
   1d662:	00 
   1d663:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d667:	25 00 80 00 00       	and    $0x8000,%eax
   1d66c:	48 85 c0             	test   %rax,%rax
   1d66f:	74 08                	je     1d679 <init_ipp_cpuid+0xe7>
   1d671:	48 81 4d f8 00 40 00 	orq    $0x4000,-0x8(%rbp)
   1d678:	00 
   1d679:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d67d:	25 00 00 80 00       	and    $0x800000,%eax
   1d682:	48 85 c0             	test   %rax,%rax
   1d685:	74 08                	je     1d68f <init_ipp_cpuid+0xfd>
   1d687:	48 81 4d f8 00 80 00 	orq    $0x8000,-0x8(%rbp)
   1d68e:	00 
   1d68f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d693:	25 00 00 00 10       	and    $0x10000000,%eax
   1d698:	48 85 c0             	test   %rax,%rax
   1d69b:	74 08                	je     1d6a5 <init_ipp_cpuid+0x113>
   1d69d:	48 81 4d f8 00 00 01 	orq    $0x10000,-0x8(%rbp)
   1d6a4:	00 
   1d6a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d6a9:	25 00 00 00 20       	and    $0x20000000,%eax
   1d6ae:	48 85 c0             	test   %rax,%rax
   1d6b1:	74 08                	je     1d6bb <init_ipp_cpuid+0x129>
   1d6b3:	48 81 4d f8 00 00 02 	orq    $0x20000,-0x8(%rbp)
   1d6ba:	00 
   1d6bb:	48 b8 00 00 00 00 08 	movabs $0x800000000,%rax
   1d6c2:	00 00 00 
   1d6c5:	48 23 45 e8          	and    -0x18(%rbp),%rax
   1d6c9:	48 85 c0             	test   %rax,%rax
   1d6cc:	74 08                	je     1d6d6 <init_ipp_cpuid+0x144>
   1d6ce:	48 81 4d f8 00 00 08 	orq    $0x80000,-0x8(%rbp)
   1d6d5:	00 
   1d6d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d6da:	25 00 00 00 08       	and    $0x8000000,%eax
   1d6df:	48 85 c0             	test   %rax,%rax
   1d6e2:	74 16                	je     1d6fa <init_ipp_cpuid+0x168>
   1d6e4:	48 81 4d f8 00 00 10 	orq    $0x100000,-0x8(%rbp)
   1d6eb:	00 
   1d6ec:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
   1d6f3:	00 00 00 
   1d6f6:	48 09 45 f8          	or     %rax,-0x8(%rbp)
   1d6fa:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
   1d701:	00 00 00 
   1d704:	48 23 45 e8          	and    -0x18(%rbp),%rax
   1d708:	48 85 c0             	test   %rax,%rax
   1d70b:	74 08                	je     1d715 <init_ipp_cpuid+0x183>
   1d70d:	48 81 4d f8 00 00 80 	orq    $0x800000,-0x8(%rbp)
   1d714:	00 
   1d715:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
   1d71c:	00 00 00 
   1d71f:	48 23 45 e8          	and    -0x18(%rbp),%rax
   1d723:	48 85 c0             	test   %rax,%rax
   1d726:	74 08                	je     1d730 <init_ipp_cpuid+0x19e>
   1d728:	48 81 4d f8 00 00 40 	orq    $0x400000,-0x8(%rbp)
   1d72f:	00 
   1d730:	48 b8 00 00 00 00 04 	movabs $0x400000000,%rax
   1d737:	00 00 00 
   1d73a:	48 23 45 e8          	and    -0x18(%rbp),%rax
   1d73e:	48 85 c0             	test   %rax,%rax
   1d741:	74 08                	je     1d74b <init_ipp_cpuid+0x1b9>
   1d743:	48 81 4d f8 00 00 20 	orq    $0x200000,-0x8(%rbp)
   1d74a:	00 
   1d74b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d74f:	25 00 00 00 01       	and    $0x1000000,%eax
   1d754:	48 85 c0             	test   %rax,%rax
   1d757:	74 08                	je     1d761 <init_ipp_cpuid+0x1cf>
   1d759:	48 81 4d f8 00 00 00 	orq    $0x2000000,-0x8(%rbp)
   1d760:	02 
   1d761:	48 b8 00 00 00 00 20 	movabs $0x2000000000,%rax
   1d768:	00 00 00 
   1d76b:	48 23 45 e8          	and    -0x18(%rbp),%rax
   1d76f:	48 85 c0             	test   %rax,%rax
   1d772:	74 08                	je     1d77c <init_ipp_cpuid+0x1ea>
   1d774:	48 81 4d f8 00 00 00 	orq    $0x1000000,-0x8(%rbp)
   1d77b:	01 
   1d77c:	48 b8 00 00 00 00 40 	movabs $0x4000000000,%rax
   1d783:	00 00 00 
   1d786:	48 23 45 e8          	and    -0x18(%rbp),%rax
   1d78a:	48 85 c0             	test   %rax,%rax
   1d78d:	74 08                	je     1d797 <init_ipp_cpuid+0x205>
   1d78f:	48 81 4d f8 00 00 00 	orq    $0x4000000,-0x8(%rbp)
   1d796:	04 
   1d797:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
   1d79e:	00 00 00 
   1d7a1:	48 23 45 e8          	and    -0x18(%rbp),%rax
   1d7a5:	48 85 c0             	test   %rax,%rax
   1d7a8:	74 08                	je     1d7b2 <init_ipp_cpuid+0x220>
   1d7aa:	48 81 4d f8 00 00 00 	orq    $0x8000000,-0x8(%rbp)
   1d7b1:	08 
   1d7b2:	48 b8 00 00 00 00 00 	movabs $0x20000000000,%rax
   1d7b9:	02 00 00 
   1d7bc:	48 23 45 e8          	and    -0x18(%rbp),%rax
   1d7c0:	48 85 c0             	test   %rax,%rax
   1d7c3:	74 08                	je     1d7cd <init_ipp_cpuid+0x23b>
   1d7c5:	48 81 4d f8 00 00 00 	orq    $0x40000000,-0x8(%rbp)
   1d7cc:	40 
   1d7cd:	48 b8 00 00 00 00 00 	movabs $0x10000000000,%rax
   1d7d4:	01 00 00 
   1d7d7:	48 23 45 e8          	and    -0x18(%rbp),%rax
   1d7db:	48 85 c0             	test   %rax,%rax
   1d7de:	74 08                	je     1d7e8 <init_ipp_cpuid+0x256>
   1d7e0:	48 81 4d f8 00 00 00 	orq    $0x20000000,-0x8(%rbp)
   1d7e7:	20 
   1d7e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d7ec:	25 00 00 00 40       	and    $0x40000000,%eax
   1d7f1:	48 85 c0             	test   %rax,%rax
   1d7f4:	74 17                	je     1d80d <init_ipp_cpuid+0x27b>
   1d7f6:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
   1d7fd:	00 00 00 
   1d800:	48 09 45 f8          	or     %rax,-0x8(%rbp)
   1d804:	eb 07                	jmp    1d80d <init_ipp_cpuid+0x27b>
   1d806:	b8 02 00 00 00       	mov    $0x2,%eax
   1d80b:	eb 2f                	jmp    1d83c <init_ipp_cpuid+0x2aa>
   1d80d:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
   1d814:	00 00 80 
   1d817:	48 09 45 f8          	or     %rax,-0x8(%rbp)
   1d81b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d81f:	48 89 c7             	mov    %rax,%rdi
   1d822:	e8 a1 2e fe ff       	callq  6c8 <UNROLLED_LIMIT+0x618>
   1d827:	89 45 f4             	mov    %eax,-0xc(%rbp)
   1d82a:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   1d82e:	74 07                	je     1d837 <init_ipp_cpuid+0x2a5>
   1d830:	b8 02 00 00 00       	mov    $0x2,%eax
   1d835:	eb 05                	jmp    1d83c <init_ipp_cpuid+0x2aa>
   1d837:	b8 00 00 00 00       	mov    $0x0,%eax
   1d83c:	c9                   	leaveq 
   1d83d:	c3                   	retq   

000000000001d83e <tservice_access_version_dummy1>:
   1d83e:	55                   	push   %rbp
   1d83f:	48 89 e5             	mov    %rsp,%rbp
   1d842:	c6 05 97 50 20 00 73 	movb   $0x73,0x205097(%rip)        # 2228e0 <sgx_tservice_version>
   1d849:	48 8d 05 90 50 20 00 	lea    0x205090(%rip),%rax        # 2228e0 <sgx_tservice_version>
   1d850:	5d                   	pop    %rbp
   1d851:	c3                   	retq   

000000000001d852 <sgx_create_report>:
   1d852:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
   1d857:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
   1d85e:	41 ff 72 f8          	pushq  -0x8(%r10)
   1d862:	55                   	push   %rbp
   1d863:	48 89 e5             	mov    %rsp,%rbp
   1d866:	41 52                	push   %r10
   1d868:	48 81 ec e8 09 00 00 	sub    $0x9e8,%rsp
   1d86f:	48 89 bd 78 f7 ff ff 	mov    %rdi,-0x888(%rbp)
   1d876:	48 89 b5 70 f7 ff ff 	mov    %rsi,-0x890(%rbp)
   1d87d:	48 89 95 68 f7 ff ff 	mov    %rdx,-0x898(%rbp)
   1d884:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1d88b:	00 00 
   1d88d:	48 89 85 08 fe ff ff 	mov    %rax,-0x1f8(%rbp)
   1d894:	31 c0                	xor    %eax,%eax
   1d896:	48 8d 85 90 f7 ff ff 	lea    -0x870(%rbp),%rax
   1d89d:	ba 40 00 00 00       	mov    $0x40,%edx
   1d8a2:	be 00 00 00 00       	mov    $0x0,%esi
   1d8a7:	48 89 c7             	mov    %rax,%rdi
   1d8aa:	e8 bf 0b ff ff       	callq  e46e <__memset>
   1d8af:	48 8d 85 10 fa ff ff 	lea    -0x5f0(%rbp),%rax
   1d8b6:	ba 00 02 00 00       	mov    $0x200,%edx
   1d8bb:	be 00 00 00 00       	mov    $0x0,%esi
   1d8c0:	48 89 c7             	mov    %rax,%rdi
   1d8c3:	e8 a6 0b ff ff       	callq  e46e <__memset>
   1d8c8:	48 8d 85 10 f8 ff ff 	lea    -0x7f0(%rbp),%rax
   1d8cf:	ba b0 01 00 00       	mov    $0x1b0,%edx
   1d8d4:	be 00 00 00 00       	mov    $0x0,%esi
   1d8d9:	48 89 c7             	mov    %rax,%rdi
   1d8dc:	e8 8d 0b ff ff       	callq  e46e <__memset>
   1d8e1:	48 83 bd 78 f7 ff ff 	cmpq   $0x0,-0x888(%rbp)
   1d8e8:	00 
   1d8e9:	74 46                	je     1d931 <sgx_create_report+0xdf>
   1d8eb:	48 8b 85 78 f7 ff ff 	mov    -0x888(%rbp),%rax
   1d8f2:	be 00 02 00 00       	mov    $0x200,%esi
   1d8f7:	48 89 c7             	mov    %rax,%rdi
   1d8fa:	e8 82 30 fe ff       	callq  981 <sgx_is_within_enclave>
   1d8ff:	85 c0                	test   %eax,%eax
   1d901:	0f 94 c0             	sete   %al
   1d904:	84 c0                	test   %al,%al
   1d906:	74 0a                	je     1d912 <sgx_create_report+0xc0>
   1d908:	b8 02 00 00 00       	mov    $0x2,%eax
   1d90d:	e9 8d 01 00 00       	jmpq   1da9f <sgx_create_report+0x24d>
   1d912:	48 8b 95 78 f7 ff ff 	mov    -0x888(%rbp),%rdx
   1d919:	48 8d 85 10 fa ff ff 	lea    -0x5f0(%rbp),%rax
   1d920:	48 89 d6             	mov    %rdx,%rsi
   1d923:	ba 40 00 00 00       	mov    $0x40,%edx
   1d928:	48 89 c7             	mov    %rax,%rdi
   1d92b:	48 89 d1             	mov    %rdx,%rcx
   1d92e:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   1d931:	48 83 bd 70 f7 ff ff 	cmpq   $0x0,-0x890(%rbp)
   1d938:	00 
   1d939:	0f 84 85 00 00 00    	je     1d9c4 <sgx_create_report+0x172>
   1d93f:	48 8b 85 70 f7 ff ff 	mov    -0x890(%rbp),%rax
   1d946:	be 40 00 00 00       	mov    $0x40,%esi
   1d94b:	48 89 c7             	mov    %rax,%rdi
   1d94e:	e8 2e 30 fe ff       	callq  981 <sgx_is_within_enclave>
   1d953:	85 c0                	test   %eax,%eax
   1d955:	0f 94 c0             	sete   %al
   1d958:	84 c0                	test   %al,%al
   1d95a:	74 0a                	je     1d966 <sgx_create_report+0x114>
   1d95c:	b8 02 00 00 00       	mov    $0x2,%eax
   1d961:	e9 39 01 00 00       	jmpq   1da9f <sgx_create_report+0x24d>
   1d966:	48 8b 85 70 f7 ff ff 	mov    -0x890(%rbp),%rax
   1d96d:	48 8b 10             	mov    (%rax),%rdx
   1d970:	48 89 95 90 f7 ff ff 	mov    %rdx,-0x870(%rbp)
   1d977:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1d97b:	48 89 95 98 f7 ff ff 	mov    %rdx,-0x868(%rbp)
   1d982:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1d986:	48 89 95 a0 f7 ff ff 	mov    %rdx,-0x860(%rbp)
   1d98d:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1d991:	48 89 95 a8 f7 ff ff 	mov    %rdx,-0x858(%rbp)
   1d998:	48 8b 50 20          	mov    0x20(%rax),%rdx
   1d99c:	48 89 95 b0 f7 ff ff 	mov    %rdx,-0x850(%rbp)
   1d9a3:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1d9a7:	48 89 95 b8 f7 ff ff 	mov    %rdx,-0x848(%rbp)
   1d9ae:	48 8b 50 30          	mov    0x30(%rax),%rdx
   1d9b2:	48 89 95 c0 f7 ff ff 	mov    %rdx,-0x840(%rbp)
   1d9b9:	48 8b 40 38          	mov    0x38(%rax),%rax
   1d9bd:	48 89 85 c8 f7 ff ff 	mov    %rax,-0x838(%rbp)
   1d9c4:	48 83 bd 68 f7 ff ff 	cmpq   $0x0,-0x898(%rbp)
   1d9cb:	00 
   1d9cc:	74 18                	je     1d9e6 <sgx_create_report+0x194>
   1d9ce:	48 8b 85 68 f7 ff ff 	mov    -0x898(%rbp),%rax
   1d9d5:	be b0 01 00 00       	mov    $0x1b0,%esi
   1d9da:	48 89 c7             	mov    %rax,%rdi
   1d9dd:	e8 9f 2f fe ff       	callq  981 <sgx_is_within_enclave>
   1d9e2:	85 c0                	test   %eax,%eax
   1d9e4:	75 07                	jne    1d9ed <sgx_create_report+0x19b>
   1d9e6:	b8 01 00 00 00       	mov    $0x1,%eax
   1d9eb:	eb 05                	jmp    1d9f2 <sgx_create_report+0x1a0>
   1d9ed:	b8 00 00 00 00       	mov    $0x0,%eax
   1d9f2:	84 c0                	test   %al,%al
   1d9f4:	74 0a                	je     1da00 <sgx_create_report+0x1ae>
   1d9f6:	b8 02 00 00 00       	mov    $0x2,%eax
   1d9fb:	e9 9f 00 00 00       	jmpq   1da9f <sgx_create_report+0x24d>
   1da00:	48 8d 95 10 f8 ff ff 	lea    -0x7f0(%rbp),%rdx
   1da07:	48 8d 8d 90 f7 ff ff 	lea    -0x870(%rbp),%rcx
   1da0e:	48 8d 85 10 fa ff ff 	lea    -0x5f0(%rbp),%rax
   1da15:	48 89 ce             	mov    %rcx,%rsi
   1da18:	48 89 c7             	mov    %rax,%rdi
   1da1b:	e8 40 0a 00 00       	callq  1e460 <do_ereport>
   1da20:	89 85 84 f7 ff ff    	mov    %eax,-0x87c(%rbp)
   1da26:	83 bd 84 f7 ff ff 00 	cmpl   $0x0,-0x87c(%rbp)
   1da2d:	75 5b                	jne    1da8a <sgx_create_report+0x238>
   1da2f:	48 c7 85 88 f7 ff ff 	movq   $0x0,-0x878(%rbp)
   1da36:	00 00 00 00 
   1da3a:	b8 36 00 00 00       	mov    $0x36,%eax
   1da3f:	48 3b 85 88 f7 ff ff 	cmp    -0x878(%rbp),%rax
   1da46:	76 42                	jbe    1da8a <sgx_create_report+0x238>
   1da48:	48 8b 85 88 f7 ff ff 	mov    -0x878(%rbp),%rax
   1da4f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1da56:	00 
   1da57:	48 8b 85 68 f7 ff ff 	mov    -0x898(%rbp),%rax
   1da5e:	48 01 c2             	add    %rax,%rdx
   1da61:	48 8b 85 88 f7 ff ff 	mov    -0x878(%rbp),%rax
   1da68:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1da6f:	00 
   1da70:	48 8d 85 10 f8 ff ff 	lea    -0x7f0(%rbp),%rax
   1da77:	48 01 c8             	add    %rcx,%rax
   1da7a:	48 8b 00             	mov    (%rax),%rax
   1da7d:	48 89 02             	mov    %rax,(%rdx)
   1da80:	48 83 85 88 f7 ff ff 	addq   $0x1,-0x878(%rbp)
   1da87:	01 
   1da88:	eb b0                	jmp    1da3a <sgx_create_report+0x1e8>
   1da8a:	83 bd 84 f7 ff ff 00 	cmpl   $0x0,-0x87c(%rbp)
   1da91:	74 07                	je     1da9a <sgx_create_report+0x248>
   1da93:	b8 01 00 00 00       	mov    $0x1,%eax
   1da98:	eb 05                	jmp    1da9f <sgx_create_report+0x24d>
   1da9a:	b8 00 00 00 00       	mov    $0x0,%eax
   1da9f:	48 8b 8d 08 fe ff ff 	mov    -0x1f8(%rbp),%rcx
   1daa6:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1daad:	00 00 
   1daaf:	74 05                	je     1dab6 <sgx_create_report+0x264>
   1dab1:	e8 7a 71 fe ff       	callq  4c30 <__stack_chk_fail>
   1dab6:	48 81 c4 e8 09 00 00 	add    $0x9e8,%rsp
   1dabd:	41 5a                	pop    %r10
   1dabf:	5d                   	pop    %rbp
   1dac0:	49 8d 62 f8          	lea    -0x8(%r10),%rsp
   1dac4:	c3                   	retq   

000000000001dac5 <sgx_self_report>:
   1dac5:	55                   	push   %rbp
   1dac6:	48 89 e5             	mov    %rsp,%rbp
   1dac9:	48 8b 05 60 53 20 00 	mov    0x205360(%rip),%rax        # 222e30 <_ZZ15sgx_self_reportE7_report+0x30>
   1dad0:	48 85 c0             	test   %rax,%rax
   1dad3:	75 16                	jne    1daeb <sgx_self_report+0x26>
   1dad5:	48 8d 15 24 53 20 00 	lea    0x205324(%rip),%rdx        # 222e00 <_ZZ15sgx_self_reportE7_report>
   1dadc:	be 00 00 00 00       	mov    $0x0,%esi
   1dae1:	bf 00 00 00 00       	mov    $0x0,%edi
   1dae6:	e8 67 fd ff ff       	callq  1d852 <sgx_create_report>
   1daeb:	48 8d 05 0e 53 20 00 	lea    0x20530e(%rip),%rax        # 222e00 <_ZZ15sgx_self_reportE7_report>
   1daf2:	5d                   	pop    %rbp
   1daf3:	c3                   	retq   

Disassembly of section .nipx:

000000000001daf4 <do_init_enclave>:
   1daf4:	55                   	push   %rbp
   1daf5:	48 89 e5             	mov    %rsp,%rbp
   1daf8:	48 83 ec 20          	sub    $0x20,%rsp
   1dafc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1db00:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1db04:	e8 89 06 00 00       	callq  1e192 <get_enclave_base>
   1db09:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1db0d:	e8 9f 06 00 00       	callq  1e1b1 <lock_enclave>
   1db12:	85 c0                	test   %eax,%eax
   1db14:	0f 95 c0             	setne  %al
   1db17:	84 c0                	test   %al,%al
   1db19:	74 0a                	je     1db25 <do_init_enclave+0x31>
   1db1b:	b8 01 00 00 00       	mov    $0x1,%eax
   1db20:	e9 2f 01 00 00       	jmpq   1dc54 <do_init_enclave+0x160>
   1db25:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1db29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1db2d:	48 89 d6             	mov    %rdx,%rsi
   1db30:	48 89 c7             	mov    %rax,%rdi
   1db33:	e8 1e 01 00 00       	callq  1dc56 <init_enclave>
   1db38:	85 c0                	test   %eax,%eax
   1db3a:	0f 95 c0             	setne  %al
   1db3d:	84 c0                	test   %al,%al
   1db3f:	74 0a                	je     1db4b <do_init_enclave+0x57>
   1db41:	b8 01 00 00 00       	mov    $0x1,%eax
   1db46:	e9 09 01 00 00       	jmpq   1dc54 <do_init_enclave+0x160>
   1db4b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1db4f:	be 01 00 00 00       	mov    $0x1,%esi
   1db54:	48 89 c7             	mov    %rax,%rdi
   1db57:	e8 80 46 fe ff       	callq  21dc <do_init_thread>
   1db5c:	85 c0                	test   %eax,%eax
   1db5e:	0f 95 c0             	setne  %al
   1db61:	84 c0                	test   %al,%al
   1db63:	74 0a                	je     1db6f <do_init_enclave+0x7b>
   1db65:	b8 01 00 00 00       	mov    $0x1,%eax
   1db6a:	e9 e5 00 00 00       	jmpq   1dc54 <do_init_enclave+0x160>
   1db6f:	8b 05 ab 42 20 00    	mov    0x2042ab(%rip),%eax        # 221e20 <EDMM_supported>
   1db75:	85 c0                	test   %eax,%eax
   1db77:	0f 84 8d 00 00 00    	je     1dc0a <do_init_enclave+0x116>
   1db7d:	48 8d 05 fc 11 00 00 	lea    0x11fc(%rip),%rax        # 1ed80 <g_global_data>
   1db84:	8b 80 18 01 00 00    	mov    0x118(%rax),%eax
   1db8a:	89 c0                	mov    %eax,%eax
   1db8c:	48 c1 e0 05          	shl    $0x5,%rax
   1db90:	48 89 c2             	mov    %rax,%rdx
   1db93:	48 8d 05 e6 11 00 00 	lea    0x11e6(%rip),%rax        # 1ed80 <g_global_data>
   1db9a:	48 8d 80 20 01 00 00 	lea    0x120(%rax),%rax
   1dba1:	48 01 d0             	add    %rdx,%rax
   1dba4:	ba 00 00 00 00       	mov    $0x0,%edx
   1dba9:	48 89 c6             	mov    %rax,%rsi
   1dbac:	48 8d 05 cd 11 00 00 	lea    0x11cd(%rip),%rax        # 1ed80 <g_global_data>
   1dbb3:	48 8d b8 20 01 00 00 	lea    0x120(%rax),%rdi
   1dbba:	e8 e8 34 fe ff       	callq  10a7 <_Z18accept_post_removePVK9_layout_tS1_m>
   1dbbf:	85 c0                	test   %eax,%eax
   1dbc1:	0f 95 c0             	setne  %al
   1dbc4:	84 c0                	test   %al,%al
   1dbc6:	74 0a                	je     1dbd2 <do_init_enclave+0xde>
   1dbc8:	b8 01 00 00 00       	mov    $0x1,%eax
   1dbcd:	e9 82 00 00 00       	jmpq   1dc54 <do_init_enclave+0x160>
   1dbd2:	e8 e3 53 fe ff       	callq  2fba <get_heap_min_size>
   1dbd7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1dbdb:	48 8d 05 9e 11 00 00 	lea    0x119e(%rip),%rax        # 1ed80 <g_global_data>
   1dbe2:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1dbe6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1dbea:	48 01 d0             	add    %rdx,%rax
   1dbed:	48 89 c7             	mov    %rax,%rdi
   1dbf0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1dbf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dbf8:	48 89 d1             	mov    %rdx,%rcx
   1dbfb:	ba 00 00 00 00       	mov    $0x0,%edx
   1dc00:	48 89 c6             	mov    %rax,%rsi
   1dc03:	e8 d7 08 ff ff       	callq  e4df <memset_s>
   1dc08:	eb 3b                	jmp    1dc45 <do_init_enclave+0x151>
   1dc0a:	48 8d 05 6f 11 00 00 	lea    0x116f(%rip),%rax        # 1ed80 <g_global_data>
   1dc11:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1dc15:	48 8d 05 64 11 00 00 	lea    0x1164(%rip),%rax        # 1ed80 <g_global_data>
   1dc1c:	48 8b 40 10          	mov    0x10(%rax),%rax
   1dc20:	48 8d 0d 59 11 00 00 	lea    0x1159(%rip),%rcx        # 1ed80 <g_global_data>
   1dc27:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   1dc2b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1dc2f:	48 01 f1             	add    %rsi,%rcx
   1dc32:	48 89 cf             	mov    %rcx,%rdi
   1dc35:	48 89 d1             	mov    %rdx,%rcx
   1dc38:	ba 00 00 00 00       	mov    $0x0,%edx
   1dc3d:	48 89 c6             	mov    %rax,%rsi
   1dc40:	e8 9a 08 ff ff       	callq  e4df <memset_s>
   1dc45:	c7 05 b5 4c 20 00 02 	movl   $0x2,0x204cb5(%rip)        # 222904 <g_enclave_state>
   1dc4c:	00 00 00 
   1dc4f:	b8 00 00 00 00       	mov    $0x0,%eax
   1dc54:	c9                   	leaveq 
   1dc55:	c3                   	retq   

000000000001dc56 <init_enclave>:
   1dc56:	55                   	push   %rbp
   1dc57:	48 89 e5             	mov    %rsp,%rbp
   1dc5a:	41 55                	push   %r13
   1dc5c:	41 54                	push   %r12
   1dc5e:	53                   	push   %rbx
   1dc5f:	48 81 ec 08 01 00 00 	sub    $0x108,%rsp
   1dc66:	48 89 bd e8 fe ff ff 	mov    %rdi,-0x118(%rbp)
   1dc6d:	48 89 b5 e0 fe ff ff 	mov    %rsi,-0x120(%rbp)
   1dc74:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1dc7b:	00 00 
   1dc7d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1dc81:	31 c0                	xor    %eax,%eax
   1dc83:	48 83 bd e8 fe ff ff 	cmpq   $0x0,-0x118(%rbp)
   1dc8a:	00 
   1dc8b:	74 0a                	je     1dc97 <init_enclave+0x41>
   1dc8d:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
   1dc94:	00 
   1dc95:	75 0a                	jne    1dca1 <init_enclave+0x4b>
   1dc97:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1dc9c:	e9 07 03 00 00       	jmpq   1dfa8 <init_enclave+0x352>
   1dca1:	48 8b 05 48 43 20 00 	mov    0x204348(%rip),%rax        # 221ff0 <_DYNAMIC+0x1a0>
   1dca8:	48 85 c0             	test   %rax,%rax
   1dcab:	74 67                	je     1dd14 <init_enclave+0xbe>
   1dcad:	0f ae e8             	lfence 
   1dcb0:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1dcb7:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   1dcbe:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1dcc5:	48 8b 80 94 00 00 00 	mov    0x94(%rax),%rax
   1dccc:	48 85 c0             	test   %rax,%rax
   1dccf:	75 0a                	jne    1dcdb <init_enclave+0x85>
   1dcd1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1dcd6:	e9 cd 02 00 00       	jmpq   1dfa8 <init_enclave+0x352>
   1dcdb:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
   1dce2:	48 8b 90 94 00 00 00 	mov    0x94(%rax),%rdx
   1dce9:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1dcf0:	48 89 d6             	mov    %rdx,%rsi
   1dcf3:	48 89 c7             	mov    %rax,%rdi
   1dcf6:	e8 c5 29 fe ff       	callq  6c0 <UNROLLED_LIMIT+0x610>
   1dcfb:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%rbp)
   1dd01:	83 bd f4 fe ff ff 00 	cmpl   $0x0,-0x10c(%rbp)
   1dd08:	74 0a                	je     1dd14 <init_enclave+0xbe>
   1dd0a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1dd0f:	e9 94 02 00 00       	jmpq   1dfa8 <init_enclave+0x352>
   1dd14:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1dd1b:	48 89 c7             	mov    %rax,%rdi
   1dd1e:	e8 ab 62 fe ff       	callq  3fce <relocate_enclave>
   1dd23:	85 c0                	test   %eax,%eax
   1dd25:	0f 95 c0             	setne  %al
   1dd28:	84 c0                	test   %al,%al
   1dd2a:	74 0a                	je     1dd36 <init_enclave+0xe0>
   1dd2c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1dd31:	e9 72 02 00 00       	jmpq   1dfa8 <init_enclave+0x352>
   1dd36:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1dd3d:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   1dd44:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   1dd4b:	be ac 00 00 00       	mov    $0xac,%esi
   1dd50:	48 89 c7             	mov    %rax,%rdi
   1dd53:	e8 b9 2c fe ff       	callq  a11 <sgx_is_outside_enclave>
   1dd58:	85 c0                	test   %eax,%eax
   1dd5a:	0f 94 c0             	sete   %al
   1dd5d:	84 c0                	test   %al,%al
   1dd5f:	74 0a                	je     1dd6b <init_enclave+0x115>
   1dd61:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1dd66:	e9 3d 02 00 00       	jmpq   1dfa8 <init_enclave+0x352>
   1dd6b:	0f ae e8             	lfence 
   1dd6e:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
   1dd75:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   1dd7c:	b9 15 00 00 00       	mov    $0x15,%ecx
   1dd81:	48 89 c7             	mov    %rax,%rdi
   1dd84:	48 89 d6             	mov    %rdx,%rsi
   1dd87:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   1dd8a:	48 89 f2             	mov    %rsi,%rdx
   1dd8d:	48 89 f8             	mov    %rdi,%rax
   1dd90:	8b 0a                	mov    (%rdx),%ecx
   1dd92:	89 08                	mov    %ecx,(%rax)
   1dd94:	48 8d 40 04          	lea    0x4(%rax),%rax
   1dd98:	48 8d 52 04          	lea    0x4(%rdx),%rdx
   1dd9c:	48 8b 95 2c ff ff ff 	mov    -0xd4(%rbp),%rdx
   1dda3:	48 b8 00 00 00 00 00 	movabs $0x4000000000000000,%rax
   1ddaa:	00 00 40 
   1ddad:	48 21 d0             	and    %rdx,%rax
   1ddb0:	48 85 c0             	test   %rax,%rax
   1ddb3:	74 72                	je     1de27 <init_enclave+0x1d1>
   1ddb5:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   1ddbc:	48 8b 80 9c 00 00 00 	mov    0x9c(%rax),%rax
   1ddc3:	48 3d ac 00 00 00    	cmp    $0xac,%rax
   1ddc9:	73 6c                	jae    1de37 <init_enclave+0x1e1>
   1ddcb:	48 c7 85 f8 fe ff ff 	movq   $0x0,-0x108(%rbp)
   1ddd2:	00 00 00 00 
   1ddd6:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   1dddd:	48 8b 80 9c 00 00 00 	mov    0x9c(%rax),%rax
   1dde4:	ba ac 00 00 00       	mov    $0xac,%edx
   1dde9:	48 29 c2             	sub    %rax,%rdx
   1ddec:	48 89 d0             	mov    %rdx,%rax
   1ddef:	48 3b 85 f8 fe ff ff 	cmp    -0x108(%rbp),%rax
   1ddf6:	76 3f                	jbe    1de37 <init_enclave+0x1e1>
   1ddf8:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   1ddff:	48 8b 90 9c 00 00 00 	mov    0x9c(%rax),%rdx
   1de06:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1de0d:	48 01 c2             	add    %rax,%rdx
   1de10:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   1de17:	48 01 d0             	add    %rdx,%rax
   1de1a:	c6 00 00             	movb   $0x0,(%rax)
   1de1d:	48 83 85 f8 fe ff ff 	addq   $0x1,-0x108(%rbp)
   1de24:	01 
   1de25:	eb af                	jmp    1ddd6 <init_enclave+0x180>
   1de27:	48 c7 45 bc 00 00 00 	movq   $0x0,-0x44(%rbp)
   1de2e:	00 
   1de2f:	48 c7 45 c4 00 00 00 	movq   $0x0,-0x3c(%rbp)
   1de36:	00 
   1de37:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
   1de3d:	89 05 e1 3f 20 00    	mov    %eax,0x203fe1(%rip)        # 221e24 <g_sdk_version>
   1de43:	8b 05 db 3f 20 00    	mov    0x203fdb(%rip),%eax        # 221e24 <g_sdk_version>
   1de49:	85 c0                	test   %eax,%eax
   1de4b:	75 0c                	jne    1de59 <init_enclave+0x203>
   1de4d:	c7 05 c9 3f 20 00 00 	movl   $0x0,0x203fc9(%rip)        # 221e20 <EDMM_supported>
   1de54:	00 00 00 
   1de57:	eb 34                	jmp    1de8d <init_enclave+0x237>
   1de59:	8b 05 c5 3f 20 00    	mov    0x203fc5(%rip),%eax        # 221e24 <g_sdk_version>
   1de5f:	85 c0                	test   %eax,%eax
   1de61:	7e 20                	jle    1de83 <init_enclave+0x22d>
   1de63:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   1de6a:	48 83 c0 0c          	add    $0xc,%rax
   1de6e:	be 00 00 00 00       	mov    $0x0,%esi
   1de73:	48 89 c7             	mov    %rax,%rdi
   1de76:	e8 2b 53 fe ff       	callq  31a6 <feature_supported>
   1de7b:	89 05 9f 3f 20 00    	mov    %eax,0x203f9f(%rip)        # 221e20 <EDMM_supported>
   1de81:	eb 0a                	jmp    1de8d <init_enclave+0x237>
   1de83:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1de88:	e9 1b 01 00 00       	jmpq   1dfa8 <init_enclave+0x352>
   1de8d:	8b 1d 8d 3f 20 00    	mov    0x203f8d(%rip),%ebx        # 221e20 <EDMM_supported>
   1de93:	e8 22 51 fe ff       	callq  2fba <get_heap_min_size>
   1de98:	49 89 c5             	mov    %rax,%r13
   1de9b:	e8 88 50 fe ff       	callq  2f28 <get_heap_size>
   1dea0:	49 89 c4             	mov    %rax,%r12
   1dea3:	e8 65 50 fe ff       	callq  2f0d <get_heap_base>
   1dea8:	89 d9                	mov    %ebx,%ecx
   1deaa:	4c 89 ea             	mov    %r13,%rdx
   1dead:	4c 89 e6             	mov    %r12,%rsi
   1deb0:	48 89 c7             	mov    %rax,%rdi
   1deb3:	e8 a4 06 ff ff       	callq  e55c <heap_init>
   1deb8:	85 c0                	test   %eax,%eax
   1deba:	0f 95 c0             	setne  %al
   1debd:	84 c0                	test   %al,%al
   1debf:	74 0a                	je     1decb <init_enclave+0x275>
   1dec1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1dec6:	e9 dd 00 00 00       	jmpq   1dfa8 <init_enclave+0x352>
   1decb:	e8 b2 5d fe ff       	callq  3c82 <get_xfeature_state>
   1ded0:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
   1ded7:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1dede:	48 0d 00 18 00 1e    	or     $0x1e001800,%rax
   1dee4:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   1deeb:	48 8b 95 2c ff ff ff 	mov    -0xd4(%rbp),%rdx
   1def2:	48 b8 00 00 00 00 00 	movabs $0x4000000000000000,%rax
   1def9:	00 00 40 
   1defc:	48 21 d0             	and    %rdx,%rax
   1deff:	48 85 c0             	test   %rax,%rax
   1df02:	74 0b                	je     1df0f <init_enclave+0x2b9>
   1df04:	48 8b 45 c4          	mov    -0x3c(%rbp),%rax
   1df08:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   1df0f:	8b 05 0f 3f 20 00    	mov    0x203f0f(%rip),%eax        # 221e24 <g_sdk_version>
   1df15:	83 f8 01             	cmp    $0x1,%eax
   1df18:	7f 09                	jg     1df23 <init_enclave+0x2cd>
   1df1a:	48 8b 45 bc          	mov    -0x44(%rbp),%rax
   1df1e:	48 85 c0             	test   %rax,%rax
   1df21:	74 34                	je     1df57 <init_enclave+0x301>
   1df23:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   1df2a:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   1df31:	48 8d 48 14          	lea    0x14(%rax),%rcx
   1df35:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1df3c:	48 89 ce             	mov    %rcx,%rsi
   1df3f:	48 89 c7             	mov    %rax,%rdi
   1df42:	e8 85 29 fe ff       	callq  8cc <init_optimized_libs>
   1df47:	85 c0                	test   %eax,%eax
   1df49:	0f 95 c0             	setne  %al
   1df4c:	84 c0                	test   %al,%al
   1df4e:	74 32                	je     1df82 <init_enclave+0x32c>
   1df50:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1df55:	eb 51                	jmp    1dfa8 <init_enclave+0x352>
   1df57:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   1df5e:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   1df65:	be 00 00 00 00       	mov    $0x0,%esi
   1df6a:	48 89 c7             	mov    %rax,%rdi
   1df6d:	e8 5a 29 fe ff       	callq  8cc <init_optimized_libs>
   1df72:	85 c0                	test   %eax,%eax
   1df74:	0f 95 c0             	setne  %al
   1df77:	84 c0                	test   %al,%al
   1df79:	74 07                	je     1df82 <init_enclave+0x32c>
   1df7b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1df80:	eb 26                	jmp    1dfa8 <init_enclave+0x352>
   1df82:	be 08 00 00 00       	mov    $0x8,%esi
   1df87:	48 8d 3d 9a 3e 20 00 	lea    0x203e9a(%rip),%rdi        # 221e28 <__intel_security_cookie>
   1df8e:	e8 b4 2c fe ff       	callq  c47 <sgx_read_rand>
   1df93:	85 c0                	test   %eax,%eax
   1df95:	0f 95 c0             	setne  %al
   1df98:	84 c0                	test   %al,%al
   1df9a:	74 07                	je     1dfa3 <init_enclave+0x34d>
   1df9c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1dfa1:	eb 05                	jmp    1dfa8 <init_enclave+0x352>
   1dfa3:	b8 00 00 00 00       	mov    $0x0,%eax
   1dfa8:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1dfac:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1dfb3:	00 00 
   1dfb5:	74 05                	je     1dfbc <init_enclave+0x366>
   1dfb7:	e8 74 6c fe ff       	callq  4c30 <__stack_chk_fail>
   1dfbc:	48 81 c4 08 01 00 00 	add    $0x108,%rsp
   1dfc3:	5b                   	pop    %rbx
   1dfc4:	41 5c                	pop    %r12
   1dfc6:	41 5d                	pop    %r13
   1dfc8:	5d                   	pop    %rbp
   1dfc9:	c3                   	retq   

000000000001dfca <sgx_is_enclave_crashed>:
   1dfca:	55                   	push   %rbp
   1dfcb:	48 89 e5             	mov    %rsp,%rbp
   1dfce:	e8 c7 01 00 00       	callq  1e19a <get_enclave_state>
   1dfd3:	83 f8 03             	cmp    $0x3,%eax
   1dfd6:	0f 94 c0             	sete   %al
   1dfd9:	0f b6 c0             	movzbl %al,%eax
   1dfdc:	5d                   	pop    %rbp
   1dfdd:	c3                   	retq   

000000000001dfde <enter_enclave>:
   1dfde:	55                   	push   %rbp
   1dfdf:	48 89 e5             	mov    %rsp,%rbp
   1dfe2:	48 83 ec 30          	sub    $0x30,%rsp
   1dfe6:	89 7d ec             	mov    %edi,-0x14(%rbp)
   1dfe9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1dfed:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1dff1:	89 4d e8             	mov    %ecx,-0x18(%rbp)
   1dff4:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
   1dffb:	e8 ca ff ff ff       	callq  1dfca <sgx_is_enclave_crashed>
   1e000:	85 c0                	test   %eax,%eax
   1e002:	0f 95 c0             	setne  %al
   1e005:	84 c0                	test   %al,%al
   1e007:	74 0a                	je     1e013 <enter_enclave+0x35>
   1e009:	b8 06 10 00 00       	mov    $0x1006,%eax
   1e00e:	e9 24 01 00 00       	jmpq   1e137 <enter_enclave+0x159>
   1e013:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%rbp)
   1e017:	74 11                	je     1e02a <enter_enclave+0x4c>
   1e019:	e8 7c 01 00 00       	callq  1e19a <get_enclave_state>
   1e01e:	83 f8 02             	cmp    $0x2,%eax
   1e021:	74 07                	je     1e02a <enter_enclave+0x4c>
   1e023:	b8 01 00 00 00       	mov    $0x1,%eax
   1e028:	eb 05                	jmp    1e02f <enter_enclave+0x51>
   1e02a:	b8 00 00 00 00       	mov    $0x0,%eax
   1e02f:	84 c0                	test   %al,%al
   1e031:	74 12                	je     1e045 <enter_enclave+0x67>
   1e033:	bf 03 00 00 00       	mov    $0x3,%edi
   1e038:	e8 6a 01 00 00       	callq  1e1a7 <set_enclave_state>
   1e03d:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1e040:	e9 f2 00 00 00       	jmpq   1e137 <enter_enclave+0x159>
   1e045:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   1e049:	0f 85 9e 00 00 00    	jne    1e0ed <enter_enclave+0x10f>
   1e04f:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   1e053:	79 0c                	jns    1e061 <enter_enclave+0x83>
   1e055:	83 7d ec fa          	cmpl   $0xfffffffa,-0x14(%rbp)
   1e059:	74 06                	je     1e061 <enter_enclave+0x83>
   1e05b:	83 7d ec f9          	cmpl   $0xfffffff9,-0x14(%rbp)
   1e05f:	75 29                	jne    1e08a <enter_enclave+0xac>
   1e061:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e065:	48 89 c7             	mov    %rax,%rdi
   1e068:	e8 d4 4a fe ff       	callq  2b41 <_ZL16init_stack_guardPv>
   1e06d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1e071:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1e075:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1e078:	48 89 ce             	mov    %rcx,%rsi
   1e07b:	89 c7                	mov    %eax,%edi
   1e07d:	e8 41 44 fe ff       	callq  24c3 <do_ecall>
   1e082:	89 45 fc             	mov    %eax,-0x4(%rbp)
   1e085:	e9 9a 00 00 00       	jmpq   1e124 <enter_enclave+0x146>
   1e08a:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%rbp)
   1e08e:	75 18                	jne    1e0a8 <enter_enclave+0xca>
   1e090:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1e094:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e098:	48 89 d6             	mov    %rdx,%rsi
   1e09b:	48 89 c7             	mov    %rax,%rdi
   1e09e:	e8 51 fa ff ff       	callq  1daf4 <do_init_enclave>
   1e0a3:	89 45 fc             	mov    %eax,-0x4(%rbp)
   1e0a6:	eb 7c                	jmp    1e124 <enter_enclave+0x146>
   1e0a8:	83 7d ec fe          	cmpl   $0xfffffffe,-0x14(%rbp)
   1e0ac:	75 11                	jne    1e0bf <enter_enclave+0xe1>
   1e0ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e0b2:	48 89 c7             	mov    %rax,%rdi
   1e0b5:	e8 36 4c fe ff       	callq  2cf0 <do_oret>
   1e0ba:	89 45 fc             	mov    %eax,-0x4(%rbp)
   1e0bd:	eb 65                	jmp    1e124 <enter_enclave+0x146>
   1e0bf:	83 7d ec fc          	cmpl   $0xfffffffc,-0x14(%rbp)
   1e0c3:	75 11                	jne    1e0d6 <enter_enclave+0xf8>
   1e0c5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e0c9:	48 89 c7             	mov    %rax,%rdi
   1e0cc:	e8 d7 44 fe ff       	callq  25a8 <do_ecall_add_thread>
   1e0d1:	89 45 fc             	mov    %eax,-0x4(%rbp)
   1e0d4:	eb 4e                	jmp    1e124 <enter_enclave+0x146>
   1e0d6:	83 7d ec fb          	cmpl   $0xfffffffb,-0x14(%rbp)
   1e0da:	75 48                	jne    1e124 <enter_enclave+0x146>
   1e0dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e0e0:	48 89 c7             	mov    %rax,%rdi
   1e0e3:	e8 84 45 fe ff       	callq  266c <do_uninit_enclave>
   1e0e8:	89 45 fc             	mov    %eax,-0x4(%rbp)
   1e0eb:	eb 37                	jmp    1e124 <enter_enclave+0x146>
   1e0ed:	83 7d e8 01          	cmpl   $0x1,-0x18(%rbp)
   1e0f1:	75 31                	jne    1e124 <enter_enclave+0x146>
   1e0f3:	83 7d ec fd          	cmpl   $0xfffffffd,-0x14(%rbp)
   1e0f7:	75 2b                	jne    1e124 <enter_enclave+0x146>
   1e0f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e0fd:	48 89 c7             	mov    %rax,%rdi
   1e100:	e8 99 56 fe ff       	callq  379e <trts_handle_exception>
   1e105:	89 45 fc             	mov    %eax,-0x4(%rbp)
   1e108:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e10c:	48 89 c7             	mov    %rax,%rdi
   1e10f:	e8 4f 2c fe ff       	callq  d63 <check_static_stack_canary>
   1e114:	85 c0                	test   %eax,%eax
   1e116:	0f 95 c0             	setne  %al
   1e119:	84 c0                	test   %al,%al
   1e11b:	74 07                	je     1e124 <enter_enclave+0x146>
   1e11d:	c7 45 fc 09 10 00 00 	movl   $0x1009,-0x4(%rbp)
   1e124:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   1e128:	75 0a                	jne    1e134 <enter_enclave+0x156>
   1e12a:	bf 03 00 00 00       	mov    $0x3,%edi
   1e12f:	e8 73 00 00 00       	callq  1e1a7 <set_enclave_state>
   1e134:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1e137:	c9                   	leaveq 
   1e138:	c3                   	retq   

000000000001e139 <restore_xregs>:
   1e139:	48 89 f9             	mov    %rdi,%rcx
   1e13c:	48 8d 05 c5 47 20 00 	lea    0x2047c5(%rip),%rax        # 222908 <g_xsave_enabled>
   1e143:	8b 00                	mov    (%rax),%eax
   1e145:	83 f8 00             	cmp    $0x0,%eax
   1e148:	74 16                	je     1e160 <restore_xregs+0x27>
   1e14a:	48 31 c0             	xor    %rax,%rax
   1e14d:	48 31 d2             	xor    %rdx,%rdx
   1e150:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1e155:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   1e15a:	48 0f ae 29          	xrstor64 (%rcx)
   1e15e:	eb 04                	jmp    1e164 <restore_xregs+0x2b>
   1e160:	48 0f ae 09          	fxrstor64 (%rcx)
   1e164:	c3                   	retq   

000000000001e165 <save_xregs>:
   1e165:	48 89 f9             	mov    %rdi,%rcx
   1e168:	48 8d 05 99 47 20 00 	lea    0x204799(%rip),%rax        # 222908 <g_xsave_enabled>
   1e16f:	9b                   	fwait
   1e170:	8b 00                	mov    (%rax),%eax
   1e172:	83 f8 00             	cmp    $0x0,%eax
   1e175:	74 16                	je     1e18d <save_xregs+0x28>
   1e177:	48 31 c0             	xor    %rax,%rax
   1e17a:	48 31 d2             	xor    %rdx,%rdx
   1e17d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1e182:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   1e187:	48 0f c7 21          	xsavec64 (%rcx)
   1e18b:	eb 04                	jmp    1e191 <save_xregs+0x2c>
   1e18d:	48 0f ae 01          	fxsave64 (%rcx)
   1e191:	c3                   	retq   

000000000001e192 <get_enclave_base>:
   1e192:	48 8d 05 67 1e fe ff 	lea    -0x1e199(%rip),%rax        # 0 <enclave.so>
   1e199:	c3                   	retq   

000000000001e19a <get_enclave_state>:
   1e19a:	48 8d 0d 63 47 20 00 	lea    0x204763(%rip),%rcx        # 222904 <g_enclave_state>
   1e1a1:	48 31 c0             	xor    %rax,%rax
   1e1a4:	8b 01                	mov    (%rcx),%eax
   1e1a6:	c3                   	retq   

000000000001e1a7 <set_enclave_state>:
   1e1a7:	48 8d 05 56 47 20 00 	lea    0x204756(%rip),%rax        # 222904 <g_enclave_state>
   1e1ae:	89 38                	mov    %edi,(%rax)
   1e1b0:	c3                   	retq   

000000000001e1b1 <lock_enclave>:
   1e1b1:	48 8d 15 4c 47 20 00 	lea    0x20474c(%rip),%rdx        # 222904 <g_enclave_state>
   1e1b8:	48 31 c0             	xor    %rax,%rax
   1e1bb:	b8 00 00 00 00       	mov    $0x0,%eax
   1e1c0:	48 31 c9             	xor    %rcx,%rcx
   1e1c3:	b9 01 00 00 00       	mov    $0x1,%ecx
   1e1c8:	f0 0f b1 0a          	lock cmpxchg %ecx,(%rdx)
   1e1cc:	c3                   	retq   

000000000001e1cd <get_thread_data>:
   1e1cd:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1e1d4:	00 00 
   1e1d6:	c3                   	retq   

000000000001e1d7 <get_stack_guard>:
   1e1d7:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
   1e1de:	00 00 
   1e1e0:	c3                   	retq   

000000000001e1e1 <enclave_entry>:
   1e1e1:	48 31 d2             	xor    %rdx,%rdx
   1e1e4:	48 01 d2             	add    %rdx,%rdx
   1e1e7:	4d 31 c0             	xor    %r8,%r8
   1e1ea:	4d 31 c9             	xor    %r9,%r9
   1e1ed:	4d 31 d2             	xor    %r10,%r10
   1e1f0:	4d 31 db             	xor    %r11,%r11
   1e1f3:	4d 31 e4             	xor    %r12,%r12
   1e1f6:	4d 31 ed             	xor    %r13,%r13
   1e1f9:	4d 31 f6             	xor    %r14,%r14
   1e1fc:	4d 31 ff             	xor    %r15,%r15
   1e1ff:	48 83 f8 00          	cmp    $0x0,%rax
   1e203:	0f 85 9a 00 00 00    	jne    1e2a3 <enclave_entry+0xc2>
   1e209:	65 48 8b 04 25 08 00 	mov    %gs:0x8,%rax
   1e210:	00 00 
   1e212:	48 83 f8 00          	cmp    $0x0,%rax
   1e216:	75 0f                	jne    1e227 <enclave_entry+0x46>
   1e218:	48 89 d8             	mov    %rbx,%rax
   1e21b:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   1e221:	48 2d b0 02 00 00    	sub    $0x2b0,%rax
   1e227:	48 94                	xchg   %rax,%rsp
   1e229:	51                   	push   %rcx
   1e22a:	55                   	push   %rbp
   1e22b:	48 89 e5             	mov    %rsp,%rbp
   1e22e:	48 83 ec 30          	sub    $0x30,%rsp
   1e232:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1e236:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1e23a:	48 89 5d e0          	mov    %rbx,-0x20(%rbp)
   1e23e:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
   1e242:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
   1e246:	48 89 d1             	mov    %rdx,%rcx
   1e249:	48 89 da             	mov    %rbx,%rdx
   1e24c:	e8 8d fd ff ff       	callq  1dfde <enter_enclave>
   1e251:	48 89 c3             	mov    %rax,%rbx
   1e254:	48 8d 3d a5 11 00 00 	lea    0x11a5(%rip),%rdi        # 1f400 <SYNTHETIC_STATE>
   1e25b:	e8 d9 fe ff ff       	callq  1e139 <restore_xregs>
   1e260:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   1e267:	48 89 de             	mov    %rbx,%rsi
   1e26a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1e26e:	48 89 ec             	mov    %rbp,%rsp
   1e271:	5d                   	pop    %rbp
   1e272:	5b                   	pop    %rbx
   1e273:	48 89 d4             	mov    %rdx,%rsp
   1e276:	48 31 c9             	xor    %rcx,%rcx
   1e279:	48 31 d2             	xor    %rdx,%rdx
   1e27c:	4d 31 c0             	xor    %r8,%r8
   1e27f:	4d 31 c9             	xor    %r9,%r9
   1e282:	4d 31 d2             	xor    %r10,%r10
   1e285:	4d 31 db             	xor    %r11,%r11
   1e288:	4d 31 e4             	xor    %r12,%r12
   1e28b:	4d 31 ed             	xor    %r13,%r13
   1e28e:	4d 31 f6             	xor    %r14,%r14
   1e291:	4d 31 ff             	xor    %r15,%r15
   1e294:	48 01 d2             	add    %rdx,%rdx
   1e297:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   1e29e:	0f 01 d7             	enclu  
   1e2a1:	0f 0b                	ud2    
   1e2a3:	48 89 c2             	mov    %rax,%rdx
   1e2a6:	48 89 d8             	mov    %rbx,%rax
   1e2a9:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   1e2af:	e9 73 ff ff ff       	jmpq   1e227 <enclave_entry+0x46>
   1e2b4:	0f 0b                	ud2    

000000000001e2b6 <do_ocall>:
   1e2b6:	55                   	push   %rbp
   1e2b7:	48 89 e5             	mov    %rsp,%rbp
   1e2ba:	48 89 7d 10          	mov    %rdi,0x10(%rbp)
   1e2be:	48 89 75 18          	mov    %rsi,0x18(%rbp)
   1e2c2:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   1e2c9:	00 00 
   1e2cb:	48 29 c4             	sub    %rax,%rsp
   1e2ce:	48 c7 c0 3f 00 00 00 	mov    $0x3f,%rax
   1e2d5:	48 f7 d0             	not    %rax
   1e2d8:	48 21 c4             	and    %rax,%rsp
   1e2db:	48 89 e1             	mov    %rsp,%rcx
   1e2de:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   1e2e5:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   1e2ec:	00 
   1e2ed:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   1e2f2:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   1e2f7:	48 89 7c 24 60       	mov    %rdi,0x60(%rsp)
   1e2fc:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
   1e301:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   1e306:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   1e30b:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   1e310:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
   1e315:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   1e31c:	00 
   1e31d:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   1e324:	00 00 
   1e326:	48 89 c1             	mov    %rax,%rcx
   1e329:	48 c1 e9 02          	shr    $0x2,%rcx
   1e32d:	48 31 c0             	xor    %rax,%rax
   1e330:	fc                   	cld    
   1e331:	f3 ab                	rep stos %eax,%es:(%rdi)
   1e333:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   1e33a:	00 
   1e33b:	48 89 3c 24          	mov    %rdi,(%rsp)
   1e33f:	e8 21 fe ff ff       	callq  1e165 <save_xregs>
   1e344:	48 8d 3d b5 10 00 00 	lea    0x10b5(%rip),%rdi        # 1f400 <SYNTHETIC_STATE>
   1e34b:	48 89 3c 24          	mov    %rdi,(%rsp)
   1e34f:	e8 e5 fd ff ff       	callq  1e139 <restore_xregs>
   1e354:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1e359:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   1e35e:	48 c7 c0 44 49 43 4f 	mov    $0x4f434944,%rax
   1e365:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1e36a:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   1e36f:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1e376:	00 00 
   1e378:	48 89 c3             	mov    %rax,%rbx
   1e37b:	48 89 e7             	mov    %rsp,%rdi
   1e37e:	e8 da 48 fe ff       	callq  2c5d <update_ocall_lastsp>
   1e383:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1e388:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   1e38d:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   1e391:	48 8b aa 98 00 00 00 	mov    0x98(%rdx),%rbp
   1e398:	48 8b a2 90 00 00 00 	mov    0x90(%rdx),%rsp
   1e39f:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
   1e3a3:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   1e3aa:	48 31 c9             	xor    %rcx,%rcx
   1e3ad:	48 31 d2             	xor    %rdx,%rdx
   1e3b0:	4d 31 c0             	xor    %r8,%r8
   1e3b3:	4d 31 c9             	xor    %r9,%r9
   1e3b6:	4d 31 d2             	xor    %r10,%r10
   1e3b9:	4d 31 db             	xor    %r11,%r11
   1e3bc:	4d 31 e4             	xor    %r12,%r12
   1e3bf:	4d 31 ed             	xor    %r13,%r13
   1e3c2:	4d 31 f6             	xor    %r14,%r14
   1e3c5:	4d 31 ff             	xor    %r15,%r15
   1e3c8:	48 01 d2             	add    %rdx,%rdx
   1e3cb:	0f 01 d7             	enclu  

000000000001e3ce <__morestack>:
   1e3ce:	55                   	push   %rbp
   1e3cf:	48 89 e5             	mov    %rsp,%rbp
   1e3d2:	48 83 ec 20          	sub    $0x20,%rsp
   1e3d6:	e8 db fe ff ff       	callq  1e2b6 <do_ocall>
   1e3db:	c9                   	leaveq 
   1e3dc:	c3                   	retq   

000000000001e3dd <asm_oret>:
   1e3dd:	48 89 e3             	mov    %rsp,%rbx
   1e3e0:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1e3e5:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1e3ea:	48 8b 63 08          	mov    0x8(%rbx),%rsp
   1e3ee:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   1e3f5:	00 
   1e3f6:	e8 3e fd ff ff       	callq  1e139 <restore_xregs>
   1e3fb:	48 31 c0             	xor    %rax,%rax
   1e3fe:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   1e403:	48 29 f9             	sub    %rdi,%rcx
   1e406:	48 83 e9 08          	sub    $0x8,%rcx
   1e40a:	48 c1 e9 02          	shr    $0x2,%rcx
   1e40e:	fc                   	cld    
   1e40f:	f3 ab                	rep stos %eax,%es:(%rdi)
   1e411:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1e415:	4c 8b 7c 24 38       	mov    0x38(%rsp),%r15
   1e41a:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   1e41f:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   1e424:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   1e429:	48 8b 6c 24 58       	mov    0x58(%rsp),%rbp
   1e42e:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1e433:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   1e438:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   1e43d:	48 89 ec             	mov    %rbp,%rsp
   1e440:	5d                   	pop    %rbp
   1e441:	c3                   	retq   
   1e442:	0f 0b                	ud2    

000000000001e444 <do_egetkey>:
   1e444:	53                   	push   %rbx
   1e445:	51                   	push   %rcx
   1e446:	52                   	push   %rdx
   1e447:	48 89 fb             	mov    %rdi,%rbx
   1e44a:	48 89 f1             	mov    %rsi,%rcx
   1e44d:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   1e454:	0f 01 d7             	enclu  
   1e457:	74 03                	je     1e45c <do_egetkey+0x18>
   1e459:	48 31 c0             	xor    %rax,%rax
   1e45c:	5a                   	pop    %rdx
   1e45d:	59                   	pop    %rcx
   1e45e:	5b                   	pop    %rbx
   1e45f:	c3                   	retq   

000000000001e460 <do_ereport>:
   1e460:	53                   	push   %rbx
   1e461:	51                   	push   %rcx
   1e462:	52                   	push   %rdx
   1e463:	48 89 fb             	mov    %rdi,%rbx
   1e466:	48 89 f1             	mov    %rsi,%rcx
   1e469:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
   1e470:	f8                   	clc    

000000000001e471 <Lereport_inst>:
   1e471:	0f 01 d7             	enclu  
   1e474:	0f 92 c0             	setb   %al
   1e477:	5a                   	pop    %rdx
   1e478:	59                   	pop    %rcx
   1e479:	5b                   	pop    %rbx
   1e47a:	c3                   	retq   

000000000001e47b <do_eaccept>:
   1e47b:	53                   	push   %rbx
   1e47c:	51                   	push   %rcx
   1e47d:	52                   	push   %rdx
   1e47e:	48 89 fb             	mov    %rdi,%rbx
   1e481:	48 89 f1             	mov    %rsi,%rcx
   1e484:	b8 05 00 00 00       	mov    $0x5,%eax
   1e489:	0f 01 d7             	enclu  
   1e48c:	83 f8 00             	cmp    $0x0,%eax
   1e48f:	75 38                	jne    1e4c9 <abort>
   1e491:	5a                   	pop    %rdx
   1e492:	59                   	pop    %rcx
   1e493:	5b                   	pop    %rbx
   1e494:	c3                   	retq   

000000000001e495 <do_emodpe>:
   1e495:	53                   	push   %rbx
   1e496:	51                   	push   %rcx
   1e497:	52                   	push   %rdx
   1e498:	48 89 fb             	mov    %rdi,%rbx
   1e49b:	48 89 f1             	mov    %rsi,%rcx
   1e49e:	b8 06 00 00 00       	mov    $0x6,%eax
   1e4a3:	0f 01 d7             	enclu  
   1e4a6:	5a                   	pop    %rdx
   1e4a7:	59                   	pop    %rcx
   1e4a8:	5b                   	pop    %rbx
   1e4a9:	c3                   	retq   

000000000001e4aa <do_rdrand>:
   1e4aa:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1e4af:	0f c7 f0             	rdrand %eax
   1e4b2:	72 08                	jb     1e4bc <do_rdrand+0x12>
   1e4b4:	ff c9                	dec    %ecx
   1e4b6:	75 f7                	jne    1e4af <do_rdrand+0x5>
   1e4b8:	48 31 c0             	xor    %rax,%rax
   1e4bb:	c3                   	retq   
   1e4bc:	48 89 f9             	mov    %rdi,%rcx
   1e4bf:	89 01                	mov    %eax,(%rcx)
   1e4c1:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   1e4c8:	c3                   	retq   

000000000001e4c9 <abort>:
   1e4c9:	48 8d 05 34 44 20 00 	lea    0x204434(%rip),%rax        # 222904 <g_enclave_state>
   1e4d0:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
   1e4d6:	0f 0b                	ud2    

000000000001e4d8 <continue_execution>:
   1e4d8:	48 89 f9             	mov    %rdi,%rcx
   1e4db:	48 8b 01             	mov    (%rcx),%rax
   1e4de:	50                   	push   %rax
   1e4df:	48 8b 41 08          	mov    0x8(%rcx),%rax
   1e4e3:	50                   	push   %rax
   1e4e4:	48 8b 41 20          	mov    0x20(%rcx),%rax
   1e4e8:	48 2d 88 00 00 00    	sub    $0x88,%rax
   1e4ee:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   1e4f2:	48 8b 59 18          	mov    0x18(%rcx),%rbx
   1e4f6:	48 8b 69 28          	mov    0x28(%rcx),%rbp
   1e4fa:	48 8b 71 30          	mov    0x30(%rcx),%rsi
   1e4fe:	48 8b 79 38          	mov    0x38(%rcx),%rdi
   1e502:	4c 8b 41 40          	mov    0x40(%rcx),%r8
   1e506:	4c 8b 49 48          	mov    0x48(%rcx),%r9
   1e50a:	4c 8b 51 50          	mov    0x50(%rcx),%r10
   1e50e:	4c 8b 59 58          	mov    0x58(%rcx),%r11
   1e512:	4c 8b 61 60          	mov    0x60(%rcx),%r12
   1e516:	4c 8b 69 68          	mov    0x68(%rcx),%r13
   1e51a:	4c 8b 71 70          	mov    0x70(%rcx),%r14
   1e51e:	4c 8b 79 78          	mov    0x78(%rcx),%r15
   1e522:	ff b1 80 00 00 00    	pushq  0x80(%rcx)
   1e528:	9d                   	popfq  
   1e529:	48 8b 89 88 00 00 00 	mov    0x88(%rcx),%rcx
   1e530:	48 89 08             	mov    %rcx,(%rax)
   1e533:	59                   	pop    %rcx
   1e534:	5c                   	pop    %rsp
   1e535:	48 94                	xchg   %rax,%rsp
   1e537:	c2 80 00             	retq   $0x80
